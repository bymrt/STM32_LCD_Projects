
023_ILI9341_STEMWIN.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010028  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002e60  080101b0  080101b0  000201b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08013010  08013010  000301f8  2**0
                  CONTENTS
  4 .ARM          00000008  08013010  08013010  00023010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08013018  08013018  000301f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08013018  08013018  00023018  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801301c  0801301c  0002301c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f8  20000000  08013020  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000301f8  2**0
                  CONTENTS
 10 .bss          00002c38  200001f8  200001f8  000301f8  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20002e30  20002e30  000301f8  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  000301f8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00009fe4  00000000  00000000  00030226  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001da7  00000000  00000000  0003a20a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000830  00000000  00000000  0003bfb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000738  00000000  00000000  0003c7e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00023e6d  00000000  00000000  0003cf20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00009abf  00000000  00000000  00060d8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d7659  00000000  00000000  0006a84c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      000000d2  00000000  00000000  00141ea5  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00002048  00000000  00000000  00141f78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	200001f8 	.word	0x200001f8
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08010198 	.word	0x08010198

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	200001fc 	.word	0x200001fc
 80001c4:	08010198 	.word	0x08010198

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_uldivmod>:
 80001d8:	b953      	cbnz	r3, 80001f0 <__aeabi_uldivmod+0x18>
 80001da:	b94a      	cbnz	r2, 80001f0 <__aeabi_uldivmod+0x18>
 80001dc:	2900      	cmp	r1, #0
 80001de:	bf08      	it	eq
 80001e0:	2800      	cmpeq	r0, #0
 80001e2:	bf1c      	itt	ne
 80001e4:	f04f 31ff 	movne.w	r1, #4294967295
 80001e8:	f04f 30ff 	movne.w	r0, #4294967295
 80001ec:	f000 b974 	b.w	80004d8 <__aeabi_idiv0>
 80001f0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f8:	f000 f806 	bl	8000208 <__udivmoddi4>
 80001fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000200:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000204:	b004      	add	sp, #16
 8000206:	4770      	bx	lr

08000208 <__udivmoddi4>:
 8000208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800020c:	9d08      	ldr	r5, [sp, #32]
 800020e:	4604      	mov	r4, r0
 8000210:	468e      	mov	lr, r1
 8000212:	2b00      	cmp	r3, #0
 8000214:	d14d      	bne.n	80002b2 <__udivmoddi4+0xaa>
 8000216:	428a      	cmp	r2, r1
 8000218:	4694      	mov	ip, r2
 800021a:	d969      	bls.n	80002f0 <__udivmoddi4+0xe8>
 800021c:	fab2 f282 	clz	r2, r2
 8000220:	b152      	cbz	r2, 8000238 <__udivmoddi4+0x30>
 8000222:	fa01 f302 	lsl.w	r3, r1, r2
 8000226:	f1c2 0120 	rsb	r1, r2, #32
 800022a:	fa20 f101 	lsr.w	r1, r0, r1
 800022e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000232:	ea41 0e03 	orr.w	lr, r1, r3
 8000236:	4094      	lsls	r4, r2
 8000238:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800023c:	0c21      	lsrs	r1, r4, #16
 800023e:	fbbe f6f8 	udiv	r6, lr, r8
 8000242:	fa1f f78c 	uxth.w	r7, ip
 8000246:	fb08 e316 	mls	r3, r8, r6, lr
 800024a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800024e:	fb06 f107 	mul.w	r1, r6, r7
 8000252:	4299      	cmp	r1, r3
 8000254:	d90a      	bls.n	800026c <__udivmoddi4+0x64>
 8000256:	eb1c 0303 	adds.w	r3, ip, r3
 800025a:	f106 30ff 	add.w	r0, r6, #4294967295
 800025e:	f080 811f 	bcs.w	80004a0 <__udivmoddi4+0x298>
 8000262:	4299      	cmp	r1, r3
 8000264:	f240 811c 	bls.w	80004a0 <__udivmoddi4+0x298>
 8000268:	3e02      	subs	r6, #2
 800026a:	4463      	add	r3, ip
 800026c:	1a5b      	subs	r3, r3, r1
 800026e:	b2a4      	uxth	r4, r4
 8000270:	fbb3 f0f8 	udiv	r0, r3, r8
 8000274:	fb08 3310 	mls	r3, r8, r0, r3
 8000278:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800027c:	fb00 f707 	mul.w	r7, r0, r7
 8000280:	42a7      	cmp	r7, r4
 8000282:	d90a      	bls.n	800029a <__udivmoddi4+0x92>
 8000284:	eb1c 0404 	adds.w	r4, ip, r4
 8000288:	f100 33ff 	add.w	r3, r0, #4294967295
 800028c:	f080 810a 	bcs.w	80004a4 <__udivmoddi4+0x29c>
 8000290:	42a7      	cmp	r7, r4
 8000292:	f240 8107 	bls.w	80004a4 <__udivmoddi4+0x29c>
 8000296:	4464      	add	r4, ip
 8000298:	3802      	subs	r0, #2
 800029a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800029e:	1be4      	subs	r4, r4, r7
 80002a0:	2600      	movs	r6, #0
 80002a2:	b11d      	cbz	r5, 80002ac <__udivmoddi4+0xa4>
 80002a4:	40d4      	lsrs	r4, r2
 80002a6:	2300      	movs	r3, #0
 80002a8:	e9c5 4300 	strd	r4, r3, [r5]
 80002ac:	4631      	mov	r1, r6
 80002ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002b2:	428b      	cmp	r3, r1
 80002b4:	d909      	bls.n	80002ca <__udivmoddi4+0xc2>
 80002b6:	2d00      	cmp	r5, #0
 80002b8:	f000 80ef 	beq.w	800049a <__udivmoddi4+0x292>
 80002bc:	2600      	movs	r6, #0
 80002be:	e9c5 0100 	strd	r0, r1, [r5]
 80002c2:	4630      	mov	r0, r6
 80002c4:	4631      	mov	r1, r6
 80002c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ca:	fab3 f683 	clz	r6, r3
 80002ce:	2e00      	cmp	r6, #0
 80002d0:	d14a      	bne.n	8000368 <__udivmoddi4+0x160>
 80002d2:	428b      	cmp	r3, r1
 80002d4:	d302      	bcc.n	80002dc <__udivmoddi4+0xd4>
 80002d6:	4282      	cmp	r2, r0
 80002d8:	f200 80f9 	bhi.w	80004ce <__udivmoddi4+0x2c6>
 80002dc:	1a84      	subs	r4, r0, r2
 80002de:	eb61 0303 	sbc.w	r3, r1, r3
 80002e2:	2001      	movs	r0, #1
 80002e4:	469e      	mov	lr, r3
 80002e6:	2d00      	cmp	r5, #0
 80002e8:	d0e0      	beq.n	80002ac <__udivmoddi4+0xa4>
 80002ea:	e9c5 4e00 	strd	r4, lr, [r5]
 80002ee:	e7dd      	b.n	80002ac <__udivmoddi4+0xa4>
 80002f0:	b902      	cbnz	r2, 80002f4 <__udivmoddi4+0xec>
 80002f2:	deff      	udf	#255	; 0xff
 80002f4:	fab2 f282 	clz	r2, r2
 80002f8:	2a00      	cmp	r2, #0
 80002fa:	f040 8092 	bne.w	8000422 <__udivmoddi4+0x21a>
 80002fe:	eba1 010c 	sub.w	r1, r1, ip
 8000302:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000306:	fa1f fe8c 	uxth.w	lr, ip
 800030a:	2601      	movs	r6, #1
 800030c:	0c20      	lsrs	r0, r4, #16
 800030e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000312:	fb07 1113 	mls	r1, r7, r3, r1
 8000316:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800031a:	fb0e f003 	mul.w	r0, lr, r3
 800031e:	4288      	cmp	r0, r1
 8000320:	d908      	bls.n	8000334 <__udivmoddi4+0x12c>
 8000322:	eb1c 0101 	adds.w	r1, ip, r1
 8000326:	f103 38ff 	add.w	r8, r3, #4294967295
 800032a:	d202      	bcs.n	8000332 <__udivmoddi4+0x12a>
 800032c:	4288      	cmp	r0, r1
 800032e:	f200 80cb 	bhi.w	80004c8 <__udivmoddi4+0x2c0>
 8000332:	4643      	mov	r3, r8
 8000334:	1a09      	subs	r1, r1, r0
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb1 f0f7 	udiv	r0, r1, r7
 800033c:	fb07 1110 	mls	r1, r7, r0, r1
 8000340:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000344:	fb0e fe00 	mul.w	lr, lr, r0
 8000348:	45a6      	cmp	lr, r4
 800034a:	d908      	bls.n	800035e <__udivmoddi4+0x156>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 31ff 	add.w	r1, r0, #4294967295
 8000354:	d202      	bcs.n	800035c <__udivmoddi4+0x154>
 8000356:	45a6      	cmp	lr, r4
 8000358:	f200 80bb 	bhi.w	80004d2 <__udivmoddi4+0x2ca>
 800035c:	4608      	mov	r0, r1
 800035e:	eba4 040e 	sub.w	r4, r4, lr
 8000362:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000366:	e79c      	b.n	80002a2 <__udivmoddi4+0x9a>
 8000368:	f1c6 0720 	rsb	r7, r6, #32
 800036c:	40b3      	lsls	r3, r6
 800036e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000372:	ea4c 0c03 	orr.w	ip, ip, r3
 8000376:	fa20 f407 	lsr.w	r4, r0, r7
 800037a:	fa01 f306 	lsl.w	r3, r1, r6
 800037e:	431c      	orrs	r4, r3
 8000380:	40f9      	lsrs	r1, r7
 8000382:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000386:	fa00 f306 	lsl.w	r3, r0, r6
 800038a:	fbb1 f8f9 	udiv	r8, r1, r9
 800038e:	0c20      	lsrs	r0, r4, #16
 8000390:	fa1f fe8c 	uxth.w	lr, ip
 8000394:	fb09 1118 	mls	r1, r9, r8, r1
 8000398:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800039c:	fb08 f00e 	mul.w	r0, r8, lr
 80003a0:	4288      	cmp	r0, r1
 80003a2:	fa02 f206 	lsl.w	r2, r2, r6
 80003a6:	d90b      	bls.n	80003c0 <__udivmoddi4+0x1b8>
 80003a8:	eb1c 0101 	adds.w	r1, ip, r1
 80003ac:	f108 3aff 	add.w	sl, r8, #4294967295
 80003b0:	f080 8088 	bcs.w	80004c4 <__udivmoddi4+0x2bc>
 80003b4:	4288      	cmp	r0, r1
 80003b6:	f240 8085 	bls.w	80004c4 <__udivmoddi4+0x2bc>
 80003ba:	f1a8 0802 	sub.w	r8, r8, #2
 80003be:	4461      	add	r1, ip
 80003c0:	1a09      	subs	r1, r1, r0
 80003c2:	b2a4      	uxth	r4, r4
 80003c4:	fbb1 f0f9 	udiv	r0, r1, r9
 80003c8:	fb09 1110 	mls	r1, r9, r0, r1
 80003cc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80003d0:	fb00 fe0e 	mul.w	lr, r0, lr
 80003d4:	458e      	cmp	lr, r1
 80003d6:	d908      	bls.n	80003ea <__udivmoddi4+0x1e2>
 80003d8:	eb1c 0101 	adds.w	r1, ip, r1
 80003dc:	f100 34ff 	add.w	r4, r0, #4294967295
 80003e0:	d26c      	bcs.n	80004bc <__udivmoddi4+0x2b4>
 80003e2:	458e      	cmp	lr, r1
 80003e4:	d96a      	bls.n	80004bc <__udivmoddi4+0x2b4>
 80003e6:	3802      	subs	r0, #2
 80003e8:	4461      	add	r1, ip
 80003ea:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80003ee:	fba0 9402 	umull	r9, r4, r0, r2
 80003f2:	eba1 010e 	sub.w	r1, r1, lr
 80003f6:	42a1      	cmp	r1, r4
 80003f8:	46c8      	mov	r8, r9
 80003fa:	46a6      	mov	lr, r4
 80003fc:	d356      	bcc.n	80004ac <__udivmoddi4+0x2a4>
 80003fe:	d053      	beq.n	80004a8 <__udivmoddi4+0x2a0>
 8000400:	b15d      	cbz	r5, 800041a <__udivmoddi4+0x212>
 8000402:	ebb3 0208 	subs.w	r2, r3, r8
 8000406:	eb61 010e 	sbc.w	r1, r1, lr
 800040a:	fa01 f707 	lsl.w	r7, r1, r7
 800040e:	fa22 f306 	lsr.w	r3, r2, r6
 8000412:	40f1      	lsrs	r1, r6
 8000414:	431f      	orrs	r7, r3
 8000416:	e9c5 7100 	strd	r7, r1, [r5]
 800041a:	2600      	movs	r6, #0
 800041c:	4631      	mov	r1, r6
 800041e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000422:	f1c2 0320 	rsb	r3, r2, #32
 8000426:	40d8      	lsrs	r0, r3
 8000428:	fa0c fc02 	lsl.w	ip, ip, r2
 800042c:	fa21 f303 	lsr.w	r3, r1, r3
 8000430:	4091      	lsls	r1, r2
 8000432:	4301      	orrs	r1, r0
 8000434:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000438:	fa1f fe8c 	uxth.w	lr, ip
 800043c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000440:	fb07 3610 	mls	r6, r7, r0, r3
 8000444:	0c0b      	lsrs	r3, r1, #16
 8000446:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800044a:	fb00 f60e 	mul.w	r6, r0, lr
 800044e:	429e      	cmp	r6, r3
 8000450:	fa04 f402 	lsl.w	r4, r4, r2
 8000454:	d908      	bls.n	8000468 <__udivmoddi4+0x260>
 8000456:	eb1c 0303 	adds.w	r3, ip, r3
 800045a:	f100 38ff 	add.w	r8, r0, #4294967295
 800045e:	d22f      	bcs.n	80004c0 <__udivmoddi4+0x2b8>
 8000460:	429e      	cmp	r6, r3
 8000462:	d92d      	bls.n	80004c0 <__udivmoddi4+0x2b8>
 8000464:	3802      	subs	r0, #2
 8000466:	4463      	add	r3, ip
 8000468:	1b9b      	subs	r3, r3, r6
 800046a:	b289      	uxth	r1, r1
 800046c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000470:	fb07 3316 	mls	r3, r7, r6, r3
 8000474:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000478:	fb06 f30e 	mul.w	r3, r6, lr
 800047c:	428b      	cmp	r3, r1
 800047e:	d908      	bls.n	8000492 <__udivmoddi4+0x28a>
 8000480:	eb1c 0101 	adds.w	r1, ip, r1
 8000484:	f106 38ff 	add.w	r8, r6, #4294967295
 8000488:	d216      	bcs.n	80004b8 <__udivmoddi4+0x2b0>
 800048a:	428b      	cmp	r3, r1
 800048c:	d914      	bls.n	80004b8 <__udivmoddi4+0x2b0>
 800048e:	3e02      	subs	r6, #2
 8000490:	4461      	add	r1, ip
 8000492:	1ac9      	subs	r1, r1, r3
 8000494:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000498:	e738      	b.n	800030c <__udivmoddi4+0x104>
 800049a:	462e      	mov	r6, r5
 800049c:	4628      	mov	r0, r5
 800049e:	e705      	b.n	80002ac <__udivmoddi4+0xa4>
 80004a0:	4606      	mov	r6, r0
 80004a2:	e6e3      	b.n	800026c <__udivmoddi4+0x64>
 80004a4:	4618      	mov	r0, r3
 80004a6:	e6f8      	b.n	800029a <__udivmoddi4+0x92>
 80004a8:	454b      	cmp	r3, r9
 80004aa:	d2a9      	bcs.n	8000400 <__udivmoddi4+0x1f8>
 80004ac:	ebb9 0802 	subs.w	r8, r9, r2
 80004b0:	eb64 0e0c 	sbc.w	lr, r4, ip
 80004b4:	3801      	subs	r0, #1
 80004b6:	e7a3      	b.n	8000400 <__udivmoddi4+0x1f8>
 80004b8:	4646      	mov	r6, r8
 80004ba:	e7ea      	b.n	8000492 <__udivmoddi4+0x28a>
 80004bc:	4620      	mov	r0, r4
 80004be:	e794      	b.n	80003ea <__udivmoddi4+0x1e2>
 80004c0:	4640      	mov	r0, r8
 80004c2:	e7d1      	b.n	8000468 <__udivmoddi4+0x260>
 80004c4:	46d0      	mov	r8, sl
 80004c6:	e77b      	b.n	80003c0 <__udivmoddi4+0x1b8>
 80004c8:	3b02      	subs	r3, #2
 80004ca:	4461      	add	r1, ip
 80004cc:	e732      	b.n	8000334 <__udivmoddi4+0x12c>
 80004ce:	4630      	mov	r0, r6
 80004d0:	e709      	b.n	80002e6 <__udivmoddi4+0xde>
 80004d2:	4464      	add	r4, ip
 80004d4:	3802      	subs	r0, #2
 80004d6:	e742      	b.n	800035e <__udivmoddi4+0x156>

080004d8 <__aeabi_idiv0>:
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop

080004dc <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 80004dc:	b580      	push	{r7, lr}
 80004de:	af00      	add	r7, sp, #0
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 80004e0:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 80004e4:	4803      	ldr	r0, [pc, #12]	; (80004f4 <GUI_X_Config+0x18>)
 80004e6:	f00b f9ed 	bl	800b8c4 <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80004ea:	4803      	ldr	r0, [pc, #12]	; (80004f8 <GUI_X_Config+0x1c>)
 80004ec:	f00a fb18 	bl	800ab20 <GUI_SetDefaultFont>
}
 80004f0:	bf00      	nop
 80004f2:	bd80      	pop	{r7, pc}
 80004f4:	20000214 	.word	0x20000214
 80004f8:	08010370 	.word	0x08010370

080004fc <GUI_X_GetTime>:
  Some timing dependent routines require a GetTime
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
 80004fc:	b480      	push	{r7}
 80004fe:	af00      	add	r7, sp, #0
  return OS_TimeMS; 
 8000500:	4b03      	ldr	r3, [pc, #12]	; (8000510 <GUI_X_GetTime+0x14>)
 8000502:	681b      	ldr	r3, [r3, #0]
}
 8000504:	4618      	mov	r0, r3
 8000506:	46bd      	mov	sp, r7
 8000508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800050c:	4770      	bx	lr
 800050e:	bf00      	nop
 8000510:	20002a14 	.word	0x20002a14

08000514 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8000514:	b480      	push	{r7}
 8000516:	af00      	add	r7, sp, #0
 8000518:	bf00      	nop
 800051a:	46bd      	mov	sp, r7
 800051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000520:	4770      	bx	lr
	...

08000524 <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U8 Data)
{
 8000524:	b580      	push	{r7, lr}
 8000526:	b082      	sub	sp, #8
 8000528:	af00      	add	r7, sp, #0
 800052a:	4603      	mov	r3, r0
 800052c:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 800052e:	2200      	movs	r2, #0
 8000530:	2102      	movs	r1, #2
 8000532:	480b      	ldr	r0, [pc, #44]	; (8000560 <LcdWriteReg+0x3c>)
 8000534:	f001 fcd0 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_RESET);
 8000538:	2200      	movs	r2, #0
 800053a:	2104      	movs	r1, #4
 800053c:	4808      	ldr	r0, [pc, #32]	; (8000560 <LcdWriteReg+0x3c>)
 800053e:	f001 fccb 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 8000542:	1df9      	adds	r1, r7, #7
 8000544:	2301      	movs	r3, #1
 8000546:	2201      	movs	r2, #1
 8000548:	4806      	ldr	r0, [pc, #24]	; (8000564 <LcdWriteReg+0x40>)
 800054a:	f002 f98c 	bl	8002866 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 800054e:	2201      	movs	r2, #1
 8000550:	2102      	movs	r1, #2
 8000552:	4803      	ldr	r0, [pc, #12]	; (8000560 <LcdWriteReg+0x3c>)
 8000554:	f001 fcc0 	bl	8001ed8 <HAL_GPIO_WritePin>
}
 8000558:	bf00      	nop
 800055a:	3708      	adds	r7, #8
 800055c:	46bd      	mov	sp, r7
 800055e:	bd80      	pop	{r7, pc}
 8000560:	40020800 	.word	0x40020800
 8000564:	20002a68 	.word	0x20002a68

08000568 <LcdReadReg>:
*       LcdWriteReg
*
* Function description:
*   Sets display register
*/
static U8 LcdReadReg(void) {
 8000568:	b480      	push	{r7}
 800056a:	af00      	add	r7, sp, #0
  // ... TBD by user
	return 0;
 800056c:	2300      	movs	r3, #0
}
 800056e:	4618      	mov	r0, r3
 8000570:	46bd      	mov	sp, r7
 8000572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000576:	4770      	bx	lr

08000578 <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U8 Data)
{
 8000578:	b580      	push	{r7, lr}
 800057a:	b082      	sub	sp, #8
 800057c:	af00      	add	r7, sp, #0
 800057e:	4603      	mov	r3, r0
 8000580:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000582:	2200      	movs	r2, #0
 8000584:	2102      	movs	r1, #2
 8000586:	480b      	ldr	r0, [pc, #44]	; (80005b4 <LcdWriteData+0x3c>)
 8000588:	f001 fca6 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 800058c:	2201      	movs	r2, #1
 800058e:	2104      	movs	r1, #4
 8000590:	4808      	ldr	r0, [pc, #32]	; (80005b4 <LcdWriteData+0x3c>)
 8000592:	f001 fca1 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 8000596:	1df9      	adds	r1, r7, #7
 8000598:	2301      	movs	r3, #1
 800059a:	2201      	movs	r2, #1
 800059c:	4806      	ldr	r0, [pc, #24]	; (80005b8 <LcdWriteData+0x40>)
 800059e:	f002 f962 	bl	8002866 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 80005a2:	2201      	movs	r2, #1
 80005a4:	2102      	movs	r1, #2
 80005a6:	4803      	ldr	r0, [pc, #12]	; (80005b4 <LcdWriteData+0x3c>)
 80005a8:	f001 fc96 	bl	8001ed8 <HAL_GPIO_WritePin>
}
 80005ac:	bf00      	nop
 80005ae:	3708      	adds	r7, #8
 80005b0:	46bd      	mov	sp, r7
 80005b2:	bd80      	pop	{r7, pc}
 80005b4:	40020800 	.word	0x40020800
 80005b8:	20002a68 	.word	0x20002a68

080005bc <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U8 * pData, int NumItems) {
 80005bc:	b580      	push	{r7, lr}
 80005be:	b082      	sub	sp, #8
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	6078      	str	r0, [r7, #4]
 80005c4:	6039      	str	r1, [r7, #0]

	while (NumItems--)
 80005c6:	e011      	b.n	80005ec <LcdWriteDataMultiple+0x30>
	{
		HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 80005c8:	2200      	movs	r2, #0
 80005ca:	2102      	movs	r1, #2
 80005cc:	480c      	ldr	r0, [pc, #48]	; (8000600 <LcdWriteDataMultiple+0x44>)
 80005ce:	f001 fc83 	bl	8001ed8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 80005d2:	2201      	movs	r2, #1
 80005d4:	2104      	movs	r1, #4
 80005d6:	480a      	ldr	r0, [pc, #40]	; (8000600 <LcdWriteDataMultiple+0x44>)
 80005d8:	f001 fc7e 	bl	8001ed8 <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1, pData++, 1, 1);
 80005dc:	6879      	ldr	r1, [r7, #4]
 80005de:	1c4b      	adds	r3, r1, #1
 80005e0:	607b      	str	r3, [r7, #4]
 80005e2:	2301      	movs	r3, #1
 80005e4:	2201      	movs	r2, #1
 80005e6:	4807      	ldr	r0, [pc, #28]	; (8000604 <LcdWriteDataMultiple+0x48>)
 80005e8:	f002 f93d 	bl	8002866 <HAL_SPI_Transmit>
	while (NumItems--)
 80005ec:	683b      	ldr	r3, [r7, #0]
 80005ee:	1e5a      	subs	r2, r3, #1
 80005f0:	603a      	str	r2, [r7, #0]
 80005f2:	2b00      	cmp	r3, #0
 80005f4:	d1e8      	bne.n	80005c8 <LcdWriteDataMultiple+0xc>
  }
}
 80005f6:	bf00      	nop
 80005f8:	bf00      	nop
 80005fa:	3708      	adds	r7, #8
 80005fc:	46bd      	mov	sp, r7
 80005fe:	bd80      	pop	{r7, pc}
 8000600:	40020800 	.word	0x40020800
 8000604:	20002a68 	.word	0x20002a68

08000608 <LcdReadDataMultiple>:
*       LcdReadDataMultiple
*
* Function description:
*   Reads multiple values from a display register.
*/
static void LcdReadDataMultiple(U8 * pData, int NumItems) {
 8000608:	b480      	push	{r7}
 800060a:	b083      	sub	sp, #12
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	6039      	str	r1, [r7, #0]
  while (NumItems--) {
 8000612:	bf00      	nop
 8000614:	683b      	ldr	r3, [r7, #0]
 8000616:	1e5a      	subs	r2, r3, #1
 8000618:	603a      	str	r2, [r7, #0]
 800061a:	2b00      	cmp	r3, #0
 800061c:	d1fa      	bne.n	8000614 <LcdReadDataMultiple+0xc>
    // ... TBD by user
  }
}
 800061e:	bf00      	nop
 8000620:	bf00      	nop
 8000622:	370c      	adds	r7, #12
 8000624:	46bd      	mov	sp, r7
 8000626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800062a:	4770      	bx	lr

0800062c <LcdInit>:

void LcdInit(void) {
 800062c:	b580      	push	{r7, lr}
 800062e:	b082      	sub	sp, #8
 8000630:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 8000632:	2201      	movs	r2, #1
 8000634:	2102      	movs	r1, #2
 8000636:	489a      	ldr	r0, [pc, #616]	; (80008a0 <LcdInit+0x274>)
 8000638:	f001 fc4e 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 800063c:	2201      	movs	r2, #1
 800063e:	2104      	movs	r1, #4
 8000640:	4897      	ldr	r0, [pc, #604]	; (80008a0 <LcdInit+0x274>)
 8000642:	f001 fc49 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin, GPIO_PIN_RESET);
 8000646:	2200      	movs	r2, #0
 8000648:	2108      	movs	r1, #8
 800064a:	4895      	ldr	r0, [pc, #596]	; (80008a0 <LcdInit+0x274>)
 800064c:	f001 fc44 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_Delay(2);//Reset delay
 8000650:	2002      	movs	r0, #2
 8000652:	f000 fd7f 	bl	8001154 <HAL_Delay>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000656:	2200      	movs	r2, #0
 8000658:	2102      	movs	r1, #2
 800065a:	4891      	ldr	r0, [pc, #580]	; (80008a0 <LcdInit+0x274>)
 800065c:	f001 fc3c 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_RESET);
 8000660:	2200      	movs	r2, #0
 8000662:	2104      	movs	r1, #4
 8000664:	488e      	ldr	r0, [pc, #568]	; (80008a0 <LcdInit+0x274>)
 8000666:	f001 fc37 	bl	8001ed8 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin, GPIO_PIN_SET);
 800066a:	2201      	movs	r2, #1
 800066c:	2108      	movs	r1, #8
 800066e:	488c      	ldr	r0, [pc, #560]	; (80008a0 <LcdInit+0x274>)
 8000670:	f001 fc32 	bl	8001ed8 <HAL_GPIO_WritePin>
	for(uint8_t i=0; i<3; i++)  {
 8000674:	2300      	movs	r3, #0
 8000676:	71fb      	strb	r3, [r7, #7]
 8000678:	e005      	b.n	8000686 <LcdInit+0x5a>
		LcdWriteReg(0x00);
 800067a:	2000      	movs	r0, #0
 800067c:	f7ff ff52 	bl	8000524 <LcdWriteReg>
	for(uint8_t i=0; i<3; i++)  {
 8000680:	79fb      	ldrb	r3, [r7, #7]
 8000682:	3301      	adds	r3, #1
 8000684:	71fb      	strb	r3, [r7, #7]
 8000686:	79fb      	ldrb	r3, [r7, #7]
 8000688:	2b02      	cmp	r3, #2
 800068a:	d9f6      	bls.n	800067a <LcdInit+0x4e>
	} // Three extra 0x00s
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 800068c:	2201      	movs	r2, #1
 800068e:	2102      	movs	r1, #2
 8000690:	4883      	ldr	r0, [pc, #524]	; (80008a0 <LcdInit+0x274>)
 8000692:	f001 fc21 	bl	8001ed8 <HAL_GPIO_WritePin>

//ILI9341 initialization sequence

	LcdWriteReg(0x01);//soft reset
 8000696:	2001      	movs	r0, #1
 8000698:	f7ff ff44 	bl	8000524 <LcdWriteReg>
	HAL_Delay(1000);
 800069c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80006a0:	f000 fd58 	bl	8001154 <HAL_Delay>
	//power control A
	LcdWriteReg(0xCB);
 80006a4:	20cb      	movs	r0, #203	; 0xcb
 80006a6:	f7ff ff3d 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x39);
 80006aa:	2039      	movs	r0, #57	; 0x39
 80006ac:	f7ff ff64 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x2C);
 80006b0:	202c      	movs	r0, #44	; 0x2c
 80006b2:	f7ff ff61 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 80006b6:	2000      	movs	r0, #0
 80006b8:	f7ff ff5e 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x34);
 80006bc:	2034      	movs	r0, #52	; 0x34
 80006be:	f7ff ff5b 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x02);
 80006c2:	2002      	movs	r0, #2
 80006c4:	f7ff ff58 	bl	8000578 <LcdWriteData>

	//power control B
	LcdWriteReg(0xCF);
 80006c8:	20cf      	movs	r0, #207	; 0xcf
 80006ca:	f7ff ff2b 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 80006ce:	2000      	movs	r0, #0
 80006d0:	f7ff ff52 	bl	8000578 <LcdWriteData>
	LcdWriteData(0xC1);
 80006d4:	20c1      	movs	r0, #193	; 0xc1
 80006d6:	f7ff ff4f 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x30);
 80006da:	2030      	movs	r0, #48	; 0x30
 80006dc:	f7ff ff4c 	bl	8000578 <LcdWriteData>

	//driver timing control A
	LcdWriteReg(0xE8);
 80006e0:	20e8      	movs	r0, #232	; 0xe8
 80006e2:	f7ff ff1f 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x85);
 80006e6:	2085      	movs	r0, #133	; 0x85
 80006e8:	f7ff ff46 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 80006ec:	2000      	movs	r0, #0
 80006ee:	f7ff ff43 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x78);
 80006f2:	2078      	movs	r0, #120	; 0x78
 80006f4:	f7ff ff40 	bl	8000578 <LcdWriteData>

	//driver timing control B
	LcdWriteReg(0xEA);
 80006f8:	20ea      	movs	r0, #234	; 0xea
 80006fa:	f7ff ff13 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 80006fe:	2000      	movs	r0, #0
 8000700:	f7ff ff3a 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 8000704:	2000      	movs	r0, #0
 8000706:	f7ff ff37 	bl	8000578 <LcdWriteData>

	//power on sequence control
	LcdWriteReg(0xED);
 800070a:	20ed      	movs	r0, #237	; 0xed
 800070c:	f7ff ff0a 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x64);
 8000710:	2064      	movs	r0, #100	; 0x64
 8000712:	f7ff ff31 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x03);
 8000716:	2003      	movs	r0, #3
 8000718:	f7ff ff2e 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x12);
 800071c:	2012      	movs	r0, #18
 800071e:	f7ff ff2b 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x81);
 8000722:	2081      	movs	r0, #129	; 0x81
 8000724:	f7ff ff28 	bl	8000578 <LcdWriteData>

	//pump ratio control
	LcdWriteReg(0xF7);
 8000728:	20f7      	movs	r0, #247	; 0xf7
 800072a:	f7ff fefb 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x20);
 800072e:	2020      	movs	r0, #32
 8000730:	f7ff ff22 	bl	8000578 <LcdWriteData>

	//power control,VRH[5:0]
	LcdWriteReg(0xC0);
 8000734:	20c0      	movs	r0, #192	; 0xc0
 8000736:	f7ff fef5 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x23);
 800073a:	2023      	movs	r0, #35	; 0x23
 800073c:	f7ff ff1c 	bl	8000578 <LcdWriteData>

	//Power control,SAP[2:0];BT[3:0]
	LcdWriteReg(0xC1);
 8000740:	20c1      	movs	r0, #193	; 0xc1
 8000742:	f7ff feef 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x10);
 8000746:	2010      	movs	r0, #16
 8000748:	f7ff ff16 	bl	8000578 <LcdWriteData>

	//vcm control
	LcdWriteReg(0xC5);
 800074c:	20c5      	movs	r0, #197	; 0xc5
 800074e:	f7ff fee9 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x3E);
 8000752:	203e      	movs	r0, #62	; 0x3e
 8000754:	f7ff ff10 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x28);
 8000758:	2028      	movs	r0, #40	; 0x28
 800075a:	f7ff ff0d 	bl	8000578 <LcdWriteData>

	//vcm control 2
	LcdWriteReg(0xC7);
 800075e:	20c7      	movs	r0, #199	; 0xc7
 8000760:	f7ff fee0 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x86);
 8000764:	2086      	movs	r0, #134	; 0x86
 8000766:	f7ff ff07 	bl	8000578 <LcdWriteData>

	//memory access control
	LcdWriteReg(0x36);
 800076a:	2036      	movs	r0, #54	; 0x36
 800076c:	f7ff feda 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x48);
 8000770:	2048      	movs	r0, #72	; 0x48
 8000772:	f7ff ff01 	bl	8000578 <LcdWriteData>

	//pixel format
	LcdWriteReg(0x3A);
 8000776:	203a      	movs	r0, #58	; 0x3a
 8000778:	f7ff fed4 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x55);
 800077c:	2055      	movs	r0, #85	; 0x55
 800077e:	f7ff fefb 	bl	8000578 <LcdWriteData>

	//frameration control,normal mode full colours
	LcdWriteReg(0xB1);
 8000782:	20b1      	movs	r0, #177	; 0xb1
 8000784:	f7ff fece 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 8000788:	2000      	movs	r0, #0
 800078a:	f7ff fef5 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x18);
 800078e:	2018      	movs	r0, #24
 8000790:	f7ff fef2 	bl	8000578 <LcdWriteData>

	//display function control
	LcdWriteReg(0xB6);
 8000794:	20b6      	movs	r0, #182	; 0xb6
 8000796:	f7ff fec5 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x08);
 800079a:	2008      	movs	r0, #8
 800079c:	f7ff feec 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x82);
 80007a0:	2082      	movs	r0, #130	; 0x82
 80007a2:	f7ff fee9 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x27);
 80007a6:	2027      	movs	r0, #39	; 0x27
 80007a8:	f7ff fee6 	bl	8000578 <LcdWriteData>

	//3gamma function disable
	LcdWriteReg(0xF2);
 80007ac:	20f2      	movs	r0, #242	; 0xf2
 80007ae:	f7ff feb9 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 80007b2:	2000      	movs	r0, #0
 80007b4:	f7ff fee0 	bl	8000578 <LcdWriteData>

	//gamma curve selected
	LcdWriteReg(0x26);
 80007b8:	2026      	movs	r0, #38	; 0x26
 80007ba:	f7ff feb3 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x01);
 80007be:	2001      	movs	r0, #1
 80007c0:	f7ff feda 	bl	8000578 <LcdWriteData>

	//set positive gamma correction
	LcdWriteReg(0xE0);
 80007c4:	20e0      	movs	r0, #224	; 0xe0
 80007c6:	f7ff fead 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x0F);
 80007ca:	200f      	movs	r0, #15
 80007cc:	f7ff fed4 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x31);
 80007d0:	2031      	movs	r0, #49	; 0x31
 80007d2:	f7ff fed1 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x2B);
 80007d6:	202b      	movs	r0, #43	; 0x2b
 80007d8:	f7ff fece 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0C);
 80007dc:	200c      	movs	r0, #12
 80007de:	f7ff fecb 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0E);
 80007e2:	200e      	movs	r0, #14
 80007e4:	f7ff fec8 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x08);
 80007e8:	2008      	movs	r0, #8
 80007ea:	f7ff fec5 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x4E);
 80007ee:	204e      	movs	r0, #78	; 0x4e
 80007f0:	f7ff fec2 	bl	8000578 <LcdWriteData>
	LcdWriteData(0xF1);
 80007f4:	20f1      	movs	r0, #241	; 0xf1
 80007f6:	f7ff febf 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x37);
 80007fa:	2037      	movs	r0, #55	; 0x37
 80007fc:	f7ff febc 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x07);
 8000800:	2007      	movs	r0, #7
 8000802:	f7ff feb9 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x10);
 8000806:	2010      	movs	r0, #16
 8000808:	f7ff feb6 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x03);
 800080c:	2003      	movs	r0, #3
 800080e:	f7ff feb3 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0E);
 8000812:	200e      	movs	r0, #14
 8000814:	f7ff feb0 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x09);
 8000818:	2009      	movs	r0, #9
 800081a:	f7ff fead 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 800081e:	2000      	movs	r0, #0
 8000820:	f7ff feaa 	bl	8000578 <LcdWriteData>

	//set negative gamma correction
	LcdWriteReg(0xE1);
 8000824:	20e1      	movs	r0, #225	; 0xe1
 8000826:	f7ff fe7d 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 800082a:	2000      	movs	r0, #0
 800082c:	f7ff fea4 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0E);
 8000830:	200e      	movs	r0, #14
 8000832:	f7ff fea1 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x14);
 8000836:	2014      	movs	r0, #20
 8000838:	f7ff fe9e 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x03);
 800083c:	2003      	movs	r0, #3
 800083e:	f7ff fe9b 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x11);
 8000842:	2011      	movs	r0, #17
 8000844:	f7ff fe98 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x07);
 8000848:	2007      	movs	r0, #7
 800084a:	f7ff fe95 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x31);
 800084e:	2031      	movs	r0, #49	; 0x31
 8000850:	f7ff fe92 	bl	8000578 <LcdWriteData>
	LcdWriteData(0xC1);
 8000854:	20c1      	movs	r0, #193	; 0xc1
 8000856:	f7ff fe8f 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x48);
 800085a:	2048      	movs	r0, #72	; 0x48
 800085c:	f7ff fe8c 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x08);
 8000860:	2008      	movs	r0, #8
 8000862:	f7ff fe89 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0F);
 8000866:	200f      	movs	r0, #15
 8000868:	f7ff fe86 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0C);
 800086c:	200c      	movs	r0, #12
 800086e:	f7ff fe83 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x31);
 8000872:	2031      	movs	r0, #49	; 0x31
 8000874:	f7ff fe80 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x36);
 8000878:	2036      	movs	r0, #54	; 0x36
 800087a:	f7ff fe7d 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0F);
 800087e:	200f      	movs	r0, #15
 8000880:	f7ff fe7a 	bl	8000578 <LcdWriteData>

	//exit sleep
	LcdWriteReg(0x11);
 8000884:	2011      	movs	r0, #17
 8000886:	f7ff fe4d 	bl	8000524 <LcdWriteReg>
	HAL_Delay(120);
 800088a:	2078      	movs	r0, #120	; 0x78
 800088c:	f000 fc62 	bl	8001154 <HAL_Delay>
	//display on
	LcdWriteReg(0x29);
 8000890:	2029      	movs	r0, #41	; 0x29
 8000892:	f7ff fe47 	bl	8000524 <LcdWriteReg>
}
 8000896:	bf00      	nop
 8000898:	3708      	adds	r7, #8
 800089a:	46bd      	mov	sp, r7
 800089c:	bd80      	pop	{r7, pc}
 800089e:	bf00      	nop
 80008a0:	40020800 	.word	0x40020800

080008a4 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 80008a4:	b580      	push	{r7, lr}
 80008a6:	b0a0      	sub	sp, #128	; 0x80
 80008a8:	af00      	add	r7, sp, #0
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 80008aa:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80008ae:	2200      	movs	r2, #0
 80008b0:	601a      	str	r2, [r3, #0]
 80008b2:	605a      	str	r2, [r3, #4]
 80008b4:	609a      	str	r2, [r3, #8]
 80008b6:	60da      	str	r2, [r3, #12]
 80008b8:	611a      	str	r2, [r3, #16]
  GUI_PORT_API PortAPI = {0};
 80008ba:	463b      	mov	r3, r7
 80008bc:	2268      	movs	r2, #104	; 0x68
 80008be:	2100      	movs	r1, #0
 80008c0:	4618      	mov	r0, r3
 80008c2:	f00f fc17 	bl	80100f4 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);//16bit color flexcolor driver
 80008c6:	2300      	movs	r3, #0
 80008c8:	2200      	movs	r2, #0
 80008ca:	4916      	ldr	r1, [pc, #88]	; (8000924 <LCD_X_Config+0x80>)
 80008cc:	4816      	ldr	r0, [pc, #88]	; (8000928 <LCD_X_Config+0x84>)
 80008ce:	f00a f8a9 	bl	800aa24 <GUI_DEVICE_CreateAndLink>
 80008d2:	67f8      	str	r0, [r7, #124]	; 0x7c
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 80008d4:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80008d8:	21f0      	movs	r1, #240	; 0xf0
 80008da:	2000      	movs	r0, #0
 80008dc:	f007 ffc4 	bl	8008868 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 80008e0:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80008e4:	21f0      	movs	r1, #240	; 0xf0
 80008e6:	2000      	movs	r0, #0
 80008e8:	f007 ffa6 	bl	8008838 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY;
 80008ec:	2304      	movs	r3, #4
 80008ee:	673b      	str	r3, [r7, #112]	; 0x70
  GUIDRV_FlexColor_Config(pDevice, &Config);
 80008f0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80008f4:	4619      	mov	r1, r3
 80008f6:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 80008f8:	f007 ff3d 	bl	8008776 <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite8_A0  = LcdWriteReg;
 80008fc:	4b0b      	ldr	r3, [pc, #44]	; (800092c <LCD_X_Config+0x88>)
 80008fe:	603b      	str	r3, [r7, #0]
  PortAPI.pfWrite8_A1  = LcdWriteData;
 8000900:	4b0b      	ldr	r3, [pc, #44]	; (8000930 <LCD_X_Config+0x8c>)
 8000902:	607b      	str	r3, [r7, #4]
  PortAPI.pfWriteM8_A1  = LcdWriteDataMultiple;
 8000904:	4b0b      	ldr	r3, [pc, #44]	; (8000934 <LCD_X_Config+0x90>)
 8000906:	60fb      	str	r3, [r7, #12]
  PortAPI.pfRead8_A1  = LcdReadReg;
 8000908:	4b0b      	ldr	r3, [pc, #44]	; (8000938 <LCD_X_Config+0x94>)
 800090a:	617b      	str	r3, [r7, #20]
  PortAPI.pfReadM8_A1 = LcdReadDataMultiple;
 800090c:	4b0b      	ldr	r3, [pc, #44]	; (800093c <LCD_X_Config+0x98>)
 800090e:	61fb      	str	r3, [r7, #28]

  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B8);//ILI9341, 16bit color, 8 bit bus, no cache
 8000910:	4639      	mov	r1, r7
 8000912:	4b0b      	ldr	r3, [pc, #44]	; (8000940 <LCD_X_Config+0x9c>)
 8000914:	4a0b      	ldr	r2, [pc, #44]	; (8000944 <LCD_X_Config+0xa0>)
 8000916:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8000918:	f007 ff4b 	bl	80087b2 <GUIDRV_FlexColor_SetFunc>
}
 800091c:	bf00      	nop
 800091e:	3780      	adds	r7, #128	; 0x80
 8000920:	46bd      	mov	sp, r7
 8000922:	bd80      	pop	{r7, pc}
 8000924:	08012468 	.word	0x08012468
 8000928:	080122b4 	.word	0x080122b4
 800092c:	08000525 	.word	0x08000525
 8000930:	08000579 	.word	0x08000579
 8000934:	080005bd 	.word	0x080005bd
 8000938:	08000569 	.word	0x08000569
 800093c:	08000609 	.word	0x08000609
 8000940:	08008139 	.word	0x08008139
 8000944:	08007a35 	.word	0x08007a35

08000948 <LCD_X_DisplayDriver>:
* Return Value:
*   < -1 - Error
*     -1 - Command not handled
*      0 - Ok
*/
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8000948:	b580      	push	{r7, lr}
 800094a:	b086      	sub	sp, #24
 800094c:	af00      	add	r7, sp, #0
 800094e:	60f8      	str	r0, [r7, #12]
 8000950:	60b9      	str	r1, [r7, #8]
 8000952:	607a      	str	r2, [r7, #4]
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 8000954:	68bb      	ldr	r3, [r7, #8]
 8000956:	2b01      	cmp	r3, #1
 8000958:	d103      	bne.n	8000962 <LCD_X_DisplayDriver+0x1a>
  case LCD_X_INITCONTROLLER: {
	LcdInit();	//ili9341 init code
 800095a:	f7ff fe67 	bl	800062c <LcdInit>
    return 0;
 800095e:	2300      	movs	r3, #0
 8000960:	e003      	b.n	800096a <LCD_X_DisplayDriver+0x22>
  }
  default:
    r = -1;
 8000962:	f04f 33ff 	mov.w	r3, #4294967295
 8000966:	617b      	str	r3, [r7, #20]
  }
  return r;
 8000968:	697b      	ldr	r3, [r7, #20]
}
 800096a:	4618      	mov	r0, r3
 800096c:	3718      	adds	r7, #24
 800096e:	46bd      	mov	sp, r7
 8000970:	bd80      	pop	{r7, pc}

08000972 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000972:	b580      	push	{r7, lr}
 8000974:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000976:	f000 fb7b 	bl	8001070 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800097a:	f000 f80d 	bl	8000998 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800097e:	f000 f911 	bl	8000ba4 <MX_GPIO_Init>
  MX_ADC1_Init();
 8000982:	f000 f873 	bl	8000a6c <MX_ADC1_Init>
  MX_SPI1_Init();
 8000986:	f000 f8d7 	bl	8000b38 <MX_SPI1_Init>
  MX_CRC_Init();
 800098a:	f000 f8c1 	bl	8000b10 <MX_CRC_Init>
  /* USER CODE BEGIN 2 */
  GUI_Init();
 800098e:	f00a f939 	bl	800ac04 <GUI_Init>
  MainLCDTask();
 8000992:	f000 f97d 	bl	8000c90 <MainLCDTask>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000996:	e7fe      	b.n	8000996 <main+0x24>

08000998 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000998:	b580      	push	{r7, lr}
 800099a:	b094      	sub	sp, #80	; 0x50
 800099c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800099e:	f107 0320 	add.w	r3, r7, #32
 80009a2:	2230      	movs	r2, #48	; 0x30
 80009a4:	2100      	movs	r1, #0
 80009a6:	4618      	mov	r0, r3
 80009a8:	f00f fba4 	bl	80100f4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80009ac:	f107 030c 	add.w	r3, r7, #12
 80009b0:	2200      	movs	r2, #0
 80009b2:	601a      	str	r2, [r3, #0]
 80009b4:	605a      	str	r2, [r3, #4]
 80009b6:	609a      	str	r2, [r3, #8]
 80009b8:	60da      	str	r2, [r3, #12]
 80009ba:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80009bc:	2300      	movs	r3, #0
 80009be:	60bb      	str	r3, [r7, #8]
 80009c0:	4b28      	ldr	r3, [pc, #160]	; (8000a64 <SystemClock_Config+0xcc>)
 80009c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009c4:	4a27      	ldr	r2, [pc, #156]	; (8000a64 <SystemClock_Config+0xcc>)
 80009c6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80009ca:	6413      	str	r3, [r2, #64]	; 0x40
 80009cc:	4b25      	ldr	r3, [pc, #148]	; (8000a64 <SystemClock_Config+0xcc>)
 80009ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009d0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80009d4:	60bb      	str	r3, [r7, #8]
 80009d6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80009d8:	2300      	movs	r3, #0
 80009da:	607b      	str	r3, [r7, #4]
 80009dc:	4b22      	ldr	r3, [pc, #136]	; (8000a68 <SystemClock_Config+0xd0>)
 80009de:	681b      	ldr	r3, [r3, #0]
 80009e0:	4a21      	ldr	r2, [pc, #132]	; (8000a68 <SystemClock_Config+0xd0>)
 80009e2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80009e6:	6013      	str	r3, [r2, #0]
 80009e8:	4b1f      	ldr	r3, [pc, #124]	; (8000a68 <SystemClock_Config+0xd0>)
 80009ea:	681b      	ldr	r3, [r3, #0]
 80009ec:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80009f0:	607b      	str	r3, [r7, #4]
 80009f2:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80009f4:	2302      	movs	r3, #2
 80009f6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80009f8:	2301      	movs	r3, #1
 80009fa:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80009fc:	2310      	movs	r3, #16
 80009fe:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000a00:	2302      	movs	r3, #2
 8000a02:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000a04:	2300      	movs	r3, #0
 8000a06:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000a08:	2308      	movs	r3, #8
 8000a0a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000a0c:	23a8      	movs	r3, #168	; 0xa8
 8000a0e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000a10:	2302      	movs	r3, #2
 8000a12:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000a14:	2304      	movs	r3, #4
 8000a16:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a18:	f107 0320 	add.w	r3, r7, #32
 8000a1c:	4618      	mov	r0, r3
 8000a1e:	f001 fa75 	bl	8001f0c <HAL_RCC_OscConfig>
 8000a22:	4603      	mov	r3, r0
 8000a24:	2b00      	cmp	r3, #0
 8000a26:	d001      	beq.n	8000a2c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000a28:	f000 f90c 	bl	8000c44 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a2c:	230f      	movs	r3, #15
 8000a2e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a30:	2302      	movs	r3, #2
 8000a32:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a34:	2300      	movs	r3, #0
 8000a36:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000a38:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000a3c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000a3e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000a42:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000a44:	f107 030c 	add.w	r3, r7, #12
 8000a48:	2105      	movs	r1, #5
 8000a4a:	4618      	mov	r0, r3
 8000a4c:	f001 fcd6 	bl	80023fc <HAL_RCC_ClockConfig>
 8000a50:	4603      	mov	r3, r0
 8000a52:	2b00      	cmp	r3, #0
 8000a54:	d001      	beq.n	8000a5a <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000a56:	f000 f8f5 	bl	8000c44 <Error_Handler>
  }
}
 8000a5a:	bf00      	nop
 8000a5c:	3750      	adds	r7, #80	; 0x50
 8000a5e:	46bd      	mov	sp, r7
 8000a60:	bd80      	pop	{r7, pc}
 8000a62:	bf00      	nop
 8000a64:	40023800 	.word	0x40023800
 8000a68:	40007000 	.word	0x40007000

08000a6c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000a6c:	b580      	push	{r7, lr}
 8000a6e:	b084      	sub	sp, #16
 8000a70:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000a72:	463b      	mov	r3, r7
 8000a74:	2200      	movs	r2, #0
 8000a76:	601a      	str	r2, [r3, #0]
 8000a78:	605a      	str	r2, [r3, #4]
 8000a7a:	609a      	str	r2, [r3, #8]
 8000a7c:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000a7e:	4b21      	ldr	r3, [pc, #132]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000a80:	4a21      	ldr	r2, [pc, #132]	; (8000b08 <MX_ADC1_Init+0x9c>)
 8000a82:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000a84:	4b1f      	ldr	r3, [pc, #124]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000a86:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000a8a:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000a8c:	4b1d      	ldr	r3, [pc, #116]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000a92:	4b1c      	ldr	r3, [pc, #112]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000a94:	2200      	movs	r2, #0
 8000a96:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000a98:	4b1a      	ldr	r3, [pc, #104]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000a9e:	4b19      	ldr	r3, [pc, #100]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000aa6:	4b17      	ldr	r3, [pc, #92]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000aa8:	2200      	movs	r2, #0
 8000aaa:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000aac:	4b15      	ldr	r3, [pc, #84]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000aae:	4a17      	ldr	r2, [pc, #92]	; (8000b0c <MX_ADC1_Init+0xa0>)
 8000ab0:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000ab2:	4b14      	ldr	r3, [pc, #80]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000ab4:	2200      	movs	r2, #0
 8000ab6:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000ab8:	4b12      	ldr	r3, [pc, #72]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000aba:	2201      	movs	r2, #1
 8000abc:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000abe:	4b11      	ldr	r3, [pc, #68]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000ac0:	2200      	movs	r2, #0
 8000ac2:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000ac6:	4b0f      	ldr	r3, [pc, #60]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000ac8:	2201      	movs	r2, #1
 8000aca:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000acc:	480d      	ldr	r0, [pc, #52]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000ace:	f000 fb65 	bl	800119c <HAL_ADC_Init>
 8000ad2:	4603      	mov	r3, r0
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d001      	beq.n	8000adc <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000ad8:	f000 f8b4 	bl	8000c44 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000adc:	2300      	movs	r3, #0
 8000ade:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000ae0:	2301      	movs	r3, #1
 8000ae2:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000ae4:	2300      	movs	r3, #0
 8000ae6:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000ae8:	463b      	mov	r3, r7
 8000aea:	4619      	mov	r1, r3
 8000aec:	4805      	ldr	r0, [pc, #20]	; (8000b04 <MX_ADC1_Init+0x98>)
 8000aee:	f000 fd37 	bl	8001560 <HAL_ADC_ConfigChannel>
 8000af2:	4603      	mov	r3, r0
 8000af4:	2b00      	cmp	r3, #0
 8000af6:	d001      	beq.n	8000afc <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000af8:	f000 f8a4 	bl	8000c44 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000afc:	bf00      	nop
 8000afe:	3710      	adds	r7, #16
 8000b00:	46bd      	mov	sp, r7
 8000b02:	bd80      	pop	{r7, pc}
 8000b04:	20002a18 	.word	0x20002a18
 8000b08:	40012000 	.word	0x40012000
 8000b0c:	0f000001 	.word	0x0f000001

08000b10 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000b10:	b580      	push	{r7, lr}
 8000b12:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000b14:	4b06      	ldr	r3, [pc, #24]	; (8000b30 <MX_CRC_Init+0x20>)
 8000b16:	4a07      	ldr	r2, [pc, #28]	; (8000b34 <MX_CRC_Init+0x24>)
 8000b18:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000b1a:	4805      	ldr	r0, [pc, #20]	; (8000b30 <MX_CRC_Init+0x20>)
 8000b1c:	f001 f823 	bl	8001b66 <HAL_CRC_Init>
 8000b20:	4603      	mov	r3, r0
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	d001      	beq.n	8000b2a <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8000b26:	f000 f88d 	bl	8000c44 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000b2a:	bf00      	nop
 8000b2c:	bd80      	pop	{r7, pc}
 8000b2e:	bf00      	nop
 8000b30:	20002a60 	.word	0x20002a60
 8000b34:	40023000 	.word	0x40023000

08000b38 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000b38:	b580      	push	{r7, lr}
 8000b3a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000b3c:	4b17      	ldr	r3, [pc, #92]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b3e:	4a18      	ldr	r2, [pc, #96]	; (8000ba0 <MX_SPI1_Init+0x68>)
 8000b40:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000b42:	4b16      	ldr	r3, [pc, #88]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b44:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000b48:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000b4a:	4b14      	ldr	r3, [pc, #80]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000b50:	4b12      	ldr	r3, [pc, #72]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b52:	2200      	movs	r2, #0
 8000b54:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000b56:	4b11      	ldr	r3, [pc, #68]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b58:	2200      	movs	r2, #0
 8000b5a:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000b5c:	4b0f      	ldr	r3, [pc, #60]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b5e:	2200      	movs	r2, #0
 8000b60:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000b62:	4b0e      	ldr	r3, [pc, #56]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b64:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000b68:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000b6a:	4b0c      	ldr	r3, [pc, #48]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b6c:	2200      	movs	r2, #0
 8000b6e:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000b70:	4b0a      	ldr	r3, [pc, #40]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b72:	2200      	movs	r2, #0
 8000b74:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000b76:	4b09      	ldr	r3, [pc, #36]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b78:	2200      	movs	r2, #0
 8000b7a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000b7c:	4b07      	ldr	r3, [pc, #28]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b7e:	2200      	movs	r2, #0
 8000b80:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8000b82:	4b06      	ldr	r3, [pc, #24]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b84:	220a      	movs	r2, #10
 8000b86:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000b88:	4804      	ldr	r0, [pc, #16]	; (8000b9c <MX_SPI1_Init+0x64>)
 8000b8a:	f001 fde3 	bl	8002754 <HAL_SPI_Init>
 8000b8e:	4603      	mov	r3, r0
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d001      	beq.n	8000b98 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000b94:	f000 f856 	bl	8000c44 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000b98:	bf00      	nop
 8000b9a:	bd80      	pop	{r7, pc}
 8000b9c:	20002a68 	.word	0x20002a68
 8000ba0:	40013000 	.word	0x40013000

08000ba4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b088      	sub	sp, #32
 8000ba8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000baa:	f107 030c 	add.w	r3, r7, #12
 8000bae:	2200      	movs	r2, #0
 8000bb0:	601a      	str	r2, [r3, #0]
 8000bb2:	605a      	str	r2, [r3, #4]
 8000bb4:	609a      	str	r2, [r3, #8]
 8000bb6:	60da      	str	r2, [r3, #12]
 8000bb8:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000bba:	2300      	movs	r3, #0
 8000bbc:	60bb      	str	r3, [r7, #8]
 8000bbe:	4b1f      	ldr	r3, [pc, #124]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000bc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bc2:	4a1e      	ldr	r2, [pc, #120]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000bc4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bc8:	6313      	str	r3, [r2, #48]	; 0x30
 8000bca:	4b1c      	ldr	r3, [pc, #112]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000bcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000bd2:	60bb      	str	r3, [r7, #8]
 8000bd4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	607b      	str	r3, [r7, #4]
 8000bda:	4b18      	ldr	r3, [pc, #96]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000bdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bde:	4a17      	ldr	r2, [pc, #92]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000be0:	f043 0304 	orr.w	r3, r3, #4
 8000be4:	6313      	str	r3, [r2, #48]	; 0x30
 8000be6:	4b15      	ldr	r3, [pc, #84]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000be8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bea:	f003 0304 	and.w	r3, r3, #4
 8000bee:	607b      	str	r3, [r7, #4]
 8000bf0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	603b      	str	r3, [r7, #0]
 8000bf6:	4b11      	ldr	r3, [pc, #68]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000bf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfa:	4a10      	ldr	r2, [pc, #64]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000bfc:	f043 0301 	orr.w	r3, r3, #1
 8000c00:	6313      	str	r3, [r2, #48]	; 0x30
 8000c02:	4b0e      	ldr	r3, [pc, #56]	; (8000c3c <MX_GPIO_Init+0x98>)
 8000c04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c06:	f003 0301 	and.w	r3, r3, #1
 8000c0a:	603b      	str	r3, [r7, #0]
 8000c0c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin, GPIO_PIN_RESET);
 8000c0e:	2200      	movs	r2, #0
 8000c10:	210e      	movs	r1, #14
 8000c12:	480b      	ldr	r0, [pc, #44]	; (8000c40 <MX_GPIO_Init+0x9c>)
 8000c14:	f001 f960 	bl	8001ed8 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_CS_Pin LCD_DC_Pin LCD_RST_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin;
 8000c18:	230e      	movs	r3, #14
 8000c1a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c1c:	2301      	movs	r3, #1
 8000c1e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c20:	2300      	movs	r3, #0
 8000c22:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c24:	2300      	movs	r3, #0
 8000c26:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c28:	f107 030c 	add.w	r3, r7, #12
 8000c2c:	4619      	mov	r1, r3
 8000c2e:	4804      	ldr	r0, [pc, #16]	; (8000c40 <MX_GPIO_Init+0x9c>)
 8000c30:	f000 ffb6 	bl	8001ba0 <HAL_GPIO_Init>

}
 8000c34:	bf00      	nop
 8000c36:	3720      	adds	r7, #32
 8000c38:	46bd      	mov	sp, r7
 8000c3a:	bd80      	pop	{r7, pc}
 8000c3c:	40023800 	.word	0x40023800
 8000c40:	40020800 	.word	0x40020800

08000c44 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000c44:	b480      	push	{r7}
 8000c46:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000c48:	b672      	cpsid	i
}
 8000c4a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000c4c:	e7fe      	b.n	8000c4c <Error_Handler+0x8>
	...

08000c50 <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 8000c50:	b580      	push	{r7, lr}
 8000c52:	b084      	sub	sp, #16
 8000c54:	af00      	add	r7, sp, #0
 8000c56:	6078      	str	r0, [r7, #4]
  WM_HWIN hItem;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 8000c58:	687b      	ldr	r3, [r7, #4]
 8000c5a:	681b      	ldr	r3, [r3, #0]
 8000c5c:	2b1d      	cmp	r3, #29
 8000c5e:	d10c      	bne.n	8000c7a <_cbDialog+0x2a>
  case WM_INIT_DIALOG:
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 8000c60:	687b      	ldr	r3, [r7, #4]
 8000c62:	685b      	ldr	r3, [r3, #4]
 8000c64:	f640 0103 	movw	r1, #2051	; 0x803
 8000c68:	4618      	mov	r0, r3
 8000c6a:	f003 ffa5 	bl	8004bb8 <WM_GetDialogItem>
 8000c6e:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_20_ASCII);
 8000c70:	4906      	ldr	r1, [pc, #24]	; (8000c8c <_cbDialog+0x3c>)
 8000c72:	68f8      	ldr	r0, [r7, #12]
 8000c74:	f002 f8c3 	bl	8002dfe <TEXT_SetFont>
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
 8000c78:	e003      	b.n	8000c82 <_cbDialog+0x32>
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 8000c7a:	6878      	ldr	r0, [r7, #4]
 8000c7c:	f005 fc0e 	bl	800649c <WM_DefaultProc>
    break;
 8000c80:	bf00      	nop
  }
}
 8000c82:	bf00      	nop
 8000c84:	3710      	adds	r7, #16
 8000c86:	46bd      	mov	sp, r7
 8000c88:	bd80      	pop	{r7, pc}
 8000c8a:	bf00      	nop
 8000c8c:	08011354 	.word	0x08011354

08000c90 <MainLCDTask>:
/*********************************************************************
*
*       Createstemwin_demo
*/

WM_HWIN MainLCDTask(void) {
 8000c90:	b580      	push	{r7, lr}
 8000c92:	b090      	sub	sp, #64	; 0x40
 8000c94:	af02      	add	r7, sp, #8
  char i = 0, x = 0;
 8000c96:	2300      	movs	r3, #0
 8000c98:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  PROGBAR_Handle	hPbar;
  TEXT_Handle		htext1, htext2;
  GRAPH_DATA_Handle hData;


  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 8000ca2:	f003 ff23 	bl	8004aec <WM_GetDesktopWindow>
 8000ca6:	4603      	mov	r3, r0
 8000ca8:	2200      	movs	r2, #0
 8000caa:	9201      	str	r2, [sp, #4]
 8000cac:	2200      	movs	r2, #0
 8000cae:	9200      	str	r2, [sp, #0]
 8000cb0:	4a4c      	ldr	r2, [pc, #304]	; (8000de4 <MainLCDTask+0x154>)
 8000cb2:	2106      	movs	r1, #6
 8000cb4:	484c      	ldr	r0, [pc, #304]	; (8000de8 <MainLCDTask+0x158>)
 8000cb6:	f003 fb79 	bl	80043ac <GUI_CreateDialogBox>
 8000cba:	62f8      	str	r0, [r7, #44]	; 0x2c

  hPbar = WM_GetDialogItem(hWin, ID_PROGBAR_0);
 8000cbc:	f640 0104 	movw	r1, #2052	; 0x804
 8000cc0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000cc2:	f003 ff79 	bl	8004bb8 <WM_GetDialogItem>
 8000cc6:	62b8      	str	r0, [r7, #40]	; 0x28

  htext1 = WM_GetDialogItem(hWin, ID_TEXT_1);
 8000cc8:	f640 0103 	movw	r1, #2051	; 0x803
 8000ccc:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000cce:	f003 ff73 	bl	8004bb8 <WM_GetDialogItem>
 8000cd2:	6278      	str	r0, [r7, #36]	; 0x24

  htext2 = WM_GetDialogItem(hWin, ID_TEXT_2);
 8000cd4:	f640 0105 	movw	r1, #2053	; 0x805
 8000cd8:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000cda:	f003 ff6d 	bl	8004bb8 <WM_GetDialogItem>
 8000cde:	6238      	str	r0, [r7, #32]

  hGraph = WM_GetDialogItem(hWin, ID_GRAPH_0);
 8000ce0:	f640 0101 	movw	r1, #2049	; 0x801
 8000ce4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000ce6:	f003 ff67 	bl	8004bb8 <WM_GetDialogItem>
 8000cea:	61f8      	str	r0, [r7, #28]


  hData = GRAPH_DATA_YT_Create(GUI_RED, 200, NULL, 0);
 8000cec:	2300      	movs	r3, #0
 8000cee:	2200      	movs	r2, #0
 8000cf0:	21c8      	movs	r1, #200	; 0xc8
 8000cf2:	483e      	ldr	r0, [pc, #248]	; (8000dec <MainLCDTask+0x15c>)
 8000cf4:	f002 fb52 	bl	800339c <GRAPH_DATA_YT_Create>
 8000cf8:	61b8      	str	r0, [r7, #24]
  GRAPH_DATA_YT_SetAlign(hData, GRAPH_ALIGN_LEFT);
 8000cfa:	2101      	movs	r1, #1
 8000cfc:	69b8      	ldr	r0, [r7, #24]
 8000cfe:	f002 fba4 	bl	800344a <GRAPH_DATA_YT_SetAlign>
  GRAPH_AttachData(hGraph, hData);
 8000d02:	69b9      	ldr	r1, [r7, #24]
 8000d04:	69f8      	ldr	r0, [r7, #28]
 8000d06:	f002 ff6e 	bl	8003be6 <GRAPH_AttachData>

  GRAPH_SetGridVis(hGraph, 1);
 8000d0a:	2101      	movs	r1, #1
 8000d0c:	69f8      	ldr	r0, [r7, #28]
 8000d0e:	f002 ff8c 	bl	8003c2a <GRAPH_SetGridVis>
  GRAPH_SetBorder(hGraph, 30, 0, 0, 0);
 8000d12:	2300      	movs	r3, #0
 8000d14:	9300      	str	r3, [sp, #0]
 8000d16:	2300      	movs	r3, #0
 8000d18:	2200      	movs	r2, #0
 8000d1a:	211e      	movs	r1, #30
 8000d1c:	69f8      	ldr	r0, [r7, #28]
 8000d1e:	f002 ff9c 	bl	8003c5a <GRAPH_SetBorder>



  while(1)
  {
	  PROGBAR_SetValue(hPbar, i++);
 8000d22:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8000d26:	1c5a      	adds	r2, r3, #1
 8000d28:	f887 2037 	strb.w	r2, [r7, #55]	; 0x37
 8000d2c:	4619      	mov	r1, r3
 8000d2e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8000d30:	f002 f9d1 	bl	80030d6 <PROGBAR_SetValue>
	  if(i < 100) i = 0;
 8000d34:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8000d38:	2b63      	cmp	r3, #99	; 0x63
 8000d3a:	d802      	bhi.n	8000d42 <MainLCDTask+0xb2>
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	  HAL_ADC_Start(&hadc1);
 8000d42:	482b      	ldr	r0, [pc, #172]	; (8000df0 <MainLCDTask+0x160>)
 8000d44:	f000 fa6e 	bl	8001224 <HAL_ADC_Start>
	  HAL_ADC_PollForConversion(&hadc1, 50);
 8000d48:	2132      	movs	r1, #50	; 0x32
 8000d4a:	4829      	ldr	r0, [pc, #164]	; (8000df0 <MainLCDTask+0x160>)
 8000d4c:	f000 fb6f 	bl	800142e <HAL_ADC_PollForConversion>
	  ADC_Value = HAL_ADC_GetValue(&hadc1);
 8000d50:	4827      	ldr	r0, [pc, #156]	; (8000df0 <MainLCDTask+0x160>)
 8000d52:	f000 fbf7 	bl	8001544 <HAL_ADC_GetValue>
 8000d56:	4603      	mov	r3, r0
 8000d58:	617b      	str	r3, [r7, #20]
	  HAL_ADC_Stop(&hadc1);
 8000d5a:	4825      	ldr	r0, [pc, #148]	; (8000df0 <MainLCDTask+0x160>)
 8000d5c:	f000 fb34 	bl	80013c8 <HAL_ADC_Stop>
	  itoa(ADC_Value, str, 10);
 8000d60:	463b      	mov	r3, r7
 8000d62:	220a      	movs	r2, #10
 8000d64:	4619      	mov	r1, r3
 8000d66:	6978      	ldr	r0, [r7, #20]
 8000d68:	f00f f99a 	bl	80100a0 <itoa>
	  TEXT_SetText(htext1, str);
 8000d6c:	463b      	mov	r3, r7
 8000d6e:	4619      	mov	r1, r3
 8000d70:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000d72:	f002 f857 	bl	8002e24 <TEXT_SetText>

	  itoa(StopTime, str, 10);
 8000d76:	463b      	mov	r3, r7
 8000d78:	220a      	movs	r2, #10
 8000d7a:	4619      	mov	r1, r3
 8000d7c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8000d7e:	f00f f98f 	bl	80100a0 <itoa>
	  TEXT_SetText(htext2, str);
 8000d82:	463b      	mov	r3, r7
 8000d84:	4619      	mov	r1, r3
 8000d86:	6a38      	ldr	r0, [r7, #32]
 8000d88:	f002 f84c 	bl	8002e24 <TEXT_SetText>

	 x++;
 8000d8c:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8000d90:	3301      	adds	r3, #1
 8000d92:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	 if(x > 200)
 8000d96:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8000d9a:	2bc8      	cmp	r3, #200	; 0xc8
 8000d9c:	d905      	bls.n	8000daa <MainLCDTask+0x11a>
	 {
		 x = 0;
 8000d9e:	2300      	movs	r3, #0
 8000da0:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
		 GRAPH_DATA_YT_Clear(hData);
 8000da4:	69b8      	ldr	r0, [r7, #24]
 8000da6:	f002 fb64 	bl	8003472 <GRAPH_DATA_YT_Clear>
	 }

	  GRAPH_DATA_YT_AddValue(hData, ADC_Value/20);
 8000daa:	697b      	ldr	r3, [r7, #20]
 8000dac:	4a11      	ldr	r2, [pc, #68]	; (8000df4 <MainLCDTask+0x164>)
 8000dae:	fb82 1203 	smull	r1, r2, r2, r3
 8000db2:	10d2      	asrs	r2, r2, #3
 8000db4:	17db      	asrs	r3, r3, #31
 8000db6:	1ad3      	subs	r3, r2, r3
 8000db8:	b21b      	sxth	r3, r3
 8000dba:	4619      	mov	r1, r3
 8000dbc:	69b8      	ldr	r0, [r7, #24]
 8000dbe:	f002 fb29 	bl	8003414 <GRAPH_DATA_YT_AddValue>


	  HAL_Delay(100);
 8000dc2:	2064      	movs	r0, #100	; 0x64
 8000dc4:	f000 f9c6 	bl	8001154 <HAL_Delay>
	  StartTime = HAL_GetTick();
 8000dc8:	f000 f9b8 	bl	800113c <HAL_GetTick>
 8000dcc:	4603      	mov	r3, r0
 8000dce:	613b      	str	r3, [r7, #16]
	  GUI_Exec();
 8000dd0:	f00a f89a 	bl	800af08 <GUI_Exec>
	  StopTime = HAL_GetTick() - StartTime;
 8000dd4:	f000 f9b2 	bl	800113c <HAL_GetTick>
 8000dd8:	4602      	mov	r2, r0
 8000dda:	693b      	ldr	r3, [r7, #16]
 8000ddc:	1ad3      	subs	r3, r2, r3
 8000dde:	633b      	str	r3, [r7, #48]	; 0x30
  {
 8000de0:	e79f      	b.n	8000d22 <MainLCDTask+0x92>
 8000de2:	bf00      	nop
 8000de4:	08000c51 	.word	0x08000c51
 8000de8:	08010230 	.word	0x08010230
 8000dec:	ffff0000 	.word	0xffff0000
 8000df0:	20002a18 	.word	0x20002a18
 8000df4:	66666667 	.word	0x66666667

08000df8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000df8:	b480      	push	{r7}
 8000dfa:	b083      	sub	sp, #12
 8000dfc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000dfe:	2300      	movs	r3, #0
 8000e00:	607b      	str	r3, [r7, #4]
 8000e02:	4b10      	ldr	r3, [pc, #64]	; (8000e44 <HAL_MspInit+0x4c>)
 8000e04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e06:	4a0f      	ldr	r2, [pc, #60]	; (8000e44 <HAL_MspInit+0x4c>)
 8000e08:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000e0c:	6453      	str	r3, [r2, #68]	; 0x44
 8000e0e:	4b0d      	ldr	r3, [pc, #52]	; (8000e44 <HAL_MspInit+0x4c>)
 8000e10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e12:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000e16:	607b      	str	r3, [r7, #4]
 8000e18:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	603b      	str	r3, [r7, #0]
 8000e1e:	4b09      	ldr	r3, [pc, #36]	; (8000e44 <HAL_MspInit+0x4c>)
 8000e20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e22:	4a08      	ldr	r2, [pc, #32]	; (8000e44 <HAL_MspInit+0x4c>)
 8000e24:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000e28:	6413      	str	r3, [r2, #64]	; 0x40
 8000e2a:	4b06      	ldr	r3, [pc, #24]	; (8000e44 <HAL_MspInit+0x4c>)
 8000e2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e2e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000e32:	603b      	str	r3, [r7, #0]
 8000e34:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000e36:	bf00      	nop
 8000e38:	370c      	adds	r7, #12
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e40:	4770      	bx	lr
 8000e42:	bf00      	nop
 8000e44:	40023800 	.word	0x40023800

08000e48 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000e48:	b580      	push	{r7, lr}
 8000e4a:	b08a      	sub	sp, #40	; 0x28
 8000e4c:	af00      	add	r7, sp, #0
 8000e4e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e50:	f107 0314 	add.w	r3, r7, #20
 8000e54:	2200      	movs	r2, #0
 8000e56:	601a      	str	r2, [r3, #0]
 8000e58:	605a      	str	r2, [r3, #4]
 8000e5a:	609a      	str	r2, [r3, #8]
 8000e5c:	60da      	str	r2, [r3, #12]
 8000e5e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8000e60:	687b      	ldr	r3, [r7, #4]
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	4a17      	ldr	r2, [pc, #92]	; (8000ec4 <HAL_ADC_MspInit+0x7c>)
 8000e66:	4293      	cmp	r3, r2
 8000e68:	d127      	bne.n	8000eba <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	613b      	str	r3, [r7, #16]
 8000e6e:	4b16      	ldr	r3, [pc, #88]	; (8000ec8 <HAL_ADC_MspInit+0x80>)
 8000e70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e72:	4a15      	ldr	r2, [pc, #84]	; (8000ec8 <HAL_ADC_MspInit+0x80>)
 8000e74:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000e78:	6453      	str	r3, [r2, #68]	; 0x44
 8000e7a:	4b13      	ldr	r3, [pc, #76]	; (8000ec8 <HAL_ADC_MspInit+0x80>)
 8000e7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e7e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000e82:	613b      	str	r3, [r7, #16]
 8000e84:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e86:	2300      	movs	r3, #0
 8000e88:	60fb      	str	r3, [r7, #12]
 8000e8a:	4b0f      	ldr	r3, [pc, #60]	; (8000ec8 <HAL_ADC_MspInit+0x80>)
 8000e8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e8e:	4a0e      	ldr	r2, [pc, #56]	; (8000ec8 <HAL_ADC_MspInit+0x80>)
 8000e90:	f043 0301 	orr.w	r3, r3, #1
 8000e94:	6313      	str	r3, [r2, #48]	; 0x30
 8000e96:	4b0c      	ldr	r3, [pc, #48]	; (8000ec8 <HAL_ADC_MspInit+0x80>)
 8000e98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e9a:	f003 0301 	and.w	r3, r3, #1
 8000e9e:	60fb      	str	r3, [r7, #12]
 8000ea0:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000ea2:	2301      	movs	r3, #1
 8000ea4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000ea6:	2303      	movs	r3, #3
 8000ea8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eaa:	2300      	movs	r3, #0
 8000eac:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000eae:	f107 0314 	add.w	r3, r7, #20
 8000eb2:	4619      	mov	r1, r3
 8000eb4:	4805      	ldr	r0, [pc, #20]	; (8000ecc <HAL_ADC_MspInit+0x84>)
 8000eb6:	f000 fe73 	bl	8001ba0 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8000eba:	bf00      	nop
 8000ebc:	3728      	adds	r7, #40	; 0x28
 8000ebe:	46bd      	mov	sp, r7
 8000ec0:	bd80      	pop	{r7, pc}
 8000ec2:	bf00      	nop
 8000ec4:	40012000 	.word	0x40012000
 8000ec8:	40023800 	.word	0x40023800
 8000ecc:	40020000 	.word	0x40020000

08000ed0 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000ed0:	b480      	push	{r7}
 8000ed2:	b085      	sub	sp, #20
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	681b      	ldr	r3, [r3, #0]
 8000edc:	4a0b      	ldr	r2, [pc, #44]	; (8000f0c <HAL_CRC_MspInit+0x3c>)
 8000ede:	4293      	cmp	r3, r2
 8000ee0:	d10d      	bne.n	8000efe <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	60fb      	str	r3, [r7, #12]
 8000ee6:	4b0a      	ldr	r3, [pc, #40]	; (8000f10 <HAL_CRC_MspInit+0x40>)
 8000ee8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eea:	4a09      	ldr	r2, [pc, #36]	; (8000f10 <HAL_CRC_MspInit+0x40>)
 8000eec:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000ef0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ef2:	4b07      	ldr	r3, [pc, #28]	; (8000f10 <HAL_CRC_MspInit+0x40>)
 8000ef4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ef6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000efa:	60fb      	str	r3, [r7, #12]
 8000efc:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000efe:	bf00      	nop
 8000f00:	3714      	adds	r7, #20
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	40023000 	.word	0x40023000
 8000f10:	40023800 	.word	0x40023800

08000f14 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000f14:	b580      	push	{r7, lr}
 8000f16:	b08a      	sub	sp, #40	; 0x28
 8000f18:	af00      	add	r7, sp, #0
 8000f1a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f1c:	f107 0314 	add.w	r3, r7, #20
 8000f20:	2200      	movs	r2, #0
 8000f22:	601a      	str	r2, [r3, #0]
 8000f24:	605a      	str	r2, [r3, #4]
 8000f26:	609a      	str	r2, [r3, #8]
 8000f28:	60da      	str	r2, [r3, #12]
 8000f2a:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	4a19      	ldr	r2, [pc, #100]	; (8000f98 <HAL_SPI_MspInit+0x84>)
 8000f32:	4293      	cmp	r3, r2
 8000f34:	d12b      	bne.n	8000f8e <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8000f36:	2300      	movs	r3, #0
 8000f38:	613b      	str	r3, [r7, #16]
 8000f3a:	4b18      	ldr	r3, [pc, #96]	; (8000f9c <HAL_SPI_MspInit+0x88>)
 8000f3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f3e:	4a17      	ldr	r2, [pc, #92]	; (8000f9c <HAL_SPI_MspInit+0x88>)
 8000f40:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000f44:	6453      	str	r3, [r2, #68]	; 0x44
 8000f46:	4b15      	ldr	r3, [pc, #84]	; (8000f9c <HAL_SPI_MspInit+0x88>)
 8000f48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f4a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000f4e:	613b      	str	r3, [r7, #16]
 8000f50:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f52:	2300      	movs	r3, #0
 8000f54:	60fb      	str	r3, [r7, #12]
 8000f56:	4b11      	ldr	r3, [pc, #68]	; (8000f9c <HAL_SPI_MspInit+0x88>)
 8000f58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f5a:	4a10      	ldr	r2, [pc, #64]	; (8000f9c <HAL_SPI_MspInit+0x88>)
 8000f5c:	f043 0301 	orr.w	r3, r3, #1
 8000f60:	6313      	str	r3, [r2, #48]	; 0x30
 8000f62:	4b0e      	ldr	r3, [pc, #56]	; (8000f9c <HAL_SPI_MspInit+0x88>)
 8000f64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f66:	f003 0301 	and.w	r3, r3, #1
 8000f6a:	60fb      	str	r3, [r7, #12]
 8000f6c:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000f6e:	23e0      	movs	r3, #224	; 0xe0
 8000f70:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f72:	2302      	movs	r3, #2
 8000f74:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f76:	2300      	movs	r3, #0
 8000f78:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f7a:	2303      	movs	r3, #3
 8000f7c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8000f7e:	2305      	movs	r3, #5
 8000f80:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f82:	f107 0314 	add.w	r3, r7, #20
 8000f86:	4619      	mov	r1, r3
 8000f88:	4805      	ldr	r0, [pc, #20]	; (8000fa0 <HAL_SPI_MspInit+0x8c>)
 8000f8a:	f000 fe09 	bl	8001ba0 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8000f8e:	bf00      	nop
 8000f90:	3728      	adds	r7, #40	; 0x28
 8000f92:	46bd      	mov	sp, r7
 8000f94:	bd80      	pop	{r7, pc}
 8000f96:	bf00      	nop
 8000f98:	40013000 	.word	0x40013000
 8000f9c:	40023800 	.word	0x40023800
 8000fa0:	40020000 	.word	0x40020000

08000fa4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000fa4:	b480      	push	{r7}
 8000fa6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000fa8:	e7fe      	b.n	8000fa8 <NMI_Handler+0x4>

08000faa <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000faa:	b480      	push	{r7}
 8000fac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000fae:	e7fe      	b.n	8000fae <HardFault_Handler+0x4>

08000fb0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000fb0:	b480      	push	{r7}
 8000fb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000fb4:	e7fe      	b.n	8000fb4 <MemManage_Handler+0x4>

08000fb6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000fb6:	b480      	push	{r7}
 8000fb8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000fba:	e7fe      	b.n	8000fba <BusFault_Handler+0x4>

08000fbc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000fbc:	b480      	push	{r7}
 8000fbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000fc0:	e7fe      	b.n	8000fc0 <UsageFault_Handler+0x4>

08000fc2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000fc2:	b480      	push	{r7}
 8000fc4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000fc6:	bf00      	nop
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fce:	4770      	bx	lr

08000fd0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000fd0:	b480      	push	{r7}
 8000fd2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000fd4:	bf00      	nop
 8000fd6:	46bd      	mov	sp, r7
 8000fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fdc:	4770      	bx	lr

08000fde <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000fde:	b480      	push	{r7}
 8000fe0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000fe2:	bf00      	nop
 8000fe4:	46bd      	mov	sp, r7
 8000fe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fea:	4770      	bx	lr

08000fec <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000fec:	b580      	push	{r7, lr}
 8000fee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000ff0:	f000 f890 	bl	8001114 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000ff4:	bf00      	nop
 8000ff6:	bd80      	pop	{r7, pc}

08000ff8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000ff8:	b480      	push	{r7}
 8000ffa:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000ffc:	4b06      	ldr	r3, [pc, #24]	; (8001018 <SystemInit+0x20>)
 8000ffe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001002:	4a05      	ldr	r2, [pc, #20]	; (8001018 <SystemInit+0x20>)
 8001004:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001008:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800100c:	bf00      	nop
 800100e:	46bd      	mov	sp, r7
 8001010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001014:	4770      	bx	lr
 8001016:	bf00      	nop
 8001018:	e000ed00 	.word	0xe000ed00

0800101c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 800101c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001054 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001020:	480d      	ldr	r0, [pc, #52]	; (8001058 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8001022:	490e      	ldr	r1, [pc, #56]	; (800105c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8001024:	4a0e      	ldr	r2, [pc, #56]	; (8001060 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8001026:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001028:	e002      	b.n	8001030 <LoopCopyDataInit>

0800102a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800102a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800102c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800102e:	3304      	adds	r3, #4

08001030 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001030:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001032:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001034:	d3f9      	bcc.n	800102a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001036:	4a0b      	ldr	r2, [pc, #44]	; (8001064 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8001038:	4c0b      	ldr	r4, [pc, #44]	; (8001068 <LoopFillZerobss+0x26>)
  movs r3, #0
 800103a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800103c:	e001      	b.n	8001042 <LoopFillZerobss>

0800103e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800103e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001040:	3204      	adds	r2, #4

08001042 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001042:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001044:	d3fb      	bcc.n	800103e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001046:	f7ff ffd7 	bl	8000ff8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800104a:	f00e ffed 	bl	8010028 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800104e:	f7ff fc90 	bl	8000972 <main>
  bx  lr    
 8001052:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001054:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001058:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800105c:	200001f8 	.word	0x200001f8
  ldr r2, =_sidata
 8001060:	08013020 	.word	0x08013020
  ldr r2, =_sbss
 8001064:	200001f8 	.word	0x200001f8
  ldr r4, =_ebss
 8001068:	20002e30 	.word	0x20002e30

0800106c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800106c:	e7fe      	b.n	800106c <ADC_IRQHandler>
	...

08001070 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001070:	b580      	push	{r7, lr}
 8001072:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001074:	4b0e      	ldr	r3, [pc, #56]	; (80010b0 <HAL_Init+0x40>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	4a0d      	ldr	r2, [pc, #52]	; (80010b0 <HAL_Init+0x40>)
 800107a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800107e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001080:	4b0b      	ldr	r3, [pc, #44]	; (80010b0 <HAL_Init+0x40>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	4a0a      	ldr	r2, [pc, #40]	; (80010b0 <HAL_Init+0x40>)
 8001086:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800108a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800108c:	4b08      	ldr	r3, [pc, #32]	; (80010b0 <HAL_Init+0x40>)
 800108e:	681b      	ldr	r3, [r3, #0]
 8001090:	4a07      	ldr	r2, [pc, #28]	; (80010b0 <HAL_Init+0x40>)
 8001092:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001096:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001098:	2003      	movs	r0, #3
 800109a:	f000 fd31 	bl	8001b00 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800109e:	200f      	movs	r0, #15
 80010a0:	f000 f808 	bl	80010b4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80010a4:	f7ff fea8 	bl	8000df8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80010a8:	2300      	movs	r3, #0
}
 80010aa:	4618      	mov	r0, r3
 80010ac:	bd80      	pop	{r7, pc}
 80010ae:	bf00      	nop
 80010b0:	40023c00 	.word	0x40023c00

080010b4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80010b4:	b580      	push	{r7, lr}
 80010b6:	b082      	sub	sp, #8
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80010bc:	4b12      	ldr	r3, [pc, #72]	; (8001108 <HAL_InitTick+0x54>)
 80010be:	681a      	ldr	r2, [r3, #0]
 80010c0:	4b12      	ldr	r3, [pc, #72]	; (800110c <HAL_InitTick+0x58>)
 80010c2:	781b      	ldrb	r3, [r3, #0]
 80010c4:	4619      	mov	r1, r3
 80010c6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80010ca:	fbb3 f3f1 	udiv	r3, r3, r1
 80010ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80010d2:	4618      	mov	r0, r3
 80010d4:	f000 fd3b 	bl	8001b4e <HAL_SYSTICK_Config>
 80010d8:	4603      	mov	r3, r0
 80010da:	2b00      	cmp	r3, #0
 80010dc:	d001      	beq.n	80010e2 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80010de:	2301      	movs	r3, #1
 80010e0:	e00e      	b.n	8001100 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	2b0f      	cmp	r3, #15
 80010e6:	d80a      	bhi.n	80010fe <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80010e8:	2200      	movs	r2, #0
 80010ea:	6879      	ldr	r1, [r7, #4]
 80010ec:	f04f 30ff 	mov.w	r0, #4294967295
 80010f0:	f000 fd11 	bl	8001b16 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80010f4:	4a06      	ldr	r2, [pc, #24]	; (8001110 <HAL_InitTick+0x5c>)
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80010fa:	2300      	movs	r3, #0
 80010fc:	e000      	b.n	8001100 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80010fe:	2301      	movs	r3, #1
}
 8001100:	4618      	mov	r0, r3
 8001102:	3708      	adds	r7, #8
 8001104:	46bd      	mov	sp, r7
 8001106:	bd80      	pop	{r7, pc}
 8001108:	20000000 	.word	0x20000000
 800110c:	20000008 	.word	0x20000008
 8001110:	20000004 	.word	0x20000004

08001114 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001114:	b480      	push	{r7}
 8001116:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001118:	4b06      	ldr	r3, [pc, #24]	; (8001134 <HAL_IncTick+0x20>)
 800111a:	781b      	ldrb	r3, [r3, #0]
 800111c:	461a      	mov	r2, r3
 800111e:	4b06      	ldr	r3, [pc, #24]	; (8001138 <HAL_IncTick+0x24>)
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	4413      	add	r3, r2
 8001124:	4a04      	ldr	r2, [pc, #16]	; (8001138 <HAL_IncTick+0x24>)
 8001126:	6013      	str	r3, [r2, #0]
}
 8001128:	bf00      	nop
 800112a:	46bd      	mov	sp, r7
 800112c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001130:	4770      	bx	lr
 8001132:	bf00      	nop
 8001134:	20000008 	.word	0x20000008
 8001138:	20002ac0 	.word	0x20002ac0

0800113c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 800113c:	b480      	push	{r7}
 800113e:	af00      	add	r7, sp, #0
  return uwTick;
 8001140:	4b03      	ldr	r3, [pc, #12]	; (8001150 <HAL_GetTick+0x14>)
 8001142:	681b      	ldr	r3, [r3, #0]
}
 8001144:	4618      	mov	r0, r3
 8001146:	46bd      	mov	sp, r7
 8001148:	f85d 7b04 	ldr.w	r7, [sp], #4
 800114c:	4770      	bx	lr
 800114e:	bf00      	nop
 8001150:	20002ac0 	.word	0x20002ac0

08001154 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001154:	b580      	push	{r7, lr}
 8001156:	b084      	sub	sp, #16
 8001158:	af00      	add	r7, sp, #0
 800115a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 800115c:	f7ff ffee 	bl	800113c <HAL_GetTick>
 8001160:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001166:	68fb      	ldr	r3, [r7, #12]
 8001168:	f1b3 3fff 	cmp.w	r3, #4294967295
 800116c:	d005      	beq.n	800117a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800116e:	4b0a      	ldr	r3, [pc, #40]	; (8001198 <HAL_Delay+0x44>)
 8001170:	781b      	ldrb	r3, [r3, #0]
 8001172:	461a      	mov	r2, r3
 8001174:	68fb      	ldr	r3, [r7, #12]
 8001176:	4413      	add	r3, r2
 8001178:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 800117a:	bf00      	nop
 800117c:	f7ff ffde 	bl	800113c <HAL_GetTick>
 8001180:	4602      	mov	r2, r0
 8001182:	68bb      	ldr	r3, [r7, #8]
 8001184:	1ad3      	subs	r3, r2, r3
 8001186:	68fa      	ldr	r2, [r7, #12]
 8001188:	429a      	cmp	r2, r3
 800118a:	d8f7      	bhi.n	800117c <HAL_Delay+0x28>
  {
  }
}
 800118c:	bf00      	nop
 800118e:	bf00      	nop
 8001190:	3710      	adds	r7, #16
 8001192:	46bd      	mov	sp, r7
 8001194:	bd80      	pop	{r7, pc}
 8001196:	bf00      	nop
 8001198:	20000008 	.word	0x20000008

0800119c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 800119c:	b580      	push	{r7, lr}
 800119e:	b084      	sub	sp, #16
 80011a0:	af00      	add	r7, sp, #0
 80011a2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 80011a4:	2300      	movs	r3, #0
 80011a6:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 80011a8:	687b      	ldr	r3, [r7, #4]
 80011aa:	2b00      	cmp	r3, #0
 80011ac:	d101      	bne.n	80011b2 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 80011ae:	2301      	movs	r3, #1
 80011b0:	e033      	b.n	800121a <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 80011b2:	687b      	ldr	r3, [r7, #4]
 80011b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	d109      	bne.n	80011ce <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80011ba:	6878      	ldr	r0, [r7, #4]
 80011bc:	f7ff fe44 	bl	8000e48 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 80011c0:	687b      	ldr	r3, [r7, #4]
 80011c2:	2200      	movs	r2, #0
 80011c4:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	2200      	movs	r2, #0
 80011ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011d2:	f003 0310 	and.w	r3, r3, #16
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d118      	bne.n	800120c <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011de:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80011e2:	f023 0302 	bic.w	r3, r3, #2
 80011e6:	f043 0202 	orr.w	r2, r3, #2
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 80011ee:	6878      	ldr	r0, [r7, #4]
 80011f0:	f000 fad8 	bl	80017a4 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 80011f4:	687b      	ldr	r3, [r7, #4]
 80011f6:	2200      	movs	r2, #0
 80011f8:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80011fa:	687b      	ldr	r3, [r7, #4]
 80011fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011fe:	f023 0303 	bic.w	r3, r3, #3
 8001202:	f043 0201 	orr.w	r2, r3, #1
 8001206:	687b      	ldr	r3, [r7, #4]
 8001208:	641a      	str	r2, [r3, #64]	; 0x40
 800120a:	e001      	b.n	8001210 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 800120c:	2301      	movs	r3, #1
 800120e:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8001210:	687b      	ldr	r3, [r7, #4]
 8001212:	2200      	movs	r2, #0
 8001214:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 8001218:	7bfb      	ldrb	r3, [r7, #15]
}
 800121a:	4618      	mov	r0, r3
 800121c:	3710      	adds	r7, #16
 800121e:	46bd      	mov	sp, r7
 8001220:	bd80      	pop	{r7, pc}
	...

08001224 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8001224:	b480      	push	{r7}
 8001226:	b085      	sub	sp, #20
 8001228:	af00      	add	r7, sp, #0
 800122a:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 800122c:	2300      	movs	r3, #0
 800122e:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8001230:	687b      	ldr	r3, [r7, #4]
 8001232:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001236:	2b01      	cmp	r3, #1
 8001238:	d101      	bne.n	800123e <HAL_ADC_Start+0x1a>
 800123a:	2302      	movs	r3, #2
 800123c:	e0b2      	b.n	80013a4 <HAL_ADC_Start+0x180>
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	2201      	movs	r2, #1
 8001242:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8001246:	687b      	ldr	r3, [r7, #4]
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	689b      	ldr	r3, [r3, #8]
 800124c:	f003 0301 	and.w	r3, r3, #1
 8001250:	2b01      	cmp	r3, #1
 8001252:	d018      	beq.n	8001286 <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	689a      	ldr	r2, [r3, #8]
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	681b      	ldr	r3, [r3, #0]
 800125e:	f042 0201 	orr.w	r2, r2, #1
 8001262:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8001264:	4b52      	ldr	r3, [pc, #328]	; (80013b0 <HAL_ADC_Start+0x18c>)
 8001266:	681b      	ldr	r3, [r3, #0]
 8001268:	4a52      	ldr	r2, [pc, #328]	; (80013b4 <HAL_ADC_Start+0x190>)
 800126a:	fba2 2303 	umull	r2, r3, r2, r3
 800126e:	0c9a      	lsrs	r2, r3, #18
 8001270:	4613      	mov	r3, r2
 8001272:	005b      	lsls	r3, r3, #1
 8001274:	4413      	add	r3, r2
 8001276:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001278:	e002      	b.n	8001280 <HAL_ADC_Start+0x5c>
    {
      counter--;
 800127a:	68bb      	ldr	r3, [r7, #8]
 800127c:	3b01      	subs	r3, #1
 800127e:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001280:	68bb      	ldr	r3, [r7, #8]
 8001282:	2b00      	cmp	r3, #0
 8001284:	d1f9      	bne.n	800127a <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	681b      	ldr	r3, [r3, #0]
 800128a:	689b      	ldr	r3, [r3, #8]
 800128c:	f003 0301 	and.w	r3, r3, #1
 8001290:	2b01      	cmp	r3, #1
 8001292:	d17a      	bne.n	800138a <HAL_ADC_Start+0x166>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8001294:	687b      	ldr	r3, [r7, #4]
 8001296:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001298:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800129c:	f023 0301 	bic.w	r3, r3, #1
 80012a0:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	685b      	ldr	r3, [r3, #4]
 80012ae:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	d007      	beq.n	80012c6 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 80012b6:	687b      	ldr	r3, [r7, #4]
 80012b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80012ba:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80012be:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80012c6:	687b      	ldr	r3, [r7, #4]
 80012c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80012ca:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80012ce:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80012d2:	d106      	bne.n	80012e2 <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012d8:	f023 0206 	bic.w	r2, r3, #6
 80012dc:	687b      	ldr	r3, [r7, #4]
 80012de:	645a      	str	r2, [r3, #68]	; 0x44
 80012e0:	e002      	b.n	80012e8 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	2200      	movs	r2, #0
 80012e6:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	2200      	movs	r2, #0
 80012ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80012f0:	4b31      	ldr	r3, [pc, #196]	; (80013b8 <HAL_ADC_Start+0x194>)
 80012f2:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80012f4:	687b      	ldr	r3, [r7, #4]
 80012f6:	681b      	ldr	r3, [r3, #0]
 80012f8:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80012fc:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 80012fe:	68fb      	ldr	r3, [r7, #12]
 8001300:	685b      	ldr	r3, [r3, #4]
 8001302:	f003 031f 	and.w	r3, r3, #31
 8001306:	2b00      	cmp	r3, #0
 8001308:	d12a      	bne.n	8001360 <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	681b      	ldr	r3, [r3, #0]
 800130e:	4a2b      	ldr	r2, [pc, #172]	; (80013bc <HAL_ADC_Start+0x198>)
 8001310:	4293      	cmp	r3, r2
 8001312:	d015      	beq.n	8001340 <HAL_ADC_Start+0x11c>
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	4a29      	ldr	r2, [pc, #164]	; (80013c0 <HAL_ADC_Start+0x19c>)
 800131a:	4293      	cmp	r3, r2
 800131c:	d105      	bne.n	800132a <HAL_ADC_Start+0x106>
 800131e:	4b26      	ldr	r3, [pc, #152]	; (80013b8 <HAL_ADC_Start+0x194>)
 8001320:	685b      	ldr	r3, [r3, #4]
 8001322:	f003 031f 	and.w	r3, r3, #31
 8001326:	2b00      	cmp	r3, #0
 8001328:	d00a      	beq.n	8001340 <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	4a25      	ldr	r2, [pc, #148]	; (80013c4 <HAL_ADC_Start+0x1a0>)
 8001330:	4293      	cmp	r3, r2
 8001332:	d136      	bne.n	80013a2 <HAL_ADC_Start+0x17e>
 8001334:	4b20      	ldr	r3, [pc, #128]	; (80013b8 <HAL_ADC_Start+0x194>)
 8001336:	685b      	ldr	r3, [r3, #4]
 8001338:	f003 0310 	and.w	r3, r3, #16
 800133c:	2b00      	cmp	r3, #0
 800133e:	d130      	bne.n	80013a2 <HAL_ADC_Start+0x17e>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8001340:	687b      	ldr	r3, [r7, #4]
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	689b      	ldr	r3, [r3, #8]
 8001346:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800134a:	2b00      	cmp	r3, #0
 800134c:	d129      	bne.n	80013a2 <HAL_ADC_Start+0x17e>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800134e:	687b      	ldr	r3, [r7, #4]
 8001350:	681b      	ldr	r3, [r3, #0]
 8001352:	689a      	ldr	r2, [r3, #8]
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800135c:	609a      	str	r2, [r3, #8]
 800135e:	e020      	b.n	80013a2 <HAL_ADC_Start+0x17e>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8001360:	687b      	ldr	r3, [r7, #4]
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	4a15      	ldr	r2, [pc, #84]	; (80013bc <HAL_ADC_Start+0x198>)
 8001366:	4293      	cmp	r3, r2
 8001368:	d11b      	bne.n	80013a2 <HAL_ADC_Start+0x17e>
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	681b      	ldr	r3, [r3, #0]
 800136e:	689b      	ldr	r3, [r3, #8]
 8001370:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001374:	2b00      	cmp	r3, #0
 8001376:	d114      	bne.n	80013a2 <HAL_ADC_Start+0x17e>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	689a      	ldr	r2, [r3, #8]
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	681b      	ldr	r3, [r3, #0]
 8001382:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001386:	609a      	str	r2, [r3, #8]
 8001388:	e00b      	b.n	80013a2 <HAL_ADC_Start+0x17e>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800138e:	f043 0210 	orr.w	r2, r3, #16
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	641a      	str	r2, [r3, #64]	; 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800139a:	f043 0201 	orr.w	r2, r3, #1
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	645a      	str	r2, [r3, #68]	; 0x44
  }
  
  /* Return function status */
  return HAL_OK;
 80013a2:	2300      	movs	r3, #0
}
 80013a4:	4618      	mov	r0, r3
 80013a6:	3714      	adds	r7, #20
 80013a8:	46bd      	mov	sp, r7
 80013aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ae:	4770      	bx	lr
 80013b0:	20000000 	.word	0x20000000
 80013b4:	431bde83 	.word	0x431bde83
 80013b8:	40012300 	.word	0x40012300
 80013bc:	40012000 	.word	0x40012000
 80013c0:	40012100 	.word	0x40012100
 80013c4:	40012200 	.word	0x40012200

080013c8 <HAL_ADC_Stop>:
  *         the configuration information for the specified ADC.
  *
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
{
 80013c8:	b480      	push	{r7}
 80013ca:	b083      	sub	sp, #12
 80013cc:	af00      	add	r7, sp, #0
 80013ce:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80013d6:	2b01      	cmp	r3, #1
 80013d8:	d101      	bne.n	80013de <HAL_ADC_Stop+0x16>
 80013da:	2302      	movs	r3, #2
 80013dc:	e021      	b.n	8001422 <HAL_ADC_Stop+0x5a>
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	2201      	movs	r2, #1
 80013e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Stop potential conversion on going, on regular and injected groups */
  /* Disable ADC peripheral */
  __HAL_ADC_DISABLE(hadc);
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	689a      	ldr	r2, [r3, #8]
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	f022 0201 	bic.w	r2, r2, #1
 80013f4:	609a      	str	r2, [r3, #8]
  
  /* Check if ADC is effectively disabled */
  if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 80013f6:	687b      	ldr	r3, [r7, #4]
 80013f8:	681b      	ldr	r3, [r3, #0]
 80013fa:	689b      	ldr	r3, [r3, #8]
 80013fc:	f003 0301 	and.w	r3, r3, #1
 8001400:	2b00      	cmp	r3, #0
 8001402:	d109      	bne.n	8001418 <HAL_ADC_Stop+0x50>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001408:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800140c:	f023 0301 	bic.w	r3, r3, #1
 8001410:	f043 0201 	orr.w	r2, r3, #1
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_READY);
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	2200      	movs	r2, #0
 800141c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8001420:	2300      	movs	r3, #0
}
 8001422:	4618      	mov	r0, r3
 8001424:	370c      	adds	r7, #12
 8001426:	46bd      	mov	sp, r7
 8001428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800142c:	4770      	bx	lr

0800142e <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 800142e:	b580      	push	{r7, lr}
 8001430:	b084      	sub	sp, #16
 8001432:	af00      	add	r7, sp, #0
 8001434:	6078      	str	r0, [r7, #4]
 8001436:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8001438:	2300      	movs	r3, #0
 800143a:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	681b      	ldr	r3, [r3, #0]
 8001440:	689b      	ldr	r3, [r3, #8]
 8001442:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001446:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800144a:	d113      	bne.n	8001474 <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	681b      	ldr	r3, [r3, #0]
 8001450:	689b      	ldr	r3, [r3, #8]
 8001452:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8001456:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800145a:	d10b      	bne.n	8001474 <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001460:	f043 0220 	orr.w	r2, r3, #32
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	2200      	movs	r2, #0
 800146c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 8001470:	2301      	movs	r3, #1
 8001472:	e063      	b.n	800153c <HAL_ADC_PollForConversion+0x10e>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8001474:	f7ff fe62 	bl	800113c <HAL_GetTick>
 8001478:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800147a:	e021      	b.n	80014c0 <HAL_ADC_PollForConversion+0x92>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 800147c:	683b      	ldr	r3, [r7, #0]
 800147e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001482:	d01d      	beq.n	80014c0 <HAL_ADC_PollForConversion+0x92>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8001484:	683b      	ldr	r3, [r7, #0]
 8001486:	2b00      	cmp	r3, #0
 8001488:	d007      	beq.n	800149a <HAL_ADC_PollForConversion+0x6c>
 800148a:	f7ff fe57 	bl	800113c <HAL_GetTick>
 800148e:	4602      	mov	r2, r0
 8001490:	68fb      	ldr	r3, [r7, #12]
 8001492:	1ad3      	subs	r3, r2, r3
 8001494:	683a      	ldr	r2, [r7, #0]
 8001496:	429a      	cmp	r2, r3
 8001498:	d212      	bcs.n	80014c0 <HAL_ADC_PollForConversion+0x92>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800149a:	687b      	ldr	r3, [r7, #4]
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	f003 0302 	and.w	r3, r3, #2
 80014a4:	2b02      	cmp	r3, #2
 80014a6:	d00b      	beq.n	80014c0 <HAL_ADC_PollForConversion+0x92>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014ac:	f043 0204 	orr.w	r2, r3, #4
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	641a      	str	r2, [r3, #64]	; 0x40
          
          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	2200      	movs	r2, #0
 80014b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
          
          return HAL_TIMEOUT;
 80014bc:	2303      	movs	r3, #3
 80014be:	e03d      	b.n	800153c <HAL_ADC_PollForConversion+0x10e>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80014c0:	687b      	ldr	r3, [r7, #4]
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	f003 0302 	and.w	r3, r3, #2
 80014ca:	2b02      	cmp	r3, #2
 80014cc:	d1d6      	bne.n	800147c <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	f06f 0212 	mvn.w	r2, #18
 80014d6:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014dc:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	689b      	ldr	r3, [r3, #8]
 80014ea:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80014ee:	2b00      	cmp	r3, #0
 80014f0:	d123      	bne.n	800153a <HAL_ADC_PollForConversion+0x10c>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80014f2:	687b      	ldr	r3, [r7, #4]
 80014f4:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	d11f      	bne.n	800153a <HAL_ADC_PollForConversion+0x10c>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80014fa:	687b      	ldr	r3, [r7, #4]
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001500:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001504:	2b00      	cmp	r3, #0
 8001506:	d006      	beq.n	8001516 <HAL_ADC_PollForConversion+0xe8>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8001508:	687b      	ldr	r3, [r7, #4]
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	689b      	ldr	r3, [r3, #8]
 800150e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8001512:	2b00      	cmp	r3, #0
 8001514:	d111      	bne.n	800153a <HAL_ADC_PollForConversion+0x10c>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800151a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001522:	687b      	ldr	r3, [r7, #4]
 8001524:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001526:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800152a:	2b00      	cmp	r3, #0
 800152c:	d105      	bne.n	800153a <HAL_ADC_PollForConversion+0x10c>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800152e:	687b      	ldr	r3, [r7, #4]
 8001530:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001532:	f043 0201 	orr.w	r2, r3, #1
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 800153a:	2300      	movs	r3, #0
}
 800153c:	4618      	mov	r0, r3
 800153e:	3710      	adds	r7, #16
 8001540:	46bd      	mov	sp, r7
 8001542:	bd80      	pop	{r7, pc}

08001544 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 8001544:	b480      	push	{r7}
 8001546:	b083      	sub	sp, #12
 8001548:	af00      	add	r7, sp, #0
 800154a:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 800154c:	687b      	ldr	r3, [r7, #4]
 800154e:	681b      	ldr	r3, [r3, #0]
 8001550:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8001552:	4618      	mov	r0, r3
 8001554:	370c      	adds	r7, #12
 8001556:	46bd      	mov	sp, r7
 8001558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155c:	4770      	bx	lr
	...

08001560 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8001560:	b480      	push	{r7}
 8001562:	b085      	sub	sp, #20
 8001564:	af00      	add	r7, sp, #0
 8001566:	6078      	str	r0, [r7, #4]
 8001568:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 800156a:	2300      	movs	r3, #0
 800156c:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800156e:	687b      	ldr	r3, [r7, #4]
 8001570:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001574:	2b01      	cmp	r3, #1
 8001576:	d101      	bne.n	800157c <HAL_ADC_ConfigChannel+0x1c>
 8001578:	2302      	movs	r3, #2
 800157a:	e105      	b.n	8001788 <HAL_ADC_ConfigChannel+0x228>
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	2201      	movs	r2, #1
 8001580:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8001584:	683b      	ldr	r3, [r7, #0]
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	2b09      	cmp	r3, #9
 800158a:	d925      	bls.n	80015d8 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	68d9      	ldr	r1, [r3, #12]
 8001592:	683b      	ldr	r3, [r7, #0]
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	b29b      	uxth	r3, r3
 8001598:	461a      	mov	r2, r3
 800159a:	4613      	mov	r3, r2
 800159c:	005b      	lsls	r3, r3, #1
 800159e:	4413      	add	r3, r2
 80015a0:	3b1e      	subs	r3, #30
 80015a2:	2207      	movs	r2, #7
 80015a4:	fa02 f303 	lsl.w	r3, r2, r3
 80015a8:	43da      	mvns	r2, r3
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	400a      	ands	r2, r1
 80015b0:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80015b2:	687b      	ldr	r3, [r7, #4]
 80015b4:	681b      	ldr	r3, [r3, #0]
 80015b6:	68d9      	ldr	r1, [r3, #12]
 80015b8:	683b      	ldr	r3, [r7, #0]
 80015ba:	689a      	ldr	r2, [r3, #8]
 80015bc:	683b      	ldr	r3, [r7, #0]
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	b29b      	uxth	r3, r3
 80015c2:	4618      	mov	r0, r3
 80015c4:	4603      	mov	r3, r0
 80015c6:	005b      	lsls	r3, r3, #1
 80015c8:	4403      	add	r3, r0
 80015ca:	3b1e      	subs	r3, #30
 80015cc:	409a      	lsls	r2, r3
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	430a      	orrs	r2, r1
 80015d4:	60da      	str	r2, [r3, #12]
 80015d6:	e022      	b.n	800161e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	6919      	ldr	r1, [r3, #16]
 80015de:	683b      	ldr	r3, [r7, #0]
 80015e0:	681b      	ldr	r3, [r3, #0]
 80015e2:	b29b      	uxth	r3, r3
 80015e4:	461a      	mov	r2, r3
 80015e6:	4613      	mov	r3, r2
 80015e8:	005b      	lsls	r3, r3, #1
 80015ea:	4413      	add	r3, r2
 80015ec:	2207      	movs	r2, #7
 80015ee:	fa02 f303 	lsl.w	r3, r2, r3
 80015f2:	43da      	mvns	r2, r3
 80015f4:	687b      	ldr	r3, [r7, #4]
 80015f6:	681b      	ldr	r3, [r3, #0]
 80015f8:	400a      	ands	r2, r1
 80015fa:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	6919      	ldr	r1, [r3, #16]
 8001602:	683b      	ldr	r3, [r7, #0]
 8001604:	689a      	ldr	r2, [r3, #8]
 8001606:	683b      	ldr	r3, [r7, #0]
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	b29b      	uxth	r3, r3
 800160c:	4618      	mov	r0, r3
 800160e:	4603      	mov	r3, r0
 8001610:	005b      	lsls	r3, r3, #1
 8001612:	4403      	add	r3, r0
 8001614:	409a      	lsls	r2, r3
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	430a      	orrs	r2, r1
 800161c:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800161e:	683b      	ldr	r3, [r7, #0]
 8001620:	685b      	ldr	r3, [r3, #4]
 8001622:	2b06      	cmp	r3, #6
 8001624:	d824      	bhi.n	8001670 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8001626:	687b      	ldr	r3, [r7, #4]
 8001628:	681b      	ldr	r3, [r3, #0]
 800162a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800162c:	683b      	ldr	r3, [r7, #0]
 800162e:	685a      	ldr	r2, [r3, #4]
 8001630:	4613      	mov	r3, r2
 8001632:	009b      	lsls	r3, r3, #2
 8001634:	4413      	add	r3, r2
 8001636:	3b05      	subs	r3, #5
 8001638:	221f      	movs	r2, #31
 800163a:	fa02 f303 	lsl.w	r3, r2, r3
 800163e:	43da      	mvns	r2, r3
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	400a      	ands	r2, r1
 8001646:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	681b      	ldr	r3, [r3, #0]
 800164c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800164e:	683b      	ldr	r3, [r7, #0]
 8001650:	681b      	ldr	r3, [r3, #0]
 8001652:	b29b      	uxth	r3, r3
 8001654:	4618      	mov	r0, r3
 8001656:	683b      	ldr	r3, [r7, #0]
 8001658:	685a      	ldr	r2, [r3, #4]
 800165a:	4613      	mov	r3, r2
 800165c:	009b      	lsls	r3, r3, #2
 800165e:	4413      	add	r3, r2
 8001660:	3b05      	subs	r3, #5
 8001662:	fa00 f203 	lsl.w	r2, r0, r3
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	430a      	orrs	r2, r1
 800166c:	635a      	str	r2, [r3, #52]	; 0x34
 800166e:	e04c      	b.n	800170a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8001670:	683b      	ldr	r3, [r7, #0]
 8001672:	685b      	ldr	r3, [r3, #4]
 8001674:	2b0c      	cmp	r3, #12
 8001676:	d824      	bhi.n	80016c2 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800167e:	683b      	ldr	r3, [r7, #0]
 8001680:	685a      	ldr	r2, [r3, #4]
 8001682:	4613      	mov	r3, r2
 8001684:	009b      	lsls	r3, r3, #2
 8001686:	4413      	add	r3, r2
 8001688:	3b23      	subs	r3, #35	; 0x23
 800168a:	221f      	movs	r2, #31
 800168c:	fa02 f303 	lsl.w	r3, r2, r3
 8001690:	43da      	mvns	r2, r3
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	681b      	ldr	r3, [r3, #0]
 8001696:	400a      	ands	r2, r1
 8001698:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	681b      	ldr	r3, [r3, #0]
 800169e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	b29b      	uxth	r3, r3
 80016a6:	4618      	mov	r0, r3
 80016a8:	683b      	ldr	r3, [r7, #0]
 80016aa:	685a      	ldr	r2, [r3, #4]
 80016ac:	4613      	mov	r3, r2
 80016ae:	009b      	lsls	r3, r3, #2
 80016b0:	4413      	add	r3, r2
 80016b2:	3b23      	subs	r3, #35	; 0x23
 80016b4:	fa00 f203 	lsl.w	r2, r0, r3
 80016b8:	687b      	ldr	r3, [r7, #4]
 80016ba:	681b      	ldr	r3, [r3, #0]
 80016bc:	430a      	orrs	r2, r1
 80016be:	631a      	str	r2, [r3, #48]	; 0x30
 80016c0:	e023      	b.n	800170a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	681b      	ldr	r3, [r3, #0]
 80016c6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80016c8:	683b      	ldr	r3, [r7, #0]
 80016ca:	685a      	ldr	r2, [r3, #4]
 80016cc:	4613      	mov	r3, r2
 80016ce:	009b      	lsls	r3, r3, #2
 80016d0:	4413      	add	r3, r2
 80016d2:	3b41      	subs	r3, #65	; 0x41
 80016d4:	221f      	movs	r2, #31
 80016d6:	fa02 f303 	lsl.w	r3, r2, r3
 80016da:	43da      	mvns	r2, r3
 80016dc:	687b      	ldr	r3, [r7, #4]
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	400a      	ands	r2, r1
 80016e2:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	681b      	ldr	r3, [r3, #0]
 80016e8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80016ea:	683b      	ldr	r3, [r7, #0]
 80016ec:	681b      	ldr	r3, [r3, #0]
 80016ee:	b29b      	uxth	r3, r3
 80016f0:	4618      	mov	r0, r3
 80016f2:	683b      	ldr	r3, [r7, #0]
 80016f4:	685a      	ldr	r2, [r3, #4]
 80016f6:	4613      	mov	r3, r2
 80016f8:	009b      	lsls	r3, r3, #2
 80016fa:	4413      	add	r3, r2
 80016fc:	3b41      	subs	r3, #65	; 0x41
 80016fe:	fa00 f203 	lsl.w	r2, r0, r3
 8001702:	687b      	ldr	r3, [r7, #4]
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	430a      	orrs	r2, r1
 8001708:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800170a:	4b22      	ldr	r3, [pc, #136]	; (8001794 <HAL_ADC_ConfigChannel+0x234>)
 800170c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	4a21      	ldr	r2, [pc, #132]	; (8001798 <HAL_ADC_ConfigChannel+0x238>)
 8001714:	4293      	cmp	r3, r2
 8001716:	d109      	bne.n	800172c <HAL_ADC_ConfigChannel+0x1cc>
 8001718:	683b      	ldr	r3, [r7, #0]
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	2b12      	cmp	r3, #18
 800171e:	d105      	bne.n	800172c <HAL_ADC_ConfigChannel+0x1cc>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8001720:	68fb      	ldr	r3, [r7, #12]
 8001722:	685b      	ldr	r3, [r3, #4]
 8001724:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8001728:	68fb      	ldr	r3, [r7, #12]
 800172a:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	4a19      	ldr	r2, [pc, #100]	; (8001798 <HAL_ADC_ConfigChannel+0x238>)
 8001732:	4293      	cmp	r3, r2
 8001734:	d123      	bne.n	800177e <HAL_ADC_ConfigChannel+0x21e>
 8001736:	683b      	ldr	r3, [r7, #0]
 8001738:	681b      	ldr	r3, [r3, #0]
 800173a:	2b10      	cmp	r3, #16
 800173c:	d003      	beq.n	8001746 <HAL_ADC_ConfigChannel+0x1e6>
 800173e:	683b      	ldr	r3, [r7, #0]
 8001740:	681b      	ldr	r3, [r3, #0]
 8001742:	2b11      	cmp	r3, #17
 8001744:	d11b      	bne.n	800177e <HAL_ADC_ConfigChannel+0x21e>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8001746:	68fb      	ldr	r3, [r7, #12]
 8001748:	685b      	ldr	r3, [r3, #4]
 800174a:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800174e:	68fb      	ldr	r3, [r7, #12]
 8001750:	605a      	str	r2, [r3, #4]
    
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8001752:	683b      	ldr	r3, [r7, #0]
 8001754:	681b      	ldr	r3, [r3, #0]
 8001756:	2b10      	cmp	r3, #16
 8001758:	d111      	bne.n	800177e <HAL_ADC_ConfigChannel+0x21e>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800175a:	4b10      	ldr	r3, [pc, #64]	; (800179c <HAL_ADC_ConfigChannel+0x23c>)
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	4a10      	ldr	r2, [pc, #64]	; (80017a0 <HAL_ADC_ConfigChannel+0x240>)
 8001760:	fba2 2303 	umull	r2, r3, r2, r3
 8001764:	0c9a      	lsrs	r2, r3, #18
 8001766:	4613      	mov	r3, r2
 8001768:	009b      	lsls	r3, r3, #2
 800176a:	4413      	add	r3, r2
 800176c:	005b      	lsls	r3, r3, #1
 800176e:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8001770:	e002      	b.n	8001778 <HAL_ADC_ConfigChannel+0x218>
      {
        counter--;
 8001772:	68bb      	ldr	r3, [r7, #8]
 8001774:	3b01      	subs	r3, #1
 8001776:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8001778:	68bb      	ldr	r3, [r7, #8]
 800177a:	2b00      	cmp	r3, #0
 800177c:	d1f9      	bne.n	8001772 <HAL_ADC_ConfigChannel+0x212>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	2200      	movs	r2, #0
 8001782:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8001786:	2300      	movs	r3, #0
}
 8001788:	4618      	mov	r0, r3
 800178a:	3714      	adds	r7, #20
 800178c:	46bd      	mov	sp, r7
 800178e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001792:	4770      	bx	lr
 8001794:	40012300 	.word	0x40012300
 8001798:	40012000 	.word	0x40012000
 800179c:	20000000 	.word	0x20000000
 80017a0:	431bde83 	.word	0x431bde83

080017a4 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 80017a4:	b480      	push	{r7}
 80017a6:	b085      	sub	sp, #20
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80017ac:	4b79      	ldr	r3, [pc, #484]	; (8001994 <ADC_Init+0x1f0>)
 80017ae:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80017b0:	68fb      	ldr	r3, [r7, #12]
 80017b2:	685b      	ldr	r3, [r3, #4]
 80017b4:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80017b8:	68fb      	ldr	r3, [r7, #12]
 80017ba:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80017bc:	68fb      	ldr	r3, [r7, #12]
 80017be:	685a      	ldr	r2, [r3, #4]
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	685b      	ldr	r3, [r3, #4]
 80017c4:	431a      	orrs	r2, r3
 80017c6:	68fb      	ldr	r3, [r7, #12]
 80017c8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	685a      	ldr	r2, [r3, #4]
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80017d8:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	6859      	ldr	r1, [r3, #4]
 80017e0:	687b      	ldr	r3, [r7, #4]
 80017e2:	691b      	ldr	r3, [r3, #16]
 80017e4:	021a      	lsls	r2, r3, #8
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	430a      	orrs	r2, r1
 80017ec:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	681b      	ldr	r3, [r3, #0]
 80017f2:	685a      	ldr	r2, [r3, #4]
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	681b      	ldr	r3, [r3, #0]
 80017f8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80017fc:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	6859      	ldr	r1, [r3, #4]
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	689a      	ldr	r2, [r3, #8]
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	430a      	orrs	r2, r1
 800180e:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	689a      	ldr	r2, [r3, #8]
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800181e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	6899      	ldr	r1, [r3, #8]
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	68da      	ldr	r2, [r3, #12]
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	430a      	orrs	r2, r1
 8001830:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001836:	4a58      	ldr	r2, [pc, #352]	; (8001998 <ADC_Init+0x1f4>)
 8001838:	4293      	cmp	r3, r2
 800183a:	d022      	beq.n	8001882 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	689a      	ldr	r2, [r3, #8]
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800184a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800184c:	687b      	ldr	r3, [r7, #4]
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	6899      	ldr	r1, [r3, #8]
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	430a      	orrs	r2, r1
 800185c:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	689a      	ldr	r2, [r3, #8]
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800186c:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	681b      	ldr	r3, [r3, #0]
 8001872:	6899      	ldr	r1, [r3, #8]
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	681b      	ldr	r3, [r3, #0]
 800187c:	430a      	orrs	r2, r1
 800187e:	609a      	str	r2, [r3, #8]
 8001880:	e00f      	b.n	80018a2 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	681b      	ldr	r3, [r3, #0]
 8001886:	689a      	ldr	r2, [r3, #8]
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001890:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	689a      	ldr	r2, [r3, #8]
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80018a0:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	681b      	ldr	r3, [r3, #0]
 80018a6:	689a      	ldr	r2, [r3, #8]
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	f022 0202 	bic.w	r2, r2, #2
 80018b0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	6899      	ldr	r1, [r3, #8]
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	7e1b      	ldrb	r3, [r3, #24]
 80018bc:	005a      	lsls	r2, r3, #1
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	430a      	orrs	r2, r1
 80018c4:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	d01b      	beq.n	8001908 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	685a      	ldr	r2, [r3, #4]
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80018de:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	685a      	ldr	r2, [r3, #4]
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80018ee:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	6859      	ldr	r1, [r3, #4]
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80018fa:	3b01      	subs	r3, #1
 80018fc:	035a      	lsls	r2, r3, #13
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	430a      	orrs	r2, r1
 8001904:	605a      	str	r2, [r3, #4]
 8001906:	e007      	b.n	8001918 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	685a      	ldr	r2, [r3, #4]
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001916:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8001926:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800192e:	687b      	ldr	r3, [r7, #4]
 8001930:	69db      	ldr	r3, [r3, #28]
 8001932:	3b01      	subs	r3, #1
 8001934:	051a      	lsls	r2, r3, #20
 8001936:	687b      	ldr	r3, [r7, #4]
 8001938:	681b      	ldr	r3, [r3, #0]
 800193a:	430a      	orrs	r2, r1
 800193c:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	681b      	ldr	r3, [r3, #0]
 8001942:	689a      	ldr	r2, [r3, #8]
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800194c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	6899      	ldr	r1, [r3, #8]
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800195a:	025a      	lsls	r2, r3, #9
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	430a      	orrs	r2, r1
 8001962:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8001964:	687b      	ldr	r3, [r7, #4]
 8001966:	681b      	ldr	r3, [r3, #0]
 8001968:	689a      	ldr	r2, [r3, #8]
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001972:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	6899      	ldr	r1, [r3, #8]
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	695b      	ldr	r3, [r3, #20]
 800197e:	029a      	lsls	r2, r3, #10
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	681b      	ldr	r3, [r3, #0]
 8001984:	430a      	orrs	r2, r1
 8001986:	609a      	str	r2, [r3, #8]
}
 8001988:	bf00      	nop
 800198a:	3714      	adds	r7, #20
 800198c:	46bd      	mov	sp, r7
 800198e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001992:	4770      	bx	lr
 8001994:	40012300 	.word	0x40012300
 8001998:	0f000001 	.word	0x0f000001

0800199c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800199c:	b480      	push	{r7}
 800199e:	b085      	sub	sp, #20
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	f003 0307 	and.w	r3, r3, #7
 80019aa:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80019ac:	4b0c      	ldr	r3, [pc, #48]	; (80019e0 <__NVIC_SetPriorityGrouping+0x44>)
 80019ae:	68db      	ldr	r3, [r3, #12]
 80019b0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80019b2:	68ba      	ldr	r2, [r7, #8]
 80019b4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80019b8:	4013      	ands	r3, r2
 80019ba:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80019c0:	68bb      	ldr	r3, [r7, #8]
 80019c2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80019c4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80019c8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80019cc:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80019ce:	4a04      	ldr	r2, [pc, #16]	; (80019e0 <__NVIC_SetPriorityGrouping+0x44>)
 80019d0:	68bb      	ldr	r3, [r7, #8]
 80019d2:	60d3      	str	r3, [r2, #12]
}
 80019d4:	bf00      	nop
 80019d6:	3714      	adds	r7, #20
 80019d8:	46bd      	mov	sp, r7
 80019da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019de:	4770      	bx	lr
 80019e0:	e000ed00 	.word	0xe000ed00

080019e4 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80019e4:	b480      	push	{r7}
 80019e6:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80019e8:	4b04      	ldr	r3, [pc, #16]	; (80019fc <__NVIC_GetPriorityGrouping+0x18>)
 80019ea:	68db      	ldr	r3, [r3, #12]
 80019ec:	0a1b      	lsrs	r3, r3, #8
 80019ee:	f003 0307 	and.w	r3, r3, #7
}
 80019f2:	4618      	mov	r0, r3
 80019f4:	46bd      	mov	sp, r7
 80019f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019fa:	4770      	bx	lr
 80019fc:	e000ed00 	.word	0xe000ed00

08001a00 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001a00:	b480      	push	{r7}
 8001a02:	b083      	sub	sp, #12
 8001a04:	af00      	add	r7, sp, #0
 8001a06:	4603      	mov	r3, r0
 8001a08:	6039      	str	r1, [r7, #0]
 8001a0a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001a0c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	db0a      	blt.n	8001a2a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001a14:	683b      	ldr	r3, [r7, #0]
 8001a16:	b2da      	uxtb	r2, r3
 8001a18:	490c      	ldr	r1, [pc, #48]	; (8001a4c <__NVIC_SetPriority+0x4c>)
 8001a1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a1e:	0112      	lsls	r2, r2, #4
 8001a20:	b2d2      	uxtb	r2, r2
 8001a22:	440b      	add	r3, r1
 8001a24:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001a28:	e00a      	b.n	8001a40 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001a2a:	683b      	ldr	r3, [r7, #0]
 8001a2c:	b2da      	uxtb	r2, r3
 8001a2e:	4908      	ldr	r1, [pc, #32]	; (8001a50 <__NVIC_SetPriority+0x50>)
 8001a30:	79fb      	ldrb	r3, [r7, #7]
 8001a32:	f003 030f 	and.w	r3, r3, #15
 8001a36:	3b04      	subs	r3, #4
 8001a38:	0112      	lsls	r2, r2, #4
 8001a3a:	b2d2      	uxtb	r2, r2
 8001a3c:	440b      	add	r3, r1
 8001a3e:	761a      	strb	r2, [r3, #24]
}
 8001a40:	bf00      	nop
 8001a42:	370c      	adds	r7, #12
 8001a44:	46bd      	mov	sp, r7
 8001a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a4a:	4770      	bx	lr
 8001a4c:	e000e100 	.word	0xe000e100
 8001a50:	e000ed00 	.word	0xe000ed00

08001a54 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001a54:	b480      	push	{r7}
 8001a56:	b089      	sub	sp, #36	; 0x24
 8001a58:	af00      	add	r7, sp, #0
 8001a5a:	60f8      	str	r0, [r7, #12]
 8001a5c:	60b9      	str	r1, [r7, #8]
 8001a5e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	f003 0307 	and.w	r3, r3, #7
 8001a66:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001a68:	69fb      	ldr	r3, [r7, #28]
 8001a6a:	f1c3 0307 	rsb	r3, r3, #7
 8001a6e:	2b04      	cmp	r3, #4
 8001a70:	bf28      	it	cs
 8001a72:	2304      	movcs	r3, #4
 8001a74:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001a76:	69fb      	ldr	r3, [r7, #28]
 8001a78:	3304      	adds	r3, #4
 8001a7a:	2b06      	cmp	r3, #6
 8001a7c:	d902      	bls.n	8001a84 <NVIC_EncodePriority+0x30>
 8001a7e:	69fb      	ldr	r3, [r7, #28]
 8001a80:	3b03      	subs	r3, #3
 8001a82:	e000      	b.n	8001a86 <NVIC_EncodePriority+0x32>
 8001a84:	2300      	movs	r3, #0
 8001a86:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a88:	f04f 32ff 	mov.w	r2, #4294967295
 8001a8c:	69bb      	ldr	r3, [r7, #24]
 8001a8e:	fa02 f303 	lsl.w	r3, r2, r3
 8001a92:	43da      	mvns	r2, r3
 8001a94:	68bb      	ldr	r3, [r7, #8]
 8001a96:	401a      	ands	r2, r3
 8001a98:	697b      	ldr	r3, [r7, #20]
 8001a9a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a9c:	f04f 31ff 	mov.w	r1, #4294967295
 8001aa0:	697b      	ldr	r3, [r7, #20]
 8001aa2:	fa01 f303 	lsl.w	r3, r1, r3
 8001aa6:	43d9      	mvns	r1, r3
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001aac:	4313      	orrs	r3, r2
         );
}
 8001aae:	4618      	mov	r0, r3
 8001ab0:	3724      	adds	r7, #36	; 0x24
 8001ab2:	46bd      	mov	sp, r7
 8001ab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab8:	4770      	bx	lr
	...

08001abc <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001abc:	b580      	push	{r7, lr}
 8001abe:	b082      	sub	sp, #8
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	3b01      	subs	r3, #1
 8001ac8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001acc:	d301      	bcc.n	8001ad2 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001ace:	2301      	movs	r3, #1
 8001ad0:	e00f      	b.n	8001af2 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001ad2:	4a0a      	ldr	r2, [pc, #40]	; (8001afc <SysTick_Config+0x40>)
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	3b01      	subs	r3, #1
 8001ad8:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001ada:	210f      	movs	r1, #15
 8001adc:	f04f 30ff 	mov.w	r0, #4294967295
 8001ae0:	f7ff ff8e 	bl	8001a00 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001ae4:	4b05      	ldr	r3, [pc, #20]	; (8001afc <SysTick_Config+0x40>)
 8001ae6:	2200      	movs	r2, #0
 8001ae8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001aea:	4b04      	ldr	r3, [pc, #16]	; (8001afc <SysTick_Config+0x40>)
 8001aec:	2207      	movs	r2, #7
 8001aee:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001af0:	2300      	movs	r3, #0
}
 8001af2:	4618      	mov	r0, r3
 8001af4:	3708      	adds	r7, #8
 8001af6:	46bd      	mov	sp, r7
 8001af8:	bd80      	pop	{r7, pc}
 8001afa:	bf00      	nop
 8001afc:	e000e010 	.word	0xe000e010

08001b00 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001b00:	b580      	push	{r7, lr}
 8001b02:	b082      	sub	sp, #8
 8001b04:	af00      	add	r7, sp, #0
 8001b06:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001b08:	6878      	ldr	r0, [r7, #4]
 8001b0a:	f7ff ff47 	bl	800199c <__NVIC_SetPriorityGrouping>
}
 8001b0e:	bf00      	nop
 8001b10:	3708      	adds	r7, #8
 8001b12:	46bd      	mov	sp, r7
 8001b14:	bd80      	pop	{r7, pc}

08001b16 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001b16:	b580      	push	{r7, lr}
 8001b18:	b086      	sub	sp, #24
 8001b1a:	af00      	add	r7, sp, #0
 8001b1c:	4603      	mov	r3, r0
 8001b1e:	60b9      	str	r1, [r7, #8]
 8001b20:	607a      	str	r2, [r7, #4]
 8001b22:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001b24:	2300      	movs	r3, #0
 8001b26:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001b28:	f7ff ff5c 	bl	80019e4 <__NVIC_GetPriorityGrouping>
 8001b2c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001b2e:	687a      	ldr	r2, [r7, #4]
 8001b30:	68b9      	ldr	r1, [r7, #8]
 8001b32:	6978      	ldr	r0, [r7, #20]
 8001b34:	f7ff ff8e 	bl	8001a54 <NVIC_EncodePriority>
 8001b38:	4602      	mov	r2, r0
 8001b3a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b3e:	4611      	mov	r1, r2
 8001b40:	4618      	mov	r0, r3
 8001b42:	f7ff ff5d 	bl	8001a00 <__NVIC_SetPriority>
}
 8001b46:	bf00      	nop
 8001b48:	3718      	adds	r7, #24
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	bd80      	pop	{r7, pc}

08001b4e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001b4e:	b580      	push	{r7, lr}
 8001b50:	b082      	sub	sp, #8
 8001b52:	af00      	add	r7, sp, #0
 8001b54:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001b56:	6878      	ldr	r0, [r7, #4]
 8001b58:	f7ff ffb0 	bl	8001abc <SysTick_Config>
 8001b5c:	4603      	mov	r3, r0
}
 8001b5e:	4618      	mov	r0, r3
 8001b60:	3708      	adds	r7, #8
 8001b62:	46bd      	mov	sp, r7
 8001b64:	bd80      	pop	{r7, pc}

08001b66 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001b66:	b580      	push	{r7, lr}
 8001b68:	b082      	sub	sp, #8
 8001b6a:	af00      	add	r7, sp, #0
 8001b6c:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	2b00      	cmp	r3, #0
 8001b72:	d101      	bne.n	8001b78 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8001b74:	2301      	movs	r3, #1
 8001b76:	e00e      	b.n	8001b96 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	795b      	ldrb	r3, [r3, #5]
 8001b7c:	b2db      	uxtb	r3, r3
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d105      	bne.n	8001b8e <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	2200      	movs	r2, #0
 8001b86:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8001b88:	6878      	ldr	r0, [r7, #4]
 8001b8a:	f7ff f9a1 	bl	8000ed0 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001b8e:	687b      	ldr	r3, [r7, #4]
 8001b90:	2201      	movs	r2, #1
 8001b92:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8001b94:	2300      	movs	r3, #0
}
 8001b96:	4618      	mov	r0, r3
 8001b98:	3708      	adds	r7, #8
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	bd80      	pop	{r7, pc}
	...

08001ba0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001ba0:	b480      	push	{r7}
 8001ba2:	b089      	sub	sp, #36	; 0x24
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	6078      	str	r0, [r7, #4]
 8001ba8:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8001baa:	2300      	movs	r3, #0
 8001bac:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8001bae:	2300      	movs	r3, #0
 8001bb0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8001bb2:	2300      	movs	r3, #0
 8001bb4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	61fb      	str	r3, [r7, #28]
 8001bba:	e16b      	b.n	8001e94 <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8001bbc:	2201      	movs	r2, #1
 8001bbe:	69fb      	ldr	r3, [r7, #28]
 8001bc0:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc4:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001bc6:	683b      	ldr	r3, [r7, #0]
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	697a      	ldr	r2, [r7, #20]
 8001bcc:	4013      	ands	r3, r2
 8001bce:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8001bd0:	693a      	ldr	r2, [r7, #16]
 8001bd2:	697b      	ldr	r3, [r7, #20]
 8001bd4:	429a      	cmp	r2, r3
 8001bd6:	f040 815a 	bne.w	8001e8e <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001bda:	683b      	ldr	r3, [r7, #0]
 8001bdc:	685b      	ldr	r3, [r3, #4]
 8001bde:	f003 0303 	and.w	r3, r3, #3
 8001be2:	2b01      	cmp	r3, #1
 8001be4:	d005      	beq.n	8001bf2 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001be6:	683b      	ldr	r3, [r7, #0]
 8001be8:	685b      	ldr	r3, [r3, #4]
 8001bea:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001bee:	2b02      	cmp	r3, #2
 8001bf0:	d130      	bne.n	8001c54 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	689b      	ldr	r3, [r3, #8]
 8001bf6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001bf8:	69fb      	ldr	r3, [r7, #28]
 8001bfa:	005b      	lsls	r3, r3, #1
 8001bfc:	2203      	movs	r2, #3
 8001bfe:	fa02 f303 	lsl.w	r3, r2, r3
 8001c02:	43db      	mvns	r3, r3
 8001c04:	69ba      	ldr	r2, [r7, #24]
 8001c06:	4013      	ands	r3, r2
 8001c08:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001c0a:	683b      	ldr	r3, [r7, #0]
 8001c0c:	68da      	ldr	r2, [r3, #12]
 8001c0e:	69fb      	ldr	r3, [r7, #28]
 8001c10:	005b      	lsls	r3, r3, #1
 8001c12:	fa02 f303 	lsl.w	r3, r2, r3
 8001c16:	69ba      	ldr	r2, [r7, #24]
 8001c18:	4313      	orrs	r3, r2
 8001c1a:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	69ba      	ldr	r2, [r7, #24]
 8001c20:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	685b      	ldr	r3, [r3, #4]
 8001c26:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001c28:	2201      	movs	r2, #1
 8001c2a:	69fb      	ldr	r3, [r7, #28]
 8001c2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c30:	43db      	mvns	r3, r3
 8001c32:	69ba      	ldr	r2, [r7, #24]
 8001c34:	4013      	ands	r3, r2
 8001c36:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001c38:	683b      	ldr	r3, [r7, #0]
 8001c3a:	685b      	ldr	r3, [r3, #4]
 8001c3c:	091b      	lsrs	r3, r3, #4
 8001c3e:	f003 0201 	and.w	r2, r3, #1
 8001c42:	69fb      	ldr	r3, [r7, #28]
 8001c44:	fa02 f303 	lsl.w	r3, r2, r3
 8001c48:	69ba      	ldr	r2, [r7, #24]
 8001c4a:	4313      	orrs	r3, r2
 8001c4c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	69ba      	ldr	r2, [r7, #24]
 8001c52:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001c54:	683b      	ldr	r3, [r7, #0]
 8001c56:	685b      	ldr	r3, [r3, #4]
 8001c58:	f003 0303 	and.w	r3, r3, #3
 8001c5c:	2b03      	cmp	r3, #3
 8001c5e:	d017      	beq.n	8001c90 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	68db      	ldr	r3, [r3, #12]
 8001c64:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001c66:	69fb      	ldr	r3, [r7, #28]
 8001c68:	005b      	lsls	r3, r3, #1
 8001c6a:	2203      	movs	r2, #3
 8001c6c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c70:	43db      	mvns	r3, r3
 8001c72:	69ba      	ldr	r2, [r7, #24]
 8001c74:	4013      	ands	r3, r2
 8001c76:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001c78:	683b      	ldr	r3, [r7, #0]
 8001c7a:	689a      	ldr	r2, [r3, #8]
 8001c7c:	69fb      	ldr	r3, [r7, #28]
 8001c7e:	005b      	lsls	r3, r3, #1
 8001c80:	fa02 f303 	lsl.w	r3, r2, r3
 8001c84:	69ba      	ldr	r2, [r7, #24]
 8001c86:	4313      	orrs	r3, r2
 8001c88:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	69ba      	ldr	r2, [r7, #24]
 8001c8e:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	685b      	ldr	r3, [r3, #4]
 8001c94:	f003 0303 	and.w	r3, r3, #3
 8001c98:	2b02      	cmp	r3, #2
 8001c9a:	d123      	bne.n	8001ce4 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001c9c:	69fb      	ldr	r3, [r7, #28]
 8001c9e:	08da      	lsrs	r2, r3, #3
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	3208      	adds	r2, #8
 8001ca4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001ca8:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001caa:	69fb      	ldr	r3, [r7, #28]
 8001cac:	f003 0307 	and.w	r3, r3, #7
 8001cb0:	009b      	lsls	r3, r3, #2
 8001cb2:	220f      	movs	r2, #15
 8001cb4:	fa02 f303 	lsl.w	r3, r2, r3
 8001cb8:	43db      	mvns	r3, r3
 8001cba:	69ba      	ldr	r2, [r7, #24]
 8001cbc:	4013      	ands	r3, r2
 8001cbe:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001cc0:	683b      	ldr	r3, [r7, #0]
 8001cc2:	691a      	ldr	r2, [r3, #16]
 8001cc4:	69fb      	ldr	r3, [r7, #28]
 8001cc6:	f003 0307 	and.w	r3, r3, #7
 8001cca:	009b      	lsls	r3, r3, #2
 8001ccc:	fa02 f303 	lsl.w	r3, r2, r3
 8001cd0:	69ba      	ldr	r2, [r7, #24]
 8001cd2:	4313      	orrs	r3, r2
 8001cd4:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8001cd6:	69fb      	ldr	r3, [r7, #28]
 8001cd8:	08da      	lsrs	r2, r3, #3
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	3208      	adds	r2, #8
 8001cde:	69b9      	ldr	r1, [r7, #24]
 8001ce0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001cea:	69fb      	ldr	r3, [r7, #28]
 8001cec:	005b      	lsls	r3, r3, #1
 8001cee:	2203      	movs	r2, #3
 8001cf0:	fa02 f303 	lsl.w	r3, r2, r3
 8001cf4:	43db      	mvns	r3, r3
 8001cf6:	69ba      	ldr	r2, [r7, #24]
 8001cf8:	4013      	ands	r3, r2
 8001cfa:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001cfc:	683b      	ldr	r3, [r7, #0]
 8001cfe:	685b      	ldr	r3, [r3, #4]
 8001d00:	f003 0203 	and.w	r2, r3, #3
 8001d04:	69fb      	ldr	r3, [r7, #28]
 8001d06:	005b      	lsls	r3, r3, #1
 8001d08:	fa02 f303 	lsl.w	r3, r2, r3
 8001d0c:	69ba      	ldr	r2, [r7, #24]
 8001d0e:	4313      	orrs	r3, r2
 8001d10:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	69ba      	ldr	r2, [r7, #24]
 8001d16:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8001d18:	683b      	ldr	r3, [r7, #0]
 8001d1a:	685b      	ldr	r3, [r3, #4]
 8001d1c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001d20:	2b00      	cmp	r3, #0
 8001d22:	f000 80b4 	beq.w	8001e8e <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001d26:	2300      	movs	r3, #0
 8001d28:	60fb      	str	r3, [r7, #12]
 8001d2a:	4b60      	ldr	r3, [pc, #384]	; (8001eac <HAL_GPIO_Init+0x30c>)
 8001d2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d2e:	4a5f      	ldr	r2, [pc, #380]	; (8001eac <HAL_GPIO_Init+0x30c>)
 8001d30:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001d34:	6453      	str	r3, [r2, #68]	; 0x44
 8001d36:	4b5d      	ldr	r3, [pc, #372]	; (8001eac <HAL_GPIO_Init+0x30c>)
 8001d38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d3a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001d3e:	60fb      	str	r3, [r7, #12]
 8001d40:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8001d42:	4a5b      	ldr	r2, [pc, #364]	; (8001eb0 <HAL_GPIO_Init+0x310>)
 8001d44:	69fb      	ldr	r3, [r7, #28]
 8001d46:	089b      	lsrs	r3, r3, #2
 8001d48:	3302      	adds	r3, #2
 8001d4a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d4e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001d50:	69fb      	ldr	r3, [r7, #28]
 8001d52:	f003 0303 	and.w	r3, r3, #3
 8001d56:	009b      	lsls	r3, r3, #2
 8001d58:	220f      	movs	r2, #15
 8001d5a:	fa02 f303 	lsl.w	r3, r2, r3
 8001d5e:	43db      	mvns	r3, r3
 8001d60:	69ba      	ldr	r2, [r7, #24]
 8001d62:	4013      	ands	r3, r2
 8001d64:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	4a52      	ldr	r2, [pc, #328]	; (8001eb4 <HAL_GPIO_Init+0x314>)
 8001d6a:	4293      	cmp	r3, r2
 8001d6c:	d02b      	beq.n	8001dc6 <HAL_GPIO_Init+0x226>
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	4a51      	ldr	r2, [pc, #324]	; (8001eb8 <HAL_GPIO_Init+0x318>)
 8001d72:	4293      	cmp	r3, r2
 8001d74:	d025      	beq.n	8001dc2 <HAL_GPIO_Init+0x222>
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	4a50      	ldr	r2, [pc, #320]	; (8001ebc <HAL_GPIO_Init+0x31c>)
 8001d7a:	4293      	cmp	r3, r2
 8001d7c:	d01f      	beq.n	8001dbe <HAL_GPIO_Init+0x21e>
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	4a4f      	ldr	r2, [pc, #316]	; (8001ec0 <HAL_GPIO_Init+0x320>)
 8001d82:	4293      	cmp	r3, r2
 8001d84:	d019      	beq.n	8001dba <HAL_GPIO_Init+0x21a>
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	4a4e      	ldr	r2, [pc, #312]	; (8001ec4 <HAL_GPIO_Init+0x324>)
 8001d8a:	4293      	cmp	r3, r2
 8001d8c:	d013      	beq.n	8001db6 <HAL_GPIO_Init+0x216>
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	4a4d      	ldr	r2, [pc, #308]	; (8001ec8 <HAL_GPIO_Init+0x328>)
 8001d92:	4293      	cmp	r3, r2
 8001d94:	d00d      	beq.n	8001db2 <HAL_GPIO_Init+0x212>
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	4a4c      	ldr	r2, [pc, #304]	; (8001ecc <HAL_GPIO_Init+0x32c>)
 8001d9a:	4293      	cmp	r3, r2
 8001d9c:	d007      	beq.n	8001dae <HAL_GPIO_Init+0x20e>
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	4a4b      	ldr	r2, [pc, #300]	; (8001ed0 <HAL_GPIO_Init+0x330>)
 8001da2:	4293      	cmp	r3, r2
 8001da4:	d101      	bne.n	8001daa <HAL_GPIO_Init+0x20a>
 8001da6:	2307      	movs	r3, #7
 8001da8:	e00e      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001daa:	2308      	movs	r3, #8
 8001dac:	e00c      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001dae:	2306      	movs	r3, #6
 8001db0:	e00a      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001db2:	2305      	movs	r3, #5
 8001db4:	e008      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001db6:	2304      	movs	r3, #4
 8001db8:	e006      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001dba:	2303      	movs	r3, #3
 8001dbc:	e004      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001dbe:	2302      	movs	r3, #2
 8001dc0:	e002      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001dc2:	2301      	movs	r3, #1
 8001dc4:	e000      	b.n	8001dc8 <HAL_GPIO_Init+0x228>
 8001dc6:	2300      	movs	r3, #0
 8001dc8:	69fa      	ldr	r2, [r7, #28]
 8001dca:	f002 0203 	and.w	r2, r2, #3
 8001dce:	0092      	lsls	r2, r2, #2
 8001dd0:	4093      	lsls	r3, r2
 8001dd2:	69ba      	ldr	r2, [r7, #24]
 8001dd4:	4313      	orrs	r3, r2
 8001dd6:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001dd8:	4935      	ldr	r1, [pc, #212]	; (8001eb0 <HAL_GPIO_Init+0x310>)
 8001dda:	69fb      	ldr	r3, [r7, #28]
 8001ddc:	089b      	lsrs	r3, r3, #2
 8001dde:	3302      	adds	r3, #2
 8001de0:	69ba      	ldr	r2, [r7, #24]
 8001de2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001de6:	4b3b      	ldr	r3, [pc, #236]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001de8:	689b      	ldr	r3, [r3, #8]
 8001dea:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001dec:	693b      	ldr	r3, [r7, #16]
 8001dee:	43db      	mvns	r3, r3
 8001df0:	69ba      	ldr	r2, [r7, #24]
 8001df2:	4013      	ands	r3, r2
 8001df4:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8001df6:	683b      	ldr	r3, [r7, #0]
 8001df8:	685b      	ldr	r3, [r3, #4]
 8001dfa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001dfe:	2b00      	cmp	r3, #0
 8001e00:	d003      	beq.n	8001e0a <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 8001e02:	69ba      	ldr	r2, [r7, #24]
 8001e04:	693b      	ldr	r3, [r7, #16]
 8001e06:	4313      	orrs	r3, r2
 8001e08:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8001e0a:	4a32      	ldr	r2, [pc, #200]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001e0c:	69bb      	ldr	r3, [r7, #24]
 8001e0e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001e10:	4b30      	ldr	r3, [pc, #192]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001e12:	68db      	ldr	r3, [r3, #12]
 8001e14:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001e16:	693b      	ldr	r3, [r7, #16]
 8001e18:	43db      	mvns	r3, r3
 8001e1a:	69ba      	ldr	r2, [r7, #24]
 8001e1c:	4013      	ands	r3, r2
 8001e1e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001e20:	683b      	ldr	r3, [r7, #0]
 8001e22:	685b      	ldr	r3, [r3, #4]
 8001e24:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	d003      	beq.n	8001e34 <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8001e2c:	69ba      	ldr	r2, [r7, #24]
 8001e2e:	693b      	ldr	r3, [r7, #16]
 8001e30:	4313      	orrs	r3, r2
 8001e32:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8001e34:	4a27      	ldr	r2, [pc, #156]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001e36:	69bb      	ldr	r3, [r7, #24]
 8001e38:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8001e3a:	4b26      	ldr	r3, [pc, #152]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001e3c:	685b      	ldr	r3, [r3, #4]
 8001e3e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001e40:	693b      	ldr	r3, [r7, #16]
 8001e42:	43db      	mvns	r3, r3
 8001e44:	69ba      	ldr	r2, [r7, #24]
 8001e46:	4013      	ands	r3, r2
 8001e48:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8001e4a:	683b      	ldr	r3, [r7, #0]
 8001e4c:	685b      	ldr	r3, [r3, #4]
 8001e4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e52:	2b00      	cmp	r3, #0
 8001e54:	d003      	beq.n	8001e5e <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 8001e56:	69ba      	ldr	r2, [r7, #24]
 8001e58:	693b      	ldr	r3, [r7, #16]
 8001e5a:	4313      	orrs	r3, r2
 8001e5c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8001e5e:	4a1d      	ldr	r2, [pc, #116]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001e60:	69bb      	ldr	r3, [r7, #24]
 8001e62:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001e64:	4b1b      	ldr	r3, [pc, #108]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001e6a:	693b      	ldr	r3, [r7, #16]
 8001e6c:	43db      	mvns	r3, r3
 8001e6e:	69ba      	ldr	r2, [r7, #24]
 8001e70:	4013      	ands	r3, r2
 8001e72:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8001e74:	683b      	ldr	r3, [r7, #0]
 8001e76:	685b      	ldr	r3, [r3, #4]
 8001e78:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d003      	beq.n	8001e88 <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8001e80:	69ba      	ldr	r2, [r7, #24]
 8001e82:	693b      	ldr	r3, [r7, #16]
 8001e84:	4313      	orrs	r3, r2
 8001e86:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8001e88:	4a12      	ldr	r2, [pc, #72]	; (8001ed4 <HAL_GPIO_Init+0x334>)
 8001e8a:	69bb      	ldr	r3, [r7, #24]
 8001e8c:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001e8e:	69fb      	ldr	r3, [r7, #28]
 8001e90:	3301      	adds	r3, #1
 8001e92:	61fb      	str	r3, [r7, #28]
 8001e94:	69fb      	ldr	r3, [r7, #28]
 8001e96:	2b0f      	cmp	r3, #15
 8001e98:	f67f ae90 	bls.w	8001bbc <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001e9c:	bf00      	nop
 8001e9e:	bf00      	nop
 8001ea0:	3724      	adds	r7, #36	; 0x24
 8001ea2:	46bd      	mov	sp, r7
 8001ea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ea8:	4770      	bx	lr
 8001eaa:	bf00      	nop
 8001eac:	40023800 	.word	0x40023800
 8001eb0:	40013800 	.word	0x40013800
 8001eb4:	40020000 	.word	0x40020000
 8001eb8:	40020400 	.word	0x40020400
 8001ebc:	40020800 	.word	0x40020800
 8001ec0:	40020c00 	.word	0x40020c00
 8001ec4:	40021000 	.word	0x40021000
 8001ec8:	40021400 	.word	0x40021400
 8001ecc:	40021800 	.word	0x40021800
 8001ed0:	40021c00 	.word	0x40021c00
 8001ed4:	40013c00 	.word	0x40013c00

08001ed8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8001ed8:	b480      	push	{r7}
 8001eda:	b083      	sub	sp, #12
 8001edc:	af00      	add	r7, sp, #0
 8001ede:	6078      	str	r0, [r7, #4]
 8001ee0:	460b      	mov	r3, r1
 8001ee2:	807b      	strh	r3, [r7, #2]
 8001ee4:	4613      	mov	r3, r2
 8001ee6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001ee8:	787b      	ldrb	r3, [r7, #1]
 8001eea:	2b00      	cmp	r3, #0
 8001eec:	d003      	beq.n	8001ef6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8001eee:	887a      	ldrh	r2, [r7, #2]
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8001ef4:	e003      	b.n	8001efe <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8001ef6:	887b      	ldrh	r3, [r7, #2]
 8001ef8:	041a      	lsls	r2, r3, #16
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	619a      	str	r2, [r3, #24]
}
 8001efe:	bf00      	nop
 8001f00:	370c      	adds	r7, #12
 8001f02:	46bd      	mov	sp, r7
 8001f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f08:	4770      	bx	lr
	...

08001f0c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001f0c:	b580      	push	{r7, lr}
 8001f0e:	b086      	sub	sp, #24
 8001f10:	af00      	add	r7, sp, #0
 8001f12:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	2b00      	cmp	r3, #0
 8001f18:	d101      	bne.n	8001f1e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001f1a:	2301      	movs	r3, #1
 8001f1c:	e267      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	f003 0301 	and.w	r3, r3, #1
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	d075      	beq.n	8002016 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001f2a:	4b88      	ldr	r3, [pc, #544]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f2c:	689b      	ldr	r3, [r3, #8]
 8001f2e:	f003 030c 	and.w	r3, r3, #12
 8001f32:	2b04      	cmp	r3, #4
 8001f34:	d00c      	beq.n	8001f50 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001f36:	4b85      	ldr	r3, [pc, #532]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f38:	689b      	ldr	r3, [r3, #8]
 8001f3a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001f3e:	2b08      	cmp	r3, #8
 8001f40:	d112      	bne.n	8001f68 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001f42:	4b82      	ldr	r3, [pc, #520]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f44:	685b      	ldr	r3, [r3, #4]
 8001f46:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001f4a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8001f4e:	d10b      	bne.n	8001f68 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001f50:	4b7e      	ldr	r3, [pc, #504]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f58:	2b00      	cmp	r3, #0
 8001f5a:	d05b      	beq.n	8002014 <HAL_RCC_OscConfig+0x108>
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	685b      	ldr	r3, [r3, #4]
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	d157      	bne.n	8002014 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8001f64:	2301      	movs	r3, #1
 8001f66:	e242      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	685b      	ldr	r3, [r3, #4]
 8001f6c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001f70:	d106      	bne.n	8001f80 <HAL_RCC_OscConfig+0x74>
 8001f72:	4b76      	ldr	r3, [pc, #472]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	4a75      	ldr	r2, [pc, #468]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f78:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f7c:	6013      	str	r3, [r2, #0]
 8001f7e:	e01d      	b.n	8001fbc <HAL_RCC_OscConfig+0xb0>
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	685b      	ldr	r3, [r3, #4]
 8001f84:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001f88:	d10c      	bne.n	8001fa4 <HAL_RCC_OscConfig+0x98>
 8001f8a:	4b70      	ldr	r3, [pc, #448]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	4a6f      	ldr	r2, [pc, #444]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f90:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001f94:	6013      	str	r3, [r2, #0]
 8001f96:	4b6d      	ldr	r3, [pc, #436]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	4a6c      	ldr	r2, [pc, #432]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001f9c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001fa0:	6013      	str	r3, [r2, #0]
 8001fa2:	e00b      	b.n	8001fbc <HAL_RCC_OscConfig+0xb0>
 8001fa4:	4b69      	ldr	r3, [pc, #420]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	4a68      	ldr	r2, [pc, #416]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001faa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001fae:	6013      	str	r3, [r2, #0]
 8001fb0:	4b66      	ldr	r3, [pc, #408]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	4a65      	ldr	r2, [pc, #404]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001fb6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001fba:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	685b      	ldr	r3, [r3, #4]
 8001fc0:	2b00      	cmp	r3, #0
 8001fc2:	d013      	beq.n	8001fec <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001fc4:	f7ff f8ba 	bl	800113c <HAL_GetTick>
 8001fc8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001fca:	e008      	b.n	8001fde <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001fcc:	f7ff f8b6 	bl	800113c <HAL_GetTick>
 8001fd0:	4602      	mov	r2, r0
 8001fd2:	693b      	ldr	r3, [r7, #16]
 8001fd4:	1ad3      	subs	r3, r2, r3
 8001fd6:	2b64      	cmp	r3, #100	; 0x64
 8001fd8:	d901      	bls.n	8001fde <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8001fda:	2303      	movs	r3, #3
 8001fdc:	e207      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001fde:	4b5b      	ldr	r3, [pc, #364]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fe6:	2b00      	cmp	r3, #0
 8001fe8:	d0f0      	beq.n	8001fcc <HAL_RCC_OscConfig+0xc0>
 8001fea:	e014      	b.n	8002016 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001fec:	f7ff f8a6 	bl	800113c <HAL_GetTick>
 8001ff0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001ff2:	e008      	b.n	8002006 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001ff4:	f7ff f8a2 	bl	800113c <HAL_GetTick>
 8001ff8:	4602      	mov	r2, r0
 8001ffa:	693b      	ldr	r3, [r7, #16]
 8001ffc:	1ad3      	subs	r3, r2, r3
 8001ffe:	2b64      	cmp	r3, #100	; 0x64
 8002000:	d901      	bls.n	8002006 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8002002:	2303      	movs	r3, #3
 8002004:	e1f3      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002006:	4b51      	ldr	r3, [pc, #324]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800200e:	2b00      	cmp	r3, #0
 8002010:	d1f0      	bne.n	8001ff4 <HAL_RCC_OscConfig+0xe8>
 8002012:	e000      	b.n	8002016 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002014:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002016:	687b      	ldr	r3, [r7, #4]
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	f003 0302 	and.w	r3, r3, #2
 800201e:	2b00      	cmp	r3, #0
 8002020:	d063      	beq.n	80020ea <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8002022:	4b4a      	ldr	r3, [pc, #296]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8002024:	689b      	ldr	r3, [r3, #8]
 8002026:	f003 030c 	and.w	r3, r3, #12
 800202a:	2b00      	cmp	r3, #0
 800202c:	d00b      	beq.n	8002046 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800202e:	4b47      	ldr	r3, [pc, #284]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8002030:	689b      	ldr	r3, [r3, #8]
 8002032:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8002036:	2b08      	cmp	r3, #8
 8002038:	d11c      	bne.n	8002074 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800203a:	4b44      	ldr	r3, [pc, #272]	; (800214c <HAL_RCC_OscConfig+0x240>)
 800203c:	685b      	ldr	r3, [r3, #4]
 800203e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002042:	2b00      	cmp	r3, #0
 8002044:	d116      	bne.n	8002074 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002046:	4b41      	ldr	r3, [pc, #260]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	f003 0302 	and.w	r3, r3, #2
 800204e:	2b00      	cmp	r3, #0
 8002050:	d005      	beq.n	800205e <HAL_RCC_OscConfig+0x152>
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	68db      	ldr	r3, [r3, #12]
 8002056:	2b01      	cmp	r3, #1
 8002058:	d001      	beq.n	800205e <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 800205a:	2301      	movs	r3, #1
 800205c:	e1c7      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800205e:	4b3b      	ldr	r3, [pc, #236]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8002060:	681b      	ldr	r3, [r3, #0]
 8002062:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	691b      	ldr	r3, [r3, #16]
 800206a:	00db      	lsls	r3, r3, #3
 800206c:	4937      	ldr	r1, [pc, #220]	; (800214c <HAL_RCC_OscConfig+0x240>)
 800206e:	4313      	orrs	r3, r2
 8002070:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002072:	e03a      	b.n	80020ea <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	68db      	ldr	r3, [r3, #12]
 8002078:	2b00      	cmp	r3, #0
 800207a:	d020      	beq.n	80020be <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800207c:	4b34      	ldr	r3, [pc, #208]	; (8002150 <HAL_RCC_OscConfig+0x244>)
 800207e:	2201      	movs	r2, #1
 8002080:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002082:	f7ff f85b 	bl	800113c <HAL_GetTick>
 8002086:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002088:	e008      	b.n	800209c <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800208a:	f7ff f857 	bl	800113c <HAL_GetTick>
 800208e:	4602      	mov	r2, r0
 8002090:	693b      	ldr	r3, [r7, #16]
 8002092:	1ad3      	subs	r3, r2, r3
 8002094:	2b02      	cmp	r3, #2
 8002096:	d901      	bls.n	800209c <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8002098:	2303      	movs	r3, #3
 800209a:	e1a8      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800209c:	4b2b      	ldr	r3, [pc, #172]	; (800214c <HAL_RCC_OscConfig+0x240>)
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	f003 0302 	and.w	r3, r3, #2
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d0f0      	beq.n	800208a <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80020a8:	4b28      	ldr	r3, [pc, #160]	; (800214c <HAL_RCC_OscConfig+0x240>)
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	691b      	ldr	r3, [r3, #16]
 80020b4:	00db      	lsls	r3, r3, #3
 80020b6:	4925      	ldr	r1, [pc, #148]	; (800214c <HAL_RCC_OscConfig+0x240>)
 80020b8:	4313      	orrs	r3, r2
 80020ba:	600b      	str	r3, [r1, #0]
 80020bc:	e015      	b.n	80020ea <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80020be:	4b24      	ldr	r3, [pc, #144]	; (8002150 <HAL_RCC_OscConfig+0x244>)
 80020c0:	2200      	movs	r2, #0
 80020c2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80020c4:	f7ff f83a 	bl	800113c <HAL_GetTick>
 80020c8:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80020ca:	e008      	b.n	80020de <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80020cc:	f7ff f836 	bl	800113c <HAL_GetTick>
 80020d0:	4602      	mov	r2, r0
 80020d2:	693b      	ldr	r3, [r7, #16]
 80020d4:	1ad3      	subs	r3, r2, r3
 80020d6:	2b02      	cmp	r3, #2
 80020d8:	d901      	bls.n	80020de <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 80020da:	2303      	movs	r3, #3
 80020dc:	e187      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80020de:	4b1b      	ldr	r3, [pc, #108]	; (800214c <HAL_RCC_OscConfig+0x240>)
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	f003 0302 	and.w	r3, r3, #2
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	d1f0      	bne.n	80020cc <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	f003 0308 	and.w	r3, r3, #8
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d036      	beq.n	8002164 <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	695b      	ldr	r3, [r3, #20]
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d016      	beq.n	800212c <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80020fe:	4b15      	ldr	r3, [pc, #84]	; (8002154 <HAL_RCC_OscConfig+0x248>)
 8002100:	2201      	movs	r2, #1
 8002102:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002104:	f7ff f81a 	bl	800113c <HAL_GetTick>
 8002108:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800210a:	e008      	b.n	800211e <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800210c:	f7ff f816 	bl	800113c <HAL_GetTick>
 8002110:	4602      	mov	r2, r0
 8002112:	693b      	ldr	r3, [r7, #16]
 8002114:	1ad3      	subs	r3, r2, r3
 8002116:	2b02      	cmp	r3, #2
 8002118:	d901      	bls.n	800211e <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 800211a:	2303      	movs	r3, #3
 800211c:	e167      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800211e:	4b0b      	ldr	r3, [pc, #44]	; (800214c <HAL_RCC_OscConfig+0x240>)
 8002120:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002122:	f003 0302 	and.w	r3, r3, #2
 8002126:	2b00      	cmp	r3, #0
 8002128:	d0f0      	beq.n	800210c <HAL_RCC_OscConfig+0x200>
 800212a:	e01b      	b.n	8002164 <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800212c:	4b09      	ldr	r3, [pc, #36]	; (8002154 <HAL_RCC_OscConfig+0x248>)
 800212e:	2200      	movs	r2, #0
 8002130:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002132:	f7ff f803 	bl	800113c <HAL_GetTick>
 8002136:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002138:	e00e      	b.n	8002158 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800213a:	f7fe ffff 	bl	800113c <HAL_GetTick>
 800213e:	4602      	mov	r2, r0
 8002140:	693b      	ldr	r3, [r7, #16]
 8002142:	1ad3      	subs	r3, r2, r3
 8002144:	2b02      	cmp	r3, #2
 8002146:	d907      	bls.n	8002158 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8002148:	2303      	movs	r3, #3
 800214a:	e150      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
 800214c:	40023800 	.word	0x40023800
 8002150:	42470000 	.word	0x42470000
 8002154:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002158:	4b88      	ldr	r3, [pc, #544]	; (800237c <HAL_RCC_OscConfig+0x470>)
 800215a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800215c:	f003 0302 	and.w	r3, r3, #2
 8002160:	2b00      	cmp	r3, #0
 8002162:	d1ea      	bne.n	800213a <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	681b      	ldr	r3, [r3, #0]
 8002168:	f003 0304 	and.w	r3, r3, #4
 800216c:	2b00      	cmp	r3, #0
 800216e:	f000 8097 	beq.w	80022a0 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 8002172:	2300      	movs	r3, #0
 8002174:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002176:	4b81      	ldr	r3, [pc, #516]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002178:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800217a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800217e:	2b00      	cmp	r3, #0
 8002180:	d10f      	bne.n	80021a2 <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8002182:	2300      	movs	r3, #0
 8002184:	60bb      	str	r3, [r7, #8]
 8002186:	4b7d      	ldr	r3, [pc, #500]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002188:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800218a:	4a7c      	ldr	r2, [pc, #496]	; (800237c <HAL_RCC_OscConfig+0x470>)
 800218c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002190:	6413      	str	r3, [r2, #64]	; 0x40
 8002192:	4b7a      	ldr	r3, [pc, #488]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002194:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002196:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800219a:	60bb      	str	r3, [r7, #8]
 800219c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800219e:	2301      	movs	r3, #1
 80021a0:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80021a2:	4b77      	ldr	r3, [pc, #476]	; (8002380 <HAL_RCC_OscConfig+0x474>)
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	d118      	bne.n	80021e0 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80021ae:	4b74      	ldr	r3, [pc, #464]	; (8002380 <HAL_RCC_OscConfig+0x474>)
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	4a73      	ldr	r2, [pc, #460]	; (8002380 <HAL_RCC_OscConfig+0x474>)
 80021b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021b8:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80021ba:	f7fe ffbf 	bl	800113c <HAL_GetTick>
 80021be:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80021c0:	e008      	b.n	80021d4 <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80021c2:	f7fe ffbb 	bl	800113c <HAL_GetTick>
 80021c6:	4602      	mov	r2, r0
 80021c8:	693b      	ldr	r3, [r7, #16]
 80021ca:	1ad3      	subs	r3, r2, r3
 80021cc:	2b02      	cmp	r3, #2
 80021ce:	d901      	bls.n	80021d4 <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 80021d0:	2303      	movs	r3, #3
 80021d2:	e10c      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80021d4:	4b6a      	ldr	r3, [pc, #424]	; (8002380 <HAL_RCC_OscConfig+0x474>)
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021dc:	2b00      	cmp	r3, #0
 80021de:	d0f0      	beq.n	80021c2 <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	689b      	ldr	r3, [r3, #8]
 80021e4:	2b01      	cmp	r3, #1
 80021e6:	d106      	bne.n	80021f6 <HAL_RCC_OscConfig+0x2ea>
 80021e8:	4b64      	ldr	r3, [pc, #400]	; (800237c <HAL_RCC_OscConfig+0x470>)
 80021ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021ec:	4a63      	ldr	r2, [pc, #396]	; (800237c <HAL_RCC_OscConfig+0x470>)
 80021ee:	f043 0301 	orr.w	r3, r3, #1
 80021f2:	6713      	str	r3, [r2, #112]	; 0x70
 80021f4:	e01c      	b.n	8002230 <HAL_RCC_OscConfig+0x324>
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	689b      	ldr	r3, [r3, #8]
 80021fa:	2b05      	cmp	r3, #5
 80021fc:	d10c      	bne.n	8002218 <HAL_RCC_OscConfig+0x30c>
 80021fe:	4b5f      	ldr	r3, [pc, #380]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002200:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002202:	4a5e      	ldr	r2, [pc, #376]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002204:	f043 0304 	orr.w	r3, r3, #4
 8002208:	6713      	str	r3, [r2, #112]	; 0x70
 800220a:	4b5c      	ldr	r3, [pc, #368]	; (800237c <HAL_RCC_OscConfig+0x470>)
 800220c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800220e:	4a5b      	ldr	r2, [pc, #364]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002210:	f043 0301 	orr.w	r3, r3, #1
 8002214:	6713      	str	r3, [r2, #112]	; 0x70
 8002216:	e00b      	b.n	8002230 <HAL_RCC_OscConfig+0x324>
 8002218:	4b58      	ldr	r3, [pc, #352]	; (800237c <HAL_RCC_OscConfig+0x470>)
 800221a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800221c:	4a57      	ldr	r2, [pc, #348]	; (800237c <HAL_RCC_OscConfig+0x470>)
 800221e:	f023 0301 	bic.w	r3, r3, #1
 8002222:	6713      	str	r3, [r2, #112]	; 0x70
 8002224:	4b55      	ldr	r3, [pc, #340]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002226:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002228:	4a54      	ldr	r2, [pc, #336]	; (800237c <HAL_RCC_OscConfig+0x470>)
 800222a:	f023 0304 	bic.w	r3, r3, #4
 800222e:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	689b      	ldr	r3, [r3, #8]
 8002234:	2b00      	cmp	r3, #0
 8002236:	d015      	beq.n	8002264 <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002238:	f7fe ff80 	bl	800113c <HAL_GetTick>
 800223c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800223e:	e00a      	b.n	8002256 <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002240:	f7fe ff7c 	bl	800113c <HAL_GetTick>
 8002244:	4602      	mov	r2, r0
 8002246:	693b      	ldr	r3, [r7, #16]
 8002248:	1ad3      	subs	r3, r2, r3
 800224a:	f241 3288 	movw	r2, #5000	; 0x1388
 800224e:	4293      	cmp	r3, r2
 8002250:	d901      	bls.n	8002256 <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8002252:	2303      	movs	r3, #3
 8002254:	e0cb      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002256:	4b49      	ldr	r3, [pc, #292]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002258:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800225a:	f003 0302 	and.w	r3, r3, #2
 800225e:	2b00      	cmp	r3, #0
 8002260:	d0ee      	beq.n	8002240 <HAL_RCC_OscConfig+0x334>
 8002262:	e014      	b.n	800228e <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002264:	f7fe ff6a 	bl	800113c <HAL_GetTick>
 8002268:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800226a:	e00a      	b.n	8002282 <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800226c:	f7fe ff66 	bl	800113c <HAL_GetTick>
 8002270:	4602      	mov	r2, r0
 8002272:	693b      	ldr	r3, [r7, #16]
 8002274:	1ad3      	subs	r3, r2, r3
 8002276:	f241 3288 	movw	r2, #5000	; 0x1388
 800227a:	4293      	cmp	r3, r2
 800227c:	d901      	bls.n	8002282 <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 800227e:	2303      	movs	r3, #3
 8002280:	e0b5      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002282:	4b3e      	ldr	r3, [pc, #248]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002284:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002286:	f003 0302 	and.w	r3, r3, #2
 800228a:	2b00      	cmp	r3, #0
 800228c:	d1ee      	bne.n	800226c <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800228e:	7dfb      	ldrb	r3, [r7, #23]
 8002290:	2b01      	cmp	r3, #1
 8002292:	d105      	bne.n	80022a0 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8002294:	4b39      	ldr	r3, [pc, #228]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002296:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002298:	4a38      	ldr	r2, [pc, #224]	; (800237c <HAL_RCC_OscConfig+0x470>)
 800229a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800229e:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	699b      	ldr	r3, [r3, #24]
 80022a4:	2b00      	cmp	r3, #0
 80022a6:	f000 80a1 	beq.w	80023ec <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80022aa:	4b34      	ldr	r3, [pc, #208]	; (800237c <HAL_RCC_OscConfig+0x470>)
 80022ac:	689b      	ldr	r3, [r3, #8]
 80022ae:	f003 030c 	and.w	r3, r3, #12
 80022b2:	2b08      	cmp	r3, #8
 80022b4:	d05c      	beq.n	8002370 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	699b      	ldr	r3, [r3, #24]
 80022ba:	2b02      	cmp	r3, #2
 80022bc:	d141      	bne.n	8002342 <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80022be:	4b31      	ldr	r3, [pc, #196]	; (8002384 <HAL_RCC_OscConfig+0x478>)
 80022c0:	2200      	movs	r2, #0
 80022c2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80022c4:	f7fe ff3a 	bl	800113c <HAL_GetTick>
 80022c8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80022ca:	e008      	b.n	80022de <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80022cc:	f7fe ff36 	bl	800113c <HAL_GetTick>
 80022d0:	4602      	mov	r2, r0
 80022d2:	693b      	ldr	r3, [r7, #16]
 80022d4:	1ad3      	subs	r3, r2, r3
 80022d6:	2b02      	cmp	r3, #2
 80022d8:	d901      	bls.n	80022de <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 80022da:	2303      	movs	r3, #3
 80022dc:	e087      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80022de:	4b27      	ldr	r3, [pc, #156]	; (800237c <HAL_RCC_OscConfig+0x470>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d1f0      	bne.n	80022cc <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	69da      	ldr	r2, [r3, #28]
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	6a1b      	ldr	r3, [r3, #32]
 80022f2:	431a      	orrs	r2, r3
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022f8:	019b      	lsls	r3, r3, #6
 80022fa:	431a      	orrs	r2, r3
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002300:	085b      	lsrs	r3, r3, #1
 8002302:	3b01      	subs	r3, #1
 8002304:	041b      	lsls	r3, r3, #16
 8002306:	431a      	orrs	r2, r3
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800230c:	061b      	lsls	r3, r3, #24
 800230e:	491b      	ldr	r1, [pc, #108]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002310:	4313      	orrs	r3, r2
 8002312:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8002314:	4b1b      	ldr	r3, [pc, #108]	; (8002384 <HAL_RCC_OscConfig+0x478>)
 8002316:	2201      	movs	r2, #1
 8002318:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800231a:	f7fe ff0f 	bl	800113c <HAL_GetTick>
 800231e:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002320:	e008      	b.n	8002334 <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002322:	f7fe ff0b 	bl	800113c <HAL_GetTick>
 8002326:	4602      	mov	r2, r0
 8002328:	693b      	ldr	r3, [r7, #16]
 800232a:	1ad3      	subs	r3, r2, r3
 800232c:	2b02      	cmp	r3, #2
 800232e:	d901      	bls.n	8002334 <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8002330:	2303      	movs	r3, #3
 8002332:	e05c      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002334:	4b11      	ldr	r3, [pc, #68]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800233c:	2b00      	cmp	r3, #0
 800233e:	d0f0      	beq.n	8002322 <HAL_RCC_OscConfig+0x416>
 8002340:	e054      	b.n	80023ec <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002342:	4b10      	ldr	r3, [pc, #64]	; (8002384 <HAL_RCC_OscConfig+0x478>)
 8002344:	2200      	movs	r2, #0
 8002346:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002348:	f7fe fef8 	bl	800113c <HAL_GetTick>
 800234c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800234e:	e008      	b.n	8002362 <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002350:	f7fe fef4 	bl	800113c <HAL_GetTick>
 8002354:	4602      	mov	r2, r0
 8002356:	693b      	ldr	r3, [r7, #16]
 8002358:	1ad3      	subs	r3, r2, r3
 800235a:	2b02      	cmp	r3, #2
 800235c:	d901      	bls.n	8002362 <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 800235e:	2303      	movs	r3, #3
 8002360:	e045      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002362:	4b06      	ldr	r3, [pc, #24]	; (800237c <HAL_RCC_OscConfig+0x470>)
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800236a:	2b00      	cmp	r3, #0
 800236c:	d1f0      	bne.n	8002350 <HAL_RCC_OscConfig+0x444>
 800236e:	e03d      	b.n	80023ec <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	699b      	ldr	r3, [r3, #24]
 8002374:	2b01      	cmp	r3, #1
 8002376:	d107      	bne.n	8002388 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8002378:	2301      	movs	r3, #1
 800237a:	e038      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
 800237c:	40023800 	.word	0x40023800
 8002380:	40007000 	.word	0x40007000
 8002384:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8002388:	4b1b      	ldr	r3, [pc, #108]	; (80023f8 <HAL_RCC_OscConfig+0x4ec>)
 800238a:	685b      	ldr	r3, [r3, #4]
 800238c:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	699b      	ldr	r3, [r3, #24]
 8002392:	2b01      	cmp	r3, #1
 8002394:	d028      	beq.n	80023e8 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002396:	68fb      	ldr	r3, [r7, #12]
 8002398:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80023a0:	429a      	cmp	r2, r3
 80023a2:	d121      	bne.n	80023e8 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80023ae:	429a      	cmp	r2, r3
 80023b0:	d11a      	bne.n	80023e8 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80023b2:	68fa      	ldr	r2, [r7, #12]
 80023b4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80023b8:	4013      	ands	r3, r2
 80023ba:	687a      	ldr	r2, [r7, #4]
 80023bc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80023be:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80023c0:	4293      	cmp	r3, r2
 80023c2:	d111      	bne.n	80023e8 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80023c4:	68fb      	ldr	r3, [r7, #12]
 80023c6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80023ce:	085b      	lsrs	r3, r3, #1
 80023d0:	3b01      	subs	r3, #1
 80023d2:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80023d4:	429a      	cmp	r2, r3
 80023d6:	d107      	bne.n	80023e8 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80023d8:	68fb      	ldr	r3, [r7, #12]
 80023da:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80023e2:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80023e4:	429a      	cmp	r2, r3
 80023e6:	d001      	beq.n	80023ec <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 80023e8:	2301      	movs	r3, #1
 80023ea:	e000      	b.n	80023ee <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 80023ec:	2300      	movs	r3, #0
}
 80023ee:	4618      	mov	r0, r3
 80023f0:	3718      	adds	r7, #24
 80023f2:	46bd      	mov	sp, r7
 80023f4:	bd80      	pop	{r7, pc}
 80023f6:	bf00      	nop
 80023f8:	40023800 	.word	0x40023800

080023fc <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80023fc:	b580      	push	{r7, lr}
 80023fe:	b084      	sub	sp, #16
 8002400:	af00      	add	r7, sp, #0
 8002402:	6078      	str	r0, [r7, #4]
 8002404:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	2b00      	cmp	r3, #0
 800240a:	d101      	bne.n	8002410 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800240c:	2301      	movs	r3, #1
 800240e:	e0cc      	b.n	80025aa <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002410:	4b68      	ldr	r3, [pc, #416]	; (80025b4 <HAL_RCC_ClockConfig+0x1b8>)
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	f003 0307 	and.w	r3, r3, #7
 8002418:	683a      	ldr	r2, [r7, #0]
 800241a:	429a      	cmp	r2, r3
 800241c:	d90c      	bls.n	8002438 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800241e:	4b65      	ldr	r3, [pc, #404]	; (80025b4 <HAL_RCC_ClockConfig+0x1b8>)
 8002420:	683a      	ldr	r2, [r7, #0]
 8002422:	b2d2      	uxtb	r2, r2
 8002424:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002426:	4b63      	ldr	r3, [pc, #396]	; (80025b4 <HAL_RCC_ClockConfig+0x1b8>)
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	f003 0307 	and.w	r3, r3, #7
 800242e:	683a      	ldr	r2, [r7, #0]
 8002430:	429a      	cmp	r2, r3
 8002432:	d001      	beq.n	8002438 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8002434:	2301      	movs	r3, #1
 8002436:	e0b8      	b.n	80025aa <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f003 0302 	and.w	r3, r3, #2
 8002440:	2b00      	cmp	r3, #0
 8002442:	d020      	beq.n	8002486 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	f003 0304 	and.w	r3, r3, #4
 800244c:	2b00      	cmp	r3, #0
 800244e:	d005      	beq.n	800245c <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8002450:	4b59      	ldr	r3, [pc, #356]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 8002452:	689b      	ldr	r3, [r3, #8]
 8002454:	4a58      	ldr	r2, [pc, #352]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 8002456:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800245a:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	f003 0308 	and.w	r3, r3, #8
 8002464:	2b00      	cmp	r3, #0
 8002466:	d005      	beq.n	8002474 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8002468:	4b53      	ldr	r3, [pc, #332]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 800246a:	689b      	ldr	r3, [r3, #8]
 800246c:	4a52      	ldr	r2, [pc, #328]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 800246e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002472:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002474:	4b50      	ldr	r3, [pc, #320]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 8002476:	689b      	ldr	r3, [r3, #8]
 8002478:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	689b      	ldr	r3, [r3, #8]
 8002480:	494d      	ldr	r1, [pc, #308]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 8002482:	4313      	orrs	r3, r2
 8002484:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	681b      	ldr	r3, [r3, #0]
 800248a:	f003 0301 	and.w	r3, r3, #1
 800248e:	2b00      	cmp	r3, #0
 8002490:	d044      	beq.n	800251c <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	685b      	ldr	r3, [r3, #4]
 8002496:	2b01      	cmp	r3, #1
 8002498:	d107      	bne.n	80024aa <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800249a:	4b47      	ldr	r3, [pc, #284]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d119      	bne.n	80024da <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80024a6:	2301      	movs	r3, #1
 80024a8:	e07f      	b.n	80025aa <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	685b      	ldr	r3, [r3, #4]
 80024ae:	2b02      	cmp	r3, #2
 80024b0:	d003      	beq.n	80024ba <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80024b6:	2b03      	cmp	r3, #3
 80024b8:	d107      	bne.n	80024ca <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80024ba:	4b3f      	ldr	r3, [pc, #252]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80024c2:	2b00      	cmp	r3, #0
 80024c4:	d109      	bne.n	80024da <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80024c6:	2301      	movs	r3, #1
 80024c8:	e06f      	b.n	80025aa <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80024ca:	4b3b      	ldr	r3, [pc, #236]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	f003 0302 	and.w	r3, r3, #2
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d101      	bne.n	80024da <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80024d6:	2301      	movs	r3, #1
 80024d8:	e067      	b.n	80025aa <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80024da:	4b37      	ldr	r3, [pc, #220]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 80024dc:	689b      	ldr	r3, [r3, #8]
 80024de:	f023 0203 	bic.w	r2, r3, #3
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	685b      	ldr	r3, [r3, #4]
 80024e6:	4934      	ldr	r1, [pc, #208]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 80024e8:	4313      	orrs	r3, r2
 80024ea:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80024ec:	f7fe fe26 	bl	800113c <HAL_GetTick>
 80024f0:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80024f2:	e00a      	b.n	800250a <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80024f4:	f7fe fe22 	bl	800113c <HAL_GetTick>
 80024f8:	4602      	mov	r2, r0
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	1ad3      	subs	r3, r2, r3
 80024fe:	f241 3288 	movw	r2, #5000	; 0x1388
 8002502:	4293      	cmp	r3, r2
 8002504:	d901      	bls.n	800250a <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8002506:	2303      	movs	r3, #3
 8002508:	e04f      	b.n	80025aa <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800250a:	4b2b      	ldr	r3, [pc, #172]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 800250c:	689b      	ldr	r3, [r3, #8]
 800250e:	f003 020c 	and.w	r2, r3, #12
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	685b      	ldr	r3, [r3, #4]
 8002516:	009b      	lsls	r3, r3, #2
 8002518:	429a      	cmp	r2, r3
 800251a:	d1eb      	bne.n	80024f4 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800251c:	4b25      	ldr	r3, [pc, #148]	; (80025b4 <HAL_RCC_ClockConfig+0x1b8>)
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	f003 0307 	and.w	r3, r3, #7
 8002524:	683a      	ldr	r2, [r7, #0]
 8002526:	429a      	cmp	r2, r3
 8002528:	d20c      	bcs.n	8002544 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800252a:	4b22      	ldr	r3, [pc, #136]	; (80025b4 <HAL_RCC_ClockConfig+0x1b8>)
 800252c:	683a      	ldr	r2, [r7, #0]
 800252e:	b2d2      	uxtb	r2, r2
 8002530:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002532:	4b20      	ldr	r3, [pc, #128]	; (80025b4 <HAL_RCC_ClockConfig+0x1b8>)
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	f003 0307 	and.w	r3, r3, #7
 800253a:	683a      	ldr	r2, [r7, #0]
 800253c:	429a      	cmp	r2, r3
 800253e:	d001      	beq.n	8002544 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8002540:	2301      	movs	r3, #1
 8002542:	e032      	b.n	80025aa <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	f003 0304 	and.w	r3, r3, #4
 800254c:	2b00      	cmp	r3, #0
 800254e:	d008      	beq.n	8002562 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002550:	4b19      	ldr	r3, [pc, #100]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 8002552:	689b      	ldr	r3, [r3, #8]
 8002554:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	68db      	ldr	r3, [r3, #12]
 800255c:	4916      	ldr	r1, [pc, #88]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 800255e:	4313      	orrs	r3, r2
 8002560:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	f003 0308 	and.w	r3, r3, #8
 800256a:	2b00      	cmp	r3, #0
 800256c:	d009      	beq.n	8002582 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800256e:	4b12      	ldr	r3, [pc, #72]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 8002570:	689b      	ldr	r3, [r3, #8]
 8002572:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	691b      	ldr	r3, [r3, #16]
 800257a:	00db      	lsls	r3, r3, #3
 800257c:	490e      	ldr	r1, [pc, #56]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 800257e:	4313      	orrs	r3, r2
 8002580:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002582:	f000 f821 	bl	80025c8 <HAL_RCC_GetSysClockFreq>
 8002586:	4602      	mov	r2, r0
 8002588:	4b0b      	ldr	r3, [pc, #44]	; (80025b8 <HAL_RCC_ClockConfig+0x1bc>)
 800258a:	689b      	ldr	r3, [r3, #8]
 800258c:	091b      	lsrs	r3, r3, #4
 800258e:	f003 030f 	and.w	r3, r3, #15
 8002592:	490a      	ldr	r1, [pc, #40]	; (80025bc <HAL_RCC_ClockConfig+0x1c0>)
 8002594:	5ccb      	ldrb	r3, [r1, r3]
 8002596:	fa22 f303 	lsr.w	r3, r2, r3
 800259a:	4a09      	ldr	r2, [pc, #36]	; (80025c0 <HAL_RCC_ClockConfig+0x1c4>)
 800259c:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 800259e:	4b09      	ldr	r3, [pc, #36]	; (80025c4 <HAL_RCC_ClockConfig+0x1c8>)
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	4618      	mov	r0, r3
 80025a4:	f7fe fd86 	bl	80010b4 <HAL_InitTick>

  return HAL_OK;
 80025a8:	2300      	movs	r3, #0
}
 80025aa:	4618      	mov	r0, r3
 80025ac:	3710      	adds	r7, #16
 80025ae:	46bd      	mov	sp, r7
 80025b0:	bd80      	pop	{r7, pc}
 80025b2:	bf00      	nop
 80025b4:	40023c00 	.word	0x40023c00
 80025b8:	40023800 	.word	0x40023800
 80025bc:	080102d8 	.word	0x080102d8
 80025c0:	20000000 	.word	0x20000000
 80025c4:	20000004 	.word	0x20000004

080025c8 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80025c8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80025cc:	b090      	sub	sp, #64	; 0x40
 80025ce:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 80025d0:	2300      	movs	r3, #0
 80025d2:	637b      	str	r3, [r7, #52]	; 0x34
 80025d4:	2300      	movs	r3, #0
 80025d6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80025d8:	2300      	movs	r3, #0
 80025da:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t sysclockfreq = 0U;
 80025dc:	2300      	movs	r3, #0
 80025de:	63bb      	str	r3, [r7, #56]	; 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80025e0:	4b59      	ldr	r3, [pc, #356]	; (8002748 <HAL_RCC_GetSysClockFreq+0x180>)
 80025e2:	689b      	ldr	r3, [r3, #8]
 80025e4:	f003 030c 	and.w	r3, r3, #12
 80025e8:	2b08      	cmp	r3, #8
 80025ea:	d00d      	beq.n	8002608 <HAL_RCC_GetSysClockFreq+0x40>
 80025ec:	2b08      	cmp	r3, #8
 80025ee:	f200 80a1 	bhi.w	8002734 <HAL_RCC_GetSysClockFreq+0x16c>
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d002      	beq.n	80025fc <HAL_RCC_GetSysClockFreq+0x34>
 80025f6:	2b04      	cmp	r3, #4
 80025f8:	d003      	beq.n	8002602 <HAL_RCC_GetSysClockFreq+0x3a>
 80025fa:	e09b      	b.n	8002734 <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80025fc:	4b53      	ldr	r3, [pc, #332]	; (800274c <HAL_RCC_GetSysClockFreq+0x184>)
 80025fe:	63bb      	str	r3, [r7, #56]	; 0x38
       break;
 8002600:	e09b      	b.n	800273a <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8002602:	4b53      	ldr	r3, [pc, #332]	; (8002750 <HAL_RCC_GetSysClockFreq+0x188>)
 8002604:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8002606:	e098      	b.n	800273a <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002608:	4b4f      	ldr	r3, [pc, #316]	; (8002748 <HAL_RCC_GetSysClockFreq+0x180>)
 800260a:	685b      	ldr	r3, [r3, #4]
 800260c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002610:	637b      	str	r3, [r7, #52]	; 0x34
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002612:	4b4d      	ldr	r3, [pc, #308]	; (8002748 <HAL_RCC_GetSysClockFreq+0x180>)
 8002614:	685b      	ldr	r3, [r3, #4]
 8002616:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800261a:	2b00      	cmp	r3, #0
 800261c:	d028      	beq.n	8002670 <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800261e:	4b4a      	ldr	r3, [pc, #296]	; (8002748 <HAL_RCC_GetSysClockFreq+0x180>)
 8002620:	685b      	ldr	r3, [r3, #4]
 8002622:	099b      	lsrs	r3, r3, #6
 8002624:	2200      	movs	r2, #0
 8002626:	623b      	str	r3, [r7, #32]
 8002628:	627a      	str	r2, [r7, #36]	; 0x24
 800262a:	6a3b      	ldr	r3, [r7, #32]
 800262c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8002630:	2100      	movs	r1, #0
 8002632:	4b47      	ldr	r3, [pc, #284]	; (8002750 <HAL_RCC_GetSysClockFreq+0x188>)
 8002634:	fb03 f201 	mul.w	r2, r3, r1
 8002638:	2300      	movs	r3, #0
 800263a:	fb00 f303 	mul.w	r3, r0, r3
 800263e:	4413      	add	r3, r2
 8002640:	4a43      	ldr	r2, [pc, #268]	; (8002750 <HAL_RCC_GetSysClockFreq+0x188>)
 8002642:	fba0 1202 	umull	r1, r2, r0, r2
 8002646:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002648:	460a      	mov	r2, r1
 800264a:	62ba      	str	r2, [r7, #40]	; 0x28
 800264c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800264e:	4413      	add	r3, r2
 8002650:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002652:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002654:	2200      	movs	r2, #0
 8002656:	61bb      	str	r3, [r7, #24]
 8002658:	61fa      	str	r2, [r7, #28]
 800265a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800265e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002662:	f7fd fdb9 	bl	80001d8 <__aeabi_uldivmod>
 8002666:	4602      	mov	r2, r0
 8002668:	460b      	mov	r3, r1
 800266a:	4613      	mov	r3, r2
 800266c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800266e:	e053      	b.n	8002718 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002670:	4b35      	ldr	r3, [pc, #212]	; (8002748 <HAL_RCC_GetSysClockFreq+0x180>)
 8002672:	685b      	ldr	r3, [r3, #4]
 8002674:	099b      	lsrs	r3, r3, #6
 8002676:	2200      	movs	r2, #0
 8002678:	613b      	str	r3, [r7, #16]
 800267a:	617a      	str	r2, [r7, #20]
 800267c:	693b      	ldr	r3, [r7, #16]
 800267e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8002682:	f04f 0b00 	mov.w	fp, #0
 8002686:	4652      	mov	r2, sl
 8002688:	465b      	mov	r3, fp
 800268a:	f04f 0000 	mov.w	r0, #0
 800268e:	f04f 0100 	mov.w	r1, #0
 8002692:	0159      	lsls	r1, r3, #5
 8002694:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002698:	0150      	lsls	r0, r2, #5
 800269a:	4602      	mov	r2, r0
 800269c:	460b      	mov	r3, r1
 800269e:	ebb2 080a 	subs.w	r8, r2, sl
 80026a2:	eb63 090b 	sbc.w	r9, r3, fp
 80026a6:	f04f 0200 	mov.w	r2, #0
 80026aa:	f04f 0300 	mov.w	r3, #0
 80026ae:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80026b2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80026b6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80026ba:	ebb2 0408 	subs.w	r4, r2, r8
 80026be:	eb63 0509 	sbc.w	r5, r3, r9
 80026c2:	f04f 0200 	mov.w	r2, #0
 80026c6:	f04f 0300 	mov.w	r3, #0
 80026ca:	00eb      	lsls	r3, r5, #3
 80026cc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80026d0:	00e2      	lsls	r2, r4, #3
 80026d2:	4614      	mov	r4, r2
 80026d4:	461d      	mov	r5, r3
 80026d6:	eb14 030a 	adds.w	r3, r4, sl
 80026da:	603b      	str	r3, [r7, #0]
 80026dc:	eb45 030b 	adc.w	r3, r5, fp
 80026e0:	607b      	str	r3, [r7, #4]
 80026e2:	f04f 0200 	mov.w	r2, #0
 80026e6:	f04f 0300 	mov.w	r3, #0
 80026ea:	e9d7 4500 	ldrd	r4, r5, [r7]
 80026ee:	4629      	mov	r1, r5
 80026f0:	028b      	lsls	r3, r1, #10
 80026f2:	4621      	mov	r1, r4
 80026f4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80026f8:	4621      	mov	r1, r4
 80026fa:	028a      	lsls	r2, r1, #10
 80026fc:	4610      	mov	r0, r2
 80026fe:	4619      	mov	r1, r3
 8002700:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002702:	2200      	movs	r2, #0
 8002704:	60bb      	str	r3, [r7, #8]
 8002706:	60fa      	str	r2, [r7, #12]
 8002708:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800270c:	f7fd fd64 	bl	80001d8 <__aeabi_uldivmod>
 8002710:	4602      	mov	r2, r0
 8002712:	460b      	mov	r3, r1
 8002714:	4613      	mov	r3, r2
 8002716:	63fb      	str	r3, [r7, #60]	; 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8002718:	4b0b      	ldr	r3, [pc, #44]	; (8002748 <HAL_RCC_GetSysClockFreq+0x180>)
 800271a:	685b      	ldr	r3, [r3, #4]
 800271c:	0c1b      	lsrs	r3, r3, #16
 800271e:	f003 0303 	and.w	r3, r3, #3
 8002722:	3301      	adds	r3, #1
 8002724:	005b      	lsls	r3, r3, #1
 8002726:	633b      	str	r3, [r7, #48]	; 0x30

      sysclockfreq = pllvco/pllp;
 8002728:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800272a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800272c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002730:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8002732:	e002      	b.n	800273a <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8002734:	4b05      	ldr	r3, [pc, #20]	; (800274c <HAL_RCC_GetSysClockFreq+0x184>)
 8002736:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8002738:	bf00      	nop
    }
  }
  return sysclockfreq;
 800273a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
}
 800273c:	4618      	mov	r0, r3
 800273e:	3740      	adds	r7, #64	; 0x40
 8002740:	46bd      	mov	sp, r7
 8002742:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002746:	bf00      	nop
 8002748:	40023800 	.word	0x40023800
 800274c:	00f42400 	.word	0x00f42400
 8002750:	017d7840 	.word	0x017d7840

08002754 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8002754:	b580      	push	{r7, lr}
 8002756:	b082      	sub	sp, #8
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	2b00      	cmp	r3, #0
 8002760:	d101      	bne.n	8002766 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8002762:	2301      	movs	r3, #1
 8002764:	e07b      	b.n	800285e <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800276a:	2b00      	cmp	r3, #0
 800276c:	d108      	bne.n	8002780 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	685b      	ldr	r3, [r3, #4]
 8002772:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002776:	d009      	beq.n	800278c <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	2200      	movs	r2, #0
 800277c:	61da      	str	r2, [r3, #28]
 800277e:	e005      	b.n	800278c <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	2200      	movs	r2, #0
 8002784:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	2200      	movs	r2, #0
 800278a:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	2200      	movs	r2, #0
 8002790:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002798:	b2db      	uxtb	r3, r3
 800279a:	2b00      	cmp	r3, #0
 800279c:	d106      	bne.n	80027ac <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	2200      	movs	r2, #0
 80027a2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80027a6:	6878      	ldr	r0, [r7, #4]
 80027a8:	f7fe fbb4 	bl	8000f14 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	2202      	movs	r2, #2
 80027b0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	681a      	ldr	r2, [r3, #0]
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80027c2:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	685b      	ldr	r3, [r3, #4]
 80027c8:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	689b      	ldr	r3, [r3, #8]
 80027d0:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80027d4:	431a      	orrs	r2, r3
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	68db      	ldr	r3, [r3, #12]
 80027da:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80027de:	431a      	orrs	r2, r3
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	691b      	ldr	r3, [r3, #16]
 80027e4:	f003 0302 	and.w	r3, r3, #2
 80027e8:	431a      	orrs	r2, r3
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	695b      	ldr	r3, [r3, #20]
 80027ee:	f003 0301 	and.w	r3, r3, #1
 80027f2:	431a      	orrs	r2, r3
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	699b      	ldr	r3, [r3, #24]
 80027f8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80027fc:	431a      	orrs	r2, r3
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	69db      	ldr	r3, [r3, #28]
 8002802:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8002806:	431a      	orrs	r2, r3
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	6a1b      	ldr	r3, [r3, #32]
 800280c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002810:	ea42 0103 	orr.w	r1, r2, r3
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002818:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	430a      	orrs	r2, r1
 8002822:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	699b      	ldr	r3, [r3, #24]
 8002828:	0c1b      	lsrs	r3, r3, #16
 800282a:	f003 0104 	and.w	r1, r3, #4
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002832:	f003 0210 	and.w	r2, r3, #16
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	430a      	orrs	r2, r1
 800283c:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	69da      	ldr	r2, [r3, #28]
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800284c:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	2200      	movs	r2, #0
 8002852:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	2201      	movs	r2, #1
 8002858:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 800285c:	2300      	movs	r3, #0
}
 800285e:	4618      	mov	r0, r3
 8002860:	3708      	adds	r7, #8
 8002862:	46bd      	mov	sp, r7
 8002864:	bd80      	pop	{r7, pc}

08002866 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8002866:	b580      	push	{r7, lr}
 8002868:	b088      	sub	sp, #32
 800286a:	af00      	add	r7, sp, #0
 800286c:	60f8      	str	r0, [r7, #12]
 800286e:	60b9      	str	r1, [r7, #8]
 8002870:	603b      	str	r3, [r7, #0]
 8002872:	4613      	mov	r3, r2
 8002874:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8002876:	2300      	movs	r3, #0
 8002878:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 800287a:	68fb      	ldr	r3, [r7, #12]
 800287c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8002880:	2b01      	cmp	r3, #1
 8002882:	d101      	bne.n	8002888 <HAL_SPI_Transmit+0x22>
 8002884:	2302      	movs	r3, #2
 8002886:	e126      	b.n	8002ad6 <HAL_SPI_Transmit+0x270>
 8002888:	68fb      	ldr	r3, [r7, #12]
 800288a:	2201      	movs	r2, #1
 800288c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8002890:	f7fe fc54 	bl	800113c <HAL_GetTick>
 8002894:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8002896:	88fb      	ldrh	r3, [r7, #6]
 8002898:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 800289a:	68fb      	ldr	r3, [r7, #12]
 800289c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80028a0:	b2db      	uxtb	r3, r3
 80028a2:	2b01      	cmp	r3, #1
 80028a4:	d002      	beq.n	80028ac <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 80028a6:	2302      	movs	r3, #2
 80028a8:	77fb      	strb	r3, [r7, #31]
    goto error;
 80028aa:	e10b      	b.n	8002ac4 <HAL_SPI_Transmit+0x25e>
  }

  if ((pData == NULL) || (Size == 0U))
 80028ac:	68bb      	ldr	r3, [r7, #8]
 80028ae:	2b00      	cmp	r3, #0
 80028b0:	d002      	beq.n	80028b8 <HAL_SPI_Transmit+0x52>
 80028b2:	88fb      	ldrh	r3, [r7, #6]
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	d102      	bne.n	80028be <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80028b8:	2301      	movs	r3, #1
 80028ba:	77fb      	strb	r3, [r7, #31]
    goto error;
 80028bc:	e102      	b.n	8002ac4 <HAL_SPI_Transmit+0x25e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80028be:	68fb      	ldr	r3, [r7, #12]
 80028c0:	2203      	movs	r2, #3
 80028c2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80028c6:	68fb      	ldr	r3, [r7, #12]
 80028c8:	2200      	movs	r2, #0
 80028ca:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80028cc:	68fb      	ldr	r3, [r7, #12]
 80028ce:	68ba      	ldr	r2, [r7, #8]
 80028d0:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	88fa      	ldrh	r2, [r7, #6]
 80028d6:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80028d8:	68fb      	ldr	r3, [r7, #12]
 80028da:	88fa      	ldrh	r2, [r7, #6]
 80028dc:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80028de:	68fb      	ldr	r3, [r7, #12]
 80028e0:	2200      	movs	r2, #0
 80028e2:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80028e4:	68fb      	ldr	r3, [r7, #12]
 80028e6:	2200      	movs	r2, #0
 80028e8:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80028ea:	68fb      	ldr	r3, [r7, #12]
 80028ec:	2200      	movs	r2, #0
 80028ee:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 80028f0:	68fb      	ldr	r3, [r7, #12]
 80028f2:	2200      	movs	r2, #0
 80028f4:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 80028f6:	68fb      	ldr	r3, [r7, #12]
 80028f8:	2200      	movs	r2, #0
 80028fa:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80028fc:	68fb      	ldr	r3, [r7, #12]
 80028fe:	689b      	ldr	r3, [r3, #8]
 8002900:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002904:	d10f      	bne.n	8002926 <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8002906:	68fb      	ldr	r3, [r7, #12]
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	681a      	ldr	r2, [r3, #0]
 800290c:	68fb      	ldr	r3, [r7, #12]
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002914:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8002916:	68fb      	ldr	r3, [r7, #12]
 8002918:	681b      	ldr	r3, [r3, #0]
 800291a:	681a      	ldr	r2, [r3, #0]
 800291c:	68fb      	ldr	r3, [r7, #12]
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002924:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8002926:	68fb      	ldr	r3, [r7, #12]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002930:	2b40      	cmp	r3, #64	; 0x40
 8002932:	d007      	beq.n	8002944 <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8002934:	68fb      	ldr	r3, [r7, #12]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	681a      	ldr	r2, [r3, #0]
 800293a:	68fb      	ldr	r3, [r7, #12]
 800293c:	681b      	ldr	r3, [r3, #0]
 800293e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002942:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8002944:	68fb      	ldr	r3, [r7, #12]
 8002946:	68db      	ldr	r3, [r3, #12]
 8002948:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800294c:	d14b      	bne.n	80029e6 <HAL_SPI_Transmit+0x180>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800294e:	68fb      	ldr	r3, [r7, #12]
 8002950:	685b      	ldr	r3, [r3, #4]
 8002952:	2b00      	cmp	r3, #0
 8002954:	d002      	beq.n	800295c <HAL_SPI_Transmit+0xf6>
 8002956:	8afb      	ldrh	r3, [r7, #22]
 8002958:	2b01      	cmp	r3, #1
 800295a:	d13e      	bne.n	80029da <HAL_SPI_Transmit+0x174>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800295c:	68fb      	ldr	r3, [r7, #12]
 800295e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002960:	881a      	ldrh	r2, [r3, #0]
 8002962:	68fb      	ldr	r3, [r7, #12]
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8002968:	68fb      	ldr	r3, [r7, #12]
 800296a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800296c:	1c9a      	adds	r2, r3, #2
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8002972:	68fb      	ldr	r3, [r7, #12]
 8002974:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002976:	b29b      	uxth	r3, r3
 8002978:	3b01      	subs	r3, #1
 800297a:	b29a      	uxth	r2, r3
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8002980:	e02b      	b.n	80029da <HAL_SPI_Transmit+0x174>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	689b      	ldr	r3, [r3, #8]
 8002988:	f003 0302 	and.w	r3, r3, #2
 800298c:	2b02      	cmp	r3, #2
 800298e:	d112      	bne.n	80029b6 <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8002990:	68fb      	ldr	r3, [r7, #12]
 8002992:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002994:	881a      	ldrh	r2, [r3, #0]
 8002996:	68fb      	ldr	r3, [r7, #12]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800299c:	68fb      	ldr	r3, [r7, #12]
 800299e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a0:	1c9a      	adds	r2, r3, #2
 80029a2:	68fb      	ldr	r3, [r7, #12]
 80029a4:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80029a6:	68fb      	ldr	r3, [r7, #12]
 80029a8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80029aa:	b29b      	uxth	r3, r3
 80029ac:	3b01      	subs	r3, #1
 80029ae:	b29a      	uxth	r2, r3
 80029b0:	68fb      	ldr	r3, [r7, #12]
 80029b2:	86da      	strh	r2, [r3, #54]	; 0x36
 80029b4:	e011      	b.n	80029da <HAL_SPI_Transmit+0x174>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80029b6:	f7fe fbc1 	bl	800113c <HAL_GetTick>
 80029ba:	4602      	mov	r2, r0
 80029bc:	69bb      	ldr	r3, [r7, #24]
 80029be:	1ad3      	subs	r3, r2, r3
 80029c0:	683a      	ldr	r2, [r7, #0]
 80029c2:	429a      	cmp	r2, r3
 80029c4:	d803      	bhi.n	80029ce <HAL_SPI_Transmit+0x168>
 80029c6:	683b      	ldr	r3, [r7, #0]
 80029c8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80029cc:	d102      	bne.n	80029d4 <HAL_SPI_Transmit+0x16e>
 80029ce:	683b      	ldr	r3, [r7, #0]
 80029d0:	2b00      	cmp	r3, #0
 80029d2:	d102      	bne.n	80029da <HAL_SPI_Transmit+0x174>
        {
          errorcode = HAL_TIMEOUT;
 80029d4:	2303      	movs	r3, #3
 80029d6:	77fb      	strb	r3, [r7, #31]
          goto error;
 80029d8:	e074      	b.n	8002ac4 <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 80029da:	68fb      	ldr	r3, [r7, #12]
 80029dc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80029de:	b29b      	uxth	r3, r3
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	d1ce      	bne.n	8002982 <HAL_SPI_Transmit+0x11c>
 80029e4:	e04c      	b.n	8002a80 <HAL_SPI_Transmit+0x21a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80029e6:	68fb      	ldr	r3, [r7, #12]
 80029e8:	685b      	ldr	r3, [r3, #4]
 80029ea:	2b00      	cmp	r3, #0
 80029ec:	d002      	beq.n	80029f4 <HAL_SPI_Transmit+0x18e>
 80029ee:	8afb      	ldrh	r3, [r7, #22]
 80029f0:	2b01      	cmp	r3, #1
 80029f2:	d140      	bne.n	8002a76 <HAL_SPI_Transmit+0x210>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80029f4:	68fb      	ldr	r3, [r7, #12]
 80029f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029f8:	68fb      	ldr	r3, [r7, #12]
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	330c      	adds	r3, #12
 80029fe:	7812      	ldrb	r2, [r2, #0]
 8002a00:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8002a02:	68fb      	ldr	r3, [r7, #12]
 8002a04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a06:	1c5a      	adds	r2, r3, #1
 8002a08:	68fb      	ldr	r3, [r7, #12]
 8002a0a:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8002a0c:	68fb      	ldr	r3, [r7, #12]
 8002a0e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a10:	b29b      	uxth	r3, r3
 8002a12:	3b01      	subs	r3, #1
 8002a14:	b29a      	uxth	r2, r3
 8002a16:	68fb      	ldr	r3, [r7, #12]
 8002a18:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8002a1a:	e02c      	b.n	8002a76 <HAL_SPI_Transmit+0x210>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8002a1c:	68fb      	ldr	r3, [r7, #12]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	689b      	ldr	r3, [r3, #8]
 8002a22:	f003 0302 	and.w	r3, r3, #2
 8002a26:	2b02      	cmp	r3, #2
 8002a28:	d113      	bne.n	8002a52 <HAL_SPI_Transmit+0x1ec>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8002a2a:	68fb      	ldr	r3, [r7, #12]
 8002a2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a2e:	68fb      	ldr	r3, [r7, #12]
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	330c      	adds	r3, #12
 8002a34:	7812      	ldrb	r2, [r2, #0]
 8002a36:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8002a38:	68fb      	ldr	r3, [r7, #12]
 8002a3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a3c:	1c5a      	adds	r2, r3, #1
 8002a3e:	68fb      	ldr	r3, [r7, #12]
 8002a40:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8002a42:	68fb      	ldr	r3, [r7, #12]
 8002a44:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a46:	b29b      	uxth	r3, r3
 8002a48:	3b01      	subs	r3, #1
 8002a4a:	b29a      	uxth	r2, r3
 8002a4c:	68fb      	ldr	r3, [r7, #12]
 8002a4e:	86da      	strh	r2, [r3, #54]	; 0x36
 8002a50:	e011      	b.n	8002a76 <HAL_SPI_Transmit+0x210>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8002a52:	f7fe fb73 	bl	800113c <HAL_GetTick>
 8002a56:	4602      	mov	r2, r0
 8002a58:	69bb      	ldr	r3, [r7, #24]
 8002a5a:	1ad3      	subs	r3, r2, r3
 8002a5c:	683a      	ldr	r2, [r7, #0]
 8002a5e:	429a      	cmp	r2, r3
 8002a60:	d803      	bhi.n	8002a6a <HAL_SPI_Transmit+0x204>
 8002a62:	683b      	ldr	r3, [r7, #0]
 8002a64:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a68:	d102      	bne.n	8002a70 <HAL_SPI_Transmit+0x20a>
 8002a6a:	683b      	ldr	r3, [r7, #0]
 8002a6c:	2b00      	cmp	r3, #0
 8002a6e:	d102      	bne.n	8002a76 <HAL_SPI_Transmit+0x210>
        {
          errorcode = HAL_TIMEOUT;
 8002a70:	2303      	movs	r3, #3
 8002a72:	77fb      	strb	r3, [r7, #31]
          goto error;
 8002a74:	e026      	b.n	8002ac4 <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 8002a76:	68fb      	ldr	r3, [r7, #12]
 8002a78:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a7a:	b29b      	uxth	r3, r3
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d1cd      	bne.n	8002a1c <HAL_SPI_Transmit+0x1b6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8002a80:	69ba      	ldr	r2, [r7, #24]
 8002a82:	6839      	ldr	r1, [r7, #0]
 8002a84:	68f8      	ldr	r0, [r7, #12]
 8002a86:	f000 f8b3 	bl	8002bf0 <SPI_EndRxTxTransaction>
 8002a8a:	4603      	mov	r3, r0
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d002      	beq.n	8002a96 <HAL_SPI_Transmit+0x230>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8002a90:	68fb      	ldr	r3, [r7, #12]
 8002a92:	2220      	movs	r2, #32
 8002a94:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	689b      	ldr	r3, [r3, #8]
 8002a9a:	2b00      	cmp	r3, #0
 8002a9c:	d10a      	bne.n	8002ab4 <HAL_SPI_Transmit+0x24e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8002a9e:	2300      	movs	r3, #0
 8002aa0:	613b      	str	r3, [r7, #16]
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	68db      	ldr	r3, [r3, #12]
 8002aa8:	613b      	str	r3, [r7, #16]
 8002aaa:	68fb      	ldr	r3, [r7, #12]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	689b      	ldr	r3, [r3, #8]
 8002ab0:	613b      	str	r3, [r7, #16]
 8002ab2:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8002ab4:	68fb      	ldr	r3, [r7, #12]
 8002ab6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d002      	beq.n	8002ac2 <HAL_SPI_Transmit+0x25c>
  {
    errorcode = HAL_ERROR;
 8002abc:	2301      	movs	r3, #1
 8002abe:	77fb      	strb	r3, [r7, #31]
 8002ac0:	e000      	b.n	8002ac4 <HAL_SPI_Transmit+0x25e>
  }

error:
 8002ac2:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	2201      	movs	r2, #1
 8002ac8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8002acc:	68fb      	ldr	r3, [r7, #12]
 8002ace:	2200      	movs	r2, #0
 8002ad0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8002ad4:	7ffb      	ldrb	r3, [r7, #31]
}
 8002ad6:	4618      	mov	r0, r3
 8002ad8:	3720      	adds	r7, #32
 8002ada:	46bd      	mov	sp, r7
 8002adc:	bd80      	pop	{r7, pc}
	...

08002ae0 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8002ae0:	b580      	push	{r7, lr}
 8002ae2:	b088      	sub	sp, #32
 8002ae4:	af00      	add	r7, sp, #0
 8002ae6:	60f8      	str	r0, [r7, #12]
 8002ae8:	60b9      	str	r1, [r7, #8]
 8002aea:	603b      	str	r3, [r7, #0]
 8002aec:	4613      	mov	r3, r2
 8002aee:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8002af0:	f7fe fb24 	bl	800113c <HAL_GetTick>
 8002af4:	4602      	mov	r2, r0
 8002af6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002af8:	1a9b      	subs	r3, r3, r2
 8002afa:	683a      	ldr	r2, [r7, #0]
 8002afc:	4413      	add	r3, r2
 8002afe:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8002b00:	f7fe fb1c 	bl	800113c <HAL_GetTick>
 8002b04:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8002b06:	4b39      	ldr	r3, [pc, #228]	; (8002bec <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	015b      	lsls	r3, r3, #5
 8002b0c:	0d1b      	lsrs	r3, r3, #20
 8002b0e:	69fa      	ldr	r2, [r7, #28]
 8002b10:	fb02 f303 	mul.w	r3, r2, r3
 8002b14:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8002b16:	e054      	b.n	8002bc2 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8002b18:	683b      	ldr	r3, [r7, #0]
 8002b1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b1e:	d050      	beq.n	8002bc2 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8002b20:	f7fe fb0c 	bl	800113c <HAL_GetTick>
 8002b24:	4602      	mov	r2, r0
 8002b26:	69bb      	ldr	r3, [r7, #24]
 8002b28:	1ad3      	subs	r3, r2, r3
 8002b2a:	69fa      	ldr	r2, [r7, #28]
 8002b2c:	429a      	cmp	r2, r3
 8002b2e:	d902      	bls.n	8002b36 <SPI_WaitFlagStateUntilTimeout+0x56>
 8002b30:	69fb      	ldr	r3, [r7, #28]
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d13d      	bne.n	8002bb2 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8002b36:	68fb      	ldr	r3, [r7, #12]
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	685a      	ldr	r2, [r3, #4]
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8002b44:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8002b46:	68fb      	ldr	r3, [r7, #12]
 8002b48:	685b      	ldr	r3, [r3, #4]
 8002b4a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002b4e:	d111      	bne.n	8002b74 <SPI_WaitFlagStateUntilTimeout+0x94>
 8002b50:	68fb      	ldr	r3, [r7, #12]
 8002b52:	689b      	ldr	r3, [r3, #8]
 8002b54:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002b58:	d004      	beq.n	8002b64 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8002b5a:	68fb      	ldr	r3, [r7, #12]
 8002b5c:	689b      	ldr	r3, [r3, #8]
 8002b5e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b62:	d107      	bne.n	8002b74 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	681a      	ldr	r2, [r3, #0]
 8002b6a:	68fb      	ldr	r3, [r7, #12]
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002b72:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8002b74:	68fb      	ldr	r3, [r7, #12]
 8002b76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b78:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002b7c:	d10f      	bne.n	8002b9e <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	681a      	ldr	r2, [r3, #0]
 8002b84:	68fb      	ldr	r3, [r7, #12]
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002b8c:	601a      	str	r2, [r3, #0]
 8002b8e:	68fb      	ldr	r3, [r7, #12]
 8002b90:	681b      	ldr	r3, [r3, #0]
 8002b92:	681a      	ldr	r2, [r3, #0]
 8002b94:	68fb      	ldr	r3, [r7, #12]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002b9c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	2201      	movs	r2, #1
 8002ba2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8002ba6:	68fb      	ldr	r3, [r7, #12]
 8002ba8:	2200      	movs	r2, #0
 8002baa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8002bae:	2303      	movs	r3, #3
 8002bb0:	e017      	b.n	8002be2 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8002bb2:	697b      	ldr	r3, [r7, #20]
 8002bb4:	2b00      	cmp	r3, #0
 8002bb6:	d101      	bne.n	8002bbc <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8002bb8:	2300      	movs	r3, #0
 8002bba:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8002bbc:	697b      	ldr	r3, [r7, #20]
 8002bbe:	3b01      	subs	r3, #1
 8002bc0:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	689a      	ldr	r2, [r3, #8]
 8002bc8:	68bb      	ldr	r3, [r7, #8]
 8002bca:	4013      	ands	r3, r2
 8002bcc:	68ba      	ldr	r2, [r7, #8]
 8002bce:	429a      	cmp	r2, r3
 8002bd0:	bf0c      	ite	eq
 8002bd2:	2301      	moveq	r3, #1
 8002bd4:	2300      	movne	r3, #0
 8002bd6:	b2db      	uxtb	r3, r3
 8002bd8:	461a      	mov	r2, r3
 8002bda:	79fb      	ldrb	r3, [r7, #7]
 8002bdc:	429a      	cmp	r2, r3
 8002bde:	d19b      	bne.n	8002b18 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8002be0:	2300      	movs	r3, #0
}
 8002be2:	4618      	mov	r0, r3
 8002be4:	3720      	adds	r7, #32
 8002be6:	46bd      	mov	sp, r7
 8002be8:	bd80      	pop	{r7, pc}
 8002bea:	bf00      	nop
 8002bec:	20000000 	.word	0x20000000

08002bf0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8002bf0:	b580      	push	{r7, lr}
 8002bf2:	b088      	sub	sp, #32
 8002bf4:	af02      	add	r7, sp, #8
 8002bf6:	60f8      	str	r0, [r7, #12]
 8002bf8:	60b9      	str	r1, [r7, #8]
 8002bfa:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8002bfc:	4b1b      	ldr	r3, [pc, #108]	; (8002c6c <SPI_EndRxTxTransaction+0x7c>)
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	4a1b      	ldr	r2, [pc, #108]	; (8002c70 <SPI_EndRxTxTransaction+0x80>)
 8002c02:	fba2 2303 	umull	r2, r3, r2, r3
 8002c06:	0d5b      	lsrs	r3, r3, #21
 8002c08:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002c0c:	fb02 f303 	mul.w	r3, r2, r3
 8002c10:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	685b      	ldr	r3, [r3, #4]
 8002c16:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002c1a:	d112      	bne.n	8002c42 <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	9300      	str	r3, [sp, #0]
 8002c20:	68bb      	ldr	r3, [r7, #8]
 8002c22:	2200      	movs	r2, #0
 8002c24:	2180      	movs	r1, #128	; 0x80
 8002c26:	68f8      	ldr	r0, [r7, #12]
 8002c28:	f7ff ff5a 	bl	8002ae0 <SPI_WaitFlagStateUntilTimeout>
 8002c2c:	4603      	mov	r3, r0
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d016      	beq.n	8002c60 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002c36:	f043 0220 	orr.w	r2, r3, #32
 8002c3a:	68fb      	ldr	r3, [r7, #12]
 8002c3c:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8002c3e:	2303      	movs	r3, #3
 8002c40:	e00f      	b.n	8002c62 <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8002c42:	697b      	ldr	r3, [r7, #20]
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d00a      	beq.n	8002c5e <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8002c48:	697b      	ldr	r3, [r7, #20]
 8002c4a:	3b01      	subs	r3, #1
 8002c4c:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8002c4e:	68fb      	ldr	r3, [r7, #12]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	689b      	ldr	r3, [r3, #8]
 8002c54:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c58:	2b80      	cmp	r3, #128	; 0x80
 8002c5a:	d0f2      	beq.n	8002c42 <SPI_EndRxTxTransaction+0x52>
 8002c5c:	e000      	b.n	8002c60 <SPI_EndRxTxTransaction+0x70>
        break;
 8002c5e:	bf00      	nop
  }

  return HAL_OK;
 8002c60:	2300      	movs	r3, #0
}
 8002c62:	4618      	mov	r0, r3
 8002c64:	3718      	adds	r7, #24
 8002c66:	46bd      	mov	sp, r7
 8002c68:	bd80      	pop	{r7, pc}
 8002c6a:	bf00      	nop
 8002c6c:	20000000 	.word	0x20000000
 8002c70:	165e9f81 	.word	0x165e9f81

08002c74 <TEXT_Callback>:
 8002c74:	b530      	push	{r4, r5, lr}
 8002c76:	6845      	ldr	r5, [r0, #4]
 8002c78:	4604      	mov	r4, r0
 8002c7a:	b085      	sub	sp, #20
 8002c7c:	4628      	mov	r0, r5
 8002c7e:	4621      	mov	r1, r4
 8002c80:	f009 f9c5 	bl	800c00e <WIDGET_HandleActive>
 8002c84:	2800      	cmp	r0, #0
 8002c86:	d056      	beq.n	8002d36 <TEXT_Callback+0xc2>
 8002c88:	6823      	ldr	r3, [r4, #0]
 8002c8a:	2b0f      	cmp	r3, #15
 8002c8c:	d01e      	beq.n	8002ccc <TEXT_Callback+0x58>
 8002c8e:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8002c92:	d00e      	beq.n	8002cb2 <TEXT_Callback+0x3e>
 8002c94:	2b0b      	cmp	r3, #11
 8002c96:	d14b      	bne.n	8002d30 <TEXT_Callback+0xbc>
 8002c98:	4628      	mov	r0, r5
 8002c9a:	f008 fded 	bl	800b878 <GUI_ALLOC_LockH>
 8002c9e:	ad04      	add	r5, sp, #16
 8002ca0:	f845 0d08 	str.w	r0, [r5, #-8]!
 8002ca4:	3044      	adds	r0, #68	; 0x44
 8002ca6:	f008 ffb7 	bl	800bc18 <GUI_ALLOC_FreePtr>
 8002caa:	4628      	mov	r0, r5
 8002cac:	f008 fdf2 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002cb0:	e03e      	b.n	8002d30 <TEXT_Callback+0xbc>
 8002cb2:	68e3      	ldr	r3, [r4, #12]
 8002cb4:	b12b      	cbz	r3, 8002cc2 <TEXT_Callback+0x4e>
 8002cb6:	7a1b      	ldrb	r3, [r3, #8]
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	bf0c      	ite	eq
 8002cbc:	2102      	moveq	r1, #2
 8002cbe:	2101      	movne	r1, #1
 8002cc0:	e000      	b.n	8002cc4 <TEXT_Callback+0x50>
 8002cc2:	2103      	movs	r1, #3
 8002cc4:	4628      	mov	r0, r5
 8002cc6:	f002 f972 	bl	8004fae <WM_NotifyParent>
 8002cca:	e031      	b.n	8002d30 <TEXT_Callback+0xbc>
 8002ccc:	4628      	mov	r0, r5
 8002cce:	f008 fdd3 	bl	800b878 <GUI_ALLOC_LockH>
 8002cd2:	9000      	str	r0, [sp, #0]
 8002cd4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002cd6:	f006 fa53 	bl	8009180 <LCD_SetColor>
 8002cda:	9b00      	ldr	r3, [sp, #0]
 8002cdc:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002cde:	f008 f96f 	bl	800afc0 <GUI_SetFont>
 8002ce2:	4628      	mov	r0, r5
 8002ce4:	f001 fd1e 	bl	8004724 <WM_GetHasTrans>
 8002ce8:	b928      	cbnz	r0, 8002cf6 <TEXT_Callback+0x82>
 8002cea:	9b00      	ldr	r3, [sp, #0]
 8002cec:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8002cee:	f006 fa3f 	bl	8009170 <LCD_SetBkColor>
 8002cf2:	f007 ff4d 	bl	800ab90 <GUI_Clear>
 8002cf6:	9b00      	ldr	r3, [sp, #0]
 8002cf8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002cfa:	b1ab      	cbz	r3, 8002d28 <TEXT_Callback+0xb4>
 8002cfc:	2002      	movs	r0, #2
 8002cfe:	f008 f995 	bl	800b02c <GUI_SetTextMode>
 8002d02:	a802      	add	r0, sp, #8
 8002d04:	f001 fed6 	bl	8004ab4 <WM_GetClientRect>
 8002d08:	9b00      	ldr	r3, [sp, #0]
 8002d0a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8002d0c:	f008 fdb4 	bl	800b878 <GUI_ALLOC_LockH>
 8002d10:	9b00      	ldr	r3, [sp, #0]
 8002d12:	9001      	str	r0, [sp, #4]
 8002d14:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8002d18:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002d1c:	a902      	add	r1, sp, #8
 8002d1e:	f007 fd44 	bl	800a7aa <GUI_DispStringInRectWrap>
 8002d22:	a801      	add	r0, sp, #4
 8002d24:	f008 fdb6 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002d28:	4668      	mov	r0, sp
 8002d2a:	f008 fdb3 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002d2e:	e002      	b.n	8002d36 <TEXT_Callback+0xc2>
 8002d30:	4620      	mov	r0, r4
 8002d32:	f003 fbb3 	bl	800649c <WM_DefaultProc>
 8002d36:	b005      	add	sp, #20
 8002d38:	bd30      	pop	{r4, r5, pc}
	...

08002d3c <TEXT_CreateUser>:
 8002d3c:	b570      	push	{r4, r5, r6, lr}
 8002d3e:	b086      	sub	sp, #24
 8002d40:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8002d42:	9500      	str	r5, [sp, #0]
 8002d44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8002d46:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8002d48:	f045 0501 	orr.w	r5, r5, #1
 8002d4c:	9501      	str	r5, [sp, #4]
 8002d4e:	4d1a      	ldr	r5, [pc, #104]	; (8002db8 <TEXT_CreateUser+0x7c>)
 8002d50:	9502      	str	r5, [sp, #8]
 8002d52:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002d54:	3520      	adds	r5, #32
 8002d56:	9503      	str	r5, [sp, #12]
 8002d58:	f002 ffa0 	bl	8005c9c <WM_CreateWindowAsChild>
 8002d5c:	4605      	mov	r5, r0
 8002d5e:	b340      	cbz	r0, 8002db2 <TEXT_CreateUser+0x76>
 8002d60:	b18c      	cbz	r4, 8002d86 <TEXT_CreateUser+0x4a>
 8002d62:	4620      	mov	r0, r4
 8002d64:	f7fd fa30 	bl	80001c8 <strlen>
 8002d68:	3001      	adds	r0, #1
 8002d6a:	f008 ff7f 	bl	800bc6c <GUI_ALLOC_AllocZero>
 8002d6e:	4606      	mov	r6, r0
 8002d70:	b150      	cbz	r0, 8002d88 <TEXT_CreateUser+0x4c>
 8002d72:	f008 fd81 	bl	800b878 <GUI_ALLOC_LockH>
 8002d76:	4621      	mov	r1, r4
 8002d78:	9005      	str	r0, [sp, #20]
 8002d7a:	f00d f9c3 	bl	8010104 <strcpy>
 8002d7e:	a805      	add	r0, sp, #20
 8002d80:	f008 fd88 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002d84:	e000      	b.n	8002d88 <TEXT_CreateUser+0x4c>
 8002d86:	4626      	mov	r6, r4
 8002d88:	4628      	mov	r0, r5
 8002d8a:	f008 fd75 	bl	800b878 <GUI_ALLOC_LockH>
 8002d8e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002d90:	9005      	str	r0, [sp, #20]
 8002d92:	2200      	movs	r2, #0
 8002d94:	f009 f8f6 	bl	800bf84 <WIDGET__Init>
 8002d98:	9c05      	ldr	r4, [sp, #20]
 8002d9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002d9c:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8002da0:	4b06      	ldr	r3, [pc, #24]	; (8002dbc <TEXT_CreateUser+0x80>)
 8002da2:	6466      	str	r6, [r4, #68]	; 0x44
 8002da4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002da6:	3434      	adds	r4, #52	; 0x34
 8002da8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002dac:	a805      	add	r0, sp, #20
 8002dae:	f008 fd71 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002db2:	4628      	mov	r0, r5
 8002db4:	b006      	add	sp, #24
 8002db6:	bd70      	pop	{r4, r5, r6, pc}
 8002db8:	08002c75 	.word	0x08002c75
 8002dbc:	2000000c 	.word	0x2000000c

08002dc0 <TEXT_CreateIndirect>:
 8002dc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002dc2:	b087      	sub	sp, #28
 8002dc4:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8002dc8:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8002dcc:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002dd0:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002dd4:	9100      	str	r1, [sp, #0]
 8002dd6:	2102      	movs	r1, #2
 8002dd8:	9101      	str	r1, [sp, #4]
 8002dda:	8a41      	ldrh	r1, [r0, #18]
 8002ddc:	9102      	str	r1, [sp, #8]
 8002dde:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002de2:	9103      	str	r1, [sp, #12]
 8002de4:	6844      	ldr	r4, [r0, #4]
 8002de6:	9404      	str	r4, [sp, #16]
 8002de8:	6984      	ldr	r4, [r0, #24]
 8002dea:	9405      	str	r4, [sp, #20]
 8002dec:	eb0e 0002 	add.w	r0, lr, r2
 8002df0:	18f9      	adds	r1, r7, r3
 8002df2:	4632      	mov	r2, r6
 8002df4:	462b      	mov	r3, r5
 8002df6:	f7ff ffa1 	bl	8002d3c <TEXT_CreateUser>
 8002dfa:	b007      	add	sp, #28
 8002dfc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002dfe <TEXT_SetFont>:
 8002dfe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e00:	460c      	mov	r4, r1
 8002e02:	4605      	mov	r5, r0
 8002e04:	b160      	cbz	r0, 8002e20 <TEXT_SetFont+0x22>
 8002e06:	f008 fd37 	bl	800b878 <GUI_ALLOC_LockH>
 8002e0a:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8002e0c:	9001      	str	r0, [sp, #4]
 8002e0e:	42a2      	cmp	r2, r4
 8002e10:	d003      	beq.n	8002e1a <TEXT_SetFont+0x1c>
 8002e12:	6344      	str	r4, [r0, #52]	; 0x34
 8002e14:	4628      	mov	r0, r5
 8002e16:	f002 ff13 	bl	8005c40 <WM_InvalidateWindow>
 8002e1a:	a801      	add	r0, sp, #4
 8002e1c:	f008 fd3a 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002e20:	b003      	add	sp, #12
 8002e22:	bd30      	pop	{r4, r5, pc}

08002e24 <TEXT_SetText>:
 8002e24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e26:	460c      	mov	r4, r1
 8002e28:	4605      	mov	r5, r0
 8002e2a:	b300      	cbz	r0, 8002e6e <TEXT_SetText+0x4a>
 8002e2c:	f008 fd24 	bl	800b878 <GUI_ALLOC_LockH>
 8002e30:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002e32:	9000      	str	r0, [sp, #0]
 8002e34:	4668      	mov	r0, sp
 8002e36:	9301      	str	r3, [sp, #4]
 8002e38:	f008 fd2c 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002e3c:	4621      	mov	r1, r4
 8002e3e:	a801      	add	r0, sp, #4
 8002e40:	f006 fa9a 	bl	8009378 <GUI__SetText>
 8002e44:	f1d0 0401 	rsbs	r4, r0, #1
 8002e48:	bf38      	it	cc
 8002e4a:	2400      	movcc	r4, #0
 8002e4c:	b984      	cbnz	r4, 8002e70 <TEXT_SetText+0x4c>
 8002e4e:	4628      	mov	r0, r5
 8002e50:	f008 fd12 	bl	800b878 <GUI_ALLOC_LockH>
 8002e54:	9a01      	ldr	r2, [sp, #4]
 8002e56:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002e58:	9000      	str	r0, [sp, #0]
 8002e5a:	4291      	cmp	r1, r2
 8002e5c:	bf18      	it	ne
 8002e5e:	6442      	strne	r2, [r0, #68]	; 0x44
 8002e60:	4668      	mov	r0, sp
 8002e62:	f008 fd17 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002e66:	4628      	mov	r0, r5
 8002e68:	f002 feea 	bl	8005c40 <WM_InvalidateWindow>
 8002e6c:	e000      	b.n	8002e70 <TEXT_SetText+0x4c>
 8002e6e:	2401      	movs	r4, #1
 8002e70:	4620      	mov	r0, r4
 8002e72:	b003      	add	sp, #12
 8002e74:	bd30      	pop	{r4, r5, pc}

08002e76 <PROGBAR_Callback>:
 8002e76:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e78:	6845      	ldr	r5, [r0, #4]
 8002e7a:	4604      	mov	r4, r0
 8002e7c:	4621      	mov	r1, r4
 8002e7e:	4628      	mov	r0, r5
 8002e80:	f009 f8c5 	bl	800c00e <WIDGET_HandleActive>
 8002e84:	b310      	cbz	r0, 8002ecc <PROGBAR_Callback+0x56>
 8002e86:	6823      	ldr	r3, [r4, #0]
 8002e88:	2b0b      	cmp	r3, #11
 8002e8a:	d010      	beq.n	8002eae <PROGBAR_Callback+0x38>
 8002e8c:	2b0f      	cmp	r3, #15
 8002e8e:	d11a      	bne.n	8002ec6 <PROGBAR_Callback+0x50>
 8002e90:	4628      	mov	r0, r5
 8002e92:	f008 fcf1 	bl	800b878 <GUI_ALLOC_LockH>
 8002e96:	ab02      	add	r3, sp, #8
 8002e98:	f843 0d04 	str.w	r0, [r3, #-4]!
 8002e9c:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8002e9e:	6814      	ldr	r4, [r2, #0]
 8002ea0:	4618      	mov	r0, r3
 8002ea2:	f008 fcf7 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002ea6:	b18c      	cbz	r4, 8002ecc <PROGBAR_Callback+0x56>
 8002ea8:	4628      	mov	r0, r5
 8002eaa:	47a0      	blx	r4
 8002eac:	e00e      	b.n	8002ecc <PROGBAR_Callback+0x56>
 8002eae:	4628      	mov	r0, r5
 8002eb0:	f008 fce2 	bl	800b878 <GUI_ALLOC_LockH>
 8002eb4:	ad02      	add	r5, sp, #8
 8002eb6:	f845 0d04 	str.w	r0, [r5, #-4]!
 8002eba:	3038      	adds	r0, #56	; 0x38
 8002ebc:	f008 feac 	bl	800bc18 <GUI_ALLOC_FreePtr>
 8002ec0:	4628      	mov	r0, r5
 8002ec2:	f008 fce7 	bl	800b894 <GUI_ALLOC_UnlockH>
 8002ec6:	4620      	mov	r0, r4
 8002ec8:	f003 fae8 	bl	800649c <WM_DefaultProc>
 8002ecc:	b003      	add	sp, #12
 8002ece:	bd30      	pop	{r4, r5, pc}

08002ed0 <_SetValue>:
 8002ed0:	b513      	push	{r0, r1, r4, lr}
 8002ed2:	ab02      	add	r3, sp, #8
 8002ed4:	6342      	str	r2, [r0, #52]	; 0x34
 8002ed6:	f843 1d04 	str.w	r1, [r3, #-4]!
 8002eda:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002edc:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002ede:	1a52      	subs	r2, r2, r1
 8002ee0:	2464      	movs	r4, #100	; 0x64
 8002ee2:	4362      	muls	r2, r4
 8002ee4:	1a40      	subs	r0, r0, r1
 8002ee6:	fb92 f0f0 	sdiv	r0, r2, r0
 8002eea:	4619      	mov	r1, r3
 8002eec:	f006 fcb0 	bl	8009850 <GUI_AddDecMin>
 8002ef0:	9b01      	ldr	r3, [sp, #4]
 8002ef2:	1c5a      	adds	r2, r3, #1
 8002ef4:	9201      	str	r2, [sp, #4]
 8002ef6:	2225      	movs	r2, #37	; 0x25
 8002ef8:	701a      	strb	r2, [r3, #0]
 8002efa:	9b01      	ldr	r3, [sp, #4]
 8002efc:	2200      	movs	r2, #0
 8002efe:	701a      	strb	r2, [r3, #0]
 8002f00:	b002      	add	sp, #8
 8002f02:	bd10      	pop	{r4, pc}

08002f04 <PROGBAR__GetTextLocked>:
 8002f04:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002f06:	f008 bcb7 	b.w	800b878 <GUI_ALLOC_LockH>

08002f0a <PROGBAR__GetTextRect>:
 8002f0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f0e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8002f12:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8002f16:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8002f1a:	1aff      	subs	r7, r7, r3
 8002f1c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8002f20:	4604      	mov	r4, r0
 8002f22:	4610      	mov	r0, r2
 8002f24:	ebc3 0808 	rsb	r8, r3, r8
 8002f28:	460d      	mov	r5, r1
 8002f2a:	f007 fcdd 	bl	800a8e8 <GUI_GetStringDistX>
 8002f2e:	4606      	mov	r6, r0
 8002f30:	f007 ff74 	bl	800ae1c <GUI_GetFontSizeY>
 8002f34:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8002f38:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002f3a:	f003 0303 	and.w	r3, r3, #3
 8002f3e:	2b01      	cmp	r3, #1
 8002f40:	f107 0701 	add.w	r7, r7, #1
 8002f44:	f108 0801 	add.w	r8, r8, #1
 8002f48:	6812      	ldr	r2, [r2, #0]
 8002f4a:	d006      	beq.n	8002f5a <PROGBAR__GetTextRect+0x50>
 8002f4c:	2b02      	cmp	r3, #2
 8002f4e:	d109      	bne.n	8002f64 <PROGBAR__GetTextRect+0x5a>
 8002f50:	1bbf      	subs	r7, r7, r6
 8002f52:	fb97 f3f3 	sdiv	r3, r7, r3
 8002f56:	802b      	strh	r3, [r5, #0]
 8002f58:	e005      	b.n	8002f66 <PROGBAR__GetTextRect+0x5c>
 8002f5a:	43d2      	mvns	r2, r2
 8002f5c:	4417      	add	r7, r2
 8002f5e:	1bbf      	subs	r7, r7, r6
 8002f60:	802f      	strh	r7, [r5, #0]
 8002f62:	e000      	b.n	8002f66 <PROGBAR__GetTextRect+0x5c>
 8002f64:	802a      	strh	r2, [r5, #0]
 8002f66:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 8002f68:	882b      	ldrh	r3, [r5, #0]
 8002f6a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8002f6c:	441a      	add	r2, r3
 8002f6e:	ebc0 0808 	rsb	r8, r0, r8
 8002f72:	2302      	movs	r3, #2
 8002f74:	fb98 f3f3 	sdiv	r3, r8, r3
 8002f78:	b292      	uxth	r2, r2
 8002f7a:	440b      	add	r3, r1
 8002f7c:	b29b      	uxth	r3, r3
 8002f7e:	802a      	strh	r2, [r5, #0]
 8002f80:	3801      	subs	r0, #1
 8002f82:	3a01      	subs	r2, #1
 8002f84:	806b      	strh	r3, [r5, #2]
 8002f86:	4416      	add	r6, r2
 8002f88:	4403      	add	r3, r0
 8002f8a:	80ae      	strh	r6, [r5, #4]
 8002f8c:	80eb      	strh	r3, [r5, #6]
 8002f8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002f92 <PROGBAR__Value2Pos>:
 8002f92:	b570      	push	{r4, r5, r6, lr}
 8002f94:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 8002f98:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002f9a:	f013 0601 	ands.w	r6, r3, #1
 8002f9e:	bf15      	itete	ne
 8002fa0:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8002fa4:	f9b0 3000 	ldrsheq.w	r3, [r0]
 8002fa8:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 8002fac:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 8002fb0:	6814      	ldr	r4, [r2, #0]
 8002fb2:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8002fb4:	1aed      	subs	r5, r5, r3
 8002fb6:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002fb8:	3501      	adds	r5, #1
 8002fba:	4299      	cmp	r1, r3
 8002fbc:	bfb8      	it	lt
 8002fbe:	4619      	movlt	r1, r3
 8002fc0:	4291      	cmp	r1, r2
 8002fc2:	bfa8      	it	ge
 8002fc4:	4611      	movge	r1, r2
 8002fc6:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8002fca:	b10e      	cbz	r6, 8002fd0 <PROGBAR__Value2Pos+0x3e>
 8002fcc:	1a51      	subs	r1, r2, r1
 8002fce:	e000      	b.n	8002fd2 <PROGBAR__Value2Pos+0x40>
 8002fd0:	1ac9      	subs	r1, r1, r3
 8002fd2:	4369      	muls	r1, r5
 8002fd4:	1ad3      	subs	r3, r2, r3
 8002fd6:	fb91 f0f3 	sdiv	r0, r1, r3
 8002fda:	4420      	add	r0, r4
 8002fdc:	bd70      	pop	{r4, r5, r6, pc}
	...

08002fe0 <PROGBAR_CreateUser>:
 8002fe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002fe4:	b087      	sub	sp, #28
 8002fe6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8002fe8:	9400      	str	r4, [sp, #0]
 8002fea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8002fec:	9401      	str	r4, [sp, #4]
 8002fee:	4c27      	ldr	r4, [pc, #156]	; (800308c <PROGBAR_CreateUser+0xac>)
 8002ff0:	9402      	str	r4, [sp, #8]
 8002ff2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8002ff4:	3440      	adds	r4, #64	; 0x40
 8002ff6:	9403      	str	r4, [sp, #12]
 8002ff8:	f002 fe50 	bl	8005c9c <WM_CreateWindowAsChild>
 8002ffc:	4607      	mov	r7, r0
 8002ffe:	2800      	cmp	r0, #0
 8003000:	d040      	beq.n	8003084 <PROGBAR_CreateUser+0xa4>
 8003002:	2005      	movs	r0, #5
 8003004:	f008 fe32 	bl	800bc6c <GUI_ALLOC_AllocZero>
 8003008:	4680      	mov	r8, r0
 800300a:	2800      	cmp	r0, #0
 800300c:	d03a      	beq.n	8003084 <PROGBAR_CreateUser+0xa4>
 800300e:	4638      	mov	r0, r7
 8003010:	f008 fc32 	bl	800b878 <GUI_ALLOC_LockH>
 8003014:	2200      	movs	r2, #0
 8003016:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003018:	9004      	str	r0, [sp, #16]
 800301a:	f8df 907c 	ldr.w	r9, [pc, #124]	; 8003098 <PROGBAR_CreateUser+0xb8>
 800301e:	4d1c      	ldr	r5, [pc, #112]	; (8003090 <PROGBAR_CreateUser+0xb0>)
 8003020:	f008 ffb0 	bl	800bf84 <WIDGET__Init>
 8003024:	4638      	mov	r0, r7
 8003026:	491b      	ldr	r1, [pc, #108]	; (8003094 <PROGBAR_CreateUser+0xb4>)
 8003028:	f009 f8de 	bl	800c1e8 <WIDGET_SetEffect>
 800302c:	9e04      	ldr	r6, [sp, #16]
 800302e:	f8d9 3000 	ldr.w	r3, [r9]
 8003032:	6673      	str	r3, [r6, #100]	; 0x64
 8003034:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003036:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 800303a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800303c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003040:	2302      	movs	r3, #2
 8003042:	e884 0003 	stmia.w	r4, {r0, r1}
 8003046:	f8a6 3040 	strh.w	r3, [r6, #64]	; 0x40
 800304a:	2364      	movs	r3, #100	; 0x64
 800304c:	64b3      	str	r3, [r6, #72]	; 0x48
 800304e:	2400      	movs	r4, #0
 8003050:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003052:	f886 3068 	strb.w	r3, [r6, #104]	; 0x68
 8003056:	6474      	str	r4, [r6, #68]	; 0x44
 8003058:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 800305c:	4640      	mov	r0, r8
 800305e:	f008 fc0b 	bl	800b878 <GUI_ALLOC_LockH>
 8003062:	4622      	mov	r2, r4
 8003064:	4601      	mov	r1, r0
 8003066:	9005      	str	r0, [sp, #20]
 8003068:	9804      	ldr	r0, [sp, #16]
 800306a:	f7ff ff31 	bl	8002ed0 <_SetValue>
 800306e:	a805      	add	r0, sp, #20
 8003070:	f008 fc10 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003074:	a804      	add	r0, sp, #16
 8003076:	f008 fc0d 	bl	800b894 <GUI_ALLOC_UnlockH>
 800307a:	f8d9 3000 	ldr.w	r3, [r9]
 800307e:	4638      	mov	r0, r7
 8003080:	685b      	ldr	r3, [r3, #4]
 8003082:	4798      	blx	r3
 8003084:	4638      	mov	r0, r7
 8003086:	b007      	add	sp, #28
 8003088:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800308c:	08002e77 	.word	0x08002e77
 8003090:	20000020 	.word	0x20000020
 8003094:	08012498 	.word	0x08012498
 8003098:	2000001c 	.word	0x2000001c

0800309c <PROGBAR_CreateIndirect>:
 800309c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800309e:	b087      	sub	sp, #28
 80030a0:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80030a4:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80030a8:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80030ac:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80030b0:	9100      	str	r1, [sp, #0]
 80030b2:	2100      	movs	r1, #0
 80030b4:	9101      	str	r1, [sp, #4]
 80030b6:	8a41      	ldrh	r1, [r0, #18]
 80030b8:	9102      	str	r1, [sp, #8]
 80030ba:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80030be:	9103      	str	r1, [sp, #12]
 80030c0:	6984      	ldr	r4, [r0, #24]
 80030c2:	9404      	str	r4, [sp, #16]
 80030c4:	eb0e 0002 	add.w	r0, lr, r2
 80030c8:	18f9      	adds	r1, r7, r3
 80030ca:	4632      	mov	r2, r6
 80030cc:	462b      	mov	r3, r5
 80030ce:	f7ff ff87 	bl	8002fe0 <PROGBAR_CreateUser>
 80030d2:	b007      	add	sp, #28
 80030d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080030d6 <PROGBAR_SetValue>:
 80030d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80030da:	460d      	mov	r5, r1
 80030dc:	b087      	sub	sp, #28
 80030de:	4680      	mov	r8, r0
 80030e0:	2800      	cmp	r0, #0
 80030e2:	f000 80a0 	beq.w	8003226 <PROGBAR_SetValue+0x150>
 80030e6:	f008 fbc7 	bl	800b878 <GUI_ALLOC_LockH>
 80030ea:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80030ec:	6b46      	ldr	r6, [r0, #52]	; 0x34
 80030ee:	429d      	cmp	r5, r3
 80030f0:	bfb8      	it	lt
 80030f2:	461d      	movlt	r5, r3
 80030f4:	6c83      	ldr	r3, [r0, #72]	; 0x48
 80030f6:	af06      	add	r7, sp, #24
 80030f8:	429d      	cmp	r5, r3
 80030fa:	bfa8      	it	ge
 80030fc:	461d      	movge	r5, r3
 80030fe:	42ae      	cmp	r6, r5
 8003100:	4604      	mov	r4, r0
 8003102:	f847 0d18 	str.w	r0, [r7, #-24]!
 8003106:	f000 808b 	beq.w	8003220 <PROGBAR_SetValue+0x14a>
 800310a:	f890 9068 	ldrb.w	r9, [r0, #104]	; 0x68
 800310e:	f019 0f01 	tst.w	r9, #1
 8003112:	d01c      	beq.n	800314e <PROGBAR_SetValue+0x78>
 8003114:	42b5      	cmp	r5, r6
 8003116:	da07      	bge.n	8003128 <PROGBAR_SetValue+0x52>
 8003118:	4629      	mov	r1, r5
 800311a:	f7ff ff3a 	bl	8002f92 <PROGBAR__Value2Pos>
 800311e:	4631      	mov	r1, r6
 8003120:	f8ad 000e 	strh.w	r0, [sp, #14]
 8003124:	4620      	mov	r0, r4
 8003126:	e006      	b.n	8003136 <PROGBAR_SetValue+0x60>
 8003128:	4631      	mov	r1, r6
 800312a:	f7ff ff32 	bl	8002f92 <PROGBAR__Value2Pos>
 800312e:	4629      	mov	r1, r5
 8003130:	f8ad 000e 	strh.w	r0, [sp, #14]
 8003134:	4620      	mov	r0, r4
 8003136:	f7ff ff2c 	bl	8002f92 <PROGBAR__Value2Pos>
 800313a:	2300      	movs	r3, #0
 800313c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003140:	f640 73ff 	movw	r3, #4095	; 0xfff
 8003144:	f8ad 000a 	strh.w	r0, [sp, #10]
 8003148:	f8ad 300c 	strh.w	r3, [sp, #12]
 800314c:	e063      	b.n	8003216 <PROGBAR_SetValue+0x140>
 800314e:	42b5      	cmp	r5, r6
 8003150:	da07      	bge.n	8003162 <PROGBAR_SetValue+0x8c>
 8003152:	4629      	mov	r1, r5
 8003154:	f7ff ff1d 	bl	8002f92 <PROGBAR__Value2Pos>
 8003158:	4631      	mov	r1, r6
 800315a:	f8ad 0008 	strh.w	r0, [sp, #8]
 800315e:	4620      	mov	r0, r4
 8003160:	e006      	b.n	8003170 <PROGBAR_SetValue+0x9a>
 8003162:	4631      	mov	r1, r6
 8003164:	f7ff ff15 	bl	8002f92 <PROGBAR__Value2Pos>
 8003168:	4629      	mov	r1, r5
 800316a:	f8ad 0008 	strh.w	r0, [sp, #8]
 800316e:	4620      	mov	r0, r4
 8003170:	f7ff ff0f 	bl	8002f92 <PROGBAR__Value2Pos>
 8003174:	2300      	movs	r3, #0
 8003176:	f8ad 300a 	strh.w	r3, [sp, #10]
 800317a:	f009 0202 	and.w	r2, r9, #2
 800317e:	f640 73ff 	movw	r3, #4095	; 0xfff
 8003182:	f8ad 300e 	strh.w	r3, [sp, #14]
 8003186:	f8ad 000c 	strh.w	r0, [sp, #12]
 800318a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800318e:	2a00      	cmp	r2, #0
 8003190:	d141      	bne.n	8003216 <PROGBAR_SetValue+0x140>
 8003192:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8003194:	9304      	str	r3, [sp, #16]
 8003196:	9305      	str	r3, [sp, #20]
 8003198:	f008 fb9c 	bl	800b8d4 <GUI_ALLOC_GetSize>
 800319c:	2804      	cmp	r0, #4
 800319e:	dc0e      	bgt.n	80031be <PROGBAR_SetValue+0xe8>
 80031a0:	9b00      	ldr	r3, [sp, #0]
 80031a2:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 80031a4:	4668      	mov	r0, sp
 80031a6:	f008 fb75 	bl	800b894 <GUI_ALLOC_UnlockH>
 80031aa:	4620      	mov	r0, r4
 80031ac:	2105      	movs	r1, #5
 80031ae:	f008 fd75 	bl	800bc9c <GUI_ALLOC_Realloc>
 80031b2:	4604      	mov	r4, r0
 80031b4:	4640      	mov	r0, r8
 80031b6:	f008 fb5f 	bl	800b878 <GUI_ALLOC_LockH>
 80031ba:	9000      	str	r0, [sp, #0]
 80031bc:	6384      	str	r4, [r0, #56]	; 0x38
 80031be:	9800      	ldr	r0, [sp, #0]
 80031c0:	f7ff fea0 	bl	8002f04 <PROGBAR__GetTextLocked>
 80031c4:	9001      	str	r0, [sp, #4]
 80031c6:	b338      	cbz	r0, 8003218 <PROGBAR_SetValue+0x142>
 80031c8:	9b00      	ldr	r3, [sp, #0]
 80031ca:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80031cc:	f007 fef8 	bl	800afc0 <GUI_SetFont>
 80031d0:	a904      	add	r1, sp, #16
 80031d2:	4606      	mov	r6, r0
 80031d4:	9a01      	ldr	r2, [sp, #4]
 80031d6:	9800      	ldr	r0, [sp, #0]
 80031d8:	f7ff fe97 	bl	8002f0a <PROGBAR__GetTextRect>
 80031dc:	a802      	add	r0, sp, #8
 80031de:	aa04      	add	r2, sp, #16
 80031e0:	ac06      	add	r4, sp, #24
 80031e2:	4601      	mov	r1, r0
 80031e4:	f007 fe34 	bl	800ae50 <GUI_MergeRect>
 80031e8:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80031ec:	462a      	mov	r2, r5
 80031ee:	f7ff fe6f 	bl	8002ed0 <_SetValue>
 80031f2:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 80031f6:	9800      	ldr	r0, [sp, #0]
 80031f8:	a904      	add	r1, sp, #16
 80031fa:	f7ff fe86 	bl	8002f0a <PROGBAR__GetTextRect>
 80031fe:	a802      	add	r0, sp, #8
 8003200:	4601      	mov	r1, r0
 8003202:	aa04      	add	r2, sp, #16
 8003204:	f007 fe24 	bl	800ae50 <GUI_MergeRect>
 8003208:	4630      	mov	r0, r6
 800320a:	f007 fed9 	bl	800afc0 <GUI_SetFont>
 800320e:	4620      	mov	r0, r4
 8003210:	f008 fb40 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003214:	e000      	b.n	8003218 <PROGBAR_SetValue+0x142>
 8003216:	6365      	str	r5, [r4, #52]	; 0x34
 8003218:	4640      	mov	r0, r8
 800321a:	a902      	add	r1, sp, #8
 800321c:	f002 fcd4 	bl	8005bc8 <WM_InvalidateRect>
 8003220:	4668      	mov	r0, sp
 8003222:	f008 fb37 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003226:	b007      	add	sp, #28
 8003228:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800322c <_OnDelete>:
 800322c:	b513      	push	{r0, r1, r4, lr}
 800322e:	4604      	mov	r4, r0
 8003230:	f008 fb22 	bl	800b878 <GUI_ALLOC_LockH>
 8003234:	9001      	str	r0, [sp, #4]
 8003236:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003238:	b120      	cbz	r0, 8003244 <_OnDelete+0x18>
 800323a:	f008 fb57 	bl	800b8ec <GUI_ALLOC_Free>
 800323e:	9b01      	ldr	r3, [sp, #4]
 8003240:	2200      	movs	r2, #0
 8003242:	625a      	str	r2, [r3, #36]	; 0x24
 8003244:	a801      	add	r0, sp, #4
 8003246:	f008 fb25 	bl	800b894 <GUI_ALLOC_UnlockH>
 800324a:	4620      	mov	r0, r4
 800324c:	f008 fb4e 	bl	800b8ec <GUI_ALLOC_Free>
 8003250:	b002      	add	sp, #8
 8003252:	bd10      	pop	{r4, pc}

08003254 <_OnPaint>:
 8003254:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003258:	b08b      	sub	sp, #44	; 0x2c
 800325a:	f008 fb0d 	bl	800b878 <GUI_ALLOC_LockH>
 800325e:	9007      	str	r0, [sp, #28]
 8003260:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003262:	2800      	cmp	r0, #0
 8003264:	d060      	beq.n	8003328 <_OnPaint+0xd4>
 8003266:	f008 fb07 	bl	800b878 <GUI_ALLOC_LockH>
 800326a:	9b07      	ldr	r3, [sp, #28]
 800326c:	9005      	str	r0, [sp, #20]
 800326e:	4606      	mov	r6, r0
 8003270:	6898      	ldr	r0, [r3, #8]
 8003272:	f008 fb01 	bl	800b878 <GUI_ALLOC_LockH>
 8003276:	9b07      	ldr	r3, [sp, #28]
 8003278:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 800327c:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800327e:	6d87      	ldr	r7, [r0, #88]	; 0x58
 8003280:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8003282:	9006      	str	r0, [sp, #24]
 8003284:	a908      	add	r1, sp, #32
 8003286:	6898      	ldr	r0, [r3, #8]
 8003288:	f001 fd60 	bl	8004d4c <WM_GetInsideRectExScrollbar>
 800328c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8003290:	9a07      	ldr	r2, [sp, #28]
 8003292:	9806      	ldr	r0, [sp, #24]
 8003294:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8003298:	f8d2 9020 	ldr.w	r9, [r2, #32]
 800329c:	441f      	add	r7, r3
 800329e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80032a2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 80032a6:	f8bd 7026 	ldrh.w	r7, [sp, #38]	; 0x26
 80032aa:	1b1c      	subs	r4, r3, r4
 80032ac:	1b7f      	subs	r7, r7, r5
 80032ae:	6913      	ldr	r3, [r2, #16]
 80032b0:	f8d0 508c 	ldr.w	r5, [r0, #140]	; 0x8c
 80032b4:	1b5d      	subs	r5, r3, r5
 80032b6:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 80032ba:	4441      	add	r1, r8
 80032bc:	b289      	uxth	r1, r1
 80032be:	b2a4      	uxth	r4, r4
 80032c0:	b2bf      	uxth	r7, r7
 80032c2:	2b01      	cmp	r3, #1
 80032c4:	f8ad 1020 	strh.w	r1, [sp, #32]
 80032c8:	f8ad 4024 	strh.w	r4, [sp, #36]	; 0x24
 80032cc:	f8ad 7026 	strh.w	r7, [sp, #38]	; 0x26
 80032d0:	f8d0 8080 	ldr.w	r8, [r0, #128]	; 0x80
 80032d4:	b209      	sxth	r1, r1
 80032d6:	d008      	beq.n	80032ea <_OnPaint+0x96>
 80032d8:	b224      	sxth	r4, r4
 80032da:	1b64      	subs	r4, r4, r5
 80032dc:	3401      	adds	r4, #1
 80032de:	42a1      	cmp	r1, r4
 80032e0:	dd04      	ble.n	80032ec <_OnPaint+0x98>
 80032e2:	1b0c      	subs	r4, r1, r4
 80032e4:	eb06 0644 	add.w	r6, r6, r4, lsl #1
 80032e8:	1b2d      	subs	r5, r5, r4
 80032ea:	460c      	mov	r4, r1
 80032ec:	2d00      	cmp	r5, #0
 80032ee:	dd15      	ble.n	800331c <_OnPaint+0xc8>
 80032f0:	6990      	ldr	r0, [r2, #24]
 80032f2:	f007 fe60 	bl	800afb6 <GUI_SetColor>
 80032f6:	f04f 32ff 	mov.w	r2, #4294967295
 80032fa:	2301      	movs	r3, #1
 80032fc:	e88d 000c 	stmia.w	sp, {r2, r3}
 8003300:	9a07      	ldr	r2, [sp, #28]
 8003302:	b23f      	sxth	r7, r7
 8003304:	f892 3029 	ldrb.w	r3, [r2, #41]	; 0x29
 8003308:	9302      	str	r3, [sp, #8]
 800330a:	ebc9 0907 	rsb	r9, r9, r7
 800330e:	4630      	mov	r0, r6
 8003310:	4629      	mov	r1, r5
 8003312:	4622      	mov	r2, r4
 8003314:	eb09 0308 	add.w	r3, r9, r8
 8003318:	f006 ffd6 	bl	800a2c8 <GUI_DrawGraphEx>
 800331c:	a806      	add	r0, sp, #24
 800331e:	f008 fab9 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003322:	a805      	add	r0, sp, #20
 8003324:	f008 fab6 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003328:	a807      	add	r0, sp, #28
 800332a:	f008 fab3 	bl	800b894 <GUI_ALLOC_UnlockH>
 800332e:	b00b      	add	sp, #44	; 0x2c
 8003330:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003334 <_InvalidateNewItem>:
 8003334:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003336:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800333a:	2b01      	cmp	r3, #1
 800333c:	4604      	mov	r4, r0
 800333e:	6880      	ldr	r0, [r0, #8]
 8003340:	d127      	bne.n	8003392 <_InvalidateNewItem+0x5e>
 8003342:	a902      	add	r1, sp, #8
 8003344:	f001 fd02 	bl	8004d4c <WM_GetInsideRectExScrollbar>
 8003348:	68a0      	ldr	r0, [r4, #8]
 800334a:	f008 fa95 	bl	800b878 <GUI_ALLOC_LockH>
 800334e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8003352:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8003354:	9001      	str	r0, [sp, #4]
 8003356:	4413      	add	r3, r2
 8003358:	f8ad 300a 	strh.w	r3, [sp, #10]
 800335c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8003360:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8003362:	1ad3      	subs	r3, r2, r3
 8003364:	f8ad 300e 	strh.w	r3, [sp, #14]
 8003368:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800336a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800336e:	4413      	add	r3, r2
 8003370:	6922      	ldr	r2, [r4, #16]
 8003372:	4413      	add	r3, r2
 8003374:	b29b      	uxth	r3, r3
 8003376:	1e9a      	subs	r2, r3, #2
 8003378:	a801      	add	r0, sp, #4
 800337a:	3b01      	subs	r3, #1
 800337c:	f8ad 2008 	strh.w	r2, [sp, #8]
 8003380:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003384:	f008 fa86 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003388:	68a0      	ldr	r0, [r4, #8]
 800338a:	a902      	add	r1, sp, #8
 800338c:	f002 fc1c 	bl	8005bc8 <WM_InvalidateRect>
 8003390:	e001      	b.n	8003396 <_InvalidateNewItem+0x62>
 8003392:	f000 fb74 	bl	8003a7e <GRAPH__InvalidateGraph>
 8003396:	b004      	add	sp, #16
 8003398:	bd10      	pop	{r4, pc}
	...

0800339c <GRAPH_DATA_YT_Create>:
 800339c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80033a0:	4680      	mov	r8, r0
 80033a2:	202c      	movs	r0, #44	; 0x2c
 80033a4:	460e      	mov	r6, r1
 80033a6:	4617      	mov	r7, r2
 80033a8:	461d      	mov	r5, r3
 80033aa:	f008 fc5f 	bl	800bc6c <GUI_ALLOC_AllocZero>
 80033ae:	4604      	mov	r4, r0
 80033b0:	b320      	cbz	r0, 80033fc <GRAPH_DATA_YT_Create+0x60>
 80033b2:	0070      	lsls	r0, r6, #1
 80033b4:	f008 fc5a 	bl	800bc6c <GUI_ALLOC_AllocZero>
 80033b8:	4681      	mov	r9, r0
 80033ba:	b160      	cbz	r0, 80033d6 <GRAPH_DATA_YT_Create+0x3a>
 80033bc:	b15f      	cbz	r7, 80033d6 <GRAPH_DATA_YT_Create+0x3a>
 80033be:	b155      	cbz	r5, 80033d6 <GRAPH_DATA_YT_Create+0x3a>
 80033c0:	f008 fa5a 	bl	800b878 <GUI_ALLOC_LockH>
 80033c4:	4b0f      	ldr	r3, [pc, #60]	; (8003404 <GRAPH_DATA_YT_Create+0x68>)
 80033c6:	9001      	str	r0, [sp, #4]
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	4639      	mov	r1, r7
 80033cc:	006a      	lsls	r2, r5, #1
 80033ce:	4798      	blx	r3
 80033d0:	a801      	add	r0, sp, #4
 80033d2:	f008 fa5f 	bl	800b894 <GUI_ALLOC_UnlockH>
 80033d6:	4620      	mov	r0, r4
 80033d8:	f008 fa4e 	bl	800b878 <GUI_ALLOC_LockH>
 80033dc:	4b0a      	ldr	r3, [pc, #40]	; (8003408 <GRAPH_DATA_YT_Create+0x6c>)
 80033de:	9001      	str	r0, [sp, #4]
 80033e0:	60c3      	str	r3, [r0, #12]
 80033e2:	4b0a      	ldr	r3, [pc, #40]	; (800340c <GRAPH_DATA_YT_Create+0x70>)
 80033e4:	6003      	str	r3, [r0, #0]
 80033e6:	4b0a      	ldr	r3, [pc, #40]	; (8003410 <GRAPH_DATA_YT_Create+0x74>)
 80033e8:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 80033ec:	f8c0 8018 	str.w	r8, [r0, #24]
 80033f0:	6146      	str	r6, [r0, #20]
 80033f2:	6105      	str	r5, [r0, #16]
 80033f4:	6043      	str	r3, [r0, #4]
 80033f6:	a801      	add	r0, sp, #4
 80033f8:	f008 fa4c 	bl	800b894 <GUI_ALLOC_UnlockH>
 80033fc:	4620      	mov	r0, r4
 80033fe:	b003      	add	sp, #12
 8003400:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003404:	200000a8 	.word	0x200000a8
 8003408:	08003335 	.word	0x08003335
 800340c:	08003255 	.word	0x08003255
 8003410:	0800322d 	.word	0x0800322d

08003414 <GRAPH_DATA_YT_AddValue>:
 8003414:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003416:	f8ad 1006 	strh.w	r1, [sp, #6]
 800341a:	f008 fa2d 	bl	800b878 <GUI_ALLOC_LockH>
 800341e:	9002      	str	r0, [sp, #8]
 8003420:	b168      	cbz	r0, 800343e <GRAPH_DATA_YT_AddValue+0x2a>
 8003422:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003424:	f008 fa28 	bl	800b878 <GUI_ALLOC_LockH>
 8003428:	f10d 0206 	add.w	r2, sp, #6
 800342c:	4601      	mov	r1, r0
 800342e:	9003      	str	r0, [sp, #12]
 8003430:	2302      	movs	r3, #2
 8003432:	9802      	ldr	r0, [sp, #8]
 8003434:	f000 fb52 	bl	8003adc <GRAPH__AddValue>
 8003438:	a803      	add	r0, sp, #12
 800343a:	f008 fa2b 	bl	800b894 <GUI_ALLOC_UnlockH>
 800343e:	a802      	add	r0, sp, #8
 8003440:	f008 fa28 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003444:	b005      	add	sp, #20
 8003446:	f85d fb04 	ldr.w	pc, [sp], #4

0800344a <GRAPH_DATA_YT_SetAlign>:
 800344a:	b513      	push	{r0, r1, r4, lr}
 800344c:	460c      	mov	r4, r1
 800344e:	f008 fa13 	bl	800b878 <GUI_ALLOC_LockH>
 8003452:	9001      	str	r0, [sp, #4]
 8003454:	b140      	cbz	r0, 8003468 <GRAPH_DATA_YT_SetAlign+0x1e>
 8003456:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800345a:	42a3      	cmp	r3, r4
 800345c:	d004      	beq.n	8003468 <GRAPH_DATA_YT_SetAlign+0x1e>
 800345e:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 8003462:	6880      	ldr	r0, [r0, #8]
 8003464:	f002 fbec 	bl	8005c40 <WM_InvalidateWindow>
 8003468:	a801      	add	r0, sp, #4
 800346a:	f008 fa13 	bl	800b894 <GUI_ALLOC_UnlockH>
 800346e:	b002      	add	sp, #8
 8003470:	bd10      	pop	{r4, pc}

08003472 <GRAPH_DATA_YT_Clear>:
 8003472:	b513      	push	{r0, r1, r4, lr}
 8003474:	b160      	cbz	r0, 8003490 <GRAPH_DATA_YT_Clear+0x1e>
 8003476:	f008 f9ff 	bl	800b878 <GUI_ALLOC_LockH>
 800347a:	ac02      	add	r4, sp, #8
 800347c:	2300      	movs	r3, #0
 800347e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8003482:	6103      	str	r3, [r0, #16]
 8003484:	6880      	ldr	r0, [r0, #8]
 8003486:	f002 fbdb 	bl	8005c40 <WM_InvalidateWindow>
 800348a:	4620      	mov	r0, r4
 800348c:	f008 fa02 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003490:	b002      	add	sp, #8
 8003492:	bd10      	pop	{r4, pc}

08003494 <_ManageScrollbars>:
 8003494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003496:	b08b      	sub	sp, #44	; 0x2c
 8003498:	a902      	add	r1, sp, #8
 800349a:	4604      	mov	r4, r0
 800349c:	f001 fc56 	bl	8004d4c <WM_GetInsideRectExScrollbar>
 80034a0:	4620      	mov	r0, r4
 80034a2:	f008 f9e9 	bl	800b878 <GUI_ALLOC_LockH>
 80034a6:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80034aa:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80034ae:	9001      	str	r0, [sp, #4]
 80034b0:	1ab6      	subs	r6, r6, r2
 80034b2:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80034b4:	6d45      	ldr	r5, [r0, #84]	; 0x54
 80034b6:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 80034b8:	1ab6      	subs	r6, r6, r2
 80034ba:	6e02      	ldr	r2, [r0, #96]	; 0x60
 80034bc:	1ab6      	subs	r6, r6, r2
 80034be:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 80034c2:	0751      	lsls	r1, r2, #29
 80034c4:	d407      	bmi.n	80034d6 <_ManageScrollbars+0x42>
 80034c6:	6f41      	ldr	r1, [r0, #116]	; 0x74
 80034c8:	42b1      	cmp	r1, r6
 80034ca:	4620      	mov	r0, r4
 80034cc:	bfd4      	ite	le
 80034ce:	2100      	movle	r1, #0
 80034d0:	2101      	movgt	r1, #1
 80034d2:	f001 f963 	bl	800479c <WM_SetScrollbarV>
 80034d6:	9b01      	ldr	r3, [sp, #4]
 80034d8:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80034dc:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80034de:	67da      	str	r2, [r3, #124]	; 0x7c
 80034e0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80034e4:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 80034e8:	1a8a      	subs	r2, r1, r2
 80034ea:	1b55      	subs	r5, r2, r5
 80034ec:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 80034f0:	0792      	lsls	r2, r2, #30
 80034f2:	ebc7 0505 	rsb	r5, r7, r5
 80034f6:	d407      	bmi.n	8003508 <_ManageScrollbars+0x74>
 80034f8:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80034fa:	42a9      	cmp	r1, r5
 80034fc:	4620      	mov	r0, r4
 80034fe:	bfd4      	ite	le
 8003500:	2100      	movle	r1, #0
 8003502:	2101      	movgt	r1, #1
 8003504:	f001 f948 	bl	8004798 <WM_SetScrollbarH>
 8003508:	9801      	ldr	r0, [sp, #4]
 800350a:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800350c:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8003510:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 8003514:	307c      	adds	r0, #124	; 0x7c
 8003516:	f001 faf5 	bl	8004b04 <WM_CheckScrollBounds>
 800351a:	9801      	ldr	r0, [sp, #4]
 800351c:	3088      	adds	r0, #136	; 0x88
 800351e:	f001 faf1 	bl	8004b04 <WM_CheckScrollBounds>
 8003522:	9b01      	ldr	r3, [sp, #4]
 8003524:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 8003528:	ca07      	ldmia	r2, {r0, r1, r2}
 800352a:	3388      	adds	r3, #136	; 0x88
 800352c:	ae07      	add	r6, sp, #28
 800352e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8003532:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003536:	ad04      	add	r5, sp, #16
 8003538:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800353c:	a801      	add	r0, sp, #4
 800353e:	f008 f9a9 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003542:	4620      	mov	r0, r4
 8003544:	4631      	mov	r1, r6
 8003546:	462a      	mov	r2, r5
 8003548:	f008 fe01 	bl	800c14e <WIDGET__SetScrollState>
 800354c:	b00b      	add	sp, #44	; 0x2c
 800354e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003550 <_OnScrollValueChanged>:
 8003550:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003552:	460c      	mov	r4, r1
 8003554:	4606      	mov	r6, r0
 8003556:	f008 f98f 	bl	800b878 <GUI_ALLOC_LockH>
 800355a:	9001      	str	r0, [sp, #4]
 800355c:	4620      	mov	r0, r4
 800355e:	f009 f935 	bl	800c7cc <SCROLLBAR_GetValue>
 8003562:	4605      	mov	r5, r0
 8003564:	4620      	mov	r0, r4
 8003566:	f001 faf5 	bl	8004b54 <WM_GetId>
 800356a:	9b01      	ldr	r3, [sp, #4]
 800356c:	28fe      	cmp	r0, #254	; 0xfe
 800356e:	bf0c      	ite	eq
 8003570:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 8003574:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 8003578:	4630      	mov	r0, r6
 800357a:	f002 fb61 	bl	8005c40 <WM_InvalidateWindow>
 800357e:	a801      	add	r0, sp, #4
 8003580:	f008 f988 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003584:	b002      	add	sp, #8
 8003586:	bd70      	pop	{r4, r5, r6, pc}

08003588 <GRAPH_Callback>:
 8003588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800358c:	6844      	ldr	r4, [r0, #4]
 800358e:	6806      	ldr	r6, [r0, #0]
 8003590:	4605      	mov	r5, r0
 8003592:	b097      	sub	sp, #92	; 0x5c
 8003594:	4620      	mov	r0, r4
 8003596:	4629      	mov	r1, r5
 8003598:	f008 fd39 	bl	800c00e <WIDGET_HandleActive>
 800359c:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 80035a0:	4607      	mov	r7, r0
 80035a2:	d102      	bne.n	80035aa <GRAPH_Callback+0x22>
 80035a4:	4620      	mov	r0, r4
 80035a6:	f7ff ff75 	bl	8003494 <_ManageScrollbars>
 80035aa:	2f00      	cmp	r7, #0
 80035ac:	f000 8264 	beq.w	8003a78 <GRAPH_Callback+0x4f0>
 80035b0:	682b      	ldr	r3, [r5, #0]
 80035b2:	2b0b      	cmp	r3, #11
 80035b4:	f000 8200 	beq.w	80039b8 <GRAPH_Callback+0x430>
 80035b8:	dc06      	bgt.n	80035c8 <GRAPH_Callback+0x40>
 80035ba:	2b05      	cmp	r3, #5
 80035bc:	f040 8259 	bne.w	8003a72 <GRAPH_Callback+0x4ea>
 80035c0:	4620      	mov	r0, r4
 80035c2:	f7ff ff67 	bl	8003494 <_ManageScrollbars>
 80035c6:	e254      	b.n	8003a72 <GRAPH_Callback+0x4ea>
 80035c8:	2b0f      	cmp	r3, #15
 80035ca:	d003      	beq.n	80035d4 <GRAPH_Callback+0x4c>
 80035cc:	2b26      	cmp	r3, #38	; 0x26
 80035ce:	f000 823d 	beq.w	8003a4c <GRAPH_Callback+0x4c4>
 80035d2:	e24e      	b.n	8003a72 <GRAPH_Callback+0x4ea>
 80035d4:	68ed      	ldr	r5, [r5, #12]
 80035d6:	9502      	str	r5, [sp, #8]
 80035d8:	4620      	mov	r0, r4
 80035da:	f008 f94d 	bl	800b878 <GUI_ALLOC_LockH>
 80035de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80035e0:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 80035e8:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 80035ec:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 80035f0:	900d      	str	r0, [sp, #52]	; 0x34
 80035f2:	ad0e      	add	r5, sp, #56	; 0x38
 80035f4:	4628      	mov	r0, r5
 80035f6:	9303      	str	r3, [sp, #12]
 80035f8:	9101      	str	r1, [sp, #4]
 80035fa:	f001 fa5b 	bl	8004ab4 <WM_GetClientRect>
 80035fe:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003600:	4629      	mov	r1, r5
 8003602:	f008 fdd5 	bl	800c1b0 <WIDGET__EFFECT_DrawDownRect>
 8003606:	e895 0003 	ldmia.w	r5, {r0, r1}
 800360a:	ab12      	add	r3, sp, #72	; 0x48
 800360c:	e883 0003 	stmia.w	r3, {r0, r1}
 8003610:	9803      	ldr	r0, [sp, #12]
 8003612:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 8003616:	b282      	uxth	r2, r0
 8003618:	4459      	add	r1, fp
 800361a:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 800361e:	4411      	add	r1, r2
 8003620:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 8003624:	eb02 010a 	add.w	r1, r2, sl
 8003628:	1a41      	subs	r1, r0, r1
 800362a:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 800362e:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 8003632:	4411      	add	r1, r2
 8003634:	4449      	add	r1, r9
 8003636:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 800363a:	9901      	ldr	r1, [sp, #4]
 800363c:	440a      	add	r2, r1
 800363e:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8003642:	1a8a      	subs	r2, r1, r2
 8003644:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8003648:	e893 0003 	ldmia.w	r3, {r0, r1}
 800364c:	aa10      	add	r2, sp, #64	; 0x40
 800364e:	e882 0003 	stmia.w	r2, {r0, r1}
 8003652:	4610      	mov	r0, r2
 8003654:	f001 fd34 	bl	80050c0 <WM_SetUserClipRect>
 8003658:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800365a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800365c:	f007 fca9 	bl	800afb2 <GUI_SetBkColor>
 8003660:	f007 fa96 	bl	800ab90 <GUI_Clear>
 8003664:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003666:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800366a:	b113      	cbz	r3, 8003672 <GRAPH_Callback+0xea>
 800366c:	4620      	mov	r0, r4
 800366e:	2100      	movs	r1, #0
 8003670:	4798      	blx	r3
 8003672:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8003674:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 8003678:	2b00      	cmp	r3, #0
 800367a:	f000 808d 	beq.w	8003798 <GRAPH_Callback+0x210>
 800367e:	4620      	mov	r0, r4
 8003680:	a914      	add	r1, sp, #80	; 0x50
 8003682:	f001 fb63 	bl	8004d4c <WM_GetInsideRectExScrollbar>
 8003686:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003688:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8003692:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 8003696:	9304      	str	r3, [sp, #16]
 8003698:	9007      	str	r0, [sp, #28]
 800369a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800369e:	6c28      	ldr	r0, [r5, #64]	; 0x40
 80036a0:	9205      	str	r2, [sp, #20]
 80036a2:	9306      	str	r3, [sp, #24]
 80036a4:	9108      	str	r1, [sp, #32]
 80036a6:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 80036a8:	6caf      	ldr	r7, [r5, #72]	; 0x48
 80036aa:	f007 fc84 	bl	800afb6 <GUI_SetColor>
 80036ae:	f007 fbb7 	bl	800ae20 <GUI_GetLineStyle>
 80036b2:	9009      	str	r0, [sp, #36]	; 0x24
 80036b4:	b916      	cbnz	r6, 80036bc <GRAPH_Callback+0x134>
 80036b6:	2f00      	cmp	r7, #0
 80036b8:	d14b      	bne.n	8003752 <GRAPH_Callback+0x1ca>
 80036ba:	e046      	b.n	800374a <GRAPH_Callback+0x1c2>
 80036bc:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80036be:	eb06 0c03 	add.w	ip, r6, r3
 80036c2:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 80036c6:	07db      	lsls	r3, r3, #31
 80036c8:	bf54      	ite	pl
 80036ca:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 80036ce:	2300      	movmi	r3, #0
 80036d0:	eb0c 0803 	add.w	r8, ip, r3
 80036d4:	45b0      	cmp	r8, r6
 80036d6:	db02      	blt.n	80036de <GRAPH_Callback+0x156>
 80036d8:	ebc6 0808 	rsb	r8, r6, r8
 80036dc:	e7fa      	b.n	80036d4 <GRAPH_Callback+0x14c>
 80036de:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 80036e2:	f007 fc77 	bl	800afd4 <GUI_SetLineStyle>
 80036e6:	9805      	ldr	r0, [sp, #20]
 80036e8:	9a01      	ldr	r2, [sp, #4]
 80036ea:	b203      	sxth	r3, r0
 80036ec:	9806      	ldr	r0, [sp, #24]
 80036ee:	444a      	add	r2, r9
 80036f0:	b201      	sxth	r1, r0
 80036f2:	f1c2 0201 	rsb	r2, r2, #1
 80036f6:	1a5b      	subs	r3, r3, r1
 80036f8:	4413      	add	r3, r2
 80036fa:	4598      	cmp	r8, r3
 80036fc:	dadb      	bge.n	80036b6 <GRAPH_Callback+0x12e>
 80036fe:	9804      	ldr	r0, [sp, #16]
 8003700:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8003704:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8003708:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 800370c:	4448      	add	r0, r9
 800370e:	4440      	add	r0, r8
 8003710:	4459      	add	r1, fp
 8003712:	ebca 0303 	rsb	r3, sl, r3
 8003716:	b11a      	cbz	r2, 8003720 <GRAPH_Callback+0x198>
 8003718:	4602      	mov	r2, r0
 800371a:	f006 fd0d 	bl	800a138 <GUI_DrawLine>
 800371e:	e002      	b.n	8003726 <GRAPH_Callback+0x19e>
 8003720:	461a      	mov	r2, r3
 8003722:	f006 fd81 	bl	800a228 <GUI_DrawVLine>
 8003726:	44b0      	add	r8, r6
 8003728:	e7dd      	b.n	80036e6 <GRAPH_Callback+0x15e>
 800372a:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 800372e:	f007 fc51 	bl	800afd4 <GUI_SetLineStyle>
 8003732:	9907      	ldr	r1, [sp, #28]
 8003734:	9808      	ldr	r0, [sp, #32]
 8003736:	b20b      	sxth	r3, r1
 8003738:	eb0b 020a 	add.w	r2, fp, sl
 800373c:	b201      	sxth	r1, r0
 800373e:	f1c2 0201 	rsb	r2, r2, #1
 8003742:	1a5b      	subs	r3, r3, r1
 8003744:	4413      	add	r3, r2
 8003746:	429e      	cmp	r6, r3
 8003748:	db0c      	blt.n	8003764 <GRAPH_Callback+0x1dc>
 800374a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800374c:	f007 fc42 	bl	800afd4 <GUI_SetLineStyle>
 8003750:	e022      	b.n	8003798 <GRAPH_Callback+0x210>
 8003752:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8003754:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8003758:	443e      	add	r6, r7
 800375a:	1af6      	subs	r6, r6, r3
 800375c:	42be      	cmp	r6, r7
 800375e:	dbe4      	blt.n	800372a <GRAPH_Callback+0x1a2>
 8003760:	1bf6      	subs	r6, r6, r7
 8003762:	e7fb      	b.n	800375c <GRAPH_Callback+0x1d4>
 8003764:	9801      	ldr	r0, [sp, #4]
 8003766:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 800376a:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 800376e:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 8003772:	1a12      	subs	r2, r2, r0
 8003774:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8003778:	ebca 0101 	rsb	r1, sl, r1
 800377c:	1b89      	subs	r1, r1, r6
 800377e:	444b      	add	r3, r9
 8003780:	b120      	cbz	r0, 800378c <GRAPH_Callback+0x204>
 8003782:	4618      	mov	r0, r3
 8003784:	460b      	mov	r3, r1
 8003786:	f006 fcd7 	bl	800a138 <GUI_DrawLine>
 800378a:	e003      	b.n	8003794 <GRAPH_Callback+0x20c>
 800378c:	4608      	mov	r0, r1
 800378e:	4619      	mov	r1, r3
 8003790:	f006 fcf0 	bl	800a174 <GUI_DrawHLine>
 8003794:	443e      	add	r6, r7
 8003796:	e7cc      	b.n	8003732 <GRAPH_Callback+0x1aa>
 8003798:	9a03      	ldr	r2, [sp, #12]
 800379a:	a812      	add	r0, sp, #72	; 0x48
 800379c:	a90e      	add	r1, sp, #56	; 0x38
 800379e:	f005 fd96 	bl	80092ce <GUI__ReduceRect>
 80037a2:	a812      	add	r0, sp, #72	; 0x48
 80037a4:	f001 fc8c 	bl	80050c0 <WM_SetUserClipRect>
 80037a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80037aa:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 80037ae:	2aff      	cmp	r2, #255	; 0xff
 80037b0:	f000 80a3 	beq.w	80038fa <GRAPH_Callback+0x372>
 80037b4:	f1b9 0f00 	cmp.w	r9, #0
 80037b8:	d108      	bne.n	80037cc <GRAPH_Callback+0x244>
 80037ba:	f1bb 0f00 	cmp.w	fp, #0
 80037be:	d105      	bne.n	80037cc <GRAPH_Callback+0x244>
 80037c0:	9901      	ldr	r1, [sp, #4]
 80037c2:	b919      	cbnz	r1, 80037cc <GRAPH_Callback+0x244>
 80037c4:	f1ba 0f00 	cmp.w	sl, #0
 80037c8:	f000 8097 	beq.w	80038fa <GRAPH_Callback+0x372>
 80037cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80037ce:	a914      	add	r1, sp, #80	; 0x50
 80037d0:	4620      	mov	r0, r4
 80037d2:	6815      	ldr	r5, [r2, #0]
 80037d4:	9300      	str	r3, [sp, #0]
 80037d6:	f001 fab9 	bl	8004d4c <WM_GetInsideRectExScrollbar>
 80037da:	f001 fa33 	bl	8004c44 <WM_GetOrgX>
 80037de:	9004      	str	r0, [sp, #16]
 80037e0:	f001 fa38 	bl	8004c54 <WM_GetOrgY>
 80037e4:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 80037e8:	9b00      	ldr	r3, [sp, #0]
 80037ea:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 80037ee:	9005      	str	r0, [sp, #20]
 80037f0:	445a      	add	r2, fp
 80037f2:	9203      	str	r2, [sp, #12]
 80037f4:	9a01      	ldr	r2, [sp, #4]
 80037f6:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80037f8:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 80037fc:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 8003800:	1ab6      	subs	r6, r6, r2
 8003802:	f007 fbd6 	bl	800afb2 <GUI_SetBkColor>
 8003806:	9b00      	ldr	r3, [sp, #0]
 8003808:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800380a:	444f      	add	r7, r9
 800380c:	ebca 0808 	rsb	r8, sl, r8
 8003810:	f007 fbd1 	bl	800afb6 <GUI_SetColor>
 8003814:	f1b9 0f00 	cmp.w	r9, #0
 8003818:	d01b      	beq.n	8003852 <GRAPH_Callback+0x2ca>
 800381a:	9802      	ldr	r0, [sp, #8]
 800381c:	9904      	ldr	r1, [sp, #16]
 800381e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8003822:	f109 32ff 	add.w	r2, r9, #4294967295
 8003826:	442a      	add	r2, r5
 8003828:	1a5b      	subs	r3, r3, r1
 800382a:	4293      	cmp	r3, r2
 800382c:	dc11      	bgt.n	8003852 <GRAPH_Callback+0x2ca>
 800382e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8003832:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8003836:	ebca 0303 	rsb	r3, sl, r3
 800383a:	eb05 010b 	add.w	r1, r5, fp
 800383e:	3301      	adds	r3, #1
 8003840:	f007 f974 	bl	800ab2c <GUI_ClearRect>
 8003844:	9a03      	ldr	r2, [sp, #12]
 8003846:	1e78      	subs	r0, r7, #1
 8003848:	1e51      	subs	r1, r2, #1
 800384a:	f108 0201 	add.w	r2, r8, #1
 800384e:	f006 fceb 	bl	800a228 <GUI_DrawVLine>
 8003852:	f1bb 0f00 	cmp.w	fp, #0
 8003856:	d017      	beq.n	8003888 <GRAPH_Callback+0x300>
 8003858:	9802      	ldr	r0, [sp, #8]
 800385a:	9905      	ldr	r1, [sp, #20]
 800385c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8003860:	f10b 33ff 	add.w	r3, fp, #4294967295
 8003864:	442b      	add	r3, r5
 8003866:	1a52      	subs	r2, r2, r1
 8003868:	429a      	cmp	r2, r3
 800386a:	dc0d      	bgt.n	8003888 <GRAPH_Callback+0x300>
 800386c:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8003870:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8003874:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8003878:	f007 f958 	bl	800ab2c <GUI_ClearRect>
 800387c:	9a03      	ldr	r2, [sp, #12]
 800387e:	1e79      	subs	r1, r7, #1
 8003880:	1e50      	subs	r0, r2, #1
 8003882:	1c72      	adds	r2, r6, #1
 8003884:	f006 fc76 	bl	800a174 <GUI_DrawHLine>
 8003888:	9b01      	ldr	r3, [sp, #4]
 800388a:	b1d3      	cbz	r3, 80038c2 <GRAPH_Callback+0x33a>
 800388c:	9902      	ldr	r1, [sp, #8]
 800388e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8003892:	1ad0      	subs	r0, r2, r3
 8003894:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8003898:	9904      	ldr	r1, [sp, #16]
 800389a:	3001      	adds	r0, #1
 800389c:	1a5b      	subs	r3, r3, r1
 800389e:	4283      	cmp	r3, r0
 80038a0:	db0f      	blt.n	80038c2 <GRAPH_Callback+0x33a>
 80038a2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80038a6:	ebca 0303 	rsb	r3, sl, r3
 80038aa:	eb05 010b 	add.w	r1, r5, fp
 80038ae:	3301      	adds	r3, #1
 80038b0:	f007 f93c 	bl	800ab2c <GUI_ClearRect>
 80038b4:	9a03      	ldr	r2, [sp, #12]
 80038b6:	1c70      	adds	r0, r6, #1
 80038b8:	1e51      	subs	r1, r2, #1
 80038ba:	f108 0201 	add.w	r2, r8, #1
 80038be:	f006 fcb3 	bl	800a228 <GUI_DrawVLine>
 80038c2:	f1ba 0f00 	cmp.w	sl, #0
 80038c6:	d018      	beq.n	80038fa <GRAPH_Callback+0x372>
 80038c8:	9802      	ldr	r0, [sp, #8]
 80038ca:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80038ce:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80038d2:	9805      	ldr	r0, [sp, #20]
 80038d4:	ebca 0103 	rsb	r1, sl, r3
 80038d8:	3101      	adds	r1, #1
 80038da:	ebc0 0a02 	rsb	sl, r0, r2
 80038de:	458a      	cmp	sl, r1
 80038e0:	db0b      	blt.n	80038fa <GRAPH_Callback+0x372>
 80038e2:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 80038e6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80038ea:	f007 f91f 	bl	800ab2c <GUI_ClearRect>
 80038ee:	f108 0001 	add.w	r0, r8, #1
 80038f2:	1e79      	subs	r1, r7, #1
 80038f4:	1c72      	adds	r2, r6, #1
 80038f6:	f006 fc3d 	bl	800a174 <GUI_DrawHLine>
 80038fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80038fc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003900:	b113      	cbz	r3, 8003908 <GRAPH_Callback+0x380>
 8003902:	4620      	mov	r0, r4
 8003904:	2101      	movs	r1, #1
 8003906:	4798      	blx	r3
 8003908:	a810      	add	r0, sp, #64	; 0x40
 800390a:	f001 fbd9 	bl	80050c0 <WM_SetUserClipRect>
 800390e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003910:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003912:	f009 f8eb 	bl	800caec <GUI_ARRAY_GetNumItems>
 8003916:	2500      	movs	r5, #0
 8003918:	4607      	mov	r7, r0
 800391a:	42bd      	cmp	r5, r7
 800391c:	d01a      	beq.n	8003954 <GRAPH_Callback+0x3cc>
 800391e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003920:	4629      	mov	r1, r5
 8003922:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003924:	f009 f964 	bl	800cbf0 <GUI_ARRAY_GethItem>
 8003928:	f007 ffa6 	bl	800b878 <GUI_ALLOC_LockH>
 800392c:	9014      	str	r0, [sp, #80]	; 0x50
 800392e:	b178      	cbz	r0, 8003950 <GRAPH_Callback+0x3c8>
 8003930:	6806      	ldr	r6, [r0, #0]
 8003932:	4630      	mov	r0, r6
 8003934:	f007 ffa0 	bl	800b878 <GUI_ALLOC_LockH>
 8003938:	900c      	str	r0, [sp, #48]	; 0x30
 800393a:	b130      	cbz	r0, 800394a <GRAPH_Callback+0x3c2>
 800393c:	6803      	ldr	r3, [r0, #0]
 800393e:	9902      	ldr	r1, [sp, #8]
 8003940:	4630      	mov	r0, r6
 8003942:	4798      	blx	r3
 8003944:	a80c      	add	r0, sp, #48	; 0x30
 8003946:	f007 ffa5 	bl	800b894 <GUI_ALLOC_UnlockH>
 800394a:	a814      	add	r0, sp, #80	; 0x50
 800394c:	f007 ffa2 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003950:	3501      	adds	r5, #1
 8003952:	e7e2      	b.n	800391a <GRAPH_Callback+0x392>
 8003954:	a812      	add	r0, sp, #72	; 0x48
 8003956:	f001 fbb3 	bl	80050c0 <WM_SetUserClipRect>
 800395a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800395c:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800395e:	f009 f8c5 	bl	800caec <GUI_ARRAY_GetNumItems>
 8003962:	2500      	movs	r5, #0
 8003964:	4607      	mov	r7, r0
 8003966:	42bd      	cmp	r5, r7
 8003968:	d01a      	beq.n	80039a0 <GRAPH_Callback+0x418>
 800396a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800396c:	4629      	mov	r1, r5
 800396e:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003970:	f009 f93e 	bl	800cbf0 <GUI_ARRAY_GethItem>
 8003974:	f007 ff80 	bl	800b878 <GUI_ALLOC_LockH>
 8003978:	9014      	str	r0, [sp, #80]	; 0x50
 800397a:	b178      	cbz	r0, 800399c <GRAPH_Callback+0x414>
 800397c:	6806      	ldr	r6, [r0, #0]
 800397e:	4630      	mov	r0, r6
 8003980:	f007 ff7a 	bl	800b878 <GUI_ALLOC_LockH>
 8003984:	900b      	str	r0, [sp, #44]	; 0x2c
 8003986:	b130      	cbz	r0, 8003996 <GRAPH_Callback+0x40e>
 8003988:	6803      	ldr	r3, [r0, #0]
 800398a:	9902      	ldr	r1, [sp, #8]
 800398c:	4630      	mov	r0, r6
 800398e:	4798      	blx	r3
 8003990:	a80b      	add	r0, sp, #44	; 0x2c
 8003992:	f007 ff7f 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003996:	a814      	add	r0, sp, #80	; 0x50
 8003998:	f007 ff7c 	bl	800b894 <GUI_ALLOC_UnlockH>
 800399c:	3501      	adds	r5, #1
 800399e:	e7e2      	b.n	8003966 <GRAPH_Callback+0x3de>
 80039a0:	2000      	movs	r0, #0
 80039a2:	f001 fb8d 	bl	80050c0 <WM_SetUserClipRect>
 80039a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80039a8:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80039ac:	b113      	cbz	r3, 80039b4 <GRAPH_Callback+0x42c>
 80039ae:	4620      	mov	r0, r4
 80039b0:	2102      	movs	r1, #2
 80039b2:	4798      	blx	r3
 80039b4:	a80d      	add	r0, sp, #52	; 0x34
 80039b6:	e046      	b.n	8003a46 <GRAPH_Callback+0x4be>
 80039b8:	4620      	mov	r0, r4
 80039ba:	f007 ff5d 	bl	800b878 <GUI_ALLOC_LockH>
 80039be:	9012      	str	r0, [sp, #72]	; 0x48
 80039c0:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80039c2:	f009 f893 	bl	800caec <GUI_ARRAY_GetNumItems>
 80039c6:	2400      	movs	r4, #0
 80039c8:	4606      	mov	r6, r0
 80039ca:	42b4      	cmp	r4, r6
 80039cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80039ce:	da18      	bge.n	8003a02 <GRAPH_Callback+0x47a>
 80039d0:	6e58      	ldr	r0, [r3, #100]	; 0x64
 80039d2:	4621      	mov	r1, r4
 80039d4:	f009 f90c 	bl	800cbf0 <GUI_ARRAY_GethItem>
 80039d8:	f007 ff4e 	bl	800b878 <GUI_ALLOC_LockH>
 80039dc:	9014      	str	r0, [sp, #80]	; 0x50
 80039de:	b170      	cbz	r0, 80039fe <GRAPH_Callback+0x476>
 80039e0:	6805      	ldr	r5, [r0, #0]
 80039e2:	4628      	mov	r0, r5
 80039e4:	f007 ff48 	bl	800b878 <GUI_ALLOC_LockH>
 80039e8:	9010      	str	r0, [sp, #64]	; 0x40
 80039ea:	b128      	cbz	r0, 80039f8 <GRAPH_Callback+0x470>
 80039ec:	6847      	ldr	r7, [r0, #4]
 80039ee:	a810      	add	r0, sp, #64	; 0x40
 80039f0:	f007 ff50 	bl	800b894 <GUI_ALLOC_UnlockH>
 80039f4:	4628      	mov	r0, r5
 80039f6:	47b8      	blx	r7
 80039f8:	a814      	add	r0, sp, #80	; 0x50
 80039fa:	f007 ff4b 	bl	800b894 <GUI_ALLOC_UnlockH>
 80039fe:	3401      	adds	r4, #1
 8003a00:	e7e3      	b.n	80039ca <GRAPH_Callback+0x442>
 8003a02:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003a04:	f009 f872 	bl	800caec <GUI_ARRAY_GetNumItems>
 8003a08:	2400      	movs	r4, #0
 8003a0a:	4605      	mov	r5, r0
 8003a0c:	42ac      	cmp	r4, r5
 8003a0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003a10:	da0f      	bge.n	8003a32 <GRAPH_Callback+0x4aa>
 8003a12:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003a14:	4621      	mov	r1, r4
 8003a16:	f009 f8eb 	bl	800cbf0 <GUI_ARRAY_GethItem>
 8003a1a:	f007 ff2d 	bl	800b878 <GUI_ALLOC_LockH>
 8003a1e:	9014      	str	r0, [sp, #80]	; 0x50
 8003a20:	b128      	cbz	r0, 8003a2e <GRAPH_Callback+0x4a6>
 8003a22:	6800      	ldr	r0, [r0, #0]
 8003a24:	f007 ff62 	bl	800b8ec <GUI_ALLOC_Free>
 8003a28:	a814      	add	r0, sp, #80	; 0x50
 8003a2a:	f007 ff33 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003a2e:	3401      	adds	r4, #1
 8003a30:	e7ec      	b.n	8003a0c <GRAPH_Callback+0x484>
 8003a32:	ac16      	add	r4, sp, #88	; 0x58
 8003a34:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003a36:	f009 f8b2 	bl	800cb9e <GUI_ARRAY_Delete>
 8003a3a:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 8003a3e:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003a40:	f009 f8ad 	bl	800cb9e <GUI_ARRAY_Delete>
 8003a44:	4620      	mov	r0, r4
 8003a46:	f007 ff25 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003a4a:	e015      	b.n	8003a78 <GRAPH_Callback+0x4f0>
 8003a4c:	68eb      	ldr	r3, [r5, #12]
 8003a4e:	2b05      	cmp	r3, #5
 8003a50:	d10f      	bne.n	8003a72 <GRAPH_Callback+0x4ea>
 8003a52:	4620      	mov	r0, r4
 8003a54:	68ae      	ldr	r6, [r5, #8]
 8003a56:	f001 f955 	bl	8004d04 <WM_GetScrollbarV>
 8003a5a:	4286      	cmp	r6, r0
 8003a5c:	d005      	beq.n	8003a6a <GRAPH_Callback+0x4e2>
 8003a5e:	4620      	mov	r0, r4
 8003a60:	68ae      	ldr	r6, [r5, #8]
 8003a62:	f001 f94a 	bl	8004cfa <WM_GetScrollbarH>
 8003a66:	4286      	cmp	r6, r0
 8003a68:	d103      	bne.n	8003a72 <GRAPH_Callback+0x4ea>
 8003a6a:	6868      	ldr	r0, [r5, #4]
 8003a6c:	68a9      	ldr	r1, [r5, #8]
 8003a6e:	f7ff fd6f 	bl	8003550 <_OnScrollValueChanged>
 8003a72:	4628      	mov	r0, r5
 8003a74:	f002 fd12 	bl	800649c <WM_DefaultProc>
 8003a78:	b017      	add	sp, #92	; 0x5c
 8003a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003a7e <GRAPH__InvalidateGraph>:
 8003a7e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003a82:	4604      	mov	r4, r0
 8003a84:	f007 fef8 	bl	800b878 <GUI_ALLOC_LockH>
 8003a88:	4603      	mov	r3, r0
 8003a8a:	a804      	add	r0, sp, #16
 8003a8c:	f8d3 8054 	ldr.w	r8, [r3, #84]	; 0x54
 8003a90:	f840 3d0c 	str.w	r3, [r0, #-12]!
 8003a94:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 8003a96:	6dde      	ldr	r6, [r3, #92]	; 0x5c
 8003a98:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 8003a9a:	f007 fefb 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003a9e:	4620      	mov	r0, r4
 8003aa0:	a902      	add	r1, sp, #8
 8003aa2:	f001 f953 	bl	8004d4c <WM_GetInsideRectExScrollbar>
 8003aa6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8003aaa:	4498      	add	r8, r3
 8003aac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8003ab0:	f8ad 8008 	strh.w	r8, [sp, #8]
 8003ab4:	441f      	add	r7, r3
 8003ab6:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8003aba:	f8ad 700a 	strh.w	r7, [sp, #10]
 8003abe:	1b9e      	subs	r6, r3, r6
 8003ac0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8003ac4:	f8ad 600c 	strh.w	r6, [sp, #12]
 8003ac8:	1b5d      	subs	r5, r3, r5
 8003aca:	4620      	mov	r0, r4
 8003acc:	a902      	add	r1, sp, #8
 8003ace:	f8ad 500e 	strh.w	r5, [sp, #14]
 8003ad2:	f002 f879 	bl	8005bc8 <WM_InvalidateRect>
 8003ad6:	b004      	add	sp, #16
 8003ad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003adc <GRAPH__AddValue>:
 8003adc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ade:	461d      	mov	r5, r3
 8003ae0:	6883      	ldr	r3, [r0, #8]
 8003ae2:	4604      	mov	r4, r0
 8003ae4:	460e      	mov	r6, r1
 8003ae6:	4617      	mov	r7, r2
 8003ae8:	b323      	cbz	r3, 8003b34 <GRAPH__AddValue+0x58>
 8003aea:	6900      	ldr	r0, [r0, #16]
 8003aec:	6963      	ldr	r3, [r4, #20]
 8003aee:	4298      	cmp	r0, r3
 8003af0:	d10e      	bne.n	8003b10 <GRAPH__AddValue+0x34>
 8003af2:	1e42      	subs	r2, r0, #1
 8003af4:	436a      	muls	r2, r5
 8003af6:	4608      	mov	r0, r1
 8003af8:	4429      	add	r1, r5
 8003afa:	f00c fae1 	bl	80100c0 <memmove>
 8003afe:	6920      	ldr	r0, [r4, #16]
 8003b00:	3801      	subs	r0, #1
 8003b02:	fb00 6005 	mla	r0, r0, r5, r6
 8003b06:	4639      	mov	r1, r7
 8003b08:	462a      	mov	r2, r5
 8003b0a:	f00c fad9 	bl	80100c0 <memmove>
 8003b0e:	e00c      	b.n	8003b2a <GRAPH__AddValue+0x4e>
 8003b10:	1c43      	adds	r3, r0, #1
 8003b12:	6123      	str	r3, [r4, #16]
 8003b14:	fb00 1005 	mla	r0, r0, r5, r1
 8003b18:	4611      	mov	r1, r2
 8003b1a:	462a      	mov	r2, r5
 8003b1c:	f00c fad0 	bl	80100c0 <memmove>
 8003b20:	68e3      	ldr	r3, [r4, #12]
 8003b22:	b113      	cbz	r3, 8003b2a <GRAPH__AddValue+0x4e>
 8003b24:	4620      	mov	r0, r4
 8003b26:	4798      	blx	r3
 8003b28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b2a:	68a0      	ldr	r0, [r4, #8]
 8003b2c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003b30:	f7ff bfa5 	b.w	8003a7e <GRAPH__InvalidateGraph>
 8003b34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003b38 <GRAPH_CreateUser>:
 8003b38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003b3a:	b087      	sub	sp, #28
 8003b3c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8003b3e:	9400      	str	r4, [sp, #0]
 8003b40:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8003b42:	9401      	str	r4, [sp, #4]
 8003b44:	4c17      	ldr	r4, [pc, #92]	; (8003ba4 <GRAPH_CreateUser+0x6c>)
 8003b46:	9402      	str	r4, [sp, #8]
 8003b48:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8003b4a:	346c      	adds	r4, #108	; 0x6c
 8003b4c:	9403      	str	r4, [sp, #12]
 8003b4e:	f002 f8a5 	bl	8005c9c <WM_CreateWindowAsChild>
 8003b52:	4606      	mov	r6, r0
 8003b54:	b318      	cbz	r0, 8003b9e <GRAPH_CreateUser+0x66>
 8003b56:	f009 f85e 	bl	800cc16 <GUI_ARRAY_Create>
 8003b5a:	4605      	mov	r5, r0
 8003b5c:	f009 f85b 	bl	800cc16 <GUI_ARRAY_Create>
 8003b60:	4604      	mov	r4, r0
 8003b62:	4630      	mov	r0, r6
 8003b64:	f007 fe88 	bl	800b878 <GUI_ALLOC_LockH>
 8003b68:	6645      	str	r5, [r0, #100]	; 0x64
 8003b6a:	4d0f      	ldr	r5, [pc, #60]	; (8003ba8 <GRAPH_CreateUser+0x70>)
 8003b6c:	6684      	str	r4, [r0, #104]	; 0x68
 8003b6e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003b70:	9005      	str	r0, [sp, #20]
 8003b72:	2200      	movs	r2, #0
 8003b74:	f008 fa06 	bl	800bf84 <WIDGET__Init>
 8003b78:	af06      	add	r7, sp, #24
 8003b7a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003b7c:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 8003b80:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8003b84:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003b86:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003b88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003b8a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8003b8e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003b92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003b94:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 8003b98:	4638      	mov	r0, r7
 8003b9a:	f007 fe7b 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003b9e:	4630      	mov	r0, r6
 8003ba0:	b007      	add	sp, #28
 8003ba2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003ba4:	08003589 	.word	0x08003589
 8003ba8:	20000038 	.word	0x20000038

08003bac <GRAPH_CreateIndirect>:
 8003bac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003bae:	b087      	sub	sp, #28
 8003bb0:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003bb4:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8003bb8:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003bbc:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003bc0:	9100      	str	r1, [sp, #0]
 8003bc2:	2100      	movs	r1, #0
 8003bc4:	9101      	str	r1, [sp, #4]
 8003bc6:	8a41      	ldrh	r1, [r0, #18]
 8003bc8:	9102      	str	r1, [sp, #8]
 8003bca:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8003bce:	9103      	str	r1, [sp, #12]
 8003bd0:	6984      	ldr	r4, [r0, #24]
 8003bd2:	9404      	str	r4, [sp, #16]
 8003bd4:	eb0e 0002 	add.w	r0, lr, r2
 8003bd8:	18f9      	adds	r1, r7, r3
 8003bda:	4632      	mov	r2, r6
 8003bdc:	462b      	mov	r3, r5
 8003bde:	f7ff ffab 	bl	8003b38 <GRAPH_CreateUser>
 8003be2:	b007      	add	sp, #28
 8003be4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003be6 <GRAPH_AttachData>:
 8003be6:	b530      	push	{r4, r5, lr}
 8003be8:	b085      	sub	sp, #20
 8003bea:	4604      	mov	r4, r0
 8003bec:	9101      	str	r1, [sp, #4]
 8003bee:	b1d0      	cbz	r0, 8003c26 <GRAPH_AttachData+0x40>
 8003bf0:	f007 fe42 	bl	800b878 <GUI_ALLOC_LockH>
 8003bf4:	ab04      	add	r3, sp, #16
 8003bf6:	6e45      	ldr	r5, [r0, #100]	; 0x64
 8003bf8:	f843 0d04 	str.w	r0, [r3, #-4]!
 8003bfc:	4618      	mov	r0, r3
 8003bfe:	f007 fe49 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003c02:	9801      	ldr	r0, [sp, #4]
 8003c04:	f007 fe38 	bl	800b878 <GUI_ALLOC_LockH>
 8003c08:	4602      	mov	r2, r0
 8003c0a:	a804      	add	r0, sp, #16
 8003c0c:	6094      	str	r4, [r2, #8]
 8003c0e:	f840 2d08 	str.w	r2, [r0, #-8]!
 8003c12:	f007 fe3f 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003c16:	4628      	mov	r0, r5
 8003c18:	a901      	add	r1, sp, #4
 8003c1a:	2204      	movs	r2, #4
 8003c1c:	f008 ff75 	bl	800cb0a <GUI_ARRAY_AddItem>
 8003c20:	4620      	mov	r0, r4
 8003c22:	f002 f80d 	bl	8005c40 <WM_InvalidateWindow>
 8003c26:	b005      	add	sp, #20
 8003c28:	bd30      	pop	{r4, r5, pc}

08003c2a <GRAPH_SetGridVis>:
 8003c2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003c2c:	460e      	mov	r6, r1
 8003c2e:	4605      	mov	r5, r0
 8003c30:	b178      	cbz	r0, 8003c52 <GRAPH_SetGridVis+0x28>
 8003c32:	f007 fe21 	bl	800b878 <GUI_ALLOC_LockH>
 8003c36:	f890 406c 	ldrb.w	r4, [r0, #108]	; 0x6c
 8003c3a:	9001      	str	r0, [sp, #4]
 8003c3c:	42b4      	cmp	r4, r6
 8003c3e:	d004      	beq.n	8003c4a <GRAPH_SetGridVis+0x20>
 8003c40:	f880 606c 	strb.w	r6, [r0, #108]	; 0x6c
 8003c44:	4628      	mov	r0, r5
 8003c46:	f001 fffb 	bl	8005c40 <WM_InvalidateWindow>
 8003c4a:	a801      	add	r0, sp, #4
 8003c4c:	f007 fe22 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003c50:	e000      	b.n	8003c54 <GRAPH_SetGridVis+0x2a>
 8003c52:	4604      	mov	r4, r0
 8003c54:	4620      	mov	r0, r4
 8003c56:	b002      	add	sp, #8
 8003c58:	bd70      	pop	{r4, r5, r6, pc}

08003c5a <GRAPH_SetBorder>:
 8003c5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003c5e:	460f      	mov	r7, r1
 8003c60:	4690      	mov	r8, r2
 8003c62:	461d      	mov	r5, r3
 8003c64:	4606      	mov	r6, r0
 8003c66:	b198      	cbz	r0, 8003c90 <GRAPH_SetBorder+0x36>
 8003c68:	f007 fe06 	bl	800b878 <GUI_ALLOC_LockH>
 8003c6c:	4604      	mov	r4, r0
 8003c6e:	a802      	add	r0, sp, #8
 8003c70:	9b08      	ldr	r3, [sp, #32]
 8003c72:	6623      	str	r3, [r4, #96]	; 0x60
 8003c74:	f840 4d04 	str.w	r4, [r0, #-4]!
 8003c78:	6567      	str	r7, [r4, #84]	; 0x54
 8003c7a:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
 8003c7e:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003c80:	f007 fe08 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003c84:	4630      	mov	r0, r6
 8003c86:	f7ff fc05 	bl	8003494 <_ManageScrollbars>
 8003c8a:	4630      	mov	r0, r6
 8003c8c:	f001 ffd8 	bl	8005c40 <WM_InvalidateWindow>
 8003c90:	b002      	add	sp, #8
 8003c92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003c96 <FRAMEWIN__GetBorderSize>:
 8003c96:	b570      	push	{r4, r5, r6, lr}
 8003c98:	b08a      	sub	sp, #40	; 0x28
 8003c9a:	4605      	mov	r5, r0
 8003c9c:	460c      	mov	r4, r1
 8003c9e:	f007 fdeb 	bl	800b878 <GUI_ALLOC_LockH>
 8003ca2:	ab0a      	add	r3, sp, #40	; 0x28
 8003ca4:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003ca6:	f843 0d28 	str.w	r0, [r3, #-40]!
 8003caa:	4668      	mov	r0, sp
 8003cac:	6896      	ldr	r6, [r2, #8]
 8003cae:	f007 fdf1 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003cb2:	9501      	str	r5, [sp, #4]
 8003cb4:	2c03      	cmp	r4, #3
 8003cb6:	d80b      	bhi.n	8003cd0 <FRAMEWIN__GetBorderSize+0x3a>
 8003cb8:	e8df f004 	tbb	[pc, r4]
 8003cbc:	08060402 	.word	0x08060402
 8003cc0:	2318      	movs	r3, #24
 8003cc2:	e004      	b.n	8003cce <FRAMEWIN__GetBorderSize+0x38>
 8003cc4:	2316      	movs	r3, #22
 8003cc6:	e002      	b.n	8003cce <FRAMEWIN__GetBorderSize+0x38>
 8003cc8:	2315      	movs	r3, #21
 8003cca:	e000      	b.n	8003cce <FRAMEWIN__GetBorderSize+0x38>
 8003ccc:	2317      	movs	r3, #23
 8003cce:	9302      	str	r3, [sp, #8]
 8003cd0:	6873      	ldr	r3, [r6, #4]
 8003cd2:	a801      	add	r0, sp, #4
 8003cd4:	4798      	blx	r3
 8003cd6:	b00a      	add	sp, #40	; 0x28
 8003cd8:	bd70      	pop	{r4, r5, r6, pc}

08003cda <_SetActive>:
 8003cda:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003cdc:	4604      	mov	r4, r0
 8003cde:	460d      	mov	r5, r1
 8003ce0:	f007 fdca 	bl	800b878 <GUI_ALLOC_LockH>
 8003ce4:	9001      	str	r0, [sp, #4]
 8003ce6:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 8003cea:	b125      	cbz	r5, 8003cf6 <_SetActive+0x1c>
 8003cec:	0711      	lsls	r1, r2, #28
 8003cee:	d40b      	bmi.n	8003d08 <_SetActive+0x2e>
 8003cf0:	f042 0208 	orr.w	r2, r2, #8
 8003cf4:	e003      	b.n	8003cfe <_SetActive+0x24>
 8003cf6:	0713      	lsls	r3, r2, #28
 8003cf8:	d506      	bpl.n	8003d08 <_SetActive+0x2e>
 8003cfa:	f022 0208 	bic.w	r2, r2, #8
 8003cfe:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 8003d02:	4620      	mov	r0, r4
 8003d04:	f001 ff9c 	bl	8005c40 <WM_InvalidateWindow>
 8003d08:	a801      	add	r0, sp, #4
 8003d0a:	f007 fdc3 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003d0e:	b003      	add	sp, #12
 8003d10:	bd30      	pop	{r4, r5, pc}

08003d12 <FRAMEWIN__cbClient>:
 8003d12:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003d16:	6845      	ldr	r5, [r0, #4]
 8003d18:	b087      	sub	sp, #28
 8003d1a:	4604      	mov	r4, r0
 8003d1c:	4628      	mov	r0, r5
 8003d1e:	f000 ffa1 	bl	8004c64 <WM_GetParent>
 8003d22:	4681      	mov	r9, r0
 8003d24:	f007 fda8 	bl	800b878 <GUI_ALLOC_LockH>
 8003d28:	4603      	mov	r3, r0
 8003d2a:	a806      	add	r0, sp, #24
 8003d2c:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 8003d2e:	f840 3d14 	str.w	r3, [r0, #-20]!
 8003d32:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 8003d34:	f8d3 8080 	ldr.w	r8, [r3, #128]	; 0x80
 8003d38:	f007 fdac 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003d3c:	6823      	ldr	r3, [r4, #0]
 8003d3e:	2b17      	cmp	r3, #23
 8003d40:	d053      	beq.n	8003dea <FRAMEWIN__cbClient+0xd8>
 8003d42:	dc09      	bgt.n	8003d58 <FRAMEWIN__cbClient+0x46>
 8003d44:	2b0f      	cmp	r3, #15
 8003d46:	d014      	beq.n	8003d72 <FRAMEWIN__cbClient+0x60>
 8003d48:	dc02      	bgt.n	8003d50 <FRAMEWIN__cbClient+0x3e>
 8003d4a:	2b0e      	cmp	r3, #14
 8003d4c:	d034      	beq.n	8003db8 <FRAMEWIN__cbClient+0xa6>
 8003d4e:	e046      	b.n	8003dde <FRAMEWIN__cbClient+0xcc>
 8003d50:	3b14      	subs	r3, #20
 8003d52:	2b01      	cmp	r3, #1
 8003d54:	d949      	bls.n	8003dea <FRAMEWIN__cbClient+0xd8>
 8003d56:	e042      	b.n	8003dde <FRAMEWIN__cbClient+0xcc>
 8003d58:	2b1f      	cmp	r3, #31
 8003d5a:	d028      	beq.n	8003dae <FRAMEWIN__cbClient+0x9c>
 8003d5c:	dc02      	bgt.n	8003d64 <FRAMEWIN__cbClient+0x52>
 8003d5e:	2b1e      	cmp	r3, #30
 8003d60:	d01a      	beq.n	8003d98 <FRAMEWIN__cbClient+0x86>
 8003d62:	e03c      	b.n	8003dde <FRAMEWIN__cbClient+0xcc>
 8003d64:	2b22      	cmp	r3, #34	; 0x22
 8003d66:	d038      	beq.n	8003dda <FRAMEWIN__cbClient+0xc8>
 8003d68:	2b31      	cmp	r3, #49	; 0x31
 8003d6a:	d138      	bne.n	8003dde <FRAMEWIN__cbClient+0xcc>
 8003d6c:	2300      	movs	r3, #0
 8003d6e:	60e3      	str	r3, [r4, #12]
 8003d70:	e03e      	b.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003d72:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003d76:	429e      	cmp	r6, r3
 8003d78:	d004      	beq.n	8003d84 <FRAMEWIN__cbClient+0x72>
 8003d7a:	4630      	mov	r0, r6
 8003d7c:	f005 f9f8 	bl	8009170 <LCD_SetBkColor>
 8003d80:	f006 ff06 	bl	800ab90 <GUI_Clear>
 8003d84:	2f00      	cmp	r7, #0
 8003d86:	d033      	beq.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003d88:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003d8c:	ae02      	add	r6, sp, #8
 8003d8e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8003d92:	9503      	str	r5, [sp, #12]
 8003d94:	4630      	mov	r0, r6
 8003d96:	e026      	b.n	8003de6 <FRAMEWIN__cbClient+0xd4>
 8003d98:	68e3      	ldr	r3, [r4, #12]
 8003d9a:	b34b      	cbz	r3, 8003df0 <FRAMEWIN__cbClient+0xde>
 8003d9c:	f1b8 0f00 	cmp.w	r8, #0
 8003da0:	d017      	beq.n	8003dd2 <FRAMEWIN__cbClient+0xc0>
 8003da2:	45a8      	cmp	r8, r5
 8003da4:	d015      	beq.n	8003dd2 <FRAMEWIN__cbClient+0xc0>
 8003da6:	4640      	mov	r0, r8
 8003da8:	f001 f90c 	bl	8004fc4 <WM_SetFocus>
 8003dac:	e020      	b.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003dae:	4648      	mov	r0, r9
 8003db0:	4621      	mov	r1, r4
 8003db2:	f008 f92c 	bl	800c00e <WIDGET_HandleActive>
 8003db6:	e01b      	b.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003db8:	68e3      	ldr	r3, [r4, #12]
 8003dba:	685a      	ldr	r2, [r3, #4]
 8003dbc:	2a00      	cmp	r2, #0
 8003dbe:	dd0e      	ble.n	8003dde <FRAMEWIN__cbClient+0xcc>
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	2b09      	cmp	r3, #9
 8003dc4:	d005      	beq.n	8003dd2 <FRAMEWIN__cbClient+0xc0>
 8003dc6:	2b0a      	cmp	r3, #10
 8003dc8:	d109      	bne.n	8003dde <FRAMEWIN__cbClient+0xcc>
 8003dca:	4628      	mov	r0, r5
 8003dcc:	f000 fcf7 	bl	80047be <WM_SetFocusOnPrevChild>
 8003dd0:	e00e      	b.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003dd2:	4628      	mov	r0, r5
 8003dd4:	f000 fd22 	bl	800481c <WM_SetFocusOnNextChild>
 8003dd8:	e00a      	b.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003dda:	60e6      	str	r6, [r4, #12]
 8003ddc:	e008      	b.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003dde:	b127      	cbz	r7, 8003dea <FRAMEWIN__cbClient+0xd8>
 8003de0:	f8c4 9004 	str.w	r9, [r4, #4]
 8003de4:	4620      	mov	r0, r4
 8003de6:	47b8      	blx	r7
 8003de8:	e002      	b.n	8003df0 <FRAMEWIN__cbClient+0xde>
 8003dea:	4620      	mov	r0, r4
 8003dec:	f002 fb56 	bl	800649c <WM_DefaultProc>
 8003df0:	b007      	add	sp, #28
 8003df2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003df6 <FRAMEWIN__CalcTitleHeight>:
 8003df6:	b508      	push	{r3, lr}
 8003df8:	4603      	mov	r3, r0
 8003dfa:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8003dfc:	f000 0020 	and.w	r0, r0, #32
 8003e00:	b280      	uxth	r0, r0
 8003e02:	b130      	cbz	r0, 8003e12 <FRAMEWIN__CalcTitleHeight+0x1c>
 8003e04:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 8003e08:	b918      	cbnz	r0, 8003e12 <FRAMEWIN__CalcTitleHeight+0x1c>
 8003e0a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003e0c:	f007 f81c 	bl	800ae48 <GUI_GetYSizeOfFont>
 8003e10:	3002      	adds	r0, #2
 8003e12:	bd08      	pop	{r3, pc}

08003e14 <FRAMEWIN__GetTitleLimits>:
 8003e14:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003e18:	4607      	mov	r7, r0
 8003e1a:	460d      	mov	r5, r1
 8003e1c:	4616      	mov	r6, r2
 8003e1e:	f007 fd2b 	bl	800b878 <GUI_ALLOC_LockH>
 8003e22:	4603      	mov	r3, r0
 8003e24:	a802      	add	r0, sp, #8
 8003e26:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003e28:	f840 3d08 	str.w	r3, [r0, #-8]!
 8003e2c:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8003e30:	f8b3 8000 	ldrh.w	r8, [r3]
 8003e34:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003e38:	4668      	mov	r0, sp
 8003e3a:	f007 fd2b 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003e3e:	f8da 3000 	ldr.w	r3, [sl]
 8003e42:	4638      	mov	r0, r7
 8003e44:	2100      	movs	r1, #0
 8003e46:	4798      	blx	r3
 8003e48:	4682      	mov	sl, r0
 8003e4a:	4638      	mov	r0, r7
 8003e4c:	f000 fe69 	bl	8004b22 <WM_GetFirstChild>
 8003e50:	4604      	mov	r4, r0
 8003e52:	b340      	cbz	r0, 8003ea6 <FRAMEWIN__GetTitleLimits+0x92>
 8003e54:	4620      	mov	r0, r4
 8003e56:	f007 fd0f 	bl	800b878 <GUI_ALLOC_LockH>
 8003e5a:	4603      	mov	r3, r0
 8003e5c:	fa0f f289 	sxth.w	r2, r9
 8003e60:	f9b3 7002 	ldrsh.w	r7, [r3, #2]
 8003e64:	9001      	str	r0, [sp, #4]
 8003e66:	1aba      	subs	r2, r7, r2
 8003e68:	4552      	cmp	r2, sl
 8003e6a:	8800      	ldrh	r0, [r0, #0]
 8003e6c:	8899      	ldrh	r1, [r3, #4]
 8003e6e:	d113      	bne.n	8003e98 <FRAMEWIN__GetTitleLimits+0x84>
 8003e70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003e72:	061b      	lsls	r3, r3, #24
 8003e74:	fa0f f288 	sxth.w	r2, r8
 8003e78:	d507      	bpl.n	8003e8a <FRAMEWIN__GetTitleLimits+0x76>
 8003e7a:	b203      	sxth	r3, r0
 8003e7c:	1a9a      	subs	r2, r3, r2
 8003e7e:	6833      	ldr	r3, [r6, #0]
 8003e80:	429a      	cmp	r2, r3
 8003e82:	dc09      	bgt.n	8003e98 <FRAMEWIN__GetTitleLimits+0x84>
 8003e84:	3a01      	subs	r2, #1
 8003e86:	6032      	str	r2, [r6, #0]
 8003e88:	e006      	b.n	8003e98 <FRAMEWIN__GetTitleLimits+0x84>
 8003e8a:	b20b      	sxth	r3, r1
 8003e8c:	1a9b      	subs	r3, r3, r2
 8003e8e:	682a      	ldr	r2, [r5, #0]
 8003e90:	4293      	cmp	r3, r2
 8003e92:	bfa4      	itt	ge
 8003e94:	3301      	addge	r3, #1
 8003e96:	602b      	strge	r3, [r5, #0]
 8003e98:	a801      	add	r0, sp, #4
 8003e9a:	f007 fcfb 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003e9e:	4620      	mov	r0, r4
 8003ea0:	f000 feb7 	bl	8004c12 <WM_GetNextSibling>
 8003ea4:	e7d4      	b.n	8003e50 <FRAMEWIN__GetTitleLimits+0x3c>
 8003ea6:	b002      	add	sp, #8
 8003ea8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003eac <FRAMEWIN__CalcPositions>:
 8003eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003eb0:	b087      	sub	sp, #28
 8003eb2:	4604      	mov	r4, r0
 8003eb4:	460f      	mov	r7, r1
 8003eb6:	f007 fcdf 	bl	800b878 <GUI_ALLOC_LockH>
 8003eba:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003ebc:	9003      	str	r0, [sp, #12]
 8003ebe:	6895      	ldr	r5, [r2, #8]
 8003ec0:	2101      	movs	r1, #1
 8003ec2:	682a      	ldr	r2, [r5, #0]
 8003ec4:	4620      	mov	r0, r4
 8003ec6:	4790      	blx	r2
 8003ec8:	682a      	ldr	r2, [r5, #0]
 8003eca:	2103      	movs	r1, #3
 8003ecc:	4683      	mov	fp, r0
 8003ece:	4620      	mov	r0, r4
 8003ed0:	4790      	blx	r2
 8003ed2:	682a      	ldr	r2, [r5, #0]
 8003ed4:	2102      	movs	r1, #2
 8003ed6:	4681      	mov	r9, r0
 8003ed8:	4620      	mov	r0, r4
 8003eda:	4790      	blx	r2
 8003edc:	682a      	ldr	r2, [r5, #0]
 8003ede:	9001      	str	r0, [sp, #4]
 8003ee0:	2100      	movs	r1, #0
 8003ee2:	4620      	mov	r0, r4
 8003ee4:	4790      	blx	r2
 8003ee6:	4605      	mov	r5, r0
 8003ee8:	9803      	ldr	r0, [sp, #12]
 8003eea:	f001 f94b 	bl	8005184 <WM__GetWindowSizeX>
 8003eee:	4682      	mov	sl, r0
 8003ef0:	9803      	ldr	r0, [sp, #12]
 8003ef2:	f001 f94e 	bl	8005192 <WM__GetWindowSizeY>
 8003ef6:	4680      	mov	r8, r0
 8003ef8:	9803      	ldr	r0, [sp, #12]
 8003efa:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8003efc:	f006 0620 	and.w	r6, r6, #32
 8003f00:	b2b6      	uxth	r6, r6
 8003f02:	b10e      	cbz	r6, 8003f08 <FRAMEWIN__CalcPositions+0x5c>
 8003f04:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 8003f08:	f7ff ff75 	bl	8003df6 <FRAMEWIN__CalcTitleHeight>
 8003f0c:	9903      	ldr	r1, [sp, #12]
 8003f0e:	4602      	mov	r2, r0
 8003f10:	6ec8      	ldr	r0, [r1, #108]	; 0x6c
 8003f12:	b118      	cbz	r0, 8003f1c <FRAMEWIN__CalcPositions+0x70>
 8003f14:	9200      	str	r2, [sp, #0]
 8003f16:	f001 f958 	bl	80051ca <WM_GetWindowSizeY>
 8003f1a:	9a00      	ldr	r2, [sp, #0]
 8003f1c:	803a      	strh	r2, [r7, #0]
 8003f1e:	b292      	uxth	r2, r2
 8003f20:	b2a9      	uxth	r1, r5
 8003f22:	4416      	add	r6, r2
 8003f24:	440e      	add	r6, r1
 8003f26:	8078      	strh	r0, [r7, #2]
 8003f28:	4430      	add	r0, r6
 8003f2a:	80f8      	strh	r0, [r7, #6]
 8003f2c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003f30:	9801      	ldr	r0, [sp, #4]
 8003f32:	81fd      	strh	r5, [r7, #14]
 8003f34:	3901      	subs	r1, #1
 8003f36:	ebc9 090a 	rsb	r9, r9, sl
 8003f3a:	f108 38ff 	add.w	r8, r8, #4294967295
 8003f3e:	ebc0 0308 	rsb	r3, r0, r8
 8003f42:	440a      	add	r2, r1
 8003f44:	fa1f fb8b 	uxth.w	fp, fp
 8003f48:	fa1f f989 	uxth.w	r9, r9
 8003f4c:	817b      	strh	r3, [r7, #10]
 8003f4e:	827a      	strh	r2, [r7, #18]
 8003f50:	f8a7 b004 	strh.w	fp, [r7, #4]
 8003f54:	f8a7 9008 	strh.w	r9, [r7, #8]
 8003f58:	f8a7 b00c 	strh.w	fp, [r7, #12]
 8003f5c:	f8a7 9010 	strh.w	r9, [r7, #16]
 8003f60:	a803      	add	r0, sp, #12
 8003f62:	f007 fc97 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003f66:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003f6a:	9204      	str	r2, [sp, #16]
 8003f6c:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8003f70:	9205      	str	r2, [sp, #20]
 8003f72:	4620      	mov	r0, r4
 8003f74:	aa05      	add	r2, sp, #20
 8003f76:	a904      	add	r1, sp, #16
 8003f78:	f7ff ff4c 	bl	8003e14 <FRAMEWIN__GetTitleLimits>
 8003f7c:	9a04      	ldr	r2, [sp, #16]
 8003f7e:	81ba      	strh	r2, [r7, #12]
 8003f80:	9a05      	ldr	r2, [sp, #20]
 8003f82:	823a      	strh	r2, [r7, #16]
 8003f84:	b007      	add	sp, #28
 8003f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003f8a <FRAMEWIN_SetText>:
 8003f8a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003f8c:	460d      	mov	r5, r1
 8003f8e:	4604      	mov	r4, r0
 8003f90:	b1c0      	cbz	r0, 8003fc4 <FRAMEWIN_SetText+0x3a>
 8003f92:	f007 fc71 	bl	800b878 <GUI_ALLOC_LockH>
 8003f96:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8003f98:	9000      	str	r0, [sp, #0]
 8003f9a:	4668      	mov	r0, sp
 8003f9c:	9301      	str	r3, [sp, #4]
 8003f9e:	f007 fc79 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003fa2:	a801      	add	r0, sp, #4
 8003fa4:	4629      	mov	r1, r5
 8003fa6:	f005 f9e7 	bl	8009378 <GUI__SetText>
 8003faa:	b158      	cbz	r0, 8003fc4 <FRAMEWIN_SetText+0x3a>
 8003fac:	4620      	mov	r0, r4
 8003fae:	f007 fc63 	bl	800b878 <GUI_ALLOC_LockH>
 8003fb2:	9b01      	ldr	r3, [sp, #4]
 8003fb4:	9000      	str	r0, [sp, #0]
 8003fb6:	6703      	str	r3, [r0, #112]	; 0x70
 8003fb8:	4668      	mov	r0, sp
 8003fba:	f007 fc6b 	bl	800b894 <GUI_ALLOC_UnlockH>
 8003fbe:	4620      	mov	r0, r4
 8003fc0:	f001 fe3e 	bl	8005c40 <WM_InvalidateWindow>
 8003fc4:	b003      	add	sp, #12
 8003fc6:	bd30      	pop	{r4, r5, pc}

08003fc8 <FRAMEWIN_CreateUser>:
 8003fc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003fcc:	b08b      	sub	sp, #44	; 0x2c
 8003fce:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8003fd2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8003fd4:	9400      	str	r4, [sp, #0]
 8003fd6:	f449 5480 	orr.w	r4, r9, #4096	; 0x1000
 8003fda:	9401      	str	r4, [sp, #4]
 8003fdc:	4c33      	ldr	r4, [pc, #204]	; (80040ac <FRAMEWIN_CreateUser+0xe4>)
 8003fde:	9402      	str	r4, [sp, #8]
 8003fe0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8003fe2:	3460      	adds	r4, #96	; 0x60
 8003fe4:	9403      	str	r4, [sp, #12]
 8003fe6:	f001 fe59 	bl	8005c9c <WM_CreateWindowAsChild>
 8003fea:	4606      	mov	r6, r0
 8003fec:	2800      	cmp	r0, #0
 8003fee:	d058      	beq.n	80040a2 <FRAMEWIN_CreateUser+0xda>
 8003ff0:	f007 fc42 	bl	800b878 <GUI_ALLOC_LockH>
 8003ff4:	4d2e      	ldr	r5, [pc, #184]	; (80040b0 <FRAMEWIN_CreateUser+0xe8>)
 8003ff6:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003ff8:	9004      	str	r0, [sp, #16]
 8003ffa:	2230      	movs	r2, #48	; 0x30
 8003ffc:	f007 ffc2 	bl	800bf84 <WIDGET__Init>
 8004000:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8004004:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004006:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 800400a:	f107 0434 	add.w	r4, r7, #52	; 0x34
 800400e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004010:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004012:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004014:	e895 0003 	ldmia.w	r5, {r0, r1}
 8004018:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800401a:	4d26      	ldr	r5, [pc, #152]	; (80040b4 <FRAMEWIN_CreateUser+0xec>)
 800401c:	e884 0003 	stmia.w	r4, {r0, r1}
 8004020:	667b      	str	r3, [r7, #100]	; 0x64
 8004022:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004024:	f8a7 307c 	strh.w	r3, [r7, #124]	; 0x7c
 8004028:	2400      	movs	r4, #0
 800402a:	682b      	ldr	r3, [r5, #0]
 800402c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800402e:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 8004032:	66fc      	str	r4, [r7, #108]	; 0x6c
 8004034:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8004038:	4640      	mov	r0, r8
 800403a:	f007 fc2b 	bl	800b894 <GUI_ALLOC_UnlockH>
 800403e:	4630      	mov	r0, r6
 8004040:	a905      	add	r1, sp, #20
 8004042:	f7ff ff33 	bl	8003eac <FRAMEWIN__CalcPositions>
 8004046:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800404a:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800404e:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8004052:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8004056:	9403      	str	r4, [sp, #12]
 8004058:	f241 7782 	movw	r7, #6018	; 0x1782
 800405c:	1a5b      	subs	r3, r3, r1
 800405e:	1a12      	subs	r2, r2, r0
 8004060:	9701      	str	r7, [sp, #4]
 8004062:	4f15      	ldr	r7, [pc, #84]	; (80040b8 <FRAMEWIN_CreateUser+0xf0>)
 8004064:	9600      	str	r6, [sp, #0]
 8004066:	3201      	adds	r2, #1
 8004068:	3301      	adds	r3, #1
 800406a:	9702      	str	r7, [sp, #8]
 800406c:	f001 fe16 	bl	8005c9c <WM_CreateWindowAsChild>
 8004070:	682b      	ldr	r3, [r5, #0]
 8004072:	4604      	mov	r4, r0
 8004074:	685b      	ldr	r3, [r3, #4]
 8004076:	4630      	mov	r0, r6
 8004078:	4798      	blx	r3
 800407a:	4630      	mov	r0, r6
 800407c:	f007 fbfc 	bl	800b878 <GUI_ALLOC_LockH>
 8004080:	9004      	str	r0, [sp, #16]
 8004082:	6684      	str	r4, [r0, #104]	; 0x68
 8004084:	4640      	mov	r0, r8
 8004086:	f007 fc05 	bl	800b894 <GUI_ALLOC_UnlockH>
 800408a:	f242 0304 	movw	r3, #8196	; 0x2004
 800408e:	ea09 0303 	and.w	r3, r9, r3
 8004092:	b913      	cbnz	r3, 800409a <FRAMEWIN_CreateUser+0xd2>
 8004094:	4630      	mov	r0, r6
 8004096:	f000 fcfd 	bl	8004a94 <WM_DisableMemdev>
 800409a:	4630      	mov	r0, r6
 800409c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800409e:	f7ff ff74 	bl	8003f8a <FRAMEWIN_SetText>
 80040a2:	4630      	mov	r0, r6
 80040a4:	b00b      	add	sp, #44	; 0x2c
 80040a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80040aa:	bf00      	nop
 80040ac:	08004107 	.word	0x08004107
 80040b0:	20000068 	.word	0x20000068
 80040b4:	20000090 	.word	0x20000090
 80040b8:	08003d13 	.word	0x08003d13

080040bc <FRAMEWIN_CreateIndirect>:
 80040bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040be:	b089      	sub	sp, #36	; 0x24
 80040c0:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80040c4:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80040c8:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80040cc:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80040d0:	9100      	str	r1, [sp, #0]
 80040d2:	2100      	movs	r1, #0
 80040d4:	9101      	str	r1, [sp, #4]
 80040d6:	8a41      	ldrh	r1, [r0, #18]
 80040d8:	9102      	str	r1, [sp, #8]
 80040da:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80040de:	9103      	str	r1, [sp, #12]
 80040e0:	6844      	ldr	r4, [r0, #4]
 80040e2:	9404      	str	r4, [sp, #16]
 80040e4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80040e6:	9405      	str	r4, [sp, #20]
 80040e8:	6984      	ldr	r4, [r0, #24]
 80040ea:	9406      	str	r4, [sp, #24]
 80040ec:	eb0e 0002 	add.w	r0, lr, r2
 80040f0:	18f9      	adds	r1, r7, r3
 80040f2:	4632      	mov	r2, r6
 80040f4:	462b      	mov	r3, r5
 80040f6:	f7ff ff67 	bl	8003fc8 <FRAMEWIN_CreateUser>
 80040fa:	b009      	add	sp, #36	; 0x24
 80040fc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080040fe <FRAMEWIN_SetActive>:
 80040fe:	b108      	cbz	r0, 8004104 <FRAMEWIN_SetActive+0x6>
 8004100:	f7ff bdeb 	b.w	8003cda <_SetActive>
 8004104:	4770      	bx	lr

08004106 <FRAMEWIN_Callback>:
 8004106:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800410a:	6844      	ldr	r4, [r0, #4]
 800410c:	b086      	sub	sp, #24
 800410e:	4605      	mov	r5, r0
 8004110:	4620      	mov	r0, r4
 8004112:	f007 fbb1 	bl	800b878 <GUI_ALLOC_LockH>
 8004116:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8004118:	9000      	str	r0, [sp, #0]
 800411a:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 800411e:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 8004122:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 8004126:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 800412a:	b113      	cbz	r3, 8004132 <FRAMEWIN_Callback+0x2c>
 800412c:	f8d3 a000 	ldr.w	sl, [r3]
 8004130:	e000      	b.n	8004134 <FRAMEWIN_Callback+0x2e>
 8004132:	469a      	mov	sl, r3
 8004134:	4668      	mov	r0, sp
 8004136:	f007 fbad 	bl	800b894 <GUI_ALLOC_UnlockH>
 800413a:	b13f      	cbz	r7, 800414c <FRAMEWIN_Callback+0x46>
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	4628      	mov	r0, r5
 8004140:	4798      	blx	r3
 8004142:	2800      	cmp	r0, #0
 8004144:	f040 811d 	bne.w	8004382 <FRAMEWIN_Callback+0x27c>
 8004148:	683f      	ldr	r7, [r7, #0]
 800414a:	e7f6      	b.n	800413a <FRAMEWIN_Callback+0x34>
 800414c:	682b      	ldr	r3, [r5, #0]
 800414e:	2b17      	cmp	r3, #23
 8004150:	f000 808a 	beq.w	8004268 <FRAMEWIN_Callback+0x162>
 8004154:	dc18      	bgt.n	8004188 <FRAMEWIN_Callback+0x82>
 8004156:	2b0f      	cmp	r3, #15
 8004158:	d043      	beq.n	80041e2 <FRAMEWIN_Callback+0xdc>
 800415a:	dc06      	bgt.n	800416a <FRAMEWIN_Callback+0x64>
 800415c:	2b0b      	cmp	r3, #11
 800415e:	f000 80fe 	beq.w	800435e <FRAMEWIN_Callback+0x258>
 8004162:	2b0d      	cmp	r3, #13
 8004164:	f000 80c0 	beq.w	80042e8 <FRAMEWIN_Callback+0x1e2>
 8004168:	e103      	b.n	8004372 <FRAMEWIN_Callback+0x26c>
 800416a:	2b11      	cmp	r3, #17
 800416c:	d01b      	beq.n	80041a6 <FRAMEWIN_Callback+0xa0>
 800416e:	2b14      	cmp	r3, #20
 8004170:	f040 80ff 	bne.w	8004372 <FRAMEWIN_Callback+0x26c>
 8004174:	4620      	mov	r0, r4
 8004176:	a901      	add	r1, sp, #4
 8004178:	f7ff fe98 	bl	8003eac <FRAMEWIN__CalcPositions>
 800417c:	ab02      	add	r3, sp, #8
 800417e:	cb03      	ldmia	r3!, {r0, r1}
 8004180:	68ea      	ldr	r2, [r5, #12]
 8004182:	6010      	str	r0, [r2, #0]
 8004184:	6051      	str	r1, [r2, #4]
 8004186:	e0fc      	b.n	8004382 <FRAMEWIN_Callback+0x27c>
 8004188:	2b26      	cmp	r3, #38	; 0x26
 800418a:	d070      	beq.n	800426e <FRAMEWIN_Callback+0x168>
 800418c:	dc05      	bgt.n	800419a <FRAMEWIN_Callback+0x94>
 800418e:	2b1e      	cmp	r3, #30
 8004190:	d07b      	beq.n	800428a <FRAMEWIN_Callback+0x184>
 8004192:	2b20      	cmp	r3, #32
 8004194:	f000 80b6 	beq.w	8004304 <FRAMEWIN_Callback+0x1fe>
 8004198:	e0eb      	b.n	8004372 <FRAMEWIN_Callback+0x26c>
 800419a:	2b2a      	cmp	r3, #42	; 0x2a
 800419c:	d013      	beq.n	80041c6 <FRAMEWIN_Callback+0xc0>
 800419e:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80041a2:	d025      	beq.n	80041f0 <FRAMEWIN_Callback+0xea>
 80041a4:	e0e5      	b.n	8004372 <FRAMEWIN_Callback+0x26c>
 80041a6:	4620      	mov	r0, r4
 80041a8:	68ee      	ldr	r6, [r5, #12]
 80041aa:	f007 fb65 	bl	800b878 <GUI_ALLOC_LockH>
 80041ae:	9001      	str	r0, [sp, #4]
 80041b0:	8933      	ldrh	r3, [r6, #8]
 80041b2:	2b01      	cmp	r3, #1
 80041b4:	d105      	bne.n	80041c2 <FRAMEWIN_Callback+0xbc>
 80041b6:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 80041ba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80041be:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 80041c2:	a801      	add	r0, sp, #4
 80041c4:	e0d3      	b.n	800436e <FRAMEWIN_Callback+0x268>
 80041c6:	4620      	mov	r0, r4
 80041c8:	f007 fb56 	bl	800b878 <GUI_ALLOC_LockH>
 80041cc:	68eb      	ldr	r3, [r5, #12]
 80041ce:	9000      	str	r0, [sp, #0]
 80041d0:	b113      	cbz	r3, 80041d8 <FRAMEWIN_Callback+0xd2>
 80041d2:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 80041d6:	e002      	b.n	80041de <FRAMEWIN_Callback+0xd8>
 80041d8:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80041dc:	60eb      	str	r3, [r5, #12]
 80041de:	4668      	mov	r0, sp
 80041e0:	e03f      	b.n	8004262 <FRAMEWIN_Callback+0x15c>
 80041e2:	f1ba 0f00 	cmp.w	sl, #0
 80041e6:	f000 80c4 	beq.w	8004372 <FRAMEWIN_Callback+0x26c>
 80041ea:	4620      	mov	r0, r4
 80041ec:	47d0      	blx	sl
 80041ee:	e0c0      	b.n	8004372 <FRAMEWIN_Callback+0x26c>
 80041f0:	4620      	mov	r0, r4
 80041f2:	f8d5 800c 	ldr.w	r8, [r5, #12]
 80041f6:	f007 fb3f 	bl	800b878 <GUI_ALLOC_LockH>
 80041fa:	ae06      	add	r6, sp, #24
 80041fc:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 8004200:	f846 0d14 	str.w	r0, [r6, #-20]!
 8004204:	4630      	mov	r0, r6
 8004206:	f007 fb45 	bl	800b894 <GUI_ALLOC_UnlockH>
 800420a:	68eb      	ldr	r3, [r5, #12]
 800420c:	2b00      	cmp	r3, #0
 800420e:	f000 80b8 	beq.w	8004382 <FRAMEWIN_Callback+0x27c>
 8004212:	f898 3008 	ldrb.w	r3, [r8, #8]
 8004216:	b1cb      	cbz	r3, 800424c <FRAMEWIN_Callback+0x146>
 8004218:	073b      	lsls	r3, r7, #28
 800421a:	d402      	bmi.n	8004222 <FRAMEWIN_Callback+0x11c>
 800421c:	4620      	mov	r0, r4
 800421e:	f000 fed1 	bl	8004fc4 <WM_SetFocus>
 8004222:	4620      	mov	r0, r4
 8004224:	f000 ffe8 	bl	80051f8 <WM_BringToTop>
 8004228:	f407 7388 	and.w	r3, r7, #272	; 0x110
 800422c:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
 8004230:	f040 80a7 	bne.w	8004382 <FRAMEWIN_Callback+0x27c>
 8004234:	f007 0780 	and.w	r7, r7, #128	; 0x80
 8004238:	b2bb      	uxth	r3, r7
 800423a:	2b00      	cmp	r3, #0
 800423c:	f040 80a1 	bne.w	8004382 <FRAMEWIN_Callback+0x27c>
 8004240:	4620      	mov	r0, r4
 8004242:	4641      	mov	r1, r8
 8004244:	2205      	movs	r2, #5
 8004246:	f000 fb17 	bl	8004878 <WM_SetCaptureMove>
 800424a:	e09a      	b.n	8004382 <FRAMEWIN_Callback+0x27c>
 800424c:	4620      	mov	r0, r4
 800424e:	f007 fb13 	bl	800b878 <GUI_ALLOC_LockH>
 8004252:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 8004256:	9001      	str	r0, [sp, #4]
 8004258:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800425c:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8004260:	4630      	mov	r0, r6
 8004262:	f007 fb17 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004266:	e08c      	b.n	8004382 <FRAMEWIN_Callback+0x27c>
 8004268:	f8c5 800c 	str.w	r8, [r5, #12]
 800426c:	e089      	b.n	8004382 <FRAMEWIN_Callback+0x27c>
 800426e:	68eb      	ldr	r3, [r5, #12]
 8004270:	2b02      	cmp	r3, #2
 8004272:	f040 8086 	bne.w	8004382 <FRAMEWIN_Callback+0x27c>
 8004276:	a906      	add	r1, sp, #24
 8004278:	9304      	str	r3, [sp, #16]
 800427a:	2327      	movs	r3, #39	; 0x27
 800427c:	f841 3d14 	str.w	r3, [r1, #-20]!
 8004280:	68a8      	ldr	r0, [r5, #8]
 8004282:	9403      	str	r4, [sp, #12]
 8004284:	f000 f968 	bl	8004558 <WM__SendMessage>
 8004288:	e07b      	b.n	8004382 <FRAMEWIN_Callback+0x27c>
 800428a:	f8d5 900c 	ldr.w	r9, [r5, #12]
 800428e:	f1b9 0f01 	cmp.w	r9, #1
 8004292:	d124      	bne.n	80042de <FRAMEWIN_Callback+0x1d8>
 8004294:	4630      	mov	r0, r6
 8004296:	f000 fde2 	bl	8004e5e <WM_IsWindow>
 800429a:	b158      	cbz	r0, 80042b4 <FRAMEWIN_Callback+0x1ae>
 800429c:	4630      	mov	r0, r6
 800429e:	f000 fe91 	bl	8004fc4 <WM_SetFocus>
 80042a2:	4630      	mov	r0, r6
 80042a4:	f000 fdb4 	bl	8004e10 <WM_HasFocus>
 80042a8:	b188      	cbz	r0, 80042ce <FRAMEWIN_Callback+0x1c8>
 80042aa:	4630      	mov	r0, r6
 80042ac:	4649      	mov	r1, r9
 80042ae:	f007 fe83 	bl	800bfb8 <WIDGET_OrState>
 80042b2:	e00c      	b.n	80042ce <FRAMEWIN_Callback+0x1c8>
 80042b4:	4640      	mov	r0, r8
 80042b6:	f000 fab1 	bl	800481c <WM_SetFocusOnNextChild>
 80042ba:	4606      	mov	r6, r0
 80042bc:	4620      	mov	r0, r4
 80042be:	f007 fadb 	bl	800b878 <GUI_ALLOC_LockH>
 80042c2:	9000      	str	r0, [sp, #0]
 80042c4:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 80042c8:	4668      	mov	r0, sp
 80042ca:	f007 fae3 	bl	800b894 <GUI_ALLOC_UnlockH>
 80042ce:	4620      	mov	r0, r4
 80042d0:	2101      	movs	r1, #1
 80042d2:	f7ff ff14 	bl	80040fe <FRAMEWIN_SetActive>
 80042d6:	2e00      	cmp	r6, #0
 80042d8:	d153      	bne.n	8004382 <FRAMEWIN_Callback+0x27c>
 80042da:	60ee      	str	r6, [r5, #12]
 80042dc:	e051      	b.n	8004382 <FRAMEWIN_Callback+0x27c>
 80042de:	4620      	mov	r0, r4
 80042e0:	4639      	mov	r1, r7
 80042e2:	f7ff ff0c 	bl	80040fe <FRAMEWIN_SetActive>
 80042e6:	e04c      	b.n	8004382 <FRAMEWIN_Callback+0x27c>
 80042e8:	f019 0f08 	tst.w	r9, #8
 80042ec:	d141      	bne.n	8004372 <FRAMEWIN_Callback+0x26c>
 80042ee:	68eb      	ldr	r3, [r5, #12]
 80042f0:	68db      	ldr	r3, [r3, #12]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d03d      	beq.n	8004372 <FRAMEWIN_Callback+0x26c>
 80042f6:	7a1b      	ldrb	r3, [r3, #8]
 80042f8:	2b00      	cmp	r3, #0
 80042fa:	d03a      	beq.n	8004372 <FRAMEWIN_Callback+0x26c>
 80042fc:	4620      	mov	r0, r4
 80042fe:	f000 fe61 	bl	8004fc4 <WM_SetFocus>
 8004302:	e036      	b.n	8004372 <FRAMEWIN_Callback+0x26c>
 8004304:	68ee      	ldr	r6, [r5, #12]
 8004306:	2e00      	cmp	r6, #0
 8004308:	d033      	beq.n	8004372 <FRAMEWIN_Callback+0x26c>
 800430a:	6870      	ldr	r0, [r6, #4]
 800430c:	4621      	mov	r1, r4
 800430e:	f000 f8ed 	bl	80044ec <WM__IsAncestorOrSelf>
 8004312:	b180      	cbz	r0, 8004336 <FRAMEWIN_Callback+0x230>
 8004314:	4620      	mov	r0, r4
 8004316:	2101      	movs	r1, #1
 8004318:	f7ff fcdf 	bl	8003cda <_SetActive>
 800431c:	6870      	ldr	r0, [r6, #4]
 800431e:	4621      	mov	r1, r4
 8004320:	f000 f8d3 	bl	80044ca <WM__IsAncestor>
 8004324:	b328      	cbz	r0, 8004372 <FRAMEWIN_Callback+0x26c>
 8004326:	4620      	mov	r0, r4
 8004328:	f007 faa6 	bl	800b878 <GUI_ALLOC_LockH>
 800432c:	ab06      	add	r3, sp, #24
 800432e:	6872      	ldr	r2, [r6, #4]
 8004330:	f843 0d14 	str.w	r0, [r3, #-20]!
 8004334:	e00f      	b.n	8004356 <FRAMEWIN_Callback+0x250>
 8004336:	4620      	mov	r0, r4
 8004338:	4639      	mov	r1, r7
 800433a:	f7ff fcce 	bl	8003cda <_SetActive>
 800433e:	6830      	ldr	r0, [r6, #0]
 8004340:	4621      	mov	r1, r4
 8004342:	f000 f8c2 	bl	80044ca <WM__IsAncestor>
 8004346:	b1a0      	cbz	r0, 8004372 <FRAMEWIN_Callback+0x26c>
 8004348:	4620      	mov	r0, r4
 800434a:	f007 fa95 	bl	800b878 <GUI_ALLOC_LockH>
 800434e:	ab06      	add	r3, sp, #24
 8004350:	6832      	ldr	r2, [r6, #0]
 8004352:	f843 0d14 	str.w	r0, [r3, #-20]!
 8004356:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 800435a:	4618      	mov	r0, r3
 800435c:	e007      	b.n	800436e <FRAMEWIN_Callback+0x268>
 800435e:	4620      	mov	r0, r4
 8004360:	f007 fa8a 	bl	800b878 <GUI_ALLOC_LockH>
 8004364:	9000      	str	r0, [sp, #0]
 8004366:	3070      	adds	r0, #112	; 0x70
 8004368:	f007 fc56 	bl	800bc18 <GUI_ALLOC_FreePtr>
 800436c:	4668      	mov	r0, sp
 800436e:	f007 fa91 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004372:	4620      	mov	r0, r4
 8004374:	4629      	mov	r1, r5
 8004376:	f007 fe4a 	bl	800c00e <WIDGET_HandleActive>
 800437a:	b110      	cbz	r0, 8004382 <FRAMEWIN_Callback+0x27c>
 800437c:	4628      	mov	r0, r5
 800437e:	f002 f88d 	bl	800649c <WM_DefaultProc>
 8004382:	b006      	add	sp, #24
 8004384:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08004388 <FRAMEWIN_GetActive>:
 8004388:	b513      	push	{r0, r1, r4, lr}
 800438a:	4604      	mov	r4, r0
 800438c:	b158      	cbz	r0, 80043a6 <FRAMEWIN_GetActive+0x1e>
 800438e:	f007 fa73 	bl	800b878 <GUI_ALLOC_LockH>
 8004392:	ab02      	add	r3, sp, #8
 8004394:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8004398:	f843 0d04 	str.w	r0, [r3, #-4]!
 800439c:	4618      	mov	r0, r3
 800439e:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 80043a2:	f007 fa77 	bl	800b894 <GUI_ALLOC_UnlockH>
 80043a6:	4620      	mov	r0, r4
 80043a8:	b002      	add	sp, #8
 80043aa:	bd10      	pop	{r4, pc}

080043ac <GUI_CreateDialogBox>:
 80043ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80043b0:	4606      	mov	r6, r0
 80043b2:	4688      	mov	r8, r1
 80043b4:	4614      	mov	r4, r2
 80043b6:	461d      	mov	r5, r3
 80043b8:	b913      	cbnz	r3, 80043c0 <GUI_CreateDialogBox+0x14>
 80043ba:	f000 fb97 	bl	8004aec <WM_GetDesktopWindow>
 80043be:	4605      	mov	r5, r0
 80043c0:	9400      	str	r4, [sp, #0]
 80043c2:	4630      	mov	r0, r6
 80043c4:	6834      	ldr	r4, [r6, #0]
 80043c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80043c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80043ca:	4629      	mov	r1, r5
 80043cc:	47a0      	blx	r4
 80043ce:	4604      	mov	r4, r0
 80043d0:	2800      	cmp	r0, #0
 80043d2:	d039      	beq.n	8004448 <GUI_CreateDialogBox+0x9c>
 80043d4:	f000 fb7c 	bl	8004ad0 <WM_GetClientWindow>
 80043d8:	8a71      	ldrh	r1, [r6, #18]
 80043da:	4607      	mov	r7, r0
 80043dc:	4620      	mov	r0, r4
 80043de:	f007 fdeb 	bl	800bfb8 <WIDGET_OrState>
 80043e2:	4620      	mov	r0, r4
 80043e4:	f000 fe8b 	bl	80050fe <WM_ShowWindow>
 80043e8:	4638      	mov	r0, r7
 80043ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80043ee:	f000 fe86 	bl	80050fe <WM_ShowWindow>
 80043f2:	f1b8 0f00 	cmp.w	r8, #0
 80043f6:	dd0f      	ble.n	8004418 <GUI_CreateDialogBox+0x6c>
 80043f8:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 80043fc:	2200      	movs	r2, #0
 80043fe:	9200      	str	r2, [sp, #0]
 8004400:	4630      	mov	r0, r6
 8004402:	4639      	mov	r1, r7
 8004404:	4613      	mov	r3, r2
 8004406:	47e0      	blx	ip
 8004408:	4681      	mov	r9, r0
 800440a:	2800      	cmp	r0, #0
 800440c:	d1ed      	bne.n	80043ea <GUI_CreateDialogBox+0x3e>
 800440e:	4620      	mov	r0, r4
 8004410:	f001 fcee 	bl	8005df0 <WM_DeleteWindow>
 8004414:	4648      	mov	r0, r9
 8004416:	e018      	b.n	800444a <GUI_CreateDialogBox+0x9e>
 8004418:	4638      	mov	r0, r7
 800441a:	211d      	movs	r1, #29
 800441c:	f000 fdb7 	bl	8004f8e <WM_SendMessageNoPara>
 8004420:	1c6b      	adds	r3, r5, #1
 8004422:	d011      	beq.n	8004448 <GUI_CreateDialogBox+0x9c>
 8004424:	f000 fb8c 	bl	8004b40 <WM_GetFocusedWindow>
 8004428:	b150      	cbz	r0, 8004440 <GUI_CreateDialogBox+0x94>
 800442a:	f007 fa1b 	bl	800b864 <GUI_ALLOC_h2p>
 800442e:	6980      	ldr	r0, [r0, #24]
 8004430:	42a0      	cmp	r0, r4
 8004432:	d00a      	beq.n	800444a <GUI_CreateDialogBox+0x9e>
 8004434:	2800      	cmp	r0, #0
 8004436:	d1f8      	bne.n	800442a <GUI_CreateDialogBox+0x7e>
 8004438:	4620      	mov	r0, r4
 800443a:	f000 f9ef 	bl	800481c <WM_SetFocusOnNextChild>
 800443e:	e003      	b.n	8004448 <GUI_CreateDialogBox+0x9c>
 8004440:	42a5      	cmp	r5, r4
 8004442:	d1f9      	bne.n	8004438 <GUI_CreateDialogBox+0x8c>
 8004444:	4628      	mov	r0, r5
 8004446:	e000      	b.n	800444a <GUI_CreateDialogBox+0x9e>
 8004448:	4620      	mov	r0, r4
 800444a:	b003      	add	sp, #12
 800444c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004450 <WM__ForEachDesc>:
 8004450:	b570      	push	{r4, r5, r6, lr}
 8004452:	460d      	mov	r5, r1
 8004454:	4616      	mov	r6, r2
 8004456:	f007 fa05 	bl	800b864 <GUI_ALLOC_h2p>
 800445a:	69c4      	ldr	r4, [r0, #28]
 800445c:	b164      	cbz	r4, 8004478 <WM__ForEachDesc+0x28>
 800445e:	4620      	mov	r0, r4
 8004460:	4631      	mov	r1, r6
 8004462:	47a8      	blx	r5
 8004464:	4620      	mov	r0, r4
 8004466:	4629      	mov	r1, r5
 8004468:	4632      	mov	r2, r6
 800446a:	f7ff fff1 	bl	8004450 <WM__ForEachDesc>
 800446e:	4620      	mov	r0, r4
 8004470:	f007 f9f8 	bl	800b864 <GUI_ALLOC_h2p>
 8004474:	6a04      	ldr	r4, [r0, #32]
 8004476:	e7f1      	b.n	800445c <WM__ForEachDesc+0xc>
 8004478:	bd70      	pop	{r4, r5, r6, pc}

0800447a <WM__GetFirstSibling>:
 800447a:	b508      	push	{r3, lr}
 800447c:	f000 fbf2 	bl	8004c64 <WM_GetParent>
 8004480:	b118      	cbz	r0, 800448a <WM__GetFirstSibling+0x10>
 8004482:	f007 f9ef 	bl	800b864 <GUI_ALLOC_h2p>
 8004486:	69c0      	ldr	r0, [r0, #28]
 8004488:	bd08      	pop	{r3, pc}
 800448a:	bd08      	pop	{r3, pc}

0800448c <WM__GetLastSibling>:
 800448c:	b510      	push	{r4, lr}
 800448e:	4604      	mov	r4, r0
 8004490:	b130      	cbz	r0, 80044a0 <WM__GetLastSibling+0x14>
 8004492:	4620      	mov	r0, r4
 8004494:	f007 f9e6 	bl	800b864 <GUI_ALLOC_h2p>
 8004498:	6a03      	ldr	r3, [r0, #32]
 800449a:	b10b      	cbz	r3, 80044a0 <WM__GetLastSibling+0x14>
 800449c:	461c      	mov	r4, r3
 800449e:	e7f8      	b.n	8004492 <WM__GetLastSibling+0x6>
 80044a0:	4620      	mov	r0, r4
 80044a2:	bd10      	pop	{r4, pc}

080044a4 <WM__GetPrevSibling>:
 80044a4:	b538      	push	{r3, r4, r5, lr}
 80044a6:	4605      	mov	r5, r0
 80044a8:	f7ff ffe7 	bl	800447a <WM__GetFirstSibling>
 80044ac:	4604      	mov	r4, r0
 80044ae:	b154      	cbz	r4, 80044c6 <WM__GetPrevSibling+0x22>
 80044b0:	42ac      	cmp	r4, r5
 80044b2:	d007      	beq.n	80044c4 <WM__GetPrevSibling+0x20>
 80044b4:	4620      	mov	r0, r4
 80044b6:	f007 f9d5 	bl	800b864 <GUI_ALLOC_h2p>
 80044ba:	6a03      	ldr	r3, [r0, #32]
 80044bc:	42ab      	cmp	r3, r5
 80044be:	d002      	beq.n	80044c6 <WM__GetPrevSibling+0x22>
 80044c0:	461c      	mov	r4, r3
 80044c2:	e7f4      	b.n	80044ae <WM__GetPrevSibling+0xa>
 80044c4:	2400      	movs	r4, #0
 80044c6:	4620      	mov	r0, r4
 80044c8:	bd38      	pop	{r3, r4, r5, pc}

080044ca <WM__IsAncestor>:
 80044ca:	b510      	push	{r4, lr}
 80044cc:	460c      	mov	r4, r1
 80044ce:	b908      	cbnz	r0, 80044d4 <WM__IsAncestor+0xa>
 80044d0:	2000      	movs	r0, #0
 80044d2:	bd10      	pop	{r4, pc}
 80044d4:	2900      	cmp	r1, #0
 80044d6:	d0fb      	beq.n	80044d0 <WM__IsAncestor+0x6>
 80044d8:	f007 f9c4 	bl	800b864 <GUI_ALLOC_h2p>
 80044dc:	6980      	ldr	r0, [r0, #24]
 80044de:	42a0      	cmp	r0, r4
 80044e0:	d002      	beq.n	80044e8 <WM__IsAncestor+0x1e>
 80044e2:	2800      	cmp	r0, #0
 80044e4:	d1f8      	bne.n	80044d8 <WM__IsAncestor+0xe>
 80044e6:	e7f3      	b.n	80044d0 <WM__IsAncestor+0x6>
 80044e8:	2001      	movs	r0, #1
 80044ea:	bd10      	pop	{r4, pc}

080044ec <WM__IsAncestorOrSelf>:
 80044ec:	4288      	cmp	r0, r1
 80044ee:	d001      	beq.n	80044f4 <WM__IsAncestorOrSelf+0x8>
 80044f0:	f7ff bfeb 	b.w	80044ca <WM__IsAncestor>
 80044f4:	2001      	movs	r0, #1
 80044f6:	4770      	bx	lr

080044f8 <WM__IsChild>:
 80044f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80044fa:	460d      	mov	r5, r1
 80044fc:	4604      	mov	r4, r0
 80044fe:	b160      	cbz	r0, 800451a <WM__IsChild+0x22>
 8004500:	f007 f9ba 	bl	800b878 <GUI_ALLOC_LockH>
 8004504:	9001      	str	r0, [sp, #4]
 8004506:	b120      	cbz	r0, 8004512 <WM__IsChild+0x1a>
 8004508:	6984      	ldr	r4, [r0, #24]
 800450a:	1b63      	subs	r3, r4, r5
 800450c:	425c      	negs	r4, r3
 800450e:	415c      	adcs	r4, r3
 8004510:	e000      	b.n	8004514 <WM__IsChild+0x1c>
 8004512:	4604      	mov	r4, r0
 8004514:	a801      	add	r0, sp, #4
 8004516:	f007 f9bd 	bl	800b894 <GUI_ALLOC_UnlockH>
 800451a:	4620      	mov	r0, r4
 800451c:	b003      	add	sp, #12
 800451e:	bd30      	pop	{r4, r5, pc}

08004520 <WM__GetFocusedChild>:
 8004520:	b538      	push	{r3, r4, r5, lr}
 8004522:	4d06      	ldr	r5, [pc, #24]	; (800453c <WM__GetFocusedChild+0x1c>)
 8004524:	4c06      	ldr	r4, [pc, #24]	; (8004540 <WM__GetFocusedChild+0x20>)
 8004526:	682b      	ldr	r3, [r5, #0]
 8004528:	4601      	mov	r1, r0
 800452a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800452e:	f7ff ffe3 	bl	80044f8 <WM__IsChild>
 8004532:	b110      	cbz	r0, 800453a <WM__GetFocusedChild+0x1a>
 8004534:	682b      	ldr	r3, [r5, #0]
 8004536:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800453a:	bd38      	pop	{r3, r4, r5, pc}
 800453c:	20002ca4 	.word	0x20002ca4
 8004540:	20002c94 	.word	0x20002c94

08004544 <WM__Screen2Client>:
 8004544:	f9b0 3000 	ldrsh.w	r3, [r0]
 8004548:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800454c:	4608      	mov	r0, r1
 800454e:	4252      	negs	r2, r2
 8004550:	4259      	negs	r1, r3
 8004552:	f006 bca8 	b.w	800aea6 <GUI_MoveRect>
	...

08004558 <WM__SendMessage>:
 8004558:	b570      	push	{r4, r5, r6, lr}
 800455a:	4c0d      	ldr	r4, [pc, #52]	; (8004590 <WM__SendMessage+0x38>)
 800455c:	6823      	ldr	r3, [r4, #0]
 800455e:	2b13      	cmp	r3, #19
 8004560:	4606      	mov	r6, r0
 8004562:	460d      	mov	r5, r1
 8004564:	dc12      	bgt.n	800458c <WM__SendMessage+0x34>
 8004566:	f007 f97d 	bl	800b864 <GUI_ALLOC_h2p>
 800456a:	6903      	ldr	r3, [r0, #16]
 800456c:	606e      	str	r6, [r5, #4]
 800456e:	b143      	cbz	r3, 8004582 <WM__SendMessage+0x2a>
 8004570:	6822      	ldr	r2, [r4, #0]
 8004572:	4628      	mov	r0, r5
 8004574:	3201      	adds	r2, #1
 8004576:	6022      	str	r2, [r4, #0]
 8004578:	4798      	blx	r3
 800457a:	6823      	ldr	r3, [r4, #0]
 800457c:	3b01      	subs	r3, #1
 800457e:	6023      	str	r3, [r4, #0]
 8004580:	bd70      	pop	{r4, r5, r6, pc}
 8004582:	4628      	mov	r0, r5
 8004584:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004588:	f001 bf88 	b.w	800649c <WM_DefaultProc>
 800458c:	bd70      	pop	{r4, r5, r6, pc}
 800458e:	bf00      	nop
 8004590:	20002ac4 	.word	0x20002ac4

08004594 <WM__SendMessageNoPara>:
 8004594:	b530      	push	{r4, r5, lr}
 8004596:	b085      	sub	sp, #20
 8004598:	4604      	mov	r4, r0
 800459a:	2210      	movs	r2, #16
 800459c:	460d      	mov	r5, r1
 800459e:	4668      	mov	r0, sp
 80045a0:	2100      	movs	r1, #0
 80045a2:	f00b fda7 	bl	80100f4 <memset>
 80045a6:	4620      	mov	r0, r4
 80045a8:	f007 f95c 	bl	800b864 <GUI_ALLOC_h2p>
 80045ac:	6903      	ldr	r3, [r0, #16]
 80045ae:	b11b      	cbz	r3, 80045b8 <WM__SendMessageNoPara+0x24>
 80045b0:	9401      	str	r4, [sp, #4]
 80045b2:	9500      	str	r5, [sp, #0]
 80045b4:	4668      	mov	r0, sp
 80045b6:	4798      	blx	r3
 80045b8:	b005      	add	sp, #20
 80045ba:	bd30      	pop	{r4, r5, pc}

080045bc <WM__UpdateChildPositions>:
 80045bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045c0:	b087      	sub	sp, #28
 80045c2:	69c4      	ldr	r4, [r0, #28]
 80045c4:	9303      	str	r3, [sp, #12]
 80045c6:	468a      	mov	sl, r1
 80045c8:	4693      	mov	fp, r2
 80045ca:	2c00      	cmp	r4, #0
 80045cc:	d06d      	beq.n	80046aa <WM__UpdateChildPositions+0xee>
 80045ce:	4620      	mov	r0, r4
 80045d0:	f007 f952 	bl	800b878 <GUI_ALLOC_LockH>
 80045d4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80045d6:	9005      	str	r0, [sp, #20]
 80045d8:	f401 7320 	and.w	r3, r1, #640	; 0x280
 80045dc:	2b80      	cmp	r3, #128	; 0x80
 80045de:	f8b0 8000 	ldrh.w	r8, [r0]
 80045e2:	8842      	ldrh	r2, [r0, #2]
 80045e4:	8886      	ldrh	r6, [r0, #4]
 80045e6:	88c5      	ldrh	r5, [r0, #6]
 80045e8:	d008      	beq.n	80045fc <WM__UpdateChildPositions+0x40>
 80045ea:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 80045ee:	d108      	bne.n	8004602 <WM__UpdateChildPositions+0x46>
 80045f0:	eb08 090a 	add.w	r9, r8, sl
 80045f4:	fa1f f989 	uxth.w	r9, r9
 80045f8:	9b03      	ldr	r3, [sp, #12]
 80045fa:	e008      	b.n	800460e <WM__UpdateChildPositions+0x52>
 80045fc:	9803      	ldr	r0, [sp, #12]
 80045fe:	b283      	uxth	r3, r0
 8004600:	e001      	b.n	8004606 <WM__UpdateChildPositions+0x4a>
 8004602:	fa1f f38a 	uxth.w	r3, sl
 8004606:	eb03 0908 	add.w	r9, r3, r8
 800460a:	fa1f f989 	uxth.w	r9, r9
 800460e:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 8004612:	4433      	add	r3, r6
 8004614:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8004618:	b29b      	uxth	r3, r3
 800461a:	d008      	beq.n	800462e <WM__UpdateChildPositions+0x72>
 800461c:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 8004620:	d108      	bne.n	8004634 <WM__UpdateChildPositions+0x78>
 8004622:	eb02 0c0b 	add.w	ip, r2, fp
 8004626:	fa1f fc8c 	uxth.w	ip, ip
 800462a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800462c:	e008      	b.n	8004640 <WM__UpdateChildPositions+0x84>
 800462e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004630:	b28f      	uxth	r7, r1
 8004632:	e001      	b.n	8004638 <WM__UpdateChildPositions+0x7c>
 8004634:	fa1f f78b 	uxth.w	r7, fp
 8004638:	eb07 0c02 	add.w	ip, r7, r2
 800463c:	fa1f fc8c 	uxth.w	ip, ip
 8004640:	fa0f f989 	sxth.w	r9, r9
 8004644:	fa0f f888 	sxth.w	r8, r8
 8004648:	b212      	sxth	r2, r2
 800464a:	442f      	add	r7, r5
 800464c:	fa0f fc8c 	sxth.w	ip, ip
 8004650:	ebb9 0108 	subs.w	r1, r9, r8
 8004654:	9202      	str	r2, [sp, #8]
 8004656:	b2bf      	uxth	r7, r7
 8004658:	ebc2 020c 	rsb	r2, r2, ip
 800465c:	d100      	bne.n	8004660 <WM__UpdateChildPositions+0xa4>
 800465e:	b142      	cbz	r2, 8004672 <WM__UpdateChildPositions+0xb6>
 8004660:	4620      	mov	r0, r4
 8004662:	9301      	str	r3, [sp, #4]
 8004664:	f8cd c000 	str.w	ip, [sp]
 8004668:	f000 fa12 	bl	8004a90 <WM_MoveWindow>
 800466c:	f8dd c000 	ldr.w	ip, [sp]
 8004670:	9b01      	ldr	r3, [sp, #4]
 8004672:	b21b      	sxth	r3, r3
 8004674:	ebc9 0903 	rsb	r9, r9, r3
 8004678:	b236      	sxth	r6, r6
 800467a:	9b02      	ldr	r3, [sp, #8]
 800467c:	ebc6 0808 	rsb	r8, r6, r8
 8004680:	b23f      	sxth	r7, r7
 8004682:	b22d      	sxth	r5, r5
 8004684:	ebcc 0c07 	rsb	ip, ip, r7
 8004688:	1b5d      	subs	r5, r3, r5
 800468a:	eb19 0108 	adds.w	r1, r9, r8
 800468e:	eb0c 0205 	add.w	r2, ip, r5
 8004692:	d100      	bne.n	8004696 <WM__UpdateChildPositions+0xda>
 8004694:	b112      	cbz	r2, 800469c <WM__UpdateChildPositions+0xe0>
 8004696:	4620      	mov	r0, r4
 8004698:	f000 fbfe 	bl	8004e98 <WM_ResizeWindow>
 800469c:	a806      	add	r0, sp, #24
 800469e:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80046a2:	6a1c      	ldr	r4, [r3, #32]
 80046a4:	f007 f8f6 	bl	800b894 <GUI_ALLOC_UnlockH>
 80046a8:	e78f      	b.n	80045ca <WM__UpdateChildPositions+0xe>
 80046aa:	b007      	add	sp, #28
 80046ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080046b0 <WM__AddCriticalHandle>:
 80046b0:	4b02      	ldr	r3, [pc, #8]	; (80046bc <WM__AddCriticalHandle+0xc>)
 80046b2:	681a      	ldr	r2, [r3, #0]
 80046b4:	6002      	str	r2, [r0, #0]
 80046b6:	6018      	str	r0, [r3, #0]
 80046b8:	4770      	bx	lr
 80046ba:	bf00      	nop
 80046bc:	20002cc0 	.word	0x20002cc0

080046c0 <WM__GetClientRectEx>:
 80046c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80046c2:	460d      	mov	r5, r1
 80046c4:	b158      	cbz	r0, 80046de <WM__GetClientRectEx+0x1e>
 80046c6:	b151      	cbz	r1, 80046de <WM__GetClientRectEx+0x1e>
 80046c8:	f007 f8d6 	bl	800b878 <GUI_ALLOC_LockH>
 80046cc:	ac02      	add	r4, sp, #8
 80046ce:	4629      	mov	r1, r5
 80046d0:	f844 0d04 	str.w	r0, [r4, #-4]!
 80046d4:	f001 f96a 	bl	80059ac <WM__GetClientRectWin>
 80046d8:	4620      	mov	r0, r4
 80046da:	f007 f8db 	bl	800b894 <GUI_ALLOC_UnlockH>
 80046de:	b003      	add	sp, #12
 80046e0:	bd30      	pop	{r4, r5, pc}
	...

080046e4 <WM_SetHasTrans>:
 80046e4:	b513      	push	{r0, r1, r4, lr}
 80046e6:	4604      	mov	r4, r0
 80046e8:	b1b8      	cbz	r0, 800471a <WM_SetHasTrans+0x36>
 80046ea:	f007 f8c5 	bl	800b878 <GUI_ALLOC_LockH>
 80046ee:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80046f0:	9001      	str	r0, [sp, #4]
 80046f2:	07db      	lsls	r3, r3, #31
 80046f4:	d40e      	bmi.n	8004714 <WM_SetHasTrans+0x30>
 80046f6:	4620      	mov	r0, r4
 80046f8:	f000 fd16 	bl	8005128 <WM_ValidateWindow>
 80046fc:	9b01      	ldr	r3, [sp, #4]
 80046fe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004700:	f042 0201 	orr.w	r2, r2, #1
 8004704:	629a      	str	r2, [r3, #40]	; 0x28
 8004706:	4b06      	ldr	r3, [pc, #24]	; (8004720 <WM_SetHasTrans+0x3c>)
 8004708:	681a      	ldr	r2, [r3, #0]
 800470a:	4620      	mov	r0, r4
 800470c:	3201      	adds	r2, #1
 800470e:	601a      	str	r2, [r3, #0]
 8004710:	f001 fa96 	bl	8005c40 <WM_InvalidateWindow>
 8004714:	a801      	add	r0, sp, #4
 8004716:	f007 f8bd 	bl	800b894 <GUI_ALLOC_UnlockH>
 800471a:	b002      	add	sp, #8
 800471c:	bd10      	pop	{r4, pc}
 800471e:	bf00      	nop
 8004720:	20002cd4 	.word	0x20002cd4

08004724 <WM_GetHasTrans>:
 8004724:	b508      	push	{r3, lr}
 8004726:	b128      	cbz	r0, 8004734 <WM_GetHasTrans+0x10>
 8004728:	f007 f89c 	bl	800b864 <GUI_ALLOC_h2p>
 800472c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800472e:	f000 0001 	and.w	r0, r0, #1
 8004732:	bd08      	pop	{r3, pc}
 8004734:	bd08      	pop	{r3, pc}

08004736 <_SetScrollbar>:
 8004736:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004738:	460d      	mov	r5, r1
 800473a:	4611      	mov	r1, r2
 800473c:	4606      	mov	r6, r0
 800473e:	461f      	mov	r7, r3
 8004740:	f000 fa3a 	bl	8004bb8 <WM_GetDialogItem>
 8004744:	4604      	mov	r4, r0
 8004746:	b1a5      	cbz	r5, 8004772 <_SetScrollbar+0x3c>
 8004748:	b920      	cbnz	r0, 8004754 <_SetScrollbar+0x1e>
 800474a:	4630      	mov	r0, r6
 800474c:	4639      	mov	r1, r7
 800474e:	f007 fe0f 	bl	800c370 <SCROLLBAR_CreateAttached>
 8004752:	e014      	b.n	800477e <_SetScrollbar+0x48>
 8004754:	f007 f890 	bl	800b878 <GUI_ALLOC_LockH>
 8004758:	ab02      	add	r3, sp, #8
 800475a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800475c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004760:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004764:	f042 0202 	orr.w	r2, r2, #2
 8004768:	6282      	str	r2, [r0, #40]	; 0x28
 800476a:	4618      	mov	r0, r3
 800476c:	f007 f892 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004770:	e005      	b.n	800477e <_SetScrollbar+0x48>
 8004772:	b120      	cbz	r0, 800477e <_SetScrollbar+0x48>
 8004774:	f000 fcf0 	bl	8005158 <WM_HideWindow>
 8004778:	4620      	mov	r0, r4
 800477a:	f001 fe33 	bl	80063e4 <WM__DeleteSecure>
 800477e:	1c20      	adds	r0, r4, #0
 8004780:	bf18      	it	ne
 8004782:	2001      	movne	r0, #1
 8004784:	b003      	add	sp, #12
 8004786:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004788 <WM__SetScrollbarV>:
 8004788:	22fe      	movs	r2, #254	; 0xfe
 800478a:	2308      	movs	r3, #8
 800478c:	f7ff bfd3 	b.w	8004736 <_SetScrollbar>

08004790 <WM__SetScrollbarH>:
 8004790:	22ff      	movs	r2, #255	; 0xff
 8004792:	2300      	movs	r3, #0
 8004794:	f7ff bfcf 	b.w	8004736 <_SetScrollbar>

08004798 <WM_SetScrollbarH>:
 8004798:	f7ff bffa 	b.w	8004790 <WM__SetScrollbarH>

0800479c <WM_SetScrollbarV>:
 800479c:	f7ff bff4 	b.w	8004788 <WM__SetScrollbarV>

080047a0 <_GetPrevChild>:
 80047a0:	b510      	push	{r4, lr}
 80047a2:	4604      	mov	r4, r0
 80047a4:	b918      	cbnz	r0, 80047ae <_GetPrevChild+0xe>
 80047a6:	4620      	mov	r0, r4
 80047a8:	f7ff fe70 	bl	800448c <WM__GetLastSibling>
 80047ac:	e003      	b.n	80047b6 <_GetPrevChild+0x16>
 80047ae:	f7ff fe79 	bl	80044a4 <WM__GetPrevSibling>
 80047b2:	2800      	cmp	r0, #0
 80047b4:	d0f7      	beq.n	80047a6 <_GetPrevChild+0x6>
 80047b6:	42a0      	cmp	r0, r4
 80047b8:	bf08      	it	eq
 80047ba:	2000      	moveq	r0, #0
 80047bc:	bd10      	pop	{r4, pc}

080047be <WM_SetFocusOnPrevChild>:
 80047be:	b538      	push	{r3, r4, r5, lr}
 80047c0:	4604      	mov	r4, r0
 80047c2:	b1b0      	cbz	r0, 80047f2 <WM_SetFocusOnPrevChild+0x34>
 80047c4:	f7ff feac 	bl	8004520 <WM__GetFocusedChild>
 80047c8:	f7ff ffea 	bl	80047a0 <_GetPrevChild>
 80047cc:	4605      	mov	r5, r0
 80047ce:	4604      	mov	r4, r0
 80047d0:	4620      	mov	r0, r4
 80047d2:	f000 fb2b 	bl	8004e2c <WM_IsFocusable>
 80047d6:	b930      	cbnz	r0, 80047e6 <WM_SetFocusOnPrevChild+0x28>
 80047d8:	b12c      	cbz	r4, 80047e6 <WM_SetFocusOnPrevChild+0x28>
 80047da:	4620      	mov	r0, r4
 80047dc:	f7ff ffe0 	bl	80047a0 <_GetPrevChild>
 80047e0:	42a8      	cmp	r0, r5
 80047e2:	4604      	mov	r4, r0
 80047e4:	d1f4      	bne.n	80047d0 <WM_SetFocusOnPrevChild+0x12>
 80047e6:	4620      	mov	r0, r4
 80047e8:	f000 fbec 	bl	8004fc4 <WM_SetFocus>
 80047ec:	2800      	cmp	r0, #0
 80047ee:	bf18      	it	ne
 80047f0:	2400      	movne	r4, #0
 80047f2:	4620      	mov	r0, r4
 80047f4:	bd38      	pop	{r3, r4, r5, pc}

080047f6 <_GetNextChild>:
 80047f6:	b538      	push	{r3, r4, r5, lr}
 80047f8:	4605      	mov	r5, r0
 80047fa:	460c      	mov	r4, r1
 80047fc:	b921      	cbnz	r1, 8004808 <_GetNextChild+0x12>
 80047fe:	4628      	mov	r0, r5
 8004800:	f007 f830 	bl	800b864 <GUI_ALLOC_h2p>
 8004804:	69c0      	ldr	r0, [r0, #28]
 8004806:	e005      	b.n	8004814 <_GetNextChild+0x1e>
 8004808:	4608      	mov	r0, r1
 800480a:	f007 f82b 	bl	800b864 <GUI_ALLOC_h2p>
 800480e:	6a00      	ldr	r0, [r0, #32]
 8004810:	2800      	cmp	r0, #0
 8004812:	d0f4      	beq.n	80047fe <_GetNextChild+0x8>
 8004814:	42a0      	cmp	r0, r4
 8004816:	bf08      	it	eq
 8004818:	2000      	moveq	r0, #0
 800481a:	bd38      	pop	{r3, r4, r5, pc}

0800481c <WM_SetFocusOnNextChild>:
 800481c:	b570      	push	{r4, r5, r6, lr}
 800481e:	4605      	mov	r5, r0
 8004820:	b328      	cbz	r0, 800486e <WM_SetFocusOnNextChild+0x52>
 8004822:	f7ff fe7d 	bl	8004520 <WM__GetFocusedChild>
 8004826:	4601      	mov	r1, r0
 8004828:	4628      	mov	r0, r5
 800482a:	f7ff ffe4 	bl	80047f6 <_GetNextChild>
 800482e:	4606      	mov	r6, r0
 8004830:	4604      	mov	r4, r0
 8004832:	4620      	mov	r0, r4
 8004834:	f000 fafa 	bl	8004e2c <WM_IsFocusable>
 8004838:	b938      	cbnz	r0, 800484a <WM_SetFocusOnNextChild+0x2e>
 800483a:	b13c      	cbz	r4, 800484c <WM_SetFocusOnNextChild+0x30>
 800483c:	4621      	mov	r1, r4
 800483e:	4628      	mov	r0, r5
 8004840:	f7ff ffd9 	bl	80047f6 <_GetNextChild>
 8004844:	42b0      	cmp	r0, r6
 8004846:	4604      	mov	r4, r0
 8004848:	d1f3      	bne.n	8004832 <WM_SetFocusOnNextChild+0x16>
 800484a:	b90c      	cbnz	r4, 8004850 <WM_SetFocusOnNextChild+0x34>
 800484c:	2400      	movs	r4, #0
 800484e:	e00f      	b.n	8004870 <WM_SetFocusOnNextChild+0x54>
 8004850:	4d08      	ldr	r5, [pc, #32]	; (8004874 <WM_SetFocusOnNextChild+0x58>)
 8004852:	4620      	mov	r0, r4
 8004854:	682e      	ldr	r6, [r5, #0]
 8004856:	f001 f8b5 	bl	80059c4 <WM__GetTopLevelLayer>
 800485a:	1c43      	adds	r3, r0, #1
 800485c:	d008      	beq.n	8004870 <WM_SetFocusOnNextChild+0x54>
 800485e:	6028      	str	r0, [r5, #0]
 8004860:	4620      	mov	r0, r4
 8004862:	f000 fbaf 	bl	8004fc4 <WM_SetFocus>
 8004866:	602e      	str	r6, [r5, #0]
 8004868:	2800      	cmp	r0, #0
 800486a:	d1ef      	bne.n	800484c <WM_SetFocusOnNextChild+0x30>
 800486c:	e000      	b.n	8004870 <WM_SetFocusOnNextChild+0x54>
 800486e:	4604      	mov	r4, r0
 8004870:	4620      	mov	r0, r4
 8004872:	bd70      	pop	{r4, r5, r6, pc}
 8004874:	20002ca4 	.word	0x20002ca4

08004878 <WM_SetCaptureMove>:
 8004878:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800487c:	b085      	sub	sp, #20
 800487e:	4604      	mov	r4, r0
 8004880:	460d      	mov	r5, r1
 8004882:	4691      	mov	r9, r2
 8004884:	4698      	mov	r8, r3
 8004886:	f000 fab5 	bl	8004df4 <WM_HasCaptured>
 800488a:	4e21      	ldr	r6, [pc, #132]	; (8004910 <WM_SetCaptureMove+0x98>)
 800488c:	b940      	cbnz	r0, 80048a0 <WM_SetCaptureMove+0x28>
 800488e:	4620      	mov	r0, r4
 8004890:	2101      	movs	r1, #1
 8004892:	f000 f859 	bl	8004948 <WM_SetCapture>
 8004896:	682b      	ldr	r3, [r5, #0]
 8004898:	8033      	strh	r3, [r6, #0]
 800489a:	686b      	ldr	r3, [r5, #4]
 800489c:	8073      	strh	r3, [r6, #2]
 800489e:	e034      	b.n	800490a <WM_SetCaptureMove+0x92>
 80048a0:	682b      	ldr	r3, [r5, #0]
 80048a2:	f9b6 7000 	ldrsh.w	r7, [r6]
 80048a6:	686d      	ldr	r5, [r5, #4]
 80048a8:	1bdf      	subs	r7, r3, r7
 80048aa:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80048ae:	4620      	mov	r0, r4
 80048b0:	1aed      	subs	r5, r5, r3
 80048b2:	f1b9 0f00 	cmp.w	r9, #0
 80048b6:	d102      	bne.n	80048be <WM_SetCaptureMove+0x46>
 80048b8:	f1b8 0f00 	cmp.w	r8, #0
 80048bc:	d021      	beq.n	8004902 <WM_SetCaptureMove+0x8a>
 80048be:	4669      	mov	r1, sp
 80048c0:	f000 fa39 	bl	8004d36 <WM_GetWindowRectEx>
 80048c4:	f1b8 0f00 	cmp.w	r8, #0
 80048c8:	d005      	beq.n	80048d6 <WM_SetCaptureMove+0x5e>
 80048ca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80048ce:	3b01      	subs	r3, #1
 80048d0:	4498      	add	r8, r3
 80048d2:	f8ad 8006 	strh.w	r8, [sp, #6]
 80048d6:	4620      	mov	r0, r4
 80048d8:	f000 f9c4 	bl	8004c64 <WM_GetParent>
 80048dc:	a902      	add	r1, sp, #8
 80048de:	f000 fa2a 	bl	8004d36 <WM_GetWindowRectEx>
 80048e2:	4668      	mov	r0, sp
 80048e4:	4639      	mov	r1, r7
 80048e6:	462a      	mov	r2, r5
 80048e8:	f006 fadd 	bl	800aea6 <GUI_MoveRect>
 80048ec:	a802      	add	r0, sp, #8
 80048ee:	4601      	mov	r1, r0
 80048f0:	464a      	mov	r2, r9
 80048f2:	f004 fcec 	bl	80092ce <GUI__ReduceRect>
 80048f6:	4668      	mov	r0, sp
 80048f8:	a902      	add	r1, sp, #8
 80048fa:	f006 fb1f 	bl	800af3c <GUI_RectsIntersect>
 80048fe:	b120      	cbz	r0, 800490a <WM_SetCaptureMove+0x92>
 8004900:	4620      	mov	r0, r4
 8004902:	4639      	mov	r1, r7
 8004904:	462a      	mov	r2, r5
 8004906:	f000 f8c3 	bl	8004a90 <WM_MoveWindow>
 800490a:	b005      	add	sp, #20
 800490c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004910:	20002ac8 	.word	0x20002ac8

08004914 <WM__ReleaseCapture>:
 8004914:	b530      	push	{r4, r5, lr}
 8004916:	4d0a      	ldr	r5, [pc, #40]	; (8004940 <WM__ReleaseCapture+0x2c>)
 8004918:	4c0a      	ldr	r4, [pc, #40]	; (8004944 <WM__ReleaseCapture+0x30>)
 800491a:	682b      	ldr	r3, [r5, #0]
 800491c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004920:	b085      	sub	sp, #20
 8004922:	b150      	cbz	r0, 800493a <WM__ReleaseCapture+0x26>
 8004924:	a904      	add	r1, sp, #16
 8004926:	2318      	movs	r3, #24
 8004928:	f841 3d10 	str.w	r3, [r1, #-16]!
 800492c:	4669      	mov	r1, sp
 800492e:	f7ff fe13 	bl	8004558 <WM__SendMessage>
 8004932:	682b      	ldr	r3, [r5, #0]
 8004934:	2200      	movs	r2, #0
 8004936:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 800493a:	b005      	add	sp, #20
 800493c:	bd30      	pop	{r4, r5, pc}
 800493e:	bf00      	nop
 8004940:	20002ca4 	.word	0x20002ca4
 8004944:	20002cc8 	.word	0x20002cc8

08004948 <WM_SetCapture>:
 8004948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800494a:	4b09      	ldr	r3, [pc, #36]	; (8004970 <WM_SetCapture+0x28>)
 800494c:	4a09      	ldr	r2, [pc, #36]	; (8004974 <WM_SetCapture+0x2c>)
 800494e:	4604      	mov	r4, r0
 8004950:	6818      	ldr	r0, [r3, #0]
 8004952:	460f      	mov	r7, r1
 8004954:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 8004958:	42a1      	cmp	r1, r4
 800495a:	4615      	mov	r5, r2
 800495c:	461e      	mov	r6, r3
 800495e:	d001      	beq.n	8004964 <WM_SetCapture+0x1c>
 8004960:	f7ff ffd8 	bl	8004914 <WM__ReleaseCapture>
 8004964:	6833      	ldr	r3, [r6, #0]
 8004966:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 800496a:	4b03      	ldr	r3, [pc, #12]	; (8004978 <WM_SetCapture+0x30>)
 800496c:	701f      	strb	r7, [r3, #0]
 800496e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004970:	20002ca4 	.word	0x20002ca4
 8004974:	20002cc8 	.word	0x20002cc8
 8004978:	20002ca8 	.word	0x20002ca8

0800497c <_MoveDescendents>:
 800497c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004980:	b088      	sub	sp, #32
 8004982:	4606      	mov	r6, r0
 8004984:	460c      	mov	r4, r1
 8004986:	4615      	mov	r5, r2
 8004988:	a804      	add	r0, sp, #16
 800498a:	2100      	movs	r1, #0
 800498c:	2210      	movs	r2, #16
 800498e:	f00b fbb1 	bl	80100f4 <memset>
 8004992:	b336      	cbz	r6, 80049e2 <_MoveDescendents+0x66>
 8004994:	4630      	mov	r0, r6
 8004996:	f006 ff6f 	bl	800b878 <GUI_ALLOC_LockH>
 800499a:	4621      	mov	r1, r4
 800499c:	462a      	mov	r2, r5
 800499e:	9001      	str	r0, [sp, #4]
 80049a0:	f006 fa81 	bl	800aea6 <GUI_MoveRect>
 80049a4:	9801      	ldr	r0, [sp, #4]
 80049a6:	4621      	mov	r1, r4
 80049a8:	3008      	adds	r0, #8
 80049aa:	462a      	mov	r2, r5
 80049ac:	f006 fa7b 	bl	800aea6 <GUI_MoveRect>
 80049b0:	a808      	add	r0, sp, #32
 80049b2:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 80049b6:	f8d2 801c 	ldr.w	r8, [r2, #28]
 80049ba:	6a17      	ldr	r7, [r2, #32]
 80049bc:	f006 ff6a 	bl	800b894 <GUI_ALLOC_UnlockH>
 80049c0:	4640      	mov	r0, r8
 80049c2:	4621      	mov	r1, r4
 80049c4:	462a      	mov	r2, r5
 80049c6:	f7ff ffd9 	bl	800497c <_MoveDescendents>
 80049ca:	2303      	movs	r3, #3
 80049cc:	9304      	str	r3, [sp, #16]
 80049ce:	4630      	mov	r0, r6
 80049d0:	ab02      	add	r3, sp, #8
 80049d2:	a904      	add	r1, sp, #16
 80049d4:	9307      	str	r3, [sp, #28]
 80049d6:	9402      	str	r4, [sp, #8]
 80049d8:	9503      	str	r5, [sp, #12]
 80049da:	463e      	mov	r6, r7
 80049dc:	f7ff fdbc 	bl	8004558 <WM__SendMessage>
 80049e0:	e7d7      	b.n	8004992 <_MoveDescendents+0x16>
 80049e2:	b008      	add	sp, #32
 80049e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080049e8 <WM__MoveWindow>:
 80049e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80049ec:	b08b      	sub	sp, #44	; 0x2c
 80049ee:	4606      	mov	r6, r0
 80049f0:	460d      	mov	r5, r1
 80049f2:	4614      	mov	r4, r2
 80049f4:	a806      	add	r0, sp, #24
 80049f6:	2100      	movs	r1, #0
 80049f8:	2210      	movs	r2, #16
 80049fa:	f00b fb7b 	bl	80100f4 <memset>
 80049fe:	2e00      	cmp	r6, #0
 8004a00:	d043      	beq.n	8004a8a <WM__MoveWindow+0xa2>
 8004a02:	b90d      	cbnz	r5, 8004a08 <WM__MoveWindow+0x20>
 8004a04:	2c00      	cmp	r4, #0
 8004a06:	d040      	beq.n	8004a8a <WM__MoveWindow+0xa2>
 8004a08:	4630      	mov	r0, r6
 8004a0a:	f006 ff35 	bl	800b878 <GUI_ALLOC_LockH>
 8004a0e:	4603      	mov	r3, r0
 8004a10:	9001      	str	r0, [sp, #4]
 8004a12:	c803      	ldmia	r0, {r0, r1}
 8004a14:	f10d 0808 	add.w	r8, sp, #8
 8004a18:	e888 0003 	stmia.w	r8, {r0, r1}
 8004a1c:	4622      	mov	r2, r4
 8004a1e:	4618      	mov	r0, r3
 8004a20:	4629      	mov	r1, r5
 8004a22:	f006 fa40 	bl	800aea6 <GUI_MoveRect>
 8004a26:	9801      	ldr	r0, [sp, #4]
 8004a28:	af0a      	add	r7, sp, #40	; 0x28
 8004a2a:	4629      	mov	r1, r5
 8004a2c:	4622      	mov	r2, r4
 8004a2e:	3008      	adds	r0, #8
 8004a30:	f006 fa39 	bl	800aea6 <GUI_MoveRect>
 8004a34:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 8004a38:	f8d3 901c 	ldr.w	r9, [r3, #28]
 8004a3c:	4638      	mov	r0, r7
 8004a3e:	f006 ff29 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004a42:	4622      	mov	r2, r4
 8004a44:	4648      	mov	r0, r9
 8004a46:	4629      	mov	r1, r5
 8004a48:	f7ff ff98 	bl	800497c <_MoveDescendents>
 8004a4c:	4630      	mov	r0, r6
 8004a4e:	f006 ff13 	bl	800b878 <GUI_ALLOC_LockH>
 8004a52:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004a54:	9001      	str	r0, [sp, #4]
 8004a56:	0792      	lsls	r2, r2, #30
 8004a58:	d50a      	bpl.n	8004a70 <WM__MoveWindow+0x88>
 8004a5a:	6981      	ldr	r1, [r0, #24]
 8004a5c:	b141      	cbz	r1, 8004a70 <WM__MoveWindow+0x88>
 8004a5e:	6a02      	ldr	r2, [r0, #32]
 8004a60:	f001 f885 	bl	8005b6e <WM__InvalidateParent>
 8004a64:	9b01      	ldr	r3, [sp, #4]
 8004a66:	4640      	mov	r0, r8
 8004a68:	6999      	ldr	r1, [r3, #24]
 8004a6a:	6a1a      	ldr	r2, [r3, #32]
 8004a6c:	f001 f87f 	bl	8005b6e <WM__InvalidateParent>
 8004a70:	4638      	mov	r0, r7
 8004a72:	f006 ff0f 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004a76:	2303      	movs	r3, #3
 8004a78:	9306      	str	r3, [sp, #24]
 8004a7a:	4630      	mov	r0, r6
 8004a7c:	ab04      	add	r3, sp, #16
 8004a7e:	a906      	add	r1, sp, #24
 8004a80:	9309      	str	r3, [sp, #36]	; 0x24
 8004a82:	9504      	str	r5, [sp, #16]
 8004a84:	9405      	str	r4, [sp, #20]
 8004a86:	f7ff fd67 	bl	8004558 <WM__SendMessage>
 8004a8a:	b00b      	add	sp, #44	; 0x2c
 8004a8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004a90 <WM_MoveWindow>:
 8004a90:	f7ff bfaa 	b.w	80049e8 <WM__MoveWindow>

08004a94 <WM_DisableMemdev>:
 8004a94:	b508      	push	{r3, lr}
 8004a96:	b138      	cbz	r0, 8004aa8 <WM_DisableMemdev+0x14>
 8004a98:	f006 fee4 	bl	800b864 <GUI_ALLOC_h2p>
 8004a9c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004a9e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004aa2:	f023 0304 	bic.w	r3, r3, #4
 8004aa6:	6283      	str	r3, [r0, #40]	; 0x28
 8004aa8:	bd08      	pop	{r3, pc}

08004aaa <WM_ForEachDesc>:
 8004aaa:	f7ff bcd1 	b.w	8004450 <WM__ForEachDesc>

08004aae <WM_GetClientRectEx>:
 8004aae:	f7ff be07 	b.w	80046c0 <WM__GetClientRectEx>
	...

08004ab4 <WM_GetClientRect>:
 8004ab4:	4b04      	ldr	r3, [pc, #16]	; (8004ac8 <WM_GetClientRect+0x14>)
 8004ab6:	4601      	mov	r1, r0
 8004ab8:	6818      	ldr	r0, [r3, #0]
 8004aba:	b910      	cbnz	r0, 8004ac2 <WM_GetClientRect+0xe>
 8004abc:	4b03      	ldr	r3, [pc, #12]	; (8004acc <WM_GetClientRect+0x18>)
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004ac2:	f7ff bdfd 	b.w	80046c0 <WM__GetClientRectEx>
 8004ac6:	bf00      	nop
 8004ac8:	20002c80 	.word	0x20002c80
 8004acc:	200000b8 	.word	0x200000b8

08004ad0 <WM_GetClientWindow>:
 8004ad0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004ad2:	2300      	movs	r3, #0
 8004ad4:	a904      	add	r1, sp, #16
 8004ad6:	9303      	str	r3, [sp, #12]
 8004ad8:	2317      	movs	r3, #23
 8004ada:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004ade:	4669      	mov	r1, sp
 8004ae0:	f000 ff55 	bl	800598e <WM_SendMessage>
 8004ae4:	9803      	ldr	r0, [sp, #12]
 8004ae6:	b005      	add	sp, #20
 8004ae8:	f85d fb04 	ldr.w	pc, [sp], #4

08004aec <WM_GetDesktopWindow>:
 8004aec:	4b03      	ldr	r3, [pc, #12]	; (8004afc <WM_GetDesktopWindow+0x10>)
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	7c5a      	ldrb	r2, [r3, #17]
 8004af2:	4b03      	ldr	r3, [pc, #12]	; (8004b00 <WM_GetDesktopWindow+0x14>)
 8004af4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8004af8:	4770      	bx	lr
 8004afa:	bf00      	nop
 8004afc:	200000b8 	.word	0x200000b8
 8004b00:	20002c84 	.word	0x20002c84

08004b04 <WM_CheckScrollBounds>:
 8004b04:	6802      	ldr	r2, [r0, #0]
 8004b06:	6883      	ldr	r3, [r0, #8]
 8004b08:	1ad3      	subs	r3, r2, r3
 8004b0a:	6842      	ldr	r2, [r0, #4]
 8004b0c:	2a00      	cmp	r2, #0
 8004b0e:	bfbc      	itt	lt
 8004b10:	2200      	movlt	r2, #0
 8004b12:	6042      	strlt	r2, [r0, #4]
 8004b14:	6842      	ldr	r2, [r0, #4]
 8004b16:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004b1a:	429a      	cmp	r2, r3
 8004b1c:	bfc8      	it	gt
 8004b1e:	6043      	strgt	r3, [r0, #4]
 8004b20:	4770      	bx	lr

08004b22 <WM_GetFirstChild>:
 8004b22:	b508      	push	{r3, lr}
 8004b24:	4603      	mov	r3, r0
 8004b26:	b110      	cbz	r0, 8004b2e <WM_GetFirstChild+0xc>
 8004b28:	f006 fe9c 	bl	800b864 <GUI_ALLOC_h2p>
 8004b2c:	69c3      	ldr	r3, [r0, #28]
 8004b2e:	4618      	mov	r0, r3
 8004b30:	bd08      	pop	{r3, pc}

08004b32 <WM_GetFlags>:
 8004b32:	b508      	push	{r3, lr}
 8004b34:	b118      	cbz	r0, 8004b3e <WM_GetFlags+0xc>
 8004b36:	f006 fe95 	bl	800b864 <GUI_ALLOC_h2p>
 8004b3a:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8004b3c:	bd08      	pop	{r3, pc}
 8004b3e:	bd08      	pop	{r3, pc}

08004b40 <WM_GetFocusedWindow>:
 8004b40:	4b02      	ldr	r3, [pc, #8]	; (8004b4c <WM_GetFocusedWindow+0xc>)
 8004b42:	681a      	ldr	r2, [r3, #0]
 8004b44:	4b02      	ldr	r3, [pc, #8]	; (8004b50 <WM_GetFocusedWindow+0x10>)
 8004b46:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8004b4a:	4770      	bx	lr
 8004b4c:	20002ca4 	.word	0x20002ca4
 8004b50:	20002c94 	.word	0x20002c94

08004b54 <WM_GetId>:
 8004b54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004b56:	4604      	mov	r4, r0
 8004b58:	2210      	movs	r2, #16
 8004b5a:	4668      	mov	r0, sp
 8004b5c:	2100      	movs	r1, #0
 8004b5e:	f00b fac9 	bl	80100f4 <memset>
 8004b62:	2315      	movs	r3, #21
 8004b64:	4620      	mov	r0, r4
 8004b66:	4669      	mov	r1, sp
 8004b68:	9300      	str	r3, [sp, #0]
 8004b6a:	f000 ff10 	bl	800598e <WM_SendMessage>
 8004b6e:	9803      	ldr	r0, [sp, #12]
 8004b70:	b004      	add	sp, #16
 8004b72:	bd10      	pop	{r4, pc}

08004b74 <_GetDialogItem>:
 8004b74:	b570      	push	{r4, r5, r6, lr}
 8004b76:	4606      	mov	r6, r0
 8004b78:	460d      	mov	r5, r1
 8004b7a:	f006 fe73 	bl	800b864 <GUI_ALLOC_h2p>
 8004b7e:	69c4      	ldr	r4, [r0, #28]
 8004b80:	b14c      	cbz	r4, 8004b96 <_GetDialogItem+0x22>
 8004b82:	4620      	mov	r0, r4
 8004b84:	f7ff ffe6 	bl	8004b54 <WM_GetId>
 8004b88:	42a8      	cmp	r0, r5
 8004b8a:	4620      	mov	r0, r4
 8004b8c:	d013      	beq.n	8004bb6 <_GetDialogItem+0x42>
 8004b8e:	f006 fe69 	bl	800b864 <GUI_ALLOC_h2p>
 8004b92:	6a04      	ldr	r4, [r0, #32]
 8004b94:	e7f4      	b.n	8004b80 <_GetDialogItem+0xc>
 8004b96:	4630      	mov	r0, r6
 8004b98:	f006 fe64 	bl	800b864 <GUI_ALLOC_h2p>
 8004b9c:	69c4      	ldr	r4, [r0, #28]
 8004b9e:	4620      	mov	r0, r4
 8004ba0:	b144      	cbz	r4, 8004bb4 <_GetDialogItem+0x40>
 8004ba2:	4629      	mov	r1, r5
 8004ba4:	f7ff ffe6 	bl	8004b74 <_GetDialogItem>
 8004ba8:	b928      	cbnz	r0, 8004bb6 <_GetDialogItem+0x42>
 8004baa:	4620      	mov	r0, r4
 8004bac:	f006 fe5a 	bl	800b864 <GUI_ALLOC_h2p>
 8004bb0:	6a04      	ldr	r4, [r0, #32]
 8004bb2:	e7f4      	b.n	8004b9e <_GetDialogItem+0x2a>
 8004bb4:	bd70      	pop	{r4, r5, r6, pc}
 8004bb6:	bd70      	pop	{r4, r5, r6, pc}

08004bb8 <WM_GetDialogItem>:
 8004bb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004bba:	460d      	mov	r5, r1
 8004bbc:	4604      	mov	r4, r0
 8004bbe:	b1c8      	cbz	r0, 8004bf4 <WM_GetDialogItem+0x3c>
 8004bc0:	f006 fe5a 	bl	800b878 <GUI_ALLOC_LockH>
 8004bc4:	ab02      	add	r3, sp, #8
 8004bc6:	69c4      	ldr	r4, [r0, #28]
 8004bc8:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004bcc:	4618      	mov	r0, r3
 8004bce:	f006 fe61 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004bd2:	b17c      	cbz	r4, 8004bf4 <WM_GetDialogItem+0x3c>
 8004bd4:	4620      	mov	r0, r4
 8004bd6:	f7ff ffbd 	bl	8004b54 <WM_GetId>
 8004bda:	42a8      	cmp	r0, r5
 8004bdc:	d00a      	beq.n	8004bf4 <WM_GetDialogItem+0x3c>
 8004bde:	4620      	mov	r0, r4
 8004be0:	4629      	mov	r1, r5
 8004be2:	f7ff ffc7 	bl	8004b74 <_GetDialogItem>
 8004be6:	b920      	cbnz	r0, 8004bf2 <WM_GetDialogItem+0x3a>
 8004be8:	4620      	mov	r0, r4
 8004bea:	f006 fe3b 	bl	800b864 <GUI_ALLOC_h2p>
 8004bee:	6a04      	ldr	r4, [r0, #32]
 8004bf0:	e7ef      	b.n	8004bd2 <WM_GetDialogItem+0x1a>
 8004bf2:	4604      	mov	r4, r0
 8004bf4:	4620      	mov	r0, r4
 8004bf6:	b003      	add	sp, #12
 8004bf8:	bd30      	pop	{r4, r5, pc}

08004bfa <WM_GetInsideRectEx>:
 8004bfa:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004bfc:	9103      	str	r1, [sp, #12]
 8004bfe:	a904      	add	r1, sp, #16
 8004c00:	2314      	movs	r3, #20
 8004c02:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004c06:	4669      	mov	r1, sp
 8004c08:	f000 fec1 	bl	800598e <WM_SendMessage>
 8004c0c:	b005      	add	sp, #20
 8004c0e:	f85d fb04 	ldr.w	pc, [sp], #4

08004c12 <WM_GetNextSibling>:
 8004c12:	b508      	push	{r3, lr}
 8004c14:	4603      	mov	r3, r0
 8004c16:	b110      	cbz	r0, 8004c1e <WM_GetNextSibling+0xc>
 8004c18:	f006 fe24 	bl	800b864 <GUI_ALLOC_h2p>
 8004c1c:	6a03      	ldr	r3, [r0, #32]
 8004c1e:	4618      	mov	r0, r3
 8004c20:	bd08      	pop	{r3, pc}

08004c22 <WM_GetWindowOrgX>:
 8004c22:	b508      	push	{r3, lr}
 8004c24:	b120      	cbz	r0, 8004c30 <WM_GetWindowOrgX+0xe>
 8004c26:	f006 fe1d 	bl	800b864 <GUI_ALLOC_h2p>
 8004c2a:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004c2e:	bd08      	pop	{r3, pc}
 8004c30:	bd08      	pop	{r3, pc}

08004c32 <WM_GetWindowOrgY>:
 8004c32:	b508      	push	{r3, lr}
 8004c34:	b120      	cbz	r0, 8004c40 <WM_GetWindowOrgY+0xe>
 8004c36:	f006 fe15 	bl	800b864 <GUI_ALLOC_h2p>
 8004c3a:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 8004c3e:	bd08      	pop	{r3, pc}
 8004c40:	bd08      	pop	{r3, pc}
	...

08004c44 <WM_GetOrgX>:
 8004c44:	4b02      	ldr	r3, [pc, #8]	; (8004c50 <WM_GetOrgX+0xc>)
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004c4a:	f7ff bfea 	b.w	8004c22 <WM_GetWindowOrgX>
 8004c4e:	bf00      	nop
 8004c50:	200000b8 	.word	0x200000b8

08004c54 <WM_GetOrgY>:
 8004c54:	4b02      	ldr	r3, [pc, #8]	; (8004c60 <WM_GetOrgY+0xc>)
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004c5a:	f7ff bfea 	b.w	8004c32 <WM_GetWindowOrgY>
 8004c5e:	bf00      	nop
 8004c60:	200000b8 	.word	0x200000b8

08004c64 <WM_GetParent>:
 8004c64:	b508      	push	{r3, lr}
 8004c66:	4603      	mov	r3, r0
 8004c68:	b110      	cbz	r0, 8004c70 <WM_GetParent+0xc>
 8004c6a:	f006 fdfb 	bl	800b864 <GUI_ALLOC_h2p>
 8004c6e:	6983      	ldr	r3, [r0, #24]
 8004c70:	4618      	mov	r0, r3
 8004c72:	bd08      	pop	{r3, pc}

08004c74 <WM_BringToBottom>:
 8004c74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004c78:	4604      	mov	r4, r0
 8004c7a:	b087      	sub	sp, #28
 8004c7c:	2800      	cmp	r0, #0
 8004c7e:	d039      	beq.n	8004cf4 <WM_BringToBottom+0x80>
 8004c80:	f006 fdfa 	bl	800b878 <GUI_ALLOC_LockH>
 8004c84:	4603      	mov	r3, r0
 8004c86:	9001      	str	r0, [sp, #4]
 8004c88:	c803      	ldmia	r0, {r0, r1}
 8004c8a:	ad04      	add	r5, sp, #16
 8004c8c:	e885 0003 	stmia.w	r5, {r0, r1}
 8004c90:	a801      	add	r0, sp, #4
 8004c92:	6a1e      	ldr	r6, [r3, #32]
 8004c94:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8004c98:	f006 fdfc 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004c9c:	4620      	mov	r0, r4
 8004c9e:	f7ff fc01 	bl	80044a4 <WM__GetPrevSibling>
 8004ca2:	4607      	mov	r7, r0
 8004ca4:	b330      	cbz	r0, 8004cf4 <WM_BringToBottom+0x80>
 8004ca6:	4620      	mov	r0, r4
 8004ca8:	f7ff ffdc 	bl	8004c64 <WM_GetParent>
 8004cac:	f019 0f02 	tst.w	r9, #2
 8004cb0:	4680      	mov	r8, r0
 8004cb2:	d004      	beq.n	8004cbe <WM_BringToBottom+0x4a>
 8004cb4:	4628      	mov	r0, r5
 8004cb6:	4641      	mov	r1, r8
 8004cb8:	4632      	mov	r2, r6
 8004cba:	f000 ff6d 	bl	8005b98 <WM__InvalidateRectEx>
 8004cbe:	4620      	mov	r0, r4
 8004cc0:	f006 fdda 	bl	800b878 <GUI_ALLOC_LockH>
 8004cc4:	9001      	str	r0, [sp, #4]
 8004cc6:	4640      	mov	r0, r8
 8004cc8:	f006 fdd6 	bl	800b878 <GUI_ALLOC_LockH>
 8004ccc:	9003      	str	r0, [sp, #12]
 8004cce:	4638      	mov	r0, r7
 8004cd0:	f006 fdd2 	bl	800b878 <GUI_ALLOC_LockH>
 8004cd4:	9b03      	ldr	r3, [sp, #12]
 8004cd6:	9a01      	ldr	r2, [sp, #4]
 8004cd8:	69d9      	ldr	r1, [r3, #28]
 8004cda:	6206      	str	r6, [r0, #32]
 8004cdc:	9002      	str	r0, [sp, #8]
 8004cde:	6211      	str	r1, [r2, #32]
 8004ce0:	a801      	add	r0, sp, #4
 8004ce2:	61dc      	str	r4, [r3, #28]
 8004ce4:	f006 fdd6 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004ce8:	a803      	add	r0, sp, #12
 8004cea:	f006 fdd3 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004cee:	a802      	add	r0, sp, #8
 8004cf0:	f006 fdd0 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004cf4:	b007      	add	sp, #28
 8004cf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004cfa <WM_GetScrollbarH>:
 8004cfa:	b110      	cbz	r0, 8004d02 <WM_GetScrollbarH+0x8>
 8004cfc:	21ff      	movs	r1, #255	; 0xff
 8004cfe:	f7ff bf39 	b.w	8004b74 <_GetDialogItem>
 8004d02:	4770      	bx	lr

08004d04 <WM_GetScrollbarV>:
 8004d04:	b110      	cbz	r0, 8004d0c <WM_GetScrollbarV+0x8>
 8004d06:	21fe      	movs	r1, #254	; 0xfe
 8004d08:	f7ff bf34 	b.w	8004b74 <_GetDialogItem>
 8004d0c:	4770      	bx	lr

08004d0e <WM_GetScrollPartner>:
 8004d0e:	b538      	push	{r3, r4, r5, lr}
 8004d10:	4605      	mov	r5, r0
 8004d12:	f7ff ff1f 	bl	8004b54 <WM_GetId>
 8004d16:	28ff      	cmp	r0, #255	; 0xff
 8004d18:	4604      	mov	r4, r0
 8004d1a:	d003      	beq.n	8004d24 <WM_GetScrollPartner+0x16>
 8004d1c:	28fe      	cmp	r0, #254	; 0xfe
 8004d1e:	bf08      	it	eq
 8004d20:	24ff      	moveq	r4, #255	; 0xff
 8004d22:	e000      	b.n	8004d26 <WM_GetScrollPartner+0x18>
 8004d24:	24fe      	movs	r4, #254	; 0xfe
 8004d26:	4628      	mov	r0, r5
 8004d28:	f7ff ff9c 	bl	8004c64 <WM_GetParent>
 8004d2c:	4621      	mov	r1, r4
 8004d2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004d32:	f7ff bf41 	b.w	8004bb8 <WM_GetDialogItem>

08004d36 <WM_GetWindowRectEx>:
 8004d36:	b510      	push	{r4, lr}
 8004d38:	460c      	mov	r4, r1
 8004d3a:	b130      	cbz	r0, 8004d4a <WM_GetWindowRectEx+0x14>
 8004d3c:	b129      	cbz	r1, 8004d4a <WM_GetWindowRectEx+0x14>
 8004d3e:	f006 fd91 	bl	800b864 <GUI_ALLOC_h2p>
 8004d42:	4603      	mov	r3, r0
 8004d44:	cb03      	ldmia	r3!, {r0, r1}
 8004d46:	6020      	str	r0, [r4, #0]
 8004d48:	6061      	str	r1, [r4, #4]
 8004d4a:	bd10      	pop	{r4, pc}

08004d4c <WM_GetInsideRectExScrollbar>:
 8004d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d4e:	460c      	mov	r4, r1
 8004d50:	b087      	sub	sp, #28
 8004d52:	4606      	mov	r6, r0
 8004d54:	2800      	cmp	r0, #0
 8004d56:	d04b      	beq.n	8004df0 <WM_GetInsideRectExScrollbar+0xa4>
 8004d58:	2900      	cmp	r1, #0
 8004d5a:	d049      	beq.n	8004df0 <WM_GetInsideRectExScrollbar+0xa4>
 8004d5c:	21ff      	movs	r1, #255	; 0xff
 8004d5e:	f7ff ff2b 	bl	8004bb8 <WM_GetDialogItem>
 8004d62:	21fe      	movs	r1, #254	; 0xfe
 8004d64:	4605      	mov	r5, r0
 8004d66:	4630      	mov	r0, r6
 8004d68:	f7ff ff26 	bl	8004bb8 <WM_GetDialogItem>
 8004d6c:	4669      	mov	r1, sp
 8004d6e:	4607      	mov	r7, r0
 8004d70:	4630      	mov	r0, r6
 8004d72:	f7ff ffe0 	bl	8004d36 <WM_GetWindowRectEx>
 8004d76:	4630      	mov	r0, r6
 8004d78:	a902      	add	r1, sp, #8
 8004d7a:	f7ff ff3e 	bl	8004bfa <WM_GetInsideRectEx>
 8004d7e:	b1c7      	cbz	r7, 8004db2 <WM_GetInsideRectExScrollbar+0x66>
 8004d80:	4638      	mov	r0, r7
 8004d82:	a904      	add	r1, sp, #16
 8004d84:	f7ff ffd7 	bl	8004d36 <WM_GetWindowRectEx>
 8004d88:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004d8c:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004d90:	a804      	add	r0, sp, #16
 8004d92:	4249      	negs	r1, r1
 8004d94:	4252      	negs	r2, r2
 8004d96:	f006 f886 	bl	800aea6 <GUI_MoveRect>
 8004d9a:	4638      	mov	r0, r7
 8004d9c:	f7ff fec9 	bl	8004b32 <WM_GetFlags>
 8004da0:	f000 0082 	and.w	r0, r0, #130	; 0x82
 8004da4:	2882      	cmp	r0, #130	; 0x82
 8004da6:	d104      	bne.n	8004db2 <WM_GetInsideRectExScrollbar+0x66>
 8004da8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8004dac:	3b01      	subs	r3, #1
 8004dae:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004db2:	b1cd      	cbz	r5, 8004de8 <WM_GetInsideRectExScrollbar+0x9c>
 8004db4:	4628      	mov	r0, r5
 8004db6:	a904      	add	r1, sp, #16
 8004db8:	f7ff ffbd 	bl	8004d36 <WM_GetWindowRectEx>
 8004dbc:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004dc0:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004dc4:	a804      	add	r0, sp, #16
 8004dc6:	4249      	negs	r1, r1
 8004dc8:	4252      	negs	r2, r2
 8004dca:	f006 f86c 	bl	800aea6 <GUI_MoveRect>
 8004dce:	4628      	mov	r0, r5
 8004dd0:	f7ff feaf 	bl	8004b32 <WM_GetFlags>
 8004dd4:	f400 7081 	and.w	r0, r0, #258	; 0x102
 8004dd8:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 8004ddc:	d104      	bne.n	8004de8 <WM_GetInsideRectExScrollbar+0x9c>
 8004dde:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8004de2:	3b01      	subs	r3, #1
 8004de4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8004de8:	ab02      	add	r3, sp, #8
 8004dea:	cb03      	ldmia	r3!, {r0, r1}
 8004dec:	6020      	str	r0, [r4, #0]
 8004dee:	6061      	str	r1, [r4, #4]
 8004df0:	b007      	add	sp, #28
 8004df2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004df4 <WM_HasCaptured>:
 8004df4:	4b04      	ldr	r3, [pc, #16]	; (8004e08 <WM_HasCaptured+0x14>)
 8004df6:	681a      	ldr	r2, [r3, #0]
 8004df8:	4b04      	ldr	r3, [pc, #16]	; (8004e0c <WM_HasCaptured+0x18>)
 8004dfa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004dfe:	1ac3      	subs	r3, r0, r3
 8004e00:	4258      	negs	r0, r3
 8004e02:	4158      	adcs	r0, r3
 8004e04:	4770      	bx	lr
 8004e06:	bf00      	nop
 8004e08:	20002ca4 	.word	0x20002ca4
 8004e0c:	20002cc8 	.word	0x20002cc8

08004e10 <WM_HasFocus>:
 8004e10:	4b04      	ldr	r3, [pc, #16]	; (8004e24 <WM_HasFocus+0x14>)
 8004e12:	681a      	ldr	r2, [r3, #0]
 8004e14:	4b04      	ldr	r3, [pc, #16]	; (8004e28 <WM_HasFocus+0x18>)
 8004e16:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004e1a:	1ac3      	subs	r3, r0, r3
 8004e1c:	4258      	negs	r0, r3
 8004e1e:	4158      	adcs	r0, r3
 8004e20:	4770      	bx	lr
 8004e22:	bf00      	nop
 8004e24:	20002ca4 	.word	0x20002ca4
 8004e28:	20002c94 	.word	0x20002c94

08004e2c <WM_IsFocusable>:
 8004e2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004e2e:	4604      	mov	r4, r0
 8004e30:	b908      	cbnz	r0, 8004e36 <WM_IsFocusable+0xa>
 8004e32:	2000      	movs	r0, #0
 8004e34:	e011      	b.n	8004e5a <WM_IsFocusable+0x2e>
 8004e36:	f006 fd15 	bl	800b864 <GUI_ALLOC_h2p>
 8004e3a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004e3c:	079a      	lsls	r2, r3, #30
 8004e3e:	d5f8      	bpl.n	8004e32 <WM_IsFocusable+0x6>
 8004e40:	f013 0310 	ands.w	r3, r3, #16
 8004e44:	d1f5      	bne.n	8004e32 <WM_IsFocusable+0x6>
 8004e46:	a904      	add	r1, sp, #16
 8004e48:	9303      	str	r3, [sp, #12]
 8004e4a:	231f      	movs	r3, #31
 8004e4c:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004e50:	4620      	mov	r0, r4
 8004e52:	4669      	mov	r1, sp
 8004e54:	f000 fd9b 	bl	800598e <WM_SendMessage>
 8004e58:	9803      	ldr	r0, [sp, #12]
 8004e5a:	b004      	add	sp, #16
 8004e5c:	bd10      	pop	{r4, pc}

08004e5e <WM_IsWindow>:
 8004e5e:	f000 bd4d 	b.w	80058fc <WM__IsWindow>
	...

08004e64 <WM_OnKey>:
 8004e64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004e66:	4a0a      	ldr	r2, [pc, #40]	; (8004e90 <WM_OnKey+0x2c>)
 8004e68:	4603      	mov	r3, r0
 8004e6a:	6810      	ldr	r0, [r2, #0]
 8004e6c:	4a09      	ldr	r2, [pc, #36]	; (8004e94 <WM_OnKey+0x30>)
 8004e6e:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8004e72:	b148      	cbz	r0, 8004e88 <WM_OnKey+0x24>
 8004e74:	9300      	str	r3, [sp, #0]
 8004e76:	230e      	movs	r3, #14
 8004e78:	9101      	str	r1, [sp, #4]
 8004e7a:	9302      	str	r3, [sp, #8]
 8004e7c:	a902      	add	r1, sp, #8
 8004e7e:	ab00      	add	r3, sp, #0
 8004e80:	9305      	str	r3, [sp, #20]
 8004e82:	f7ff fb69 	bl	8004558 <WM__SendMessage>
 8004e86:	2001      	movs	r0, #1
 8004e88:	b007      	add	sp, #28
 8004e8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8004e8e:	bf00      	nop
 8004e90:	20002ca4 	.word	0x20002ca4
 8004e94:	20002c94 	.word	0x20002c94

08004e98 <WM_ResizeWindow>:
 8004e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e9c:	ea51 0302 	orrs.w	r3, r1, r2
 8004ea0:	b08a      	sub	sp, #40	; 0x28
 8004ea2:	4680      	mov	r8, r0
 8004ea4:	460e      	mov	r6, r1
 8004ea6:	4617      	mov	r7, r2
 8004ea8:	d06e      	beq.n	8004f88 <WM_ResizeWindow+0xf0>
 8004eaa:	2800      	cmp	r0, #0
 8004eac:	d06c      	beq.n	8004f88 <WM_ResizeWindow+0xf0>
 8004eae:	f006 fce3 	bl	800b878 <GUI_ALLOC_LockH>
 8004eb2:	4603      	mov	r3, r0
 8004eb4:	9003      	str	r0, [sp, #12]
 8004eb6:	c803      	ldmia	r0, {r0, r1}
 8004eb8:	ad04      	add	r5, sp, #16
 8004eba:	ac06      	add	r4, sp, #24
 8004ebc:	e885 0003 	stmia.w	r5, {r0, r1}
 8004ec0:	e884 0003 	stmia.w	r4, {r0, r1}
 8004ec4:	b17e      	cbz	r6, 8004ee6 <WM_ResizeWindow+0x4e>
 8004ec6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004ec8:	f402 7220 	and.w	r2, r2, #640	; 0x280
 8004ecc:	2a80      	cmp	r2, #128	; 0x80
 8004ece:	d105      	bne.n	8004edc <WM_ResizeWindow+0x44>
 8004ed0:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8004ed4:	1b96      	subs	r6, r2, r6
 8004ed6:	f8ad 6018 	strh.w	r6, [sp, #24]
 8004eda:	e004      	b.n	8004ee6 <WM_ResizeWindow+0x4e>
 8004edc:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8004ee0:	4416      	add	r6, r2
 8004ee2:	f8ad 601c 	strh.w	r6, [sp, #28]
 8004ee6:	b187      	cbz	r7, 8004f0a <WM_ResizeWindow+0x72>
 8004ee8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004eea:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 8004eee:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8004ef2:	d105      	bne.n	8004f00 <WM_ResizeWindow+0x68>
 8004ef4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8004ef8:	1bd7      	subs	r7, r2, r7
 8004efa:	f8ad 701a 	strh.w	r7, [sp, #26]
 8004efe:	e004      	b.n	8004f0a <WM_ResizeWindow+0x72>
 8004f00:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8004f04:	4417      	add	r7, r2
 8004f06:	f8ad 701e 	strh.w	r7, [sp, #30]
 8004f0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f0c:	03da      	lsls	r2, r3, #15
 8004f0e:	d502      	bpl.n	8004f16 <WM_ResizeWindow+0x7e>
 8004f10:	4640      	mov	r0, r8
 8004f12:	f000 fd03 	bl	800591c <WM__InvalidateDrawAndDescs>
 8004f16:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004f1a:	9b03      	ldr	r3, [sp, #12]
 8004f1c:	e883 0003 	stmia.w	r3, {r0, r1}
 8004f20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f22:	079b      	lsls	r3, r3, #30
 8004f24:	d50a      	bpl.n	8004f3c <WM_ResizeWindow+0xa4>
 8004f26:	a808      	add	r0, sp, #32
 8004f28:	4629      	mov	r1, r5
 8004f2a:	4622      	mov	r2, r4
 8004f2c:	f005 ff90 	bl	800ae50 <GUI_MergeRect>
 8004f30:	9b03      	ldr	r3, [sp, #12]
 8004f32:	a808      	add	r0, sp, #32
 8004f34:	6999      	ldr	r1, [r3, #24]
 8004f36:	6a1a      	ldr	r2, [r3, #32]
 8004f38:	f000 fe2e 	bl	8005b98 <WM__InvalidateRectEx>
 8004f3c:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8004f40:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8004f44:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 8004f48:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8004f4c:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8004f50:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8004f54:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 8004f58:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8004f5c:	1ae3      	subs	r3, r4, r3
 8004f5e:	1a38      	subs	r0, r7, r0
 8004f60:	ac0a      	add	r4, sp, #40	; 0x28
 8004f62:	1aaa      	subs	r2, r5, r2
 8004f64:	9000      	str	r0, [sp, #0]
 8004f66:	1a71      	subs	r1, r6, r1
 8004f68:	9803      	ldr	r0, [sp, #12]
 8004f6a:	f7ff fb27 	bl	80045bc <WM__UpdateChildPositions>
 8004f6e:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 8004f72:	f101 0008 	add.w	r0, r1, #8
 8004f76:	f004 f92c 	bl	80091d2 <GUI__IntersectRect>
 8004f7a:	4640      	mov	r0, r8
 8004f7c:	2105      	movs	r1, #5
 8004f7e:	f000 fd0a 	bl	8005996 <WM__SendMsgNoData>
 8004f82:	4620      	mov	r0, r4
 8004f84:	f006 fc86 	bl	800b894 <GUI_ALLOC_UnlockH>
 8004f88:	b00a      	add	sp, #40	; 0x28
 8004f8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004f8e <WM_SendMessageNoPara>:
 8004f8e:	f7ff bb01 	b.w	8004594 <WM__SendMessageNoPara>

08004f92 <WM_SendToParent>:
 8004f92:	b538      	push	{r3, r4, r5, lr}
 8004f94:	4605      	mov	r5, r0
 8004f96:	460c      	mov	r4, r1
 8004f98:	b141      	cbz	r1, 8004fac <WM_SendToParent+0x1a>
 8004f9a:	f7ff fe63 	bl	8004c64 <WM_GetParent>
 8004f9e:	b128      	cbz	r0, 8004fac <WM_SendToParent+0x1a>
 8004fa0:	60a5      	str	r5, [r4, #8]
 8004fa2:	4621      	mov	r1, r4
 8004fa4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004fa8:	f7ff bad6 	b.w	8004558 <WM__SendMessage>
 8004fac:	bd38      	pop	{r3, r4, r5, pc}

08004fae <WM_NotifyParent>:
 8004fae:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004fb0:	2326      	movs	r3, #38	; 0x26
 8004fb2:	9103      	str	r1, [sp, #12]
 8004fb4:	4669      	mov	r1, sp
 8004fb6:	9300      	str	r3, [sp, #0]
 8004fb8:	f7ff ffeb 	bl	8004f92 <WM_SendToParent>
 8004fbc:	b005      	add	sp, #20
 8004fbe:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08004fc4 <WM_SetFocus>:
 8004fc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004fc6:	b087      	sub	sp, #28
 8004fc8:	4604      	mov	r4, r0
 8004fca:	2100      	movs	r1, #0
 8004fcc:	a802      	add	r0, sp, #8
 8004fce:	2210      	movs	r2, #16
 8004fd0:	f00b f890 	bl	80100f4 <memset>
 8004fd4:	2c00      	cmp	r4, #0
 8004fd6:	d03a      	beq.n	800504e <WM_SetFocus+0x8a>
 8004fd8:	4b1f      	ldr	r3, [pc, #124]	; (8005058 <WM_SetFocus+0x94>)
 8004fda:	4a20      	ldr	r2, [pc, #128]	; (800505c <WM_SetFocus+0x98>)
 8004fdc:	6819      	ldr	r1, [r3, #0]
 8004fde:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8004fe2:	4284      	cmp	r4, r0
 8004fe4:	4616      	mov	r6, r2
 8004fe6:	461f      	mov	r7, r3
 8004fe8:	d031      	beq.n	800504e <WM_SetFocus+0x8a>
 8004fea:	231e      	movs	r3, #30
 8004fec:	e88d 0011 	stmia.w	sp, {r0, r4}
 8004ff0:	9302      	str	r3, [sp, #8]
 8004ff2:	b110      	cbz	r0, 8004ffa <WM_SetFocus+0x36>
 8004ff4:	a902      	add	r1, sp, #8
 8004ff6:	f7ff faaf 	bl	8004558 <WM__SendMessage>
 8004ffa:	2301      	movs	r3, #1
 8004ffc:	4620      	mov	r0, r4
 8004ffe:	a902      	add	r1, sp, #8
 8005000:	9305      	str	r3, [sp, #20]
 8005002:	f7ff faa9 	bl	8004558 <WM__SendMessage>
 8005006:	9d05      	ldr	r5, [sp, #20]
 8005008:	bb15      	cbnz	r5, 8005050 <WM_SetFocus+0x8c>
 800500a:	683b      	ldr	r3, [r7, #0]
 800500c:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 8005010:	4620      	mov	r0, r4
 8005012:	f7ff fe27 	bl	8004c64 <WM_GetParent>
 8005016:	4604      	mov	r4, r0
 8005018:	b138      	cbz	r0, 800502a <WM_SetFocus+0x66>
 800501a:	2320      	movs	r3, #32
 800501c:	9302      	str	r3, [sp, #8]
 800501e:	a902      	add	r1, sp, #8
 8005020:	ab00      	add	r3, sp, #0
 8005022:	9305      	str	r3, [sp, #20]
 8005024:	f7ff fa98 	bl	8004558 <WM__SendMessage>
 8005028:	e7f2      	b.n	8005010 <WM_SetFocus+0x4c>
 800502a:	9c00      	ldr	r4, [sp, #0]
 800502c:	4620      	mov	r0, r4
 800502e:	f000 fc65 	bl	80058fc <WM__IsWindow>
 8005032:	b168      	cbz	r0, 8005050 <WM_SetFocus+0x8c>
 8005034:	4620      	mov	r0, r4
 8005036:	f7ff fe15 	bl	8004c64 <WM_GetParent>
 800503a:	4604      	mov	r4, r0
 800503c:	b140      	cbz	r0, 8005050 <WM_SetFocus+0x8c>
 800503e:	2320      	movs	r3, #32
 8005040:	9302      	str	r3, [sp, #8]
 8005042:	a902      	add	r1, sp, #8
 8005044:	ab00      	add	r3, sp, #0
 8005046:	9305      	str	r3, [sp, #20]
 8005048:	f7ff fa86 	bl	8004558 <WM__SendMessage>
 800504c:	e7f2      	b.n	8005034 <WM_SetFocus+0x70>
 800504e:	2501      	movs	r5, #1
 8005050:	4628      	mov	r0, r5
 8005052:	b007      	add	sp, #28
 8005054:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005056:	bf00      	nop
 8005058:	20002ca4 	.word	0x20002ca4
 800505c:	20002c94 	.word	0x20002c94

08005060 <WM_SetScrollState>:
 8005060:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005062:	b130      	cbz	r0, 8005072 <WM_SetScrollState+0x12>
 8005064:	b129      	cbz	r1, 8005072 <WM_SetScrollState+0x12>
 8005066:	2324      	movs	r3, #36	; 0x24
 8005068:	9103      	str	r1, [sp, #12]
 800506a:	4669      	mov	r1, sp
 800506c:	9300      	str	r3, [sp, #0]
 800506e:	f000 fc8e 	bl	800598e <WM_SendMessage>
 8005072:	b005      	add	sp, #20
 8005074:	f85d fb04 	ldr.w	pc, [sp], #4

08005078 <WM_SetSize>:
 8005078:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 800507c:	460e      	mov	r6, r1
 800507e:	4690      	mov	r8, r2
 8005080:	4607      	mov	r7, r0
 8005082:	b1d0      	cbz	r0, 80050ba <WM_SetSize+0x42>
 8005084:	f006 fbf8 	bl	800b878 <GUI_ALLOC_LockH>
 8005088:	4603      	mov	r3, r0
 800508a:	a802      	add	r0, sp, #8
 800508c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8005090:	f9b3 2000 	ldrsh.w	r2, [r3]
 8005094:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8005098:	f840 3d04 	str.w	r3, [r0, #-4]!
 800509c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80050a0:	1a8a      	subs	r2, r1, r2
 80050a2:	1aed      	subs	r5, r5, r3
 80050a4:	43d2      	mvns	r2, r2
 80050a6:	43ed      	mvns	r5, r5
 80050a8:	4416      	add	r6, r2
 80050aa:	4445      	add	r5, r8
 80050ac:	f006 fbf2 	bl	800b894 <GUI_ALLOC_UnlockH>
 80050b0:	4638      	mov	r0, r7
 80050b2:	4631      	mov	r1, r6
 80050b4:	462a      	mov	r2, r5
 80050b6:	f7ff feef 	bl	8004e98 <WM_ResizeWindow>
 80050ba:	b003      	add	sp, #12
 80050bc:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

080050c0 <WM_SetUserClipRect>:
 80050c0:	4b04      	ldr	r3, [pc, #16]	; (80050d4 <WM_SetUserClipRect+0x14>)
 80050c2:	b510      	push	{r4, lr}
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 80050c8:	6458      	str	r0, [r3, #68]	; 0x44
 80050ca:	f000 fbf3 	bl	80058b4 <WM__ActivateClipRect>
 80050ce:	4620      	mov	r0, r4
 80050d0:	bd10      	pop	{r4, pc}
 80050d2:	bf00      	nop
 80050d4:	200000b8 	.word	0x200000b8

080050d8 <WM_InvalidateWindowAndDescs>:
 80050d8:	b510      	push	{r4, lr}
 80050da:	4604      	mov	r4, r0
 80050dc:	b170      	cbz	r0, 80050fc <WM_InvalidateWindowAndDescs+0x24>
 80050de:	f000 fdaf 	bl	8005c40 <WM_InvalidateWindow>
 80050e2:	4620      	mov	r0, r4
 80050e4:	f7ff fd1d 	bl	8004b22 <WM_GetFirstChild>
 80050e8:	4604      	mov	r4, r0
 80050ea:	b13c      	cbz	r4, 80050fc <WM_InvalidateWindowAndDescs+0x24>
 80050ec:	4620      	mov	r0, r4
 80050ee:	f7ff fff3 	bl	80050d8 <WM_InvalidateWindowAndDescs>
 80050f2:	4620      	mov	r0, r4
 80050f4:	f006 fbb6 	bl	800b864 <GUI_ALLOC_h2p>
 80050f8:	6a04      	ldr	r4, [r0, #32]
 80050fa:	e7f6      	b.n	80050ea <WM_InvalidateWindowAndDescs+0x12>
 80050fc:	bd10      	pop	{r4, pc}

080050fe <WM_ShowWindow>:
 80050fe:	b513      	push	{r0, r1, r4, lr}
 8005100:	4604      	mov	r4, r0
 8005102:	b170      	cbz	r0, 8005122 <WM_ShowWindow+0x24>
 8005104:	f006 fbb8 	bl	800b878 <GUI_ALLOC_LockH>
 8005108:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800510a:	9001      	str	r0, [sp, #4]
 800510c:	0793      	lsls	r3, r2, #30
 800510e:	d405      	bmi.n	800511c <WM_ShowWindow+0x1e>
 8005110:	f042 0202 	orr.w	r2, r2, #2
 8005114:	6282      	str	r2, [r0, #40]	; 0x28
 8005116:	4620      	mov	r0, r4
 8005118:	f7ff ffde 	bl	80050d8 <WM_InvalidateWindowAndDescs>
 800511c:	a801      	add	r0, sp, #4
 800511e:	f006 fbb9 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005122:	b002      	add	sp, #8
 8005124:	bd10      	pop	{r4, pc}
	...

08005128 <WM_ValidateWindow>:
 8005128:	b507      	push	{r0, r1, r2, lr}
 800512a:	b178      	cbz	r0, 800514c <WM_ValidateWindow+0x24>
 800512c:	f006 fba4 	bl	800b878 <GUI_ALLOC_LockH>
 8005130:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005132:	9001      	str	r0, [sp, #4]
 8005134:	069a      	lsls	r2, r3, #26
 8005136:	d506      	bpl.n	8005146 <WM_ValidateWindow+0x1e>
 8005138:	f023 0320 	bic.w	r3, r3, #32
 800513c:	6283      	str	r3, [r0, #40]	; 0x28
 800513e:	4b05      	ldr	r3, [pc, #20]	; (8005154 <WM_ValidateWindow+0x2c>)
 8005140:	881a      	ldrh	r2, [r3, #0]
 8005142:	3a01      	subs	r2, #1
 8005144:	801a      	strh	r2, [r3, #0]
 8005146:	a801      	add	r0, sp, #4
 8005148:	f006 fba4 	bl	800b894 <GUI_ALLOC_UnlockH>
 800514c:	b003      	add	sp, #12
 800514e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005152:	bf00      	nop
 8005154:	20002c9c 	.word	0x20002c9c

08005158 <WM_HideWindow>:
 8005158:	b513      	push	{r0, r1, r4, lr}
 800515a:	b188      	cbz	r0, 8005180 <WM_HideWindow+0x28>
 800515c:	f006 fb8c 	bl	800b878 <GUI_ALLOC_LockH>
 8005160:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005162:	ac02      	add	r4, sp, #8
 8005164:	0791      	lsls	r1, r2, #30
 8005166:	f844 0d04 	str.w	r0, [r4, #-4]!
 800516a:	d506      	bpl.n	800517a <WM_HideWindow+0x22>
 800516c:	f022 0202 	bic.w	r2, r2, #2
 8005170:	6282      	str	r2, [r0, #40]	; 0x28
 8005172:	6981      	ldr	r1, [r0, #24]
 8005174:	6a02      	ldr	r2, [r0, #32]
 8005176:	f000 fd0f 	bl	8005b98 <WM__InvalidateRectEx>
 800517a:	4620      	mov	r0, r4
 800517c:	f006 fb8a 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005180:	b002      	add	sp, #8
 8005182:	bd10      	pop	{r4, pc}

08005184 <WM__GetWindowSizeX>:
 8005184:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8005188:	f9b0 3000 	ldrsh.w	r3, [r0]
 800518c:	1ad0      	subs	r0, r2, r3
 800518e:	3001      	adds	r0, #1
 8005190:	4770      	bx	lr

08005192 <WM__GetWindowSizeY>:
 8005192:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8005196:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800519a:	1ad0      	subs	r0, r2, r3
 800519c:	3001      	adds	r0, #1
 800519e:	4770      	bx	lr

080051a0 <WM_GetWindowSizeX>:
 80051a0:	b513      	push	{r0, r1, r4, lr}
 80051a2:	b908      	cbnz	r0, 80051a8 <WM_GetWindowSizeX+0x8>
 80051a4:	f000 fef0 	bl	8005f88 <WM_GetActiveWindow>
 80051a8:	f006 fb66 	bl	800b878 <GUI_ALLOC_LockH>
 80051ac:	ab02      	add	r3, sp, #8
 80051ae:	f9b0 2000 	ldrsh.w	r2, [r0]
 80051b2:	f843 0d04 	str.w	r0, [r3, #-4]!
 80051b6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80051ba:	4618      	mov	r0, r3
 80051bc:	1aa4      	subs	r4, r4, r2
 80051be:	f006 fb69 	bl	800b894 <GUI_ALLOC_UnlockH>
 80051c2:	3401      	adds	r4, #1
 80051c4:	4620      	mov	r0, r4
 80051c6:	b002      	add	sp, #8
 80051c8:	bd10      	pop	{r4, pc}

080051ca <WM_GetWindowSizeY>:
 80051ca:	b513      	push	{r0, r1, r4, lr}
 80051cc:	b908      	cbnz	r0, 80051d2 <WM_GetWindowSizeY+0x8>
 80051ce:	f000 fedb 	bl	8005f88 <WM_GetActiveWindow>
 80051d2:	f006 fb51 	bl	800b878 <GUI_ALLOC_LockH>
 80051d6:	ab02      	add	r3, sp, #8
 80051d8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80051dc:	f843 0d04 	str.w	r0, [r3, #-4]!
 80051e0:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 80051e4:	4618      	mov	r0, r3
 80051e6:	1aa4      	subs	r4, r4, r2
 80051e8:	f006 fb54 	bl	800b894 <GUI_ALLOC_UnlockH>
 80051ec:	3401      	adds	r4, #1
 80051ee:	4620      	mov	r0, r4
 80051f0:	b002      	add	sp, #8
 80051f2:	bd10      	pop	{r4, pc}

080051f4 <_cbInvalidateOne>:
 80051f4:	f000 bd24 	b.w	8005c40 <WM_InvalidateWindow>

080051f8 <WM_BringToTop>:
 80051f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80051fa:	4605      	mov	r5, r0
 80051fc:	2800      	cmp	r0, #0
 80051fe:	d032      	beq.n	8005266 <WM_BringToTop+0x6e>
 8005200:	f006 fb3a 	bl	800b878 <GUI_ALLOC_LockH>
 8005204:	ac02      	add	r4, sp, #8
 8005206:	4603      	mov	r3, r0
 8005208:	f844 0d08 	str.w	r0, [r4, #-8]!
 800520c:	6a00      	ldr	r0, [r0, #32]
 800520e:	b908      	cbnz	r0, 8005214 <WM_BringToTop+0x1c>
 8005210:	4668      	mov	r0, sp
 8005212:	e00e      	b.n	8005232 <WM_BringToTop+0x3a>
 8005214:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005216:	071a      	lsls	r2, r3, #28
 8005218:	d411      	bmi.n	800523e <WM_BringToTop+0x46>
 800521a:	f006 fb2d 	bl	800b878 <GUI_ALLOC_LockH>
 800521e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005220:	ae02      	add	r6, sp, #8
 8005222:	071b      	lsls	r3, r3, #28
 8005224:	f846 0d04 	str.w	r0, [r6, #-4]!
 8005228:	d506      	bpl.n	8005238 <WM_BringToTop+0x40>
 800522a:	4668      	mov	r0, sp
 800522c:	f006 fb32 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005230:	4630      	mov	r0, r6
 8005232:	f006 fb2f 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005236:	e016      	b.n	8005266 <WM_BringToTop+0x6e>
 8005238:	4630      	mov	r0, r6
 800523a:	f006 fb2b 	bl	800b894 <GUI_ALLOC_UnlockH>
 800523e:	9b00      	ldr	r3, [sp, #0]
 8005240:	4668      	mov	r0, sp
 8005242:	699e      	ldr	r6, [r3, #24]
 8005244:	f006 fb26 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005248:	4628      	mov	r0, r5
 800524a:	f000 fae5 	bl	8005818 <WM__RemoveWindowFromList>
 800524e:	4631      	mov	r1, r6
 8005250:	4628      	mov	r0, r5
 8005252:	f000 fa8f 	bl	8005774 <WM__InsertWindowIntoList>
 8005256:	4628      	mov	r0, r5
 8005258:	f000 fcf2 	bl	8005c40 <WM_InvalidateWindow>
 800525c:	4628      	mov	r0, r5
 800525e:	4903      	ldr	r1, [pc, #12]	; (800526c <WM_BringToTop+0x74>)
 8005260:	2200      	movs	r2, #0
 8005262:	f7ff fc22 	bl	8004aaa <WM_ForEachDesc>
 8005266:	b002      	add	sp, #8
 8005268:	bd70      	pop	{r4, r5, r6, pc}
 800526a:	bf00      	nop
 800526c:	080051f5 	.word	0x080051f5

08005270 <_OnExit>:
 8005270:	b538      	push	{r3, r4, r5, lr}
 8005272:	4b19      	ldr	r3, [pc, #100]	; (80052d8 <_OnExit+0x68>)
 8005274:	4d19      	ldr	r5, [pc, #100]	; (80052dc <_OnExit+0x6c>)
 8005276:	4a1a      	ldr	r2, [pc, #104]	; (80052e0 <_OnExit+0x70>)
 8005278:	481a      	ldr	r0, [pc, #104]	; (80052e4 <_OnExit+0x74>)
 800527a:	2400      	movs	r4, #0
 800527c:	701c      	strb	r4, [r3, #0]
 800527e:	4b1a      	ldr	r3, [pc, #104]	; (80052e8 <_OnExit+0x78>)
 8005280:	6014      	str	r4, [r2, #0]
 8005282:	601c      	str	r4, [r3, #0]
 8005284:	4b19      	ldr	r3, [pc, #100]	; (80052ec <_OnExit+0x7c>)
 8005286:	6054      	str	r4, [r2, #4]
 8005288:	601c      	str	r4, [r3, #0]
 800528a:	4b19      	ldr	r3, [pc, #100]	; (80052f0 <_OnExit+0x80>)
 800528c:	601c      	str	r4, [r3, #0]
 800528e:	605c      	str	r4, [r3, #4]
 8005290:	4b18      	ldr	r3, [pc, #96]	; (80052f4 <_OnExit+0x84>)
 8005292:	601c      	str	r4, [r3, #0]
 8005294:	4b18      	ldr	r3, [pc, #96]	; (80052f8 <_OnExit+0x88>)
 8005296:	601c      	str	r4, [r3, #0]
 8005298:	4b18      	ldr	r3, [pc, #96]	; (80052fc <_OnExit+0x8c>)
 800529a:	601c      	str	r4, [r3, #0]
 800529c:	4b18      	ldr	r3, [pc, #96]	; (8005300 <_OnExit+0x90>)
 800529e:	601c      	str	r4, [r3, #0]
 80052a0:	4b18      	ldr	r3, [pc, #96]	; (8005304 <_OnExit+0x94>)
 80052a2:	4621      	mov	r1, r4
 80052a4:	601c      	str	r4, [r3, #0]
 80052a6:	2218      	movs	r2, #24
 80052a8:	682b      	ldr	r3, [r5, #0]
 80052aa:	4798      	blx	r3
 80052ac:	4b16      	ldr	r3, [pc, #88]	; (8005308 <_OnExit+0x98>)
 80052ae:	4817      	ldr	r0, [pc, #92]	; (800530c <_OnExit+0x9c>)
 80052b0:	601c      	str	r4, [r3, #0]
 80052b2:	4b17      	ldr	r3, [pc, #92]	; (8005310 <_OnExit+0xa0>)
 80052b4:	4621      	mov	r1, r4
 80052b6:	601c      	str	r4, [r3, #0]
 80052b8:	605c      	str	r4, [r3, #4]
 80052ba:	2210      	movs	r2, #16
 80052bc:	682b      	ldr	r3, [r5, #0]
 80052be:	4798      	blx	r3
 80052c0:	682b      	ldr	r3, [r5, #0]
 80052c2:	4814      	ldr	r0, [pc, #80]	; (8005314 <_OnExit+0xa4>)
 80052c4:	4621      	mov	r1, r4
 80052c6:	2210      	movs	r2, #16
 80052c8:	4798      	blx	r3
 80052ca:	682b      	ldr	r3, [r5, #0]
 80052cc:	4812      	ldr	r0, [pc, #72]	; (8005318 <_OnExit+0xa8>)
 80052ce:	4621      	mov	r1, r4
 80052d0:	2210      	movs	r2, #16
 80052d2:	4798      	blx	r3
 80052d4:	bd38      	pop	{r3, r4, r5, pc}
 80052d6:	bf00      	nop
 80052d8:	20002af4 	.word	0x20002af4
 80052dc:	200000a4 	.word	0x200000a4
 80052e0:	20002c94 	.word	0x20002c94
 80052e4:	20002ad8 	.word	0x20002ad8
 80052e8:	20002ad4 	.word	0x20002ad4
 80052ec:	20002cc0 	.word	0x20002cc0
 80052f0:	20002cc8 	.word	0x20002cc8
 80052f4:	20002cd4 	.word	0x20002cd4
 80052f8:	20002c80 	.word	0x20002c80
 80052fc:	20002cb4 	.word	0x20002cb4
 8005300:	20002cc4 	.word	0x20002cc4
 8005304:	20002af0 	.word	0x20002af0
 8005308:	20002c90 	.word	0x20002c90
 800530c:	20002e1c 	.word	0x20002e1c
 8005310:	20002c84 	.word	0x20002c84
 8005314:	20002e0c 	.word	0x20002e0c
 8005318:	20002dfc 	.word	0x20002dfc

0800531c <_Paint1>:
 800531c:	b510      	push	{r4, lr}
 800531e:	4604      	mov	r4, r0
 8005320:	f006 faa0 	bl	800b864 <GUI_ALLOC_h2p>
 8005324:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005326:	4a04      	ldr	r2, [pc, #16]	; (8005338 <_Paint1+0x1c>)
 8005328:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800532c:	4b03      	ldr	r3, [pc, #12]	; (800533c <_Paint1+0x20>)
 800532e:	4620      	mov	r0, r4
 8005330:	bf08      	it	eq
 8005332:	4613      	moveq	r3, r2
 8005334:	4798      	blx	r3
 8005336:	bd10      	pop	{r4, pc}
 8005338:	08006229 	.word	0x08006229
 800533c:	080067b5 	.word	0x080067b5

08005340 <_Findy1>:
 8005340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005342:	4605      	mov	r5, r0
 8005344:	b085      	sub	sp, #20
 8005346:	460c      	mov	r4, r1
 8005348:	4616      	mov	r6, r2
 800534a:	2d00      	cmp	r5, #0
 800534c:	d04c      	beq.n	80053e8 <_Findy1+0xa8>
 800534e:	4628      	mov	r0, r5
 8005350:	f006 fa92 	bl	800b878 <GUI_ALLOC_LockH>
 8005354:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8005356:	9001      	str	r0, [sp, #4]
 8005358:	07bb      	lsls	r3, r7, #30
 800535a:	4601      	mov	r1, r0
 800535c:	d53d      	bpl.n	80053da <_Findy1+0x9a>
 800535e:	ad02      	add	r5, sp, #8
 8005360:	b126      	cbz	r6, 800536c <_Findy1+0x2c>
 8005362:	4628      	mov	r0, r5
 8005364:	4632      	mov	r2, r6
 8005366:	f003 ff52 	bl	800920e <GUI__IntersectRects>
 800536a:	e002      	b.n	8005372 <_Findy1+0x32>
 800536c:	c803      	ldmia	r0, {r0, r1}
 800536e:	e885 0003 	stmia.w	r5, {r0, r1}
 8005372:	4620      	mov	r0, r4
 8005374:	4629      	mov	r1, r5
 8005376:	f005 fde1 	bl	800af3c <GUI_RectsIntersect>
 800537a:	b370      	cbz	r0, 80053da <_Findy1+0x9a>
 800537c:	f017 0f01 	tst.w	r7, #1
 8005380:	9b01      	ldr	r3, [sp, #4]
 8005382:	d11e      	bne.n	80053c2 <_Findy1+0x82>
 8005384:	b13e      	cbz	r6, 8005396 <_Findy1+0x56>
 8005386:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800538a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800538e:	429a      	cmp	r2, r3
 8005390:	bfa8      	it	ge
 8005392:	4613      	movge	r3, r2
 8005394:	e001      	b.n	800539a <_Findy1+0x5a>
 8005396:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800539a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800539e:	4293      	cmp	r3, r2
 80053a0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80053a4:	dd06      	ble.n	80053b4 <_Findy1+0x74>
 80053a6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80053aa:	b219      	sxth	r1, r3
 80053ac:	428a      	cmp	r2, r1
 80053ae:	db14      	blt.n	80053da <_Findy1+0x9a>
 80053b0:	3b01      	subs	r3, #1
 80053b2:	e004      	b.n	80053be <_Findy1+0x7e>
 80053b4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80053b8:	b219      	sxth	r1, r3
 80053ba:	428a      	cmp	r2, r1
 80053bc:	dd0d      	ble.n	80053da <_Findy1+0x9a>
 80053be:	80e3      	strh	r3, [r4, #6]
 80053c0:	e00b      	b.n	80053da <_Findy1+0x9a>
 80053c2:	69df      	ldr	r7, [r3, #28]
 80053c4:	b14f      	cbz	r7, 80053da <_Findy1+0x9a>
 80053c6:	4638      	mov	r0, r7
 80053c8:	4621      	mov	r1, r4
 80053ca:	462a      	mov	r2, r5
 80053cc:	f7ff ffb8 	bl	8005340 <_Findy1>
 80053d0:	4638      	mov	r0, r7
 80053d2:	f006 fa47 	bl	800b864 <GUI_ALLOC_h2p>
 80053d6:	6a07      	ldr	r7, [r0, #32]
 80053d8:	e7f4      	b.n	80053c4 <_Findy1+0x84>
 80053da:	a804      	add	r0, sp, #16
 80053dc:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80053e0:	6a1d      	ldr	r5, [r3, #32]
 80053e2:	f006 fa57 	bl	800b894 <GUI_ALLOC_UnlockH>
 80053e6:	e7b0      	b.n	800534a <_Findy1+0xa>
 80053e8:	b005      	add	sp, #20
 80053ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

080053ec <_Findx0>:
 80053ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80053f0:	4604      	mov	r4, r0
 80053f2:	460f      	mov	r7, r1
 80053f4:	4690      	mov	r8, r2
 80053f6:	2500      	movs	r5, #0
 80053f8:	2c00      	cmp	r4, #0
 80053fa:	d037      	beq.n	800546c <_Findx0+0x80>
 80053fc:	4620      	mov	r0, r4
 80053fe:	f006 fa3b 	bl	800b878 <GUI_ALLOC_LockH>
 8005402:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005404:	9001      	str	r0, [sp, #4]
 8005406:	07b2      	lsls	r2, r6, #30
 8005408:	4601      	mov	r1, r0
 800540a:	d528      	bpl.n	800545e <_Findx0+0x72>
 800540c:	ac02      	add	r4, sp, #8
 800540e:	f1b8 0f00 	cmp.w	r8, #0
 8005412:	d004      	beq.n	800541e <_Findx0+0x32>
 8005414:	4620      	mov	r0, r4
 8005416:	4642      	mov	r2, r8
 8005418:	f003 fef9 	bl	800920e <GUI__IntersectRects>
 800541c:	e002      	b.n	8005424 <_Findx0+0x38>
 800541e:	c803      	ldmia	r0, {r0, r1}
 8005420:	e884 0003 	stmia.w	r4, {r0, r1}
 8005424:	4638      	mov	r0, r7
 8005426:	4621      	mov	r1, r4
 8005428:	f005 fd88 	bl	800af3c <GUI_RectsIntersect>
 800542c:	b1b8      	cbz	r0, 800545e <_Findx0+0x72>
 800542e:	07f3      	lsls	r3, r6, #31
 8005430:	d405      	bmi.n	800543e <_Findx0+0x52>
 8005432:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8005436:	3301      	adds	r3, #1
 8005438:	803b      	strh	r3, [r7, #0]
 800543a:	2501      	movs	r5, #1
 800543c:	e00f      	b.n	800545e <_Findx0+0x72>
 800543e:	9b01      	ldr	r3, [sp, #4]
 8005440:	69de      	ldr	r6, [r3, #28]
 8005442:	b166      	cbz	r6, 800545e <_Findx0+0x72>
 8005444:	4630      	mov	r0, r6
 8005446:	4639      	mov	r1, r7
 8005448:	4622      	mov	r2, r4
 800544a:	f7ff ffcf 	bl	80053ec <_Findx0>
 800544e:	2800      	cmp	r0, #0
 8005450:	4630      	mov	r0, r6
 8005452:	bf18      	it	ne
 8005454:	2501      	movne	r5, #1
 8005456:	f006 fa05 	bl	800b864 <GUI_ALLOC_h2p>
 800545a:	6a06      	ldr	r6, [r0, #32]
 800545c:	e7f1      	b.n	8005442 <_Findx0+0x56>
 800545e:	a804      	add	r0, sp, #16
 8005460:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8005464:	6a1c      	ldr	r4, [r3, #32]
 8005466:	f006 fa15 	bl	800b894 <GUI_ALLOC_UnlockH>
 800546a:	e7c5      	b.n	80053f8 <_Findx0+0xc>
 800546c:	4628      	mov	r0, r5
 800546e:	b004      	add	sp, #16
 8005470:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005474 <_Findx1>:
 8005474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005476:	4604      	mov	r4, r0
 8005478:	b085      	sub	sp, #20
 800547a:	460e      	mov	r6, r1
 800547c:	4617      	mov	r7, r2
 800547e:	2c00      	cmp	r4, #0
 8005480:	d031      	beq.n	80054e6 <_Findx1+0x72>
 8005482:	4620      	mov	r0, r4
 8005484:	f006 f9f8 	bl	800b878 <GUI_ALLOC_LockH>
 8005488:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800548a:	9001      	str	r0, [sp, #4]
 800548c:	07aa      	lsls	r2, r5, #30
 800548e:	4601      	mov	r1, r0
 8005490:	d522      	bpl.n	80054d8 <_Findx1+0x64>
 8005492:	ac02      	add	r4, sp, #8
 8005494:	b127      	cbz	r7, 80054a0 <_Findx1+0x2c>
 8005496:	4620      	mov	r0, r4
 8005498:	463a      	mov	r2, r7
 800549a:	f003 feb8 	bl	800920e <GUI__IntersectRects>
 800549e:	e002      	b.n	80054a6 <_Findx1+0x32>
 80054a0:	c803      	ldmia	r0, {r0, r1}
 80054a2:	e884 0003 	stmia.w	r4, {r0, r1}
 80054a6:	4630      	mov	r0, r6
 80054a8:	4621      	mov	r1, r4
 80054aa:	f005 fd47 	bl	800af3c <GUI_RectsIntersect>
 80054ae:	b198      	cbz	r0, 80054d8 <_Findx1+0x64>
 80054b0:	07eb      	lsls	r3, r5, #31
 80054b2:	d404      	bmi.n	80054be <_Findx1+0x4a>
 80054b4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80054b8:	3b01      	subs	r3, #1
 80054ba:	80b3      	strh	r3, [r6, #4]
 80054bc:	e00c      	b.n	80054d8 <_Findx1+0x64>
 80054be:	9b01      	ldr	r3, [sp, #4]
 80054c0:	69dd      	ldr	r5, [r3, #28]
 80054c2:	b14d      	cbz	r5, 80054d8 <_Findx1+0x64>
 80054c4:	4628      	mov	r0, r5
 80054c6:	4631      	mov	r1, r6
 80054c8:	4622      	mov	r2, r4
 80054ca:	f7ff ffd3 	bl	8005474 <_Findx1>
 80054ce:	4628      	mov	r0, r5
 80054d0:	f006 f9c8 	bl	800b864 <GUI_ALLOC_h2p>
 80054d4:	6a05      	ldr	r5, [r0, #32]
 80054d6:	e7f4      	b.n	80054c2 <_Findx1+0x4e>
 80054d8:	a804      	add	r0, sp, #16
 80054da:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80054de:	6a1c      	ldr	r4, [r3, #32]
 80054e0:	f006 f9d8 	bl	800b894 <GUI_ALLOC_UnlockH>
 80054e4:	e7cb      	b.n	800547e <_Findx1+0xa>
 80054e6:	b005      	add	sp, #20
 80054e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080054ec <_Paint1Trans>:
 80054ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80054f0:	4d21      	ldr	r5, [pc, #132]	; (8005578 <_Paint1Trans+0x8c>)
 80054f2:	682b      	ldr	r3, [r5, #0]
 80054f4:	4606      	mov	r6, r0
 80054f6:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80054f8:	f006 f9be 	bl	800b878 <GUI_ALLOC_LockH>
 80054fc:	9000      	str	r0, [sp, #0]
 80054fe:	4630      	mov	r0, r6
 8005500:	f006 f9ba 	bl	800b878 <GUI_ALLOC_LockH>
 8005504:	ac02      	add	r4, sp, #8
 8005506:	4601      	mov	r1, r0
 8005508:	9001      	str	r0, [sp, #4]
 800550a:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 800550e:	3008      	adds	r0, #8
 8005510:	f005 fd14 	bl	800af3c <GUI_RectsIntersect>
 8005514:	4607      	mov	r7, r0
 8005516:	b328      	cbz	r0, 8005564 <_Paint1Trans+0x78>
 8005518:	9901      	ldr	r1, [sp, #4]
 800551a:	9a00      	ldr	r2, [sp, #0]
 800551c:	682b      	ldr	r3, [r5, #0]
 800551e:	4c17      	ldr	r4, [pc, #92]	; (800557c <_Paint1Trans+0x90>)
 8005520:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 8005522:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 8005526:	f101 0008 	add.w	r0, r1, #8
 800552a:	3208      	adds	r2, #8
 800552c:	f003 fe6f 	bl	800920e <GUI__IntersectRects>
 8005530:	4668      	mov	r0, sp
 8005532:	f006 f9af 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005536:	9a01      	ldr	r2, [sp, #4]
 8005538:	682b      	ldr	r3, [r5, #0]
 800553a:	f9b2 1000 	ldrsh.w	r1, [r2]
 800553e:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8005542:	64d9      	str	r1, [r3, #76]	; 0x4c
 8005544:	651a      	str	r2, [r3, #80]	; 0x50
 8005546:	a801      	add	r0, sp, #4
 8005548:	6026      	str	r6, [r4, #0]
 800554a:	f006 f9a3 	bl	800b894 <GUI_ALLOC_UnlockH>
 800554e:	4630      	mov	r0, r6
 8005550:	f7ff fee4 	bl	800531c <_Paint1>
 8005554:	2300      	movs	r3, #0
 8005556:	6023      	str	r3, [r4, #0]
 8005558:	682b      	ldr	r3, [r5, #0]
 800555a:	651f      	str	r7, [r3, #80]	; 0x50
 800555c:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8005560:	2701      	movs	r7, #1
 8005562:	e005      	b.n	8005570 <_Paint1Trans+0x84>
 8005564:	4668      	mov	r0, sp
 8005566:	f006 f995 	bl	800b894 <GUI_ALLOC_UnlockH>
 800556a:	a801      	add	r0, sp, #4
 800556c:	f006 f992 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005570:	4638      	mov	r0, r7
 8005572:	b002      	add	sp, #8
 8005574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005578:	200000b8 	.word	0x200000b8
 800557c:	20002c80 	.word	0x20002c80

08005580 <_PaintTransChildren>:
 8005580:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005584:	4606      	mov	r6, r0
 8005586:	f006 f977 	bl	800b878 <GUI_ALLOC_LockH>
 800558a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800558c:	9001      	str	r0, [sp, #4]
 800558e:	079b      	lsls	r3, r3, #30
 8005590:	d405      	bmi.n	800559e <_PaintTransChildren+0x1e>
 8005592:	a801      	add	r0, sp, #4
 8005594:	f006 f97e 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005598:	b002      	add	sp, #8
 800559a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800559e:	69c4      	ldr	r4, [r0, #28]
 80055a0:	2c00      	cmp	r4, #0
 80055a2:	d0f6      	beq.n	8005592 <_PaintTransChildren+0x12>
 80055a4:	4620      	mov	r0, r4
 80055a6:	f006 f967 	bl	800b878 <GUI_ALLOC_LockH>
 80055aa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80055ac:	ad02      	add	r5, sp, #8
 80055ae:	f003 0303 	and.w	r3, r3, #3
 80055b2:	2b03      	cmp	r3, #3
 80055b4:	f845 0d08 	str.w	r0, [r5, #-8]!
 80055b8:	d137      	bne.n	800562a <_PaintTransChildren+0xaa>
 80055ba:	9901      	ldr	r1, [sp, #4]
 80055bc:	3108      	adds	r1, #8
 80055be:	f005 fcbd 	bl	800af3c <GUI_RectsIntersect>
 80055c2:	2800      	cmp	r0, #0
 80055c4:	d031      	beq.n	800562a <_PaintTransChildren+0xaa>
 80055c6:	a802      	add	r0, sp, #8
 80055c8:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80055cc:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 80055d0:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 80055d4:	899f      	ldrh	r7, [r3, #12]
 80055d6:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 80055da:	f006 f95b 	bl	800b894 <GUI_ALLOC_UnlockH>
 80055de:	4668      	mov	r0, sp
 80055e0:	f006 f958 	bl	800b894 <GUI_ALLOC_UnlockH>
 80055e4:	4620      	mov	r0, r4
 80055e6:	f7ff ff81 	bl	80054ec <_Paint1Trans>
 80055ea:	b170      	cbz	r0, 800560a <_PaintTransChildren+0x8a>
 80055ec:	4620      	mov	r0, r4
 80055ee:	f006 f939 	bl	800b864 <GUI_ALLOC_h2p>
 80055f2:	9000      	str	r0, [sp, #0]
 80055f4:	4620      	mov	r0, r4
 80055f6:	f7ff ffc3 	bl	8005580 <_PaintTransChildren>
 80055fa:	4620      	mov	r0, r4
 80055fc:	f006 f932 	bl	800b864 <GUI_ALLOC_h2p>
 8005600:	9000      	str	r0, [sp, #0]
 8005602:	4630      	mov	r0, r6
 8005604:	f006 f92e 	bl	800b864 <GUI_ALLOC_h2p>
 8005608:	9001      	str	r0, [sp, #4]
 800560a:	4630      	mov	r0, r6
 800560c:	f006 f934 	bl	800b878 <GUI_ALLOC_LockH>
 8005610:	9001      	str	r0, [sp, #4]
 8005612:	4620      	mov	r0, r4
 8005614:	f006 f930 	bl	800b878 <GUI_ALLOC_LockH>
 8005618:	9b01      	ldr	r3, [sp, #4]
 800561a:	9000      	str	r0, [sp, #0]
 800561c:	f8a3 9008 	strh.w	r9, [r3, #8]
 8005620:	f8a3 800a 	strh.w	r8, [r3, #10]
 8005624:	819f      	strh	r7, [r3, #12]
 8005626:	f8a3 a00e 	strh.w	sl, [r3, #14]
 800562a:	9b00      	ldr	r3, [sp, #0]
 800562c:	4668      	mov	r0, sp
 800562e:	6a1c      	ldr	r4, [r3, #32]
 8005630:	f006 f930 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005634:	e7b4      	b.n	80055a0 <_PaintTransChildren+0x20>
	...

08005638 <WM__PaintWinAndOverlays>:
 8005638:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800563a:	4604      	mov	r4, r0
 800563c:	f006 f91c 	bl	800b878 <GUI_ALLOC_LockH>
 8005640:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005642:	9001      	str	r0, [sp, #4]
 8005644:	f640 0301 	movw	r3, #2049	; 0x801
 8005648:	4013      	ands	r3, r2
 800564a:	2b01      	cmp	r3, #1
 800564c:	d005      	beq.n	800565a <WM__PaintWinAndOverlays+0x22>
 800564e:	a801      	add	r0, sp, #4
 8005650:	f006 f920 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005654:	4620      	mov	r0, r4
 8005656:	f7ff fe61 	bl	800531c <_Paint1>
 800565a:	4b14      	ldr	r3, [pc, #80]	; (80056ac <WM__PaintWinAndOverlays+0x74>)
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	b313      	cbz	r3, 80056a6 <WM__PaintWinAndOverlays+0x6e>
 8005660:	4620      	mov	r0, r4
 8005662:	f7ff ff8d 	bl	8005580 <_PaintTransChildren>
 8005666:	4620      	mov	r0, r4
 8005668:	f006 f8fc 	bl	800b864 <GUI_ALLOC_h2p>
 800566c:	6985      	ldr	r5, [r0, #24]
 800566e:	6a04      	ldr	r4, [r0, #32]
 8005670:	b1cd      	cbz	r5, 80056a6 <WM__PaintWinAndOverlays+0x6e>
 8005672:	b194      	cbz	r4, 800569a <WM__PaintWinAndOverlays+0x62>
 8005674:	4620      	mov	r0, r4
 8005676:	f006 f8f5 	bl	800b864 <GUI_ALLOC_h2p>
 800567a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800567c:	f003 0303 	and.w	r3, r3, #3
 8005680:	2b03      	cmp	r3, #3
 8005682:	d102      	bne.n	800568a <WM__PaintWinAndOverlays+0x52>
 8005684:	4620      	mov	r0, r4
 8005686:	f7ff ff31 	bl	80054ec <_Paint1Trans>
 800568a:	4620      	mov	r0, r4
 800568c:	f7ff ff78 	bl	8005580 <_PaintTransChildren>
 8005690:	4620      	mov	r0, r4
 8005692:	f006 f8e7 	bl	800b864 <GUI_ALLOC_h2p>
 8005696:	6a04      	ldr	r4, [r0, #32]
 8005698:	e7eb      	b.n	8005672 <WM__PaintWinAndOverlays+0x3a>
 800569a:	4628      	mov	r0, r5
 800569c:	f006 f8e2 	bl	800b864 <GUI_ALLOC_h2p>
 80056a0:	6a04      	ldr	r4, [r0, #32]
 80056a2:	6985      	ldr	r5, [r0, #24]
 80056a4:	e7e4      	b.n	8005670 <WM__PaintWinAndOverlays+0x38>
 80056a6:	b003      	add	sp, #12
 80056a8:	bd30      	pop	{r4, r5, pc}
 80056aa:	bf00      	nop
 80056ac:	20002cd4 	.word	0x20002cd4

080056b0 <_cbPaintMemDev>:
 80056b0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80056b4:	4d17      	ldr	r5, [pc, #92]	; (8005714 <_cbPaintMemDev+0x64>)
 80056b6:	682b      	ldr	r3, [r5, #0]
 80056b8:	4606      	mov	r6, r0
 80056ba:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80056bc:	f006 f8dc 	bl	800b878 <GUI_ALLOC_LockH>
 80056c0:	682a      	ldr	r2, [r5, #0]
 80056c2:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 80056c6:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 80056ca:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 80056ce:	89c7      	ldrh	r7, [r0, #14]
 80056d0:	ac02      	add	r4, sp, #8
 80056d2:	3208      	adds	r2, #8
 80056d4:	f844 0d04 	str.w	r0, [r4, #-4]!
 80056d8:	f100 0308 	add.w	r3, r0, #8
 80056dc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80056e0:	e883 0003 	stmia.w	r3, {r0, r1}
 80056e4:	4620      	mov	r0, r4
 80056e6:	f006 f8d5 	bl	800b894 <GUI_ALLOC_UnlockH>
 80056ea:	6830      	ldr	r0, [r6, #0]
 80056ec:	f7ff ffa4 	bl	8005638 <WM__PaintWinAndOverlays>
 80056f0:	682b      	ldr	r3, [r5, #0]
 80056f2:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80056f4:	f006 f8c0 	bl	800b878 <GUI_ALLOC_LockH>
 80056f8:	9001      	str	r0, [sp, #4]
 80056fa:	f8a0 a008 	strh.w	sl, [r0, #8]
 80056fe:	f8a0 900a 	strh.w	r9, [r0, #10]
 8005702:	f8a0 800c 	strh.w	r8, [r0, #12]
 8005706:	81c7      	strh	r7, [r0, #14]
 8005708:	4620      	mov	r0, r4
 800570a:	f006 f8c3 	bl	800b894 <GUI_ALLOC_UnlockH>
 800570e:	b002      	add	sp, #8
 8005710:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005714:	200000b8 	.word	0x200000b8

08005718 <WM__ClipAtParentBorders>:
 8005718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800571a:	4607      	mov	r7, r0
 800571c:	460d      	mov	r5, r1
 800571e:	4628      	mov	r0, r5
 8005720:	f006 f8aa 	bl	800b878 <GUI_ALLOC_LockH>
 8005724:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005726:	ac02      	add	r4, sp, #8
 8005728:	f013 0602 	ands.w	r6, r3, #2
 800572c:	4601      	mov	r1, r0
 800572e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005732:	d104      	bne.n	800573e <WM__ClipAtParentBorders+0x26>
 8005734:	4620      	mov	r0, r4
 8005736:	f006 f8ad 	bl	800b894 <GUI_ALLOC_UnlockH>
 800573a:	4630      	mov	r0, r6
 800573c:	e016      	b.n	800576c <WM__ClipAtParentBorders+0x54>
 800573e:	4638      	mov	r0, r7
 8005740:	f003 fd47 	bl	80091d2 <GUI__IntersectRect>
 8005744:	9b01      	ldr	r3, [sp, #4]
 8005746:	699e      	ldr	r6, [r3, #24]
 8005748:	4620      	mov	r0, r4
 800574a:	b956      	cbnz	r6, 8005762 <WM__ClipAtParentBorders+0x4a>
 800574c:	f006 f8a2 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005750:	4b07      	ldr	r3, [pc, #28]	; (8005770 <WM__ClipAtParentBorders+0x58>)
 8005752:	681a      	ldr	r2, [r3, #0]
 8005754:	4295      	cmp	r5, r2
 8005756:	d008      	beq.n	800576a <WM__ClipAtParentBorders+0x52>
 8005758:	6858      	ldr	r0, [r3, #4]
 800575a:	1a2b      	subs	r3, r5, r0
 800575c:	4258      	negs	r0, r3
 800575e:	4158      	adcs	r0, r3
 8005760:	e004      	b.n	800576c <WM__ClipAtParentBorders+0x54>
 8005762:	f006 f897 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005766:	4635      	mov	r5, r6
 8005768:	e7d9      	b.n	800571e <WM__ClipAtParentBorders+0x6>
 800576a:	2001      	movs	r0, #1
 800576c:	b003      	add	sp, #12
 800576e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005770:	20002c84 	.word	0x20002c84

08005774 <WM__InsertWindowIntoList>:
 8005774:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005776:	4604      	mov	r4, r0
 8005778:	b085      	sub	sp, #20
 800577a:	460d      	mov	r5, r1
 800577c:	2900      	cmp	r1, #0
 800577e:	d049      	beq.n	8005814 <WM__InsertWindowIntoList+0xa0>
 8005780:	f006 f87a 	bl	800b878 <GUI_ALLOC_LockH>
 8005784:	2300      	movs	r3, #0
 8005786:	6203      	str	r3, [r0, #32]
 8005788:	6185      	str	r5, [r0, #24]
 800578a:	9001      	str	r0, [sp, #4]
 800578c:	4628      	mov	r0, r5
 800578e:	f006 f873 	bl	800b878 <GUI_ALLOC_LockH>
 8005792:	9b01      	ldr	r3, [sp, #4]
 8005794:	69c5      	ldr	r5, [r0, #28]
 8005796:	9002      	str	r0, [sp, #8]
 8005798:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 800579a:	b92d      	cbnz	r5, 80057a8 <WM__InsertWindowIntoList+0x34>
 800579c:	61c4      	str	r4, [r0, #28]
 800579e:	a801      	add	r0, sp, #4
 80057a0:	f006 f878 	bl	800b894 <GUI_ALLOC_UnlockH>
 80057a4:	a802      	add	r0, sp, #8
 80057a6:	e033      	b.n	8005810 <WM__InsertWindowIntoList+0x9c>
 80057a8:	4628      	mov	r0, r5
 80057aa:	f006 f865 	bl	800b878 <GUI_ALLOC_LockH>
 80057ae:	ae04      	add	r6, sp, #16
 80057b0:	f007 0708 	and.w	r7, r7, #8
 80057b4:	f846 0d04 	str.w	r0, [r6, #-4]!
 80057b8:	b977      	cbnz	r7, 80057d8 <WM__InsertWindowIntoList+0x64>
 80057ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80057bc:	071a      	lsls	r2, r3, #28
 80057be:	d50b      	bpl.n	80057d8 <WM__InsertWindowIntoList+0x64>
 80057c0:	9b01      	ldr	r3, [sp, #4]
 80057c2:	621d      	str	r5, [r3, #32]
 80057c4:	9b02      	ldr	r3, [sp, #8]
 80057c6:	a801      	add	r0, sp, #4
 80057c8:	61dc      	str	r4, [r3, #28]
 80057ca:	f006 f863 	bl	800b894 <GUI_ALLOC_UnlockH>
 80057ce:	a802      	add	r0, sp, #8
 80057d0:	f006 f860 	bl	800b894 <GUI_ALLOC_UnlockH>
 80057d4:	4630      	mov	r0, r6
 80057d6:	e01b      	b.n	8005810 <WM__InsertWindowIntoList+0x9c>
 80057d8:	a802      	add	r0, sp, #8
 80057da:	f006 f85b 	bl	800b894 <GUI_ALLOC_UnlockH>
 80057de:	4630      	mov	r0, r6
 80057e0:	f006 f858 	bl	800b894 <GUI_ALLOC_UnlockH>
 80057e4:	4628      	mov	r0, r5
 80057e6:	f006 f83d 	bl	800b864 <GUI_ALLOC_h2p>
 80057ea:	9003      	str	r0, [sp, #12]
 80057ec:	9b03      	ldr	r3, [sp, #12]
 80057ee:	6a1d      	ldr	r5, [r3, #32]
 80057f0:	b90d      	cbnz	r5, 80057f6 <WM__InsertWindowIntoList+0x82>
 80057f2:	621c      	str	r4, [r3, #32]
 80057f4:	e00b      	b.n	800580e <WM__InsertWindowIntoList+0x9a>
 80057f6:	4628      	mov	r0, r5
 80057f8:	f006 f834 	bl	800b864 <GUI_ALLOC_h2p>
 80057fc:	2f00      	cmp	r7, #0
 80057fe:	d1f4      	bne.n	80057ea <WM__InsertWindowIntoList+0x76>
 8005800:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005802:	071b      	lsls	r3, r3, #28
 8005804:	d5f1      	bpl.n	80057ea <WM__InsertWindowIntoList+0x76>
 8005806:	9b03      	ldr	r3, [sp, #12]
 8005808:	621c      	str	r4, [r3, #32]
 800580a:	9b01      	ldr	r3, [sp, #4]
 800580c:	621d      	str	r5, [r3, #32]
 800580e:	a801      	add	r0, sp, #4
 8005810:	f006 f840 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005814:	b005      	add	sp, #20
 8005816:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005818 <WM__RemoveWindowFromList>:
 8005818:	b570      	push	{r4, r5, r6, lr}
 800581a:	4604      	mov	r4, r0
 800581c:	f006 f822 	bl	800b864 <GUI_ALLOC_h2p>
 8005820:	4605      	mov	r5, r0
 8005822:	6980      	ldr	r0, [r0, #24]
 8005824:	b1a8      	cbz	r0, 8005852 <WM__RemoveWindowFromList+0x3a>
 8005826:	f006 f81d 	bl	800b864 <GUI_ALLOC_h2p>
 800582a:	69c3      	ldr	r3, [r0, #28]
 800582c:	42a3      	cmp	r3, r4
 800582e:	4606      	mov	r6, r0
 8005830:	d105      	bne.n	800583e <WM__RemoveWindowFromList+0x26>
 8005832:	4618      	mov	r0, r3
 8005834:	f006 f816 	bl	800b864 <GUI_ALLOC_h2p>
 8005838:	6a03      	ldr	r3, [r0, #32]
 800583a:	61f3      	str	r3, [r6, #28]
 800583c:	bd70      	pop	{r4, r5, r6, pc}
 800583e:	b143      	cbz	r3, 8005852 <WM__RemoveWindowFromList+0x3a>
 8005840:	4618      	mov	r0, r3
 8005842:	f006 f80f 	bl	800b864 <GUI_ALLOC_h2p>
 8005846:	6a03      	ldr	r3, [r0, #32]
 8005848:	42a3      	cmp	r3, r4
 800584a:	d1f8      	bne.n	800583e <WM__RemoveWindowFromList+0x26>
 800584c:	6a2b      	ldr	r3, [r5, #32]
 800584e:	6203      	str	r3, [r0, #32]
 8005850:	bd70      	pop	{r4, r5, r6, pc}
 8005852:	bd70      	pop	{r4, r5, r6, pc}

08005854 <WM__Client2Screen>:
 8005854:	4603      	mov	r3, r0
 8005856:	4608      	mov	r0, r1
 8005858:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800585c:	f9b3 1000 	ldrsh.w	r1, [r3]
 8005860:	f005 bb21 	b.w	800aea6 <GUI_MoveRect>

08005864 <_SetClipRectUserIntersect>:
 8005864:	4b11      	ldr	r3, [pc, #68]	; (80058ac <_SetClipRectUserIntersect+0x48>)
 8005866:	b530      	push	{r4, r5, lr}
 8005868:	681c      	ldr	r4, [r3, #0]
 800586a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800586c:	b085      	sub	sp, #20
 800586e:	4605      	mov	r5, r0
 8005870:	b1ba      	cbz	r2, 80058a2 <_SetClipRectUserIntersect+0x3e>
 8005872:	6810      	ldr	r0, [r2, #0]
 8005874:	6851      	ldr	r1, [r2, #4]
 8005876:	ab02      	add	r3, sp, #8
 8005878:	c303      	stmia	r3!, {r0, r1}
 800587a:	4b0d      	ldr	r3, [pc, #52]	; (80058b0 <_SetClipRectUserIntersect+0x4c>)
 800587c:	6818      	ldr	r0, [r3, #0]
 800587e:	b900      	cbnz	r0, 8005882 <_SetClipRectUserIntersect+0x1e>
 8005880:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005882:	f005 fff9 	bl	800b878 <GUI_ALLOC_LockH>
 8005886:	ac04      	add	r4, sp, #16
 8005888:	a902      	add	r1, sp, #8
 800588a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800588e:	f7ff ffe1 	bl	8005854 <WM__Client2Screen>
 8005892:	4620      	mov	r0, r4
 8005894:	f005 fffe 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005898:	a802      	add	r0, sp, #8
 800589a:	4629      	mov	r1, r5
 800589c:	f003 fc99 	bl	80091d2 <GUI__IntersectRect>
 80058a0:	a802      	add	r0, sp, #8
 80058a2:	f002 ffb1 	bl	8008808 <LCD_SetClipRectEx>
 80058a6:	b005      	add	sp, #20
 80058a8:	bd30      	pop	{r4, r5, pc}
 80058aa:	bf00      	nop
 80058ac:	200000b8 	.word	0x200000b8
 80058b0:	20002c80 	.word	0x20002c80

080058b4 <WM__ActivateClipRect>:
 80058b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80058b6:	4b0e      	ldr	r3, [pc, #56]	; (80058f0 <WM__ActivateClipRect+0x3c>)
 80058b8:	681b      	ldr	r3, [r3, #0]
 80058ba:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 80058be:	b10a      	cbz	r2, 80058c4 <WM__ActivateClipRect+0x10>
 80058c0:	480c      	ldr	r0, [pc, #48]	; (80058f4 <WM__ActivateClipRect+0x40>)
 80058c2:	e011      	b.n	80058e8 <WM__ActivateClipRect+0x34>
 80058c4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80058c6:	f005 ffd7 	bl	800b878 <GUI_ALLOC_LockH>
 80058ca:	9001      	str	r0, [sp, #4]
 80058cc:	c803      	ldmia	r0, {r0, r1}
 80058ce:	ac02      	add	r4, sp, #8
 80058d0:	e884 0003 	stmia.w	r4, {r0, r1}
 80058d4:	a801      	add	r0, sp, #4
 80058d6:	f005 ffdd 	bl	800b894 <GUI_ALLOC_UnlockH>
 80058da:	4b07      	ldr	r3, [pc, #28]	; (80058f8 <WM__ActivateClipRect+0x44>)
 80058dc:	6819      	ldr	r1, [r3, #0]
 80058de:	b111      	cbz	r1, 80058e6 <WM__ActivateClipRect+0x32>
 80058e0:	4620      	mov	r0, r4
 80058e2:	f7ff ff19 	bl	8005718 <WM__ClipAtParentBorders>
 80058e6:	4620      	mov	r0, r4
 80058e8:	f7ff ffbc 	bl	8005864 <_SetClipRectUserIntersect>
 80058ec:	b004      	add	sp, #16
 80058ee:	bd10      	pop	{r4, pc}
 80058f0:	200000b8 	.word	0x200000b8
 80058f4:	20002ae0 	.word	0x20002ae0
 80058f8:	20002c80 	.word	0x20002c80

080058fc <WM__IsWindow>:
 80058fc:	4b06      	ldr	r3, [pc, #24]	; (8005918 <WM__IsWindow+0x1c>)
 80058fe:	b510      	push	{r4, lr}
 8005900:	4604      	mov	r4, r0
 8005902:	6818      	ldr	r0, [r3, #0]
 8005904:	b128      	cbz	r0, 8005912 <WM__IsWindow+0x16>
 8005906:	42a0      	cmp	r0, r4
 8005908:	d004      	beq.n	8005914 <WM__IsWindow+0x18>
 800590a:	f005 ffab 	bl	800b864 <GUI_ALLOC_h2p>
 800590e:	6940      	ldr	r0, [r0, #20]
 8005910:	e7f8      	b.n	8005904 <WM__IsWindow+0x8>
 8005912:	bd10      	pop	{r4, pc}
 8005914:	2001      	movs	r0, #1
 8005916:	bd10      	pop	{r4, pc}
 8005918:	20002ca0 	.word	0x20002ca0

0800591c <WM__InvalidateDrawAndDescs>:
 800591c:	b513      	push	{r0, r1, r4, lr}
 800591e:	4604      	mov	r4, r0
 8005920:	b300      	cbz	r0, 8005964 <WM__InvalidateDrawAndDescs+0x48>
 8005922:	f005 ffa9 	bl	800b878 <GUI_ALLOC_LockH>
 8005926:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005928:	9001      	str	r0, [sp, #4]
 800592a:	0793      	lsls	r3, r2, #30
 800592c:	d517      	bpl.n	800595e <WM__InvalidateDrawAndDescs+0x42>
 800592e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005930:	b140      	cbz	r0, 8005944 <WM__InvalidateDrawAndDescs+0x28>
 8005932:	4b0d      	ldr	r3, [pc, #52]	; (8005968 <WM__InvalidateDrawAndDescs+0x4c>)
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	42a3      	cmp	r3, r4
 8005938:	d004      	beq.n	8005944 <WM__InvalidateDrawAndDescs+0x28>
 800593a:	f001 fe07 	bl	800754c <GUI_MEMDEV_Delete>
 800593e:	9b01      	ldr	r3, [sp, #4]
 8005940:	2200      	movs	r2, #0
 8005942:	625a      	str	r2, [r3, #36]	; 0x24
 8005944:	4620      	mov	r0, r4
 8005946:	f7ff f8ec 	bl	8004b22 <WM_GetFirstChild>
 800594a:	4604      	mov	r4, r0
 800594c:	b13c      	cbz	r4, 800595e <WM__InvalidateDrawAndDescs+0x42>
 800594e:	4620      	mov	r0, r4
 8005950:	f7ff ffe4 	bl	800591c <WM__InvalidateDrawAndDescs>
 8005954:	4620      	mov	r0, r4
 8005956:	f005 ff85 	bl	800b864 <GUI_ALLOC_h2p>
 800595a:	6a04      	ldr	r4, [r0, #32]
 800595c:	e7f6      	b.n	800594c <WM__InvalidateDrawAndDescs+0x30>
 800595e:	a801      	add	r0, sp, #4
 8005960:	f005 ff98 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005964:	b002      	add	sp, #8
 8005966:	bd10      	pop	{r4, pc}
 8005968:	20002cd0 	.word	0x20002cd0

0800596c <WM__RectIsNZ>:
 800596c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005970:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8005974:	429a      	cmp	r2, r3
 8005976:	dc08      	bgt.n	800598a <WM__RectIsNZ+0x1e>
 8005978:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800597c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8005980:	429a      	cmp	r2, r3
 8005982:	bfcc      	ite	gt
 8005984:	2000      	movgt	r0, #0
 8005986:	2001      	movle	r0, #1
 8005988:	4770      	bx	lr
 800598a:	2000      	movs	r0, #0
 800598c:	4770      	bx	lr

0800598e <WM_SendMessage>:
 800598e:	b108      	cbz	r0, 8005994 <WM_SendMessage+0x6>
 8005990:	f7fe bde2 	b.w	8004558 <WM__SendMessage>
 8005994:	4770      	bx	lr

08005996 <WM__SendMsgNoData>:
 8005996:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005998:	ab04      	add	r3, sp, #16
 800599a:	9001      	str	r0, [sp, #4]
 800599c:	f843 1d10 	str.w	r1, [r3, #-16]!
 80059a0:	4669      	mov	r1, sp
 80059a2:	f7fe fdd9 	bl	8004558 <WM__SendMessage>
 80059a6:	b005      	add	sp, #20
 80059a8:	f85d fb04 	ldr.w	pc, [sp], #4

080059ac <WM__GetClientRectWin>:
 80059ac:	2300      	movs	r3, #0
 80059ae:	800b      	strh	r3, [r1, #0]
 80059b0:	8882      	ldrh	r2, [r0, #4]
 80059b2:	804b      	strh	r3, [r1, #2]
 80059b4:	8803      	ldrh	r3, [r0, #0]
 80059b6:	1ad3      	subs	r3, r2, r3
 80059b8:	808b      	strh	r3, [r1, #4]
 80059ba:	88c2      	ldrh	r2, [r0, #6]
 80059bc:	8843      	ldrh	r3, [r0, #2]
 80059be:	1ad3      	subs	r3, r2, r3
 80059c0:	80cb      	strh	r3, [r1, #6]
 80059c2:	4770      	bx	lr

080059c4 <WM__GetTopLevelLayer>:
 80059c4:	b510      	push	{r4, lr}
 80059c6:	4604      	mov	r4, r0
 80059c8:	f005 ff4c 	bl	800b864 <GUI_ALLOC_h2p>
 80059cc:	6980      	ldr	r0, [r0, #24]
 80059ce:	2800      	cmp	r0, #0
 80059d0:	d1f9      	bne.n	80059c6 <WM__GetTopLevelLayer+0x2>
 80059d2:	4b05      	ldr	r3, [pc, #20]	; (80059e8 <WM__GetTopLevelLayer+0x24>)
 80059d4:	681a      	ldr	r2, [r3, #0]
 80059d6:	4294      	cmp	r4, r2
 80059d8:	d005      	beq.n	80059e6 <WM__GetTopLevelLayer+0x22>
 80059da:	6858      	ldr	r0, [r3, #4]
 80059dc:	4284      	cmp	r4, r0
 80059de:	bf14      	ite	ne
 80059e0:	f04f 30ff 	movne.w	r0, #4294967295
 80059e4:	2001      	moveq	r0, #1
 80059e6:	bd10      	pop	{r4, pc}
 80059e8:	20002c84 	.word	0x20002c84

080059ec <_Invalidate1Abs>:
 80059ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059ee:	b085      	sub	sp, #20
 80059f0:	4606      	mov	r6, r0
 80059f2:	460d      	mov	r5, r1
 80059f4:	4617      	mov	r7, r2
 80059f6:	f005 ff35 	bl	800b864 <GUI_ALLOC_h2p>
 80059fa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80059fc:	9001      	str	r0, [sp, #4]
 80059fe:	07a3      	lsls	r3, r4, #30
 8005a00:	d53e      	bpl.n	8005a80 <_Invalidate1Abs+0x94>
 8005a02:	4628      	mov	r0, r5
 8005a04:	f7ff ffb2 	bl	800596c <WM__RectIsNZ>
 8005a08:	2800      	cmp	r0, #0
 8005a0a:	d039      	beq.n	8005a80 <_Invalidate1Abs+0x94>
 8005a0c:	f640 0301 	movw	r3, #2049	; 0x801
 8005a10:	4023      	ands	r3, r4
 8005a12:	2b01      	cmp	r3, #1
 8005a14:	d034      	beq.n	8005a80 <_Invalidate1Abs+0x94>
 8005a16:	4630      	mov	r0, r6
 8005a18:	f005 ff2e 	bl	800b878 <GUI_ALLOC_LockH>
 8005a1c:	ac02      	add	r4, sp, #8
 8005a1e:	4602      	mov	r2, r0
 8005a20:	9001      	str	r0, [sp, #4]
 8005a22:	4629      	mov	r1, r5
 8005a24:	4620      	mov	r0, r4
 8005a26:	f003 fbf2 	bl	800920e <GUI__IntersectRects>
 8005a2a:	4620      	mov	r0, r4
 8005a2c:	f7ff ff9e 	bl	800596c <WM__RectIsNZ>
 8005a30:	b318      	cbz	r0, 8005a7a <_Invalidate1Abs+0x8e>
 8005a32:	9b01      	ldr	r3, [sp, #4]
 8005a34:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005a36:	f244 0120 	movw	r1, #16416	; 0x4020
 8005a3a:	4011      	ands	r1, r2
 8005a3c:	f103 0508 	add.w	r5, r3, #8
 8005a40:	b129      	cbz	r1, 8005a4e <_Invalidate1Abs+0x62>
 8005a42:	4628      	mov	r0, r5
 8005a44:	4629      	mov	r1, r5
 8005a46:	4622      	mov	r2, r4
 8005a48:	f005 fa02 	bl	800ae50 <GUI_MergeRect>
 8005a4c:	e015      	b.n	8005a7a <_Invalidate1Abs+0x8e>
 8005a4e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8005a52:	4317      	orrs	r7, r2
 8005a54:	e885 0003 	stmia.w	r5, {r0, r1}
 8005a58:	629f      	str	r7, [r3, #40]	; 0x28
 8005a5a:	4b0a      	ldr	r3, [pc, #40]	; (8005a84 <_Invalidate1Abs+0x98>)
 8005a5c:	881a      	ldrh	r2, [r3, #0]
 8005a5e:	4630      	mov	r0, r6
 8005a60:	3201      	adds	r2, #1
 8005a62:	801a      	strh	r2, [r3, #0]
 8005a64:	f7ff ffae 	bl	80059c4 <WM__GetTopLevelLayer>
 8005a68:	4b07      	ldr	r3, [pc, #28]	; (8005a88 <_Invalidate1Abs+0x9c>)
 8005a6a:	2201      	movs	r2, #1
 8005a6c:	fa02 f000 	lsl.w	r0, r2, r0
 8005a70:	681a      	ldr	r2, [r3, #0]
 8005a72:	4302      	orrs	r2, r0
 8005a74:	601a      	str	r2, [r3, #0]
 8005a76:	f003 fee3 	bl	8009840 <GUI_SignalEvent>
 8005a7a:	a801      	add	r0, sp, #4
 8005a7c:	f005 ff0a 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005a80:	b005      	add	sp, #20
 8005a82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a84:	20002c9c 	.word	0x20002c9c
 8005a88:	20002cac 	.word	0x20002cac

08005a8c <WM__Invalidate1Abs>:
 8005a8c:	2220      	movs	r2, #32
 8005a8e:	f7ff bfad 	b.w	80059ec <_Invalidate1Abs>

08005a92 <WM_InvalidateWindowAndDescsEx>:
 8005a92:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a94:	460f      	mov	r7, r1
 8005a96:	b085      	sub	sp, #20
 8005a98:	4615      	mov	r5, r2
 8005a9a:	4606      	mov	r6, r0
 8005a9c:	b348      	cbz	r0, 8005af2 <WM_InvalidateWindowAndDescsEx+0x60>
 8005a9e:	f005 feeb 	bl	800b878 <GUI_ALLOC_LockH>
 8005aa2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005aa4:	ac04      	add	r4, sp, #16
 8005aa6:	079b      	lsls	r3, r3, #30
 8005aa8:	4602      	mov	r2, r0
 8005aaa:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8005aae:	d403      	bmi.n	8005ab8 <WM_InvalidateWindowAndDescsEx+0x26>
 8005ab0:	4620      	mov	r0, r4
 8005ab2:	f005 feef 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005ab6:	e01c      	b.n	8005af2 <WM_InvalidateWindowAndDescsEx+0x60>
 8005ab8:	a802      	add	r0, sp, #8
 8005aba:	4639      	mov	r1, r7
 8005abc:	f003 fba7 	bl	800920e <GUI__IntersectRects>
 8005ac0:	2800      	cmp	r0, #0
 8005ac2:	d0f5      	beq.n	8005ab0 <WM_InvalidateWindowAndDescsEx+0x1e>
 8005ac4:	4620      	mov	r0, r4
 8005ac6:	f005 fee5 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005aca:	4630      	mov	r0, r6
 8005acc:	a902      	add	r1, sp, #8
 8005ace:	462a      	mov	r2, r5
 8005ad0:	f7ff ff8c 	bl	80059ec <_Invalidate1Abs>
 8005ad4:	4630      	mov	r0, r6
 8005ad6:	f7ff f824 	bl	8004b22 <WM_GetFirstChild>
 8005ada:	4604      	mov	r4, r0
 8005adc:	b14c      	cbz	r4, 8005af2 <WM_InvalidateWindowAndDescsEx+0x60>
 8005ade:	4620      	mov	r0, r4
 8005ae0:	a902      	add	r1, sp, #8
 8005ae2:	462a      	mov	r2, r5
 8005ae4:	f7ff ffd5 	bl	8005a92 <WM_InvalidateWindowAndDescsEx>
 8005ae8:	4620      	mov	r0, r4
 8005aea:	f005 febb 	bl	800b864 <GUI_ALLOC_h2p>
 8005aee:	6a04      	ldr	r4, [r0, #32]
 8005af0:	e7f4      	b.n	8005adc <WM_InvalidateWindowAndDescsEx+0x4a>
 8005af2:	b005      	add	sp, #20
 8005af4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005af6 <WM__InvalidateRect>:
 8005af6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005afa:	4680      	mov	r8, r0
 8005afc:	4617      	mov	r7, r2
 8005afe:	461d      	mov	r5, r3
 8005b00:	460c      	mov	r4, r1
 8005b02:	2900      	cmp	r1, #0
 8005b04:	d030      	beq.n	8005b68 <WM__InvalidateRect+0x72>
 8005b06:	4608      	mov	r0, r1
 8005b08:	f005 feb6 	bl	800b878 <GUI_ALLOC_LockH>
 8005b0c:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005b0e:	9001      	str	r0, [sp, #4]
 8005b10:	07b3      	lsls	r3, r6, #30
 8005b12:	4602      	mov	r2, r0
 8005b14:	d525      	bpl.n	8005b62 <WM__InvalidateRect+0x6c>
 8005b16:	a802      	add	r0, sp, #8
 8005b18:	4641      	mov	r1, r8
 8005b1a:	f003 fb78 	bl	800920e <GUI__IntersectRects>
 8005b1e:	b300      	cbz	r0, 8005b62 <WM__InvalidateRect+0x6c>
 8005b20:	f640 0301 	movw	r3, #2049	; 0x801
 8005b24:	4033      	ands	r3, r6
 8005b26:	2b01      	cmp	r3, #1
 8005b28:	d107      	bne.n	8005b3a <WM__InvalidateRect+0x44>
 8005b2a:	9b01      	ldr	r3, [sp, #4]
 8005b2c:	a802      	add	r0, sp, #8
 8005b2e:	6999      	ldr	r1, [r3, #24]
 8005b30:	6a1a      	ldr	r2, [r3, #32]
 8005b32:	462b      	mov	r3, r5
 8005b34:	f7ff ffdf 	bl	8005af6 <WM__InvalidateRect>
 8005b38:	e004      	b.n	8005b44 <WM__InvalidateRect+0x4e>
 8005b3a:	4620      	mov	r0, r4
 8005b3c:	a902      	add	r1, sp, #8
 8005b3e:	462a      	mov	r2, r5
 8005b40:	f7ff ff54 	bl	80059ec <_Invalidate1Abs>
 8005b44:	9b01      	ldr	r3, [sp, #4]
 8005b46:	69dc      	ldr	r4, [r3, #28]
 8005b48:	b15c      	cbz	r4, 8005b62 <WM__InvalidateRect+0x6c>
 8005b4a:	42bc      	cmp	r4, r7
 8005b4c:	d009      	beq.n	8005b62 <WM__InvalidateRect+0x6c>
 8005b4e:	4620      	mov	r0, r4
 8005b50:	a902      	add	r1, sp, #8
 8005b52:	462a      	mov	r2, r5
 8005b54:	f7ff ff9d 	bl	8005a92 <WM_InvalidateWindowAndDescsEx>
 8005b58:	4620      	mov	r0, r4
 8005b5a:	f005 fe83 	bl	800b864 <GUI_ALLOC_h2p>
 8005b5e:	6a04      	ldr	r4, [r0, #32]
 8005b60:	e7f2      	b.n	8005b48 <WM__InvalidateRect+0x52>
 8005b62:	a801      	add	r0, sp, #4
 8005b64:	f005 fe96 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005b68:	b004      	add	sp, #16
 8005b6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005b6e <WM__InvalidateParent>:
 8005b6e:	b570      	push	{r4, r5, r6, lr}
 8005b70:	4605      	mov	r5, r0
 8005b72:	4608      	mov	r0, r1
 8005b74:	460c      	mov	r4, r1
 8005b76:	4616      	mov	r6, r2
 8005b78:	f005 fe74 	bl	800b864 <GUI_ALLOC_h2p>
 8005b7c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005b7e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8005b82:	4628      	mov	r0, r5
 8005b84:	4621      	mov	r1, r4
 8005b86:	4632      	mov	r2, r6
 8005b88:	bf0c      	ite	eq
 8005b8a:	2320      	moveq	r3, #32
 8005b8c:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 8005b90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005b94:	f7ff bfaf 	b.w	8005af6 <WM__InvalidateRect>

08005b98 <WM__InvalidateRectEx>:
 8005b98:	2320      	movs	r3, #32
 8005b9a:	f7ff bfac 	b.w	8005af6 <WM__InvalidateRect>

08005b9e <WM__DetachWindow>:
 8005b9e:	b513      	push	{r0, r1, r4, lr}
 8005ba0:	4604      	mov	r4, r0
 8005ba2:	f005 fe69 	bl	800b878 <GUI_ALLOC_LockH>
 8005ba6:	6981      	ldr	r1, [r0, #24]
 8005ba8:	9001      	str	r0, [sp, #4]
 8005baa:	b141      	cbz	r1, 8005bbe <WM__DetachWindow+0x20>
 8005bac:	6a02      	ldr	r2, [r0, #32]
 8005bae:	f7ff fff3 	bl	8005b98 <WM__InvalidateRectEx>
 8005bb2:	4620      	mov	r0, r4
 8005bb4:	f7ff fe30 	bl	8005818 <WM__RemoveWindowFromList>
 8005bb8:	9b01      	ldr	r3, [sp, #4]
 8005bba:	2200      	movs	r2, #0
 8005bbc:	619a      	str	r2, [r3, #24]
 8005bbe:	a801      	add	r0, sp, #4
 8005bc0:	f005 fe68 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005bc4:	b002      	add	sp, #8
 8005bc6:	bd10      	pop	{r4, pc}

08005bc8 <WM_InvalidateRect>:
 8005bc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005bca:	460f      	mov	r7, r1
 8005bcc:	b087      	sub	sp, #28
 8005bce:	4605      	mov	r5, r0
 8005bd0:	2800      	cmp	r0, #0
 8005bd2:	d033      	beq.n	8005c3c <WM_InvalidateRect+0x74>
 8005bd4:	f005 fe50 	bl	800b878 <GUI_ALLOC_LockH>
 8005bd8:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005bda:	9001      	str	r0, [sp, #4]
 8005bdc:	07b2      	lsls	r2, r6, #30
 8005bde:	d52a      	bpl.n	8005c36 <WM_InvalidateRect+0x6e>
 8005be0:	c803      	ldmia	r0, {r0, r1}
 8005be2:	ac04      	add	r4, sp, #16
 8005be4:	03f3      	lsls	r3, r6, #15
 8005be6:	e884 0003 	stmia.w	r4, {r0, r1}
 8005bea:	d502      	bpl.n	8005bf2 <WM_InvalidateRect+0x2a>
 8005bec:	4628      	mov	r0, r5
 8005bee:	f7ff fe95 	bl	800591c <WM__InvalidateDrawAndDescs>
 8005bf2:	b15f      	cbz	r7, 8005c0c <WM_InvalidateRect+0x44>
 8005bf4:	6838      	ldr	r0, [r7, #0]
 8005bf6:	6879      	ldr	r1, [r7, #4]
 8005bf8:	ab02      	add	r3, sp, #8
 8005bfa:	c303      	stmia	r3!, {r0, r1}
 8005bfc:	9801      	ldr	r0, [sp, #4]
 8005bfe:	a902      	add	r1, sp, #8
 8005c00:	f7ff fe28 	bl	8005854 <WM__Client2Screen>
 8005c04:	4620      	mov	r0, r4
 8005c06:	a902      	add	r1, sp, #8
 8005c08:	f003 fae3 	bl	80091d2 <GUI__IntersectRect>
 8005c0c:	4620      	mov	r0, r4
 8005c0e:	4629      	mov	r1, r5
 8005c10:	f7ff fd82 	bl	8005718 <WM__ClipAtParentBorders>
 8005c14:	b178      	cbz	r0, 8005c36 <WM_InvalidateRect+0x6e>
 8005c16:	f640 0301 	movw	r3, #2049	; 0x801
 8005c1a:	4033      	ands	r3, r6
 8005c1c:	2b01      	cmp	r3, #1
 8005c1e:	d106      	bne.n	8005c2e <WM_InvalidateRect+0x66>
 8005c20:	9b01      	ldr	r3, [sp, #4]
 8005c22:	4620      	mov	r0, r4
 8005c24:	6999      	ldr	r1, [r3, #24]
 8005c26:	6a1a      	ldr	r2, [r3, #32]
 8005c28:	f7ff ffb6 	bl	8005b98 <WM__InvalidateRectEx>
 8005c2c:	e003      	b.n	8005c36 <WM_InvalidateRect+0x6e>
 8005c2e:	4628      	mov	r0, r5
 8005c30:	4621      	mov	r1, r4
 8005c32:	f7ff ff2b 	bl	8005a8c <WM__Invalidate1Abs>
 8005c36:	a801      	add	r0, sp, #4
 8005c38:	f005 fe2c 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005c3c:	b007      	add	sp, #28
 8005c3e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005c40 <WM_InvalidateWindow>:
 8005c40:	2100      	movs	r1, #0
 8005c42:	f7ff bfc1 	b.w	8005bc8 <WM_InvalidateRect>

08005c46 <WM__SelectTopLevelLayer>:
 8005c46:	b508      	push	{r3, lr}
 8005c48:	f7ff febc 	bl	80059c4 <WM__GetTopLevelLayer>
 8005c4c:	2800      	cmp	r0, #0
 8005c4e:	db03      	blt.n	8005c58 <WM__SelectTopLevelLayer+0x12>
 8005c50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005c54:	f003 bffe 	b.w	8009c54 <GUI_SelectLayer>
 8005c58:	bd08      	pop	{r3, pc}
	...

08005c5c <WM_SelectWindow>:
 8005c5c:	4a0d      	ldr	r2, [pc, #52]	; (8005c94 <WM_SelectWindow+0x38>)
 8005c5e:	6813      	ldr	r3, [r2, #0]
 8005c60:	b570      	push	{r4, r5, r6, lr}
 8005c62:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 8005c64:	4604      	mov	r4, r0
 8005c66:	4616      	mov	r6, r2
 8005c68:	b908      	cbnz	r0, 8005c6e <WM_SelectWindow+0x12>
 8005c6a:	4a0b      	ldr	r2, [pc, #44]	; (8005c98 <WM_SelectWindow+0x3c>)
 8005c6c:	6814      	ldr	r4, [r2, #0]
 8005c6e:	649c      	str	r4, [r3, #72]	; 0x48
 8005c70:	4620      	mov	r0, r4
 8005c72:	f7ff ffe8 	bl	8005c46 <WM__SelectTopLevelLayer>
 8005c76:	f003 f9bf 	bl	8008ff8 <LCD_SetClipRectMax>
 8005c7a:	4620      	mov	r0, r4
 8005c7c:	f005 fdf2 	bl	800b864 <GUI_ALLOC_h2p>
 8005c80:	6833      	ldr	r3, [r6, #0]
 8005c82:	f9b0 1000 	ldrsh.w	r1, [r0]
 8005c86:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8005c8a:	64d9      	str	r1, [r3, #76]	; 0x4c
 8005c8c:	651a      	str	r2, [r3, #80]	; 0x50
 8005c8e:	4628      	mov	r0, r5
 8005c90:	bd70      	pop	{r4, r5, r6, pc}
 8005c92:	bf00      	nop
 8005c94:	200000b8 	.word	0x200000b8
 8005c98:	20002ca0 	.word	0x20002ca0

08005c9c <WM_CreateWindowAsChild>:
 8005c9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ca0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005ca2:	469b      	mov	fp, r3
 8005ca4:	4b4b      	ldr	r3, [pc, #300]	; (8005dd4 <WM_CreateWindowAsChild+0x138>)
 8005ca6:	4607      	mov	r7, r0
 8005ca8:	4688      	mov	r8, r1
 8005caa:	4692      	mov	sl, r2
 8005cac:	681e      	ldr	r6, [r3, #0]
 8005cae:	bb65      	cbnz	r5, 8005d0a <WM_CreateWindowAsChild+0x6e>
 8005cb0:	4b49      	ldr	r3, [pc, #292]	; (8005dd8 <WM_CreateWindowAsChild+0x13c>)
 8005cb2:	881b      	ldrh	r3, [r3, #0]
 8005cb4:	b363      	cbz	r3, 8005d10 <WM_CreateWindowAsChild+0x74>
 8005cb6:	4b49      	ldr	r3, [pc, #292]	; (8005ddc <WM_CreateWindowAsChild+0x140>)
 8005cb8:	681b      	ldr	r3, [r3, #0]
 8005cba:	7c5a      	ldrb	r2, [r3, #17]
 8005cbc:	4b48      	ldr	r3, [pc, #288]	; (8005de0 <WM_CreateWindowAsChild+0x144>)
 8005cbe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005cc2:	1c5a      	adds	r2, r3, #1
 8005cc4:	d024      	beq.n	8005d10 <WM_CreateWindowAsChild+0x74>
 8005cc6:	b31b      	cbz	r3, 8005d10 <WM_CreateWindowAsChild+0x74>
 8005cc8:	461d      	mov	r5, r3
 8005cca:	4628      	mov	r0, r5
 8005ccc:	f005 fdd4 	bl	800b878 <GUI_ALLOC_LockH>
 8005cd0:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005cd4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005cd8:	9001      	str	r0, [sp, #4]
 8005cda:	4417      	add	r7, r2
 8005cdc:	4498      	add	r8, r3
 8005cde:	f1ba 0f00 	cmp.w	sl, #0
 8005ce2:	d105      	bne.n	8005cf0 <WM_CreateWindowAsChild+0x54>
 8005ce4:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 8005ce8:	ebc2 0a0a 	rsb	sl, r2, sl
 8005cec:	f10a 0a01 	add.w	sl, sl, #1
 8005cf0:	f1bb 0f00 	cmp.w	fp, #0
 8005cf4:	d105      	bne.n	8005d02 <WM_CreateWindowAsChild+0x66>
 8005cf6:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 8005cfa:	ebc3 0b0b 	rsb	fp, r3, fp
 8005cfe:	f10b 0b01 	add.w	fp, fp, #1
 8005d02:	a801      	add	r0, sp, #4
 8005d04:	f005 fdc6 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005d08:	e002      	b.n	8005d10 <WM_CreateWindowAsChild+0x74>
 8005d0a:	1c6b      	adds	r3, r5, #1
 8005d0c:	d1dd      	bne.n	8005cca <WM_CreateWindowAsChild+0x2e>
 8005d0e:	2500      	movs	r5, #0
 8005d10:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005d12:	302c      	adds	r0, #44	; 0x2c
 8005d14:	f005 ffaa 	bl	800bc6c <GUI_ALLOC_AllocZero>
 8005d18:	4604      	mov	r4, r0
 8005d1a:	2800      	cmp	r0, #0
 8005d1c:	d056      	beq.n	8005dcc <WM_CreateWindowAsChild+0x130>
 8005d1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005d20:	431e      	orrs	r6, r3
 8005d22:	4b2d      	ldr	r3, [pc, #180]	; (8005dd8 <WM_CreateWindowAsChild+0x13c>)
 8005d24:	881a      	ldrh	r2, [r3, #0]
 8005d26:	3201      	adds	r2, #1
 8005d28:	801a      	strh	r2, [r3, #0]
 8005d2a:	f005 fda5 	bl	800b878 <GUI_ALLOC_LockH>
 8005d2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005d30:	6103      	str	r3, [r0, #16]
 8005d32:	f10d 0908 	add.w	r9, sp, #8
 8005d36:	4b2b      	ldr	r3, [pc, #172]	; (8005de4 <WM_CreateWindowAsChild+0x148>)
 8005d38:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005d3a:	f849 0d08 	str.w	r0, [r9, #-8]!
 8005d3e:	4033      	ands	r3, r6
 8005d40:	8007      	strh	r7, [r0, #0]
 8005d42:	f8a0 8002 	strh.w	r8, [r0, #2]
 8005d46:	4457      	add	r7, sl
 8005d48:	44d8      	add	r8, fp
 8005d4a:	4313      	orrs	r3, r2
 8005d4c:	3f01      	subs	r7, #1
 8005d4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8005d52:	6283      	str	r3, [r0, #40]	; 0x28
 8005d54:	8087      	strh	r7, [r0, #4]
 8005d56:	f8a0 8006 	strh.w	r8, [r0, #6]
 8005d5a:	4668      	mov	r0, sp
 8005d5c:	f005 fd9a 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005d60:	4b21      	ldr	r3, [pc, #132]	; (8005de8 <WM_CreateWindowAsChild+0x14c>)
 8005d62:	6818      	ldr	r0, [r3, #0]
 8005d64:	b148      	cbz	r0, 8005d7a <WM_CreateWindowAsChild+0xde>
 8005d66:	f005 fd7d 	bl	800b864 <GUI_ALLOC_h2p>
 8005d6a:	4607      	mov	r7, r0
 8005d6c:	4620      	mov	r0, r4
 8005d6e:	f005 fd79 	bl	800b864 <GUI_ALLOC_h2p>
 8005d72:	697b      	ldr	r3, [r7, #20]
 8005d74:	6143      	str	r3, [r0, #20]
 8005d76:	617c      	str	r4, [r7, #20]
 8005d78:	e000      	b.n	8005d7c <WM_CreateWindowAsChild+0xe0>
 8005d7a:	601c      	str	r4, [r3, #0]
 8005d7c:	4629      	mov	r1, r5
 8005d7e:	4620      	mov	r0, r4
 8005d80:	f7ff fcf8 	bl	8005774 <WM__InsertWindowIntoList>
 8005d84:	06b5      	lsls	r5, r6, #26
 8005d86:	d502      	bpl.n	8005d8e <WM_CreateWindowAsChild+0xf2>
 8005d88:	4620      	mov	r0, r4
 8005d8a:	f7ff ff67 	bl	8005c5c <WM_SelectWindow>
 8005d8e:	07f0      	lsls	r0, r6, #31
 8005d90:	d503      	bpl.n	8005d9a <WM_CreateWindowAsChild+0xfe>
 8005d92:	4b16      	ldr	r3, [pc, #88]	; (8005dec <WM_CreateWindowAsChild+0x150>)
 8005d94:	681a      	ldr	r2, [r3, #0]
 8005d96:	3201      	adds	r2, #1
 8005d98:	601a      	str	r2, [r3, #0]
 8005d9a:	0671      	lsls	r1, r6, #25
 8005d9c:	d502      	bpl.n	8005da4 <WM_CreateWindowAsChild+0x108>
 8005d9e:	4620      	mov	r0, r4
 8005da0:	f7fe ff68 	bl	8004c74 <WM_BringToBottom>
 8005da4:	07b2      	lsls	r2, r6, #30
 8005da6:	d50d      	bpl.n	8005dc4 <WM_CreateWindowAsChild+0x128>
 8005da8:	4620      	mov	r0, r4
 8005daa:	f005 fd65 	bl	800b878 <GUI_ALLOC_LockH>
 8005dae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005db0:	9000      	str	r0, [sp, #0]
 8005db2:	f043 0302 	orr.w	r3, r3, #2
 8005db6:	6283      	str	r3, [r0, #40]	; 0x28
 8005db8:	4668      	mov	r0, sp
 8005dba:	f005 fd6b 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005dbe:	4620      	mov	r0, r4
 8005dc0:	f7ff ff3e 	bl	8005c40 <WM_InvalidateWindow>
 8005dc4:	4620      	mov	r0, r4
 8005dc6:	2101      	movs	r1, #1
 8005dc8:	f7ff fde5 	bl	8005996 <WM__SendMsgNoData>
 8005dcc:	4620      	mov	r0, r4
 8005dce:	b003      	add	sp, #12
 8005dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005dd4:	20002cb4 	.word	0x20002cb4
 8005dd8:	20002c7c 	.word	0x20002c7c
 8005ddc:	200000b8 	.word	0x200000b8
 8005de0:	20002c84 	.word	0x20002c84
 8005de4:	003f3f9f 	.word	0x003f3f9f
 8005de8:	20002ca0 	.word	0x20002ca0
 8005dec:	20002cd4 	.word	0x20002cd4

08005df0 <WM_DeleteWindow>:
 8005df0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005df2:	4604      	mov	r4, r0
 8005df4:	2800      	cmp	r0, #0
 8005df6:	d06e      	beq.n	8005ed6 <WM_DeleteWindow+0xe6>
 8005df8:	f7ff fd80 	bl	80058fc <WM__IsWindow>
 8005dfc:	2800      	cmp	r0, #0
 8005dfe:	d06a      	beq.n	8005ed6 <WM_DeleteWindow+0xe6>
 8005e00:	4620      	mov	r0, r4
 8005e02:	f7ff fddf 	bl	80059c4 <WM__GetTopLevelLayer>
 8005e06:	210b      	movs	r1, #11
 8005e08:	4605      	mov	r5, r0
 8005e0a:	4620      	mov	r0, r4
 8005e0c:	f7ff fdc3 	bl	8005996 <WM__SendMsgNoData>
 8005e10:	4620      	mov	r0, r4
 8005e12:	f007 f9a3 	bl	800d15c <WM__DeleteAssocTimer>
 8005e16:	4620      	mov	r0, r4
 8005e18:	f005 fd2e 	bl	800b878 <GUI_ALLOC_LockH>
 8005e1c:	9001      	str	r0, [sp, #4]
 8005e1e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005e20:	b108      	cbz	r0, 8005e26 <WM_DeleteWindow+0x36>
 8005e22:	f001 fb93 	bl	800754c <GUI_MEMDEV_Delete>
 8005e26:	4b2d      	ldr	r3, [pc, #180]	; (8005edc <WM_DeleteWindow+0xec>)
 8005e28:	4a2d      	ldr	r2, [pc, #180]	; (8005ee0 <WM_DeleteWindow+0xf0>)
 8005e2a:	2100      	movs	r1, #0
 8005e2c:	6019      	str	r1, [r3, #0]
 8005e2e:	4b2d      	ldr	r3, [pc, #180]	; (8005ee4 <WM_DeleteWindow+0xf4>)
 8005e30:	681b      	ldr	r3, [r3, #0]
 8005e32:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8005e36:	42a0      	cmp	r0, r4
 8005e38:	bf08      	it	eq
 8005e3a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005e3e:	4a2a      	ldr	r2, [pc, #168]	; (8005ee8 <WM_DeleteWindow+0xf8>)
 8005e40:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8005e44:	42a1      	cmp	r1, r4
 8005e46:	bf04      	itt	eq
 8005e48:	2100      	moveq	r1, #0
 8005e4a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005e4e:	4b27      	ldr	r3, [pc, #156]	; (8005eec <WM_DeleteWindow+0xfc>)
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	b12b      	cbz	r3, 8005e60 <WM_DeleteWindow+0x70>
 8005e54:	685a      	ldr	r2, [r3, #4]
 8005e56:	42a2      	cmp	r2, r4
 8005e58:	bf04      	itt	eq
 8005e5a:	2200      	moveq	r2, #0
 8005e5c:	605a      	streq	r2, [r3, #4]
 8005e5e:	e7f7      	b.n	8005e50 <WM_DeleteWindow+0x60>
 8005e60:	4620      	mov	r0, r4
 8005e62:	2107      	movs	r1, #7
 8005e64:	f7ff f8a3 	bl	8004fae <WM_NotifyParent>
 8005e68:	9e01      	ldr	r6, [sp, #4]
 8005e6a:	69f0      	ldr	r0, [r6, #28]
 8005e6c:	f7ff ffc0 	bl	8005df0 <WM_DeleteWindow>
 8005e70:	69f3      	ldr	r3, [r6, #28]
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d1f9      	bne.n	8005e6a <WM_DeleteWindow+0x7a>
 8005e76:	4620      	mov	r0, r4
 8005e78:	f7ff fe91 	bl	8005b9e <WM__DetachWindow>
 8005e7c:	4b1c      	ldr	r3, [pc, #112]	; (8005ef0 <WM_DeleteWindow+0x100>)
 8005e7e:	6818      	ldr	r0, [r3, #0]
 8005e80:	b150      	cbz	r0, 8005e98 <WM_DeleteWindow+0xa8>
 8005e82:	f005 fcef 	bl	800b864 <GUI_ALLOC_h2p>
 8005e86:	4606      	mov	r6, r0
 8005e88:	6940      	ldr	r0, [r0, #20]
 8005e8a:	42a0      	cmp	r0, r4
 8005e8c:	d1f8      	bne.n	8005e80 <WM_DeleteWindow+0x90>
 8005e8e:	4620      	mov	r0, r4
 8005e90:	f005 fce8 	bl	800b864 <GUI_ALLOC_h2p>
 8005e94:	6943      	ldr	r3, [r0, #20]
 8005e96:	6173      	str	r3, [r6, #20]
 8005e98:	9b01      	ldr	r3, [sp, #4]
 8005e9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005e9c:	07da      	lsls	r2, r3, #31
 8005e9e:	d503      	bpl.n	8005ea8 <WM_DeleteWindow+0xb8>
 8005ea0:	4a14      	ldr	r2, [pc, #80]	; (8005ef4 <WM_DeleteWindow+0x104>)
 8005ea2:	6811      	ldr	r1, [r2, #0]
 8005ea4:	3901      	subs	r1, #1
 8005ea6:	6011      	str	r1, [r2, #0]
 8005ea8:	069b      	lsls	r3, r3, #26
 8005eaa:	d503      	bpl.n	8005eb4 <WM_DeleteWindow+0xc4>
 8005eac:	4b12      	ldr	r3, [pc, #72]	; (8005ef8 <WM_DeleteWindow+0x108>)
 8005eae:	881a      	ldrh	r2, [r3, #0]
 8005eb0:	3a01      	subs	r2, #1
 8005eb2:	801a      	strh	r2, [r3, #0]
 8005eb4:	a801      	add	r0, sp, #4
 8005eb6:	f005 fced 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005eba:	4b10      	ldr	r3, [pc, #64]	; (8005efc <WM_DeleteWindow+0x10c>)
 8005ebc:	881a      	ldrh	r2, [r3, #0]
 8005ebe:	4620      	mov	r0, r4
 8005ec0:	3a01      	subs	r2, #1
 8005ec2:	801a      	strh	r2, [r3, #0]
 8005ec4:	f005 fd12 	bl	800b8ec <GUI_ALLOC_Free>
 8005ec8:	2d00      	cmp	r5, #0
 8005eca:	db04      	blt.n	8005ed6 <WM_DeleteWindow+0xe6>
 8005ecc:	4b0c      	ldr	r3, [pc, #48]	; (8005f00 <WM_DeleteWindow+0x110>)
 8005ece:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005ed2:	f7ff fec3 	bl	8005c5c <WM_SelectWindow>
 8005ed6:	b002      	add	sp, #8
 8005ed8:	bd70      	pop	{r4, r5, r6, pc}
 8005eda:	bf00      	nop
 8005edc:	20002af0 	.word	0x20002af0
 8005ee0:	20002c94 	.word	0x20002c94
 8005ee4:	20002ca4 	.word	0x20002ca4
 8005ee8:	20002cc8 	.word	0x20002cc8
 8005eec:	20002cc0 	.word	0x20002cc0
 8005ef0:	20002ca0 	.word	0x20002ca0
 8005ef4:	20002cd4 	.word	0x20002cd4
 8005ef8:	20002c9c 	.word	0x20002c9c
 8005efc:	20002c7c 	.word	0x20002c7c
 8005f00:	20002c84 	.word	0x20002c84

08005f04 <_Exec1Input>:
 8005f04:	4b1b      	ldr	r3, [pc, #108]	; (8005f74 <_Exec1Input+0x70>)
 8005f06:	681a      	ldr	r2, [r3, #0]
 8005f08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005f0a:	461e      	mov	r6, r3
 8005f0c:	b1d2      	cbz	r2, 8005f44 <_Exec1Input+0x40>
 8005f0e:	4b1a      	ldr	r3, [pc, #104]	; (8005f78 <_Exec1Input+0x74>)
 8005f10:	681c      	ldr	r4, [r3, #0]
 8005f12:	b1b4      	cbz	r4, 8005f42 <_Exec1Input+0x3e>
 8005f14:	4620      	mov	r0, r4
 8005f16:	f005 fcaf 	bl	800b878 <GUI_ALLOC_LockH>
 8005f1a:	4603      	mov	r3, r0
 8005f1c:	a802      	add	r0, sp, #8
 8005f1e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005f20:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005f24:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8005f28:	695d      	ldr	r5, [r3, #20]
 8005f2a:	d006      	beq.n	8005f3a <_Exec1Input+0x36>
 8005f2c:	f005 fcb2 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005f30:	4620      	mov	r0, r4
 8005f32:	f7ff ff5d 	bl	8005df0 <WM_DeleteWindow>
 8005f36:	462c      	mov	r4, r5
 8005f38:	e7eb      	b.n	8005f12 <_Exec1Input+0xe>
 8005f3a:	462c      	mov	r4, r5
 8005f3c:	f005 fcaa 	bl	800b894 <GUI_ALLOC_UnlockH>
 8005f40:	e7e7      	b.n	8005f12 <_Exec1Input+0xe>
 8005f42:	6034      	str	r4, [r6, #0]
 8005f44:	4b0d      	ldr	r3, [pc, #52]	; (8005f7c <_Exec1Input+0x78>)
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	b103      	cbz	r3, 8005f4c <_Exec1Input+0x48>
 8005f4a:	4798      	blx	r3
 8005f4c:	4b0c      	ldr	r3, [pc, #48]	; (8005f80 <_Exec1Input+0x7c>)
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	b953      	cbnz	r3, 8005f68 <_Exec1Input+0x64>
 8005f52:	4b0c      	ldr	r3, [pc, #48]	; (8005f84 <_Exec1Input+0x80>)
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005f5a:	b148      	cbz	r0, 8005f70 <_Exec1Input+0x6c>
 8005f5c:	f003 fe98 	bl	8009c90 <GUI_PollKeyMsg>
 8005f60:	3000      	adds	r0, #0
 8005f62:	bf18      	it	ne
 8005f64:	2001      	movne	r0, #1
 8005f66:	e003      	b.n	8005f70 <_Exec1Input+0x6c>
 8005f68:	4798      	blx	r3
 8005f6a:	2800      	cmp	r0, #0
 8005f6c:	d0f1      	beq.n	8005f52 <_Exec1Input+0x4e>
 8005f6e:	2001      	movs	r0, #1
 8005f70:	b002      	add	sp, #8
 8005f72:	bd70      	pop	{r4, r5, r6, pc}
 8005f74:	20002ad4 	.word	0x20002ad4
 8005f78:	20002ca0 	.word	0x20002ca0
 8005f7c:	20002c8c 	.word	0x20002c8c
 8005f80:	20002d38 	.word	0x20002d38
 8005f84:	200000b8 	.word	0x200000b8

08005f88 <WM_GetActiveWindow>:
 8005f88:	4b01      	ldr	r3, [pc, #4]	; (8005f90 <WM_GetActiveWindow+0x8>)
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005f8e:	4770      	bx	lr
 8005f90:	200000b8 	.word	0x200000b8

08005f94 <WM__GetNextIVR>:
 8005f94:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005f98:	4f5d      	ldr	r7, [pc, #372]	; (8006110 <WM__GetNextIVR+0x17c>)
 8005f9a:	683b      	ldr	r3, [r7, #0]
 8005f9c:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005fa0:	2800      	cmp	r0, #0
 8005fa2:	f000 80b2 	beq.w	800610a <WM__GetNextIVR+0x176>
 8005fa6:	4b5b      	ldr	r3, [pc, #364]	; (8006114 <WM__GetNextIVR+0x180>)
 8005fa8:	695a      	ldr	r2, [r3, #20]
 8005faa:	2a01      	cmp	r2, #1
 8005fac:	461c      	mov	r4, r3
 8005fae:	dd03      	ble.n	8005fb8 <WM__GetNextIVR+0x24>
 8005fb0:	3a01      	subs	r2, #1
 8005fb2:	615a      	str	r2, [r3, #20]
 8005fb4:	2000      	movs	r0, #0
 8005fb6:	e0a8      	b.n	800610a <WM__GetNextIVR+0x176>
 8005fb8:	f104 0608 	add.w	r6, r4, #8
 8005fbc:	691b      	ldr	r3, [r3, #16]
 8005fbe:	e896 0003 	ldmia.w	r6, {r0, r1}
 8005fc2:	3301      	adds	r3, #1
 8005fc4:	ad02      	add	r5, sp, #8
 8005fc6:	6123      	str	r3, [r4, #16]
 8005fc8:	e885 0003 	stmia.w	r5, {r0, r1}
 8005fcc:	b923      	cbnz	r3, 8005fd8 <WM__GetNextIVR+0x44>
 8005fce:	8823      	ldrh	r3, [r4, #0]
 8005fd0:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005fd4:	8863      	ldrh	r3, [r4, #2]
 8005fd6:	e011      	b.n	8005ffc <WM__GetNextIVR+0x68>
 8005fd8:	89a3      	ldrh	r3, [r4, #12]
 8005fda:	8962      	ldrh	r2, [r4, #10]
 8005fdc:	f8ad 200a 	strh.w	r2, [sp, #10]
 8005fe0:	3301      	adds	r3, #1
 8005fe2:	b29b      	uxth	r3, r3
 8005fe4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8005fe8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005fec:	b21b      	sxth	r3, r3
 8005fee:	429a      	cmp	r2, r3
 8005ff0:	da06      	bge.n	8006000 <WM__GetNextIVR+0x6c>
 8005ff2:	8823      	ldrh	r3, [r4, #0]
 8005ff4:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005ff8:	89e3      	ldrh	r3, [r4, #14]
 8005ffa:	3301      	adds	r3, #1
 8005ffc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8006000:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8006004:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8006008:	f8df 8108 	ldr.w	r8, [pc, #264]	; 8006114 <WM__GetNextIVR+0x180>
 800600c:	429a      	cmp	r2, r3
 800600e:	dd04      	ble.n	800601a <WM__GetNextIVR+0x86>
 8006010:	6963      	ldr	r3, [r4, #20]
 8006012:	3b01      	subs	r3, #1
 8006014:	2000      	movs	r0, #0
 8006016:	6163      	str	r3, [r4, #20]
 8006018:	e077      	b.n	800610a <WM__GetNextIVR+0x176>
 800601a:	683b      	ldr	r3, [r7, #0]
 800601c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800601e:	f005 fc2b 	bl	800b878 <GUI_ALLOC_LockH>
 8006022:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8006026:	f9b8 3000 	ldrsh.w	r3, [r8]
 800602a:	9001      	str	r0, [sp, #4]
 800602c:	429a      	cmp	r2, r3
 800602e:	d11c      	bne.n	800606a <WM__GetNextIVR+0xd6>
 8006030:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8006034:	f8ad 300e 	strh.w	r3, [sp, #14]
 8006038:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800603c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006040:	4b33      	ldr	r3, [pc, #204]	; (8006110 <WM__GetNextIVR+0x17c>)
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006046:	b15a      	cbz	r2, 8006060 <WM__GetNextIVR+0xcc>
 8006048:	4610      	mov	r0, r2
 800604a:	f005 fc0b 	bl	800b864 <GUI_ALLOC_h2p>
 800604e:	4680      	mov	r8, r0
 8006050:	2200      	movs	r2, #0
 8006052:	6a00      	ldr	r0, [r0, #32]
 8006054:	4629      	mov	r1, r5
 8006056:	f7ff f973 	bl	8005340 <_Findy1>
 800605a:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800605e:	e7f2      	b.n	8006046 <WM__GetNextIVR+0xb2>
 8006060:	9b01      	ldr	r3, [sp, #4]
 8006062:	4629      	mov	r1, r5
 8006064:	69d8      	ldr	r0, [r3, #28]
 8006066:	f7ff f96b 	bl	8005340 <_Findy1>
 800606a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800606e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006072:	683b      	ldr	r3, [r7, #0]
 8006074:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006076:	b16a      	cbz	r2, 8006094 <WM__GetNextIVR+0x100>
 8006078:	4610      	mov	r0, r2
 800607a:	f005 fbf3 	bl	800b864 <GUI_ALLOC_h2p>
 800607e:	4629      	mov	r1, r5
 8006080:	4680      	mov	r8, r0
 8006082:	2200      	movs	r2, #0
 8006084:	6a00      	ldr	r0, [r0, #32]
 8006086:	f7ff f9b1 	bl	80053ec <_Findx0>
 800608a:	2800      	cmp	r0, #0
 800608c:	d1ed      	bne.n	800606a <WM__GetNextIVR+0xd6>
 800608e:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8006092:	e7f0      	b.n	8006076 <WM__GetNextIVR+0xe2>
 8006094:	9b01      	ldr	r3, [sp, #4]
 8006096:	4629      	mov	r1, r5
 8006098:	69d8      	ldr	r0, [r3, #28]
 800609a:	f7ff f9a7 	bl	80053ec <_Findx0>
 800609e:	2800      	cmp	r0, #0
 80060a0:	d1e3      	bne.n	800606a <WM__GetNextIVR+0xd6>
 80060a2:	88a3      	ldrh	r3, [r4, #4]
 80060a4:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80060a8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80060ac:	b21b      	sxth	r3, r3
 80060ae:	429a      	cmp	r2, r3
 80060b0:	dd07      	ble.n	80060c2 <WM__GetNextIVR+0x12e>
 80060b2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80060b6:	e886 0003 	stmia.w	r6, {r0, r1}
 80060ba:	a801      	add	r0, sp, #4
 80060bc:	f005 fbea 	bl	800b894 <GUI_ALLOC_UnlockH>
 80060c0:	e797      	b.n	8005ff2 <WM__GetNextIVR+0x5e>
 80060c2:	683b      	ldr	r3, [r7, #0]
 80060c4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80060c6:	b152      	cbz	r2, 80060de <WM__GetNextIVR+0x14a>
 80060c8:	4610      	mov	r0, r2
 80060ca:	f005 fbcb 	bl	800b864 <GUI_ALLOC_h2p>
 80060ce:	4607      	mov	r7, r0
 80060d0:	2200      	movs	r2, #0
 80060d2:	6a00      	ldr	r0, [r0, #32]
 80060d4:	4629      	mov	r1, r5
 80060d6:	f7ff f9cd 	bl	8005474 <_Findx1>
 80060da:	69ba      	ldr	r2, [r7, #24]
 80060dc:	e7f3      	b.n	80060c6 <WM__GetNextIVR+0x132>
 80060de:	af04      	add	r7, sp, #16
 80060e0:	4629      	mov	r1, r5
 80060e2:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 80060e6:	69d8      	ldr	r0, [r3, #28]
 80060e8:	f7ff f9c4 	bl	8005474 <_Findx1>
 80060ec:	4638      	mov	r0, r7
 80060ee:	f005 fbd1 	bl	800b894 <GUI_ALLOC_UnlockH>
 80060f2:	6923      	ldr	r3, [r4, #16]
 80060f4:	f644 6220 	movw	r2, #20000	; 0x4e20
 80060f8:	4293      	cmp	r3, r2
 80060fa:	dc89      	bgt.n	8006010 <WM__GetNextIVR+0x7c>
 80060fc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8006100:	e886 0003 	stmia.w	r6, {r0, r1}
 8006104:	f7ff fbd6 	bl	80058b4 <WM__ActivateClipRect>
 8006108:	2001      	movs	r0, #1
 800610a:	b004      	add	sp, #16
 800610c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006110:	200000b8 	.word	0x200000b8
 8006114:	20002ad8 	.word	0x20002ad8

08006118 <WM__InitIVRSearch>:
 8006118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800611c:	4f39      	ldr	r7, [pc, #228]	; (8006204 <WM__InitIVRSearch+0xec>)
 800611e:	683b      	ldr	r3, [r7, #0]
 8006120:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8006124:	b086      	sub	sp, #24
 8006126:	4606      	mov	r6, r0
 8006128:	b912      	cbnz	r2, 8006130 <WM__InitIVRSearch+0x18>
 800612a:	f7ff fbc3 	bl	80058b4 <WM__ActivateClipRect>
 800612e:	e064      	b.n	80061fa <WM__InitIVRSearch+0xe2>
 8006130:	4d35      	ldr	r5, [pc, #212]	; (8006208 <WM__InitIVRSearch+0xf0>)
 8006132:	696a      	ldr	r2, [r5, #20]
 8006134:	3201      	adds	r2, #1
 8006136:	2a01      	cmp	r2, #1
 8006138:	616a      	str	r2, [r5, #20]
 800613a:	462c      	mov	r4, r5
 800613c:	dc5d      	bgt.n	80061fa <WM__InitIVRSearch+0xe2>
 800613e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006140:	f005 fb9a 	bl	800b878 <GUI_ALLOC_LockH>
 8006144:	f04f 32ff 	mov.w	r2, #4294967295
 8006148:	612a      	str	r2, [r5, #16]
 800614a:	4a30      	ldr	r2, [pc, #192]	; (800620c <WM__InitIVRSearch+0xf4>)
 800614c:	9000      	str	r0, [sp, #0]
 800614e:	7812      	ldrb	r2, [r2, #0]
 8006150:	b12a      	cbz	r2, 800615e <WM__InitIVRSearch+0x46>
 8006152:	f100 0308 	add.w	r3, r0, #8
 8006156:	aa02      	add	r2, sp, #8
 8006158:	e893 0003 	ldmia.w	r3, {r0, r1}
 800615c:	e005      	b.n	800616a <WM__InitIVRSearch+0x52>
 800615e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006160:	f012 0802 	ands.w	r8, r2, #2
 8006164:	d00a      	beq.n	800617c <WM__InitIVRSearch+0x64>
 8006166:	c803      	ldmia	r0, {r0, r1}
 8006168:	aa02      	add	r2, sp, #8
 800616a:	e882 0003 	stmia.w	r2, {r0, r1}
 800616e:	ad02      	add	r5, sp, #8
 8006170:	b166      	cbz	r6, 800618c <WM__InitIVRSearch+0x74>
 8006172:	4628      	mov	r0, r5
 8006174:	4631      	mov	r1, r6
 8006176:	f003 f82c 	bl	80091d2 <GUI__IntersectRect>
 800617a:	e007      	b.n	800618c <WM__InitIVRSearch+0x74>
 800617c:	696b      	ldr	r3, [r5, #20]
 800617e:	4668      	mov	r0, sp
 8006180:	3b01      	subs	r3, #1
 8006182:	616b      	str	r3, [r5, #20]
 8006184:	f005 fb86 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006188:	4640      	mov	r0, r8
 800618a:	e037      	b.n	80061fc <WM__InitIVRSearch+0xe4>
 800618c:	683b      	ldr	r3, [r7, #0]
 800618e:	4e20      	ldr	r6, [pc, #128]	; (8006210 <WM__InitIVRSearch+0xf8>)
 8006190:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006192:	b1c2      	cbz	r2, 80061c6 <WM__InitIVRSearch+0xae>
 8006194:	9b00      	ldr	r3, [sp, #0]
 8006196:	6810      	ldr	r0, [r2, #0]
 8006198:	6851      	ldr	r1, [r2, #4]
 800619a:	9301      	str	r3, [sp, #4]
 800619c:	ab04      	add	r3, sp, #16
 800619e:	c303      	stmia	r3!, {r0, r1}
 80061a0:	6833      	ldr	r3, [r6, #0]
 80061a2:	b133      	cbz	r3, 80061b2 <WM__InitIVRSearch+0x9a>
 80061a4:	a801      	add	r0, sp, #4
 80061a6:	f005 fb75 	bl	800b894 <GUI_ALLOC_UnlockH>
 80061aa:	6830      	ldr	r0, [r6, #0]
 80061ac:	f005 fb64 	bl	800b878 <GUI_ALLOC_LockH>
 80061b0:	9001      	str	r0, [sp, #4]
 80061b2:	9801      	ldr	r0, [sp, #4]
 80061b4:	a904      	add	r1, sp, #16
 80061b6:	f7ff fb4d 	bl	8005854 <WM__Client2Screen>
 80061ba:	4628      	mov	r0, r5
 80061bc:	a904      	add	r1, sp, #16
 80061be:	f003 f808 	bl	80091d2 <GUI__IntersectRect>
 80061c2:	a801      	add	r0, sp, #4
 80061c4:	e000      	b.n	80061c8 <WM__InitIVRSearch+0xb0>
 80061c6:	4668      	mov	r0, sp
 80061c8:	f005 fb64 	bl	800b894 <GUI_ALLOC_UnlockH>
 80061cc:	6831      	ldr	r1, [r6, #0]
 80061ce:	b119      	cbz	r1, 80061d8 <WM__InitIVRSearch+0xc0>
 80061d0:	4628      	mov	r0, r5
 80061d2:	f7ff faa1 	bl	8005718 <WM__ClipAtParentBorders>
 80061d6:	b128      	cbz	r0, 80061e4 <WM__InitIVRSearch+0xcc>
 80061d8:	683b      	ldr	r3, [r7, #0]
 80061da:	4628      	mov	r0, r5
 80061dc:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80061de:	f7ff fa9b 	bl	8005718 <WM__ClipAtParentBorders>
 80061e2:	b918      	cbnz	r0, 80061ec <WM__InitIVRSearch+0xd4>
 80061e4:	6963      	ldr	r3, [r4, #20]
 80061e6:	3b01      	subs	r3, #1
 80061e8:	6163      	str	r3, [r4, #20]
 80061ea:	e007      	b.n	80061fc <WM__InitIVRSearch+0xe4>
 80061ec:	e895 0003 	ldmia.w	r5, {r0, r1}
 80061f0:	e884 0003 	stmia.w	r4, {r0, r1}
 80061f4:	f7ff fece 	bl	8005f94 <WM__GetNextIVR>
 80061f8:	e000      	b.n	80061fc <WM__InitIVRSearch+0xe4>
 80061fa:	2001      	movs	r0, #1
 80061fc:	b006      	add	sp, #24
 80061fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006202:	bf00      	nop
 8006204:	200000b8 	.word	0x200000b8
 8006208:	20002ad8 	.word	0x20002ad8
 800620c:	20002cb0 	.word	0x20002cb0
 8006210:	20002c80 	.word	0x20002c80

08006214 <WM_SetDefault>:
 8006214:	b508      	push	{r3, lr}
 8006216:	f004 ff13 	bl	800b040 <GL_SetDefault>
 800621a:	4b02      	ldr	r3, [pc, #8]	; (8006224 <WM_SetDefault+0x10>)
 800621c:	681b      	ldr	r3, [r3, #0]
 800621e:	2200      	movs	r2, #0
 8006220:	645a      	str	r2, [r3, #68]	; 0x44
 8006222:	bd08      	pop	{r3, pc}
 8006224:	200000b8 	.word	0x200000b8

08006228 <WM__Paint1>:
 8006228:	b5f0      	push	{r4, r5, r6, r7, lr}
 800622a:	b089      	sub	sp, #36	; 0x24
 800622c:	4604      	mov	r4, r0
 800622e:	f005 fb23 	bl	800b878 <GUI_ALLOC_LockH>
 8006232:	6907      	ldr	r7, [r0, #16]
 8006234:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8006236:	9001      	str	r0, [sp, #4]
 8006238:	3008      	adds	r0, #8
 800623a:	c803      	ldmia	r0, {r0, r1}
 800623c:	ad02      	add	r5, sp, #8
 800623e:	e885 0003 	stmia.w	r5, {r0, r1}
 8006242:	a801      	add	r0, sp, #4
 8006244:	f005 fb26 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006248:	2f00      	cmp	r7, #0
 800624a:	d031      	beq.n	80062b0 <WM__Paint1+0x88>
 800624c:	07b3      	lsls	r3, r6, #30
 800624e:	d52f      	bpl.n	80062b0 <WM__Paint1+0x88>
 8006250:	4620      	mov	r0, r4
 8006252:	212e      	movs	r1, #46	; 0x2e
 8006254:	f7fe fe9b 	bl	8004f8e <WM_SendMessageNoPara>
 8006258:	4b16      	ldr	r3, [pc, #88]	; (80062b4 <WM__Paint1+0x8c>)
 800625a:	781a      	ldrb	r2, [r3, #0]
 800625c:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 8006260:	f102 0201 	add.w	r2, r2, #1
 8006264:	701a      	strb	r2, [r3, #0]
 8006266:	461e      	mov	r6, r3
 8006268:	d00a      	beq.n	8006280 <WM__Paint1+0x58>
 800626a:	230f      	movs	r3, #15
 800626c:	9405      	str	r4, [sp, #20]
 800626e:	9304      	str	r3, [sp, #16]
 8006270:	9507      	str	r5, [sp, #28]
 8006272:	f7ff ffcf 	bl	8006214 <WM_SetDefault>
 8006276:	4620      	mov	r0, r4
 8006278:	a904      	add	r1, sp, #16
 800627a:	f7fe f96d 	bl	8004558 <WM__SendMessage>
 800627e:	e010      	b.n	80062a2 <WM__Paint1+0x7a>
 8006280:	4628      	mov	r0, r5
 8006282:	f7ff ff49 	bl	8006118 <WM__InitIVRSearch>
 8006286:	b160      	cbz	r0, 80062a2 <WM__Paint1+0x7a>
 8006288:	230f      	movs	r3, #15
 800628a:	9304      	str	r3, [sp, #16]
 800628c:	9405      	str	r4, [sp, #20]
 800628e:	9507      	str	r5, [sp, #28]
 8006290:	f7ff ffc0 	bl	8006214 <WM_SetDefault>
 8006294:	4620      	mov	r0, r4
 8006296:	a904      	add	r1, sp, #16
 8006298:	f7fe f95e 	bl	8004558 <WM__SendMessage>
 800629c:	f7ff fe7a 	bl	8005f94 <WM__GetNextIVR>
 80062a0:	e7f1      	b.n	8006286 <WM__Paint1+0x5e>
 80062a2:	7833      	ldrb	r3, [r6, #0]
 80062a4:	4620      	mov	r0, r4
 80062a6:	3b01      	subs	r3, #1
 80062a8:	212f      	movs	r1, #47	; 0x2f
 80062aa:	7033      	strb	r3, [r6, #0]
 80062ac:	f7fe fe6f 	bl	8004f8e <WM_SendMessageNoPara>
 80062b0:	b009      	add	sp, #36	; 0x24
 80062b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80062b4:	20002cb0 	.word	0x20002cb0

080062b8 <WM__Paint>:
 80062b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80062ba:	b089      	sub	sp, #36	; 0x24
 80062bc:	ac06      	add	r4, sp, #24
 80062be:	9003      	str	r0, [sp, #12]
 80062c0:	f005 fada 	bl	800b878 <GUI_ALLOC_LockH>
 80062c4:	f100 0208 	add.w	r2, r0, #8
 80062c8:	4603      	mov	r3, r0
 80062ca:	9005      	str	r0, [sp, #20]
 80062cc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80062d0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 80062d2:	699e      	ldr	r6, [r3, #24]
 80062d4:	691f      	ldr	r7, [r3, #16]
 80062d6:	e884 0003 	stmia.w	r4, {r0, r1}
 80062da:	a805      	add	r0, sp, #20
 80062dc:	f005 fada 	bl	800b894 <GUI_ALLOC_UnlockH>
 80062e0:	f244 0320 	movw	r3, #16416	; 0x4020
 80062e4:	402b      	ands	r3, r5
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	d034      	beq.n	8006354 <WM__Paint+0x9c>
 80062ea:	b1bf      	cbz	r7, 800631c <WM__Paint+0x64>
 80062ec:	4620      	mov	r0, r4
 80062ee:	9903      	ldr	r1, [sp, #12]
 80062f0:	f7ff fa12 	bl	8005718 <WM__ClipAtParentBorders>
 80062f4:	b190      	cbz	r0, 800631c <WM__Paint+0x64>
 80062f6:	9803      	ldr	r0, [sp, #12]
 80062f8:	f7ff fcb0 	bl	8005c5c <WM_SelectWindow>
 80062fc:	0769      	lsls	r1, r5, #29
 80062fe:	d50f      	bpl.n	8006320 <WM__Paint+0x68>
 8006300:	b126      	cbz	r6, 800630c <WM__Paint+0x54>
 8006302:	f005 0501 	and.w	r5, r5, #1
 8006306:	f085 0501 	eor.w	r5, r5, #1
 800630a:	e000      	b.n	800630e <WM__Paint+0x56>
 800630c:	2501      	movs	r5, #1
 800630e:	9500      	str	r5, [sp, #0]
 8006310:	4620      	mov	r0, r4
 8006312:	4912      	ldr	r1, [pc, #72]	; (800635c <WM__Paint+0xa4>)
 8006314:	aa03      	add	r2, sp, #12
 8006316:	2300      	movs	r3, #0
 8006318:	f000 faaa 	bl	8006870 <GUI_MEMDEV_Draw>
 800631c:	2400      	movs	r4, #0
 800631e:	e003      	b.n	8006328 <WM__Paint+0x70>
 8006320:	9803      	ldr	r0, [sp, #12]
 8006322:	f7ff f989 	bl	8005638 <WM__PaintWinAndOverlays>
 8006326:	2401      	movs	r4, #1
 8006328:	9803      	ldr	r0, [sp, #12]
 800632a:	f005 faa5 	bl	800b878 <GUI_ALLOC_LockH>
 800632e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006330:	9005      	str	r0, [sp, #20]
 8006332:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 8006336:	f023 0320 	bic.w	r3, r3, #32
 800633a:	0492      	lsls	r2, r2, #18
 800633c:	bf48      	it	mi
 800633e:	f043 0304 	orrmi.w	r3, r3, #4
 8006342:	6283      	str	r3, [r0, #40]	; 0x28
 8006344:	a805      	add	r0, sp, #20
 8006346:	f005 faa5 	bl	800b894 <GUI_ALLOC_UnlockH>
 800634a:	4b05      	ldr	r3, [pc, #20]	; (8006360 <WM__Paint+0xa8>)
 800634c:	881a      	ldrh	r2, [r3, #0]
 800634e:	3a01      	subs	r2, #1
 8006350:	801a      	strh	r2, [r3, #0]
 8006352:	e000      	b.n	8006356 <WM__Paint+0x9e>
 8006354:	461c      	mov	r4, r3
 8006356:	4620      	mov	r0, r4
 8006358:	b009      	add	sp, #36	; 0x24
 800635a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800635c:	080056b1 	.word	0x080056b1
 8006360:	20002c9c 	.word	0x20002c9c

08006364 <_Exec1Draw>:
 8006364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006368:	4b1a      	ldr	r3, [pc, #104]	; (80063d4 <_Exec1Draw+0x70>)
 800636a:	681a      	ldr	r2, [r3, #0]
 800636c:	f892 0054 	ldrb.w	r0, [r2, #84]	; 0x54
 8006370:	b09c      	sub	sp, #112	; 0x70
 8006372:	461d      	mov	r5, r3
 8006374:	2800      	cmp	r0, #0
 8006376:	d02a      	beq.n	80063ce <_Exec1Draw+0x6a>
 8006378:	4b17      	ldr	r3, [pc, #92]	; (80063d8 <_Exec1Draw+0x74>)
 800637a:	8818      	ldrh	r0, [r3, #0]
 800637c:	b338      	cbz	r0, 80063ce <_Exec1Draw+0x6a>
 800637e:	4a17      	ldr	r2, [pc, #92]	; (80063dc <_Exec1Draw+0x78>)
 8006380:	6814      	ldr	r4, [r2, #0]
 8006382:	4616      	mov	r6, r2
 8006384:	b90c      	cbnz	r4, 800638a <_Exec1Draw+0x26>
 8006386:	4b16      	ldr	r3, [pc, #88]	; (80063e0 <_Exec1Draw+0x7c>)
 8006388:	681c      	ldr	r4, [r3, #0]
 800638a:	4668      	mov	r0, sp
 800638c:	f004 fdf4 	bl	800af78 <GUI_SaveContext_W>
 8006390:	682b      	ldr	r3, [r5, #0]
 8006392:	6b1f      	ldr	r7, [r3, #48]	; 0x30
 8006394:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 8006396:	b924      	cbnz	r4, 80063a2 <_Exec1Draw+0x3e>
 8006398:	2400      	movs	r4, #0
 800639a:	e00d      	b.n	80063b8 <_Exec1Draw+0x54>
 800639c:	f1b8 0f00 	cmp.w	r8, #0
 80063a0:	d10a      	bne.n	80063b8 <_Exec1Draw+0x54>
 80063a2:	4620      	mov	r0, r4
 80063a4:	f7ff ff88 	bl	80062b8 <WM__Paint>
 80063a8:	4680      	mov	r8, r0
 80063aa:	4620      	mov	r0, r4
 80063ac:	f005 fa5a 	bl	800b864 <GUI_ALLOC_h2p>
 80063b0:	6944      	ldr	r4, [r0, #20]
 80063b2:	2c00      	cmp	r4, #0
 80063b4:	d1f2      	bne.n	800639c <_Exec1Draw+0x38>
 80063b6:	e7ef      	b.n	8006398 <_Exec1Draw+0x34>
 80063b8:	4638      	mov	r0, r7
 80063ba:	6034      	str	r4, [r6, #0]
 80063bc:	f004 fdfb 	bl	800afb6 <GUI_SetColor>
 80063c0:	4628      	mov	r0, r5
 80063c2:	f004 fdf6 	bl	800afb2 <GUI_SetBkColor>
 80063c6:	4668      	mov	r0, sp
 80063c8:	f004 fde0 	bl	800af8c <GUI_RestoreContext>
 80063cc:	2001      	movs	r0, #1
 80063ce:	b01c      	add	sp, #112	; 0x70
 80063d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80063d4:	200000b8 	.word	0x200000b8
 80063d8:	20002c9c 	.word	0x20002c9c
 80063dc:	20002af0 	.word	0x20002af0
 80063e0:	20002ca0 	.word	0x20002ca0

080063e4 <WM__DeleteSecure>:
 80063e4:	b508      	push	{r3, lr}
 80063e6:	f005 fa3d 	bl	800b864 <GUI_ALLOC_h2p>
 80063ea:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80063ec:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80063f0:	6283      	str	r3, [r0, #40]	; 0x28
 80063f2:	4b02      	ldr	r3, [pc, #8]	; (80063fc <WM__DeleteSecure+0x18>)
 80063f4:	2201      	movs	r2, #1
 80063f6:	601a      	str	r2, [r3, #0]
 80063f8:	bd08      	pop	{r3, pc}
 80063fa:	bf00      	nop
 80063fc:	20002ad4 	.word	0x20002ad4

08006400 <WM_Exec>:
 8006400:	4b18      	ldr	r3, [pc, #96]	; (8006464 <WM_Exec+0x64>)
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	b570      	push	{r4, r5, r6, lr}
 8006406:	b103      	cbz	r3, 800640a <WM_Exec+0xa>
 8006408:	4798      	blx	r3
 800640a:	2500      	movs	r5, #0
 800640c:	f7ff fd7a 	bl	8005f04 <_Exec1Input>
 8006410:	b108      	cbz	r0, 8006416 <WM_Exec+0x16>
 8006412:	2501      	movs	r5, #1
 8006414:	e7fa      	b.n	800640c <WM_Exec+0xc>
 8006416:	4b14      	ldr	r3, [pc, #80]	; (8006468 <WM_Exec+0x68>)
 8006418:	681b      	ldr	r3, [r3, #0]
 800641a:	f893 4054 	ldrb.w	r4, [r3, #84]	; 0x54
 800641e:	b144      	cbz	r4, 8006432 <WM_Exec+0x32>
 8006420:	4b12      	ldr	r3, [pc, #72]	; (800646c <WM_Exec+0x6c>)
 8006422:	881c      	ldrh	r4, [r3, #0]
 8006424:	b12c      	cbz	r4, 8006432 <WM_Exec+0x32>
 8006426:	4b12      	ldr	r3, [pc, #72]	; (8006470 <WM_Exec+0x70>)
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	b1a3      	cbz	r3, 8006456 <WM_Exec+0x56>
 800642c:	681b      	ldr	r3, [r3, #0]
 800642e:	4798      	blx	r3
 8006430:	2401      	movs	r4, #1
 8006432:	f7ff ff97 	bl	8006364 <_Exec1Draw>
 8006436:	4606      	mov	r6, r0
 8006438:	b108      	cbz	r0, 800643e <WM_Exec+0x3e>
 800643a:	2501      	movs	r5, #1
 800643c:	e7f9      	b.n	8006432 <WM_Exec+0x32>
 800643e:	b174      	cbz	r4, 800645e <WM_Exec+0x5e>
 8006440:	4b0b      	ldr	r3, [pc, #44]	; (8006470 <WM_Exec+0x70>)
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	b123      	cbz	r3, 8006450 <WM_Exec+0x50>
 8006446:	685b      	ldr	r3, [r3, #4]
 8006448:	4798      	blx	r3
 800644a:	4b0a      	ldr	r3, [pc, #40]	; (8006474 <WM_Exec+0x74>)
 800644c:	601e      	str	r6, [r3, #0]
 800644e:	e006      	b.n	800645e <WM_Exec+0x5e>
 8006450:	f003 f844 	bl	80094dc <GUI__ManageCache>
 8006454:	e003      	b.n	800645e <WM_Exec+0x5e>
 8006456:	2001      	movs	r0, #1
 8006458:	f003 f840 	bl	80094dc <GUI__ManageCache>
 800645c:	e7e8      	b.n	8006430 <WM_Exec+0x30>
 800645e:	4628      	mov	r0, r5
 8006460:	bd70      	pop	{r4, r5, r6, pc}
 8006462:	bf00      	nop
 8006464:	20002c90 	.word	0x20002c90
 8006468:	200000b8 	.word	0x200000b8
 800646c:	20002c9c 	.word	0x20002c9c
 8006470:	20002cc4 	.word	0x20002cc4
 8006474:	20002cac 	.word	0x20002cac

08006478 <WM_Activate>:
 8006478:	4b02      	ldr	r3, [pc, #8]	; (8006484 <WM_Activate+0xc>)
 800647a:	681b      	ldr	r3, [r3, #0]
 800647c:	2201      	movs	r2, #1
 800647e:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8006482:	4770      	bx	lr
 8006484:	200000b8 	.word	0x200000b8

08006488 <WM_Deactivate>:
 8006488:	4b03      	ldr	r3, [pc, #12]	; (8006498 <WM_Deactivate+0x10>)
 800648a:	681b      	ldr	r3, [r3, #0]
 800648c:	2200      	movs	r2, #0
 800648e:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8006492:	f002 bdb1 	b.w	8008ff8 <LCD_SetClipRectMax>
 8006496:	bf00      	nop
 8006498:	200000b8 	.word	0x200000b8

0800649c <WM_DefaultProc>:
 800649c:	b510      	push	{r4, lr}
 800649e:	4604      	mov	r4, r0
 80064a0:	6840      	ldr	r0, [r0, #4]
 80064a2:	6823      	ldr	r3, [r4, #0]
 80064a4:	68e1      	ldr	r1, [r4, #12]
 80064a6:	2b17      	cmp	r3, #23
 80064a8:	d00f      	beq.n	80064ca <WM_DefaultProc+0x2e>
 80064aa:	dc06      	bgt.n	80064ba <WM_DefaultProc+0x1e>
 80064ac:	2b0e      	cmp	r3, #14
 80064ae:	d00e      	beq.n	80064ce <WM_DefaultProc+0x32>
 80064b0:	2b14      	cmp	r3, #20
 80064b2:	d114      	bne.n	80064de <WM_DefaultProc+0x42>
 80064b4:	f7fe f904 	bl	80046c0 <WM__GetClientRectEx>
 80064b8:	e011      	b.n	80064de <WM_DefaultProc+0x42>
 80064ba:	2b22      	cmp	r3, #34	; 0x22
 80064bc:	d00c      	beq.n	80064d8 <WM_DefaultProc+0x3c>
 80064be:	2b28      	cmp	r3, #40	; 0x28
 80064c0:	d10d      	bne.n	80064de <WM_DefaultProc+0x42>
 80064c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064c6:	f7ff bbbb 	b.w	8005c40 <WM_InvalidateWindow>
 80064ca:	60e0      	str	r0, [r4, #12]
 80064cc:	bd10      	pop	{r4, pc}
 80064ce:	4621      	mov	r1, r4
 80064d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064d4:	f7fe bd5d 	b.w	8004f92 <WM_SendToParent>
 80064d8:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80064dc:	e000      	b.n	80064e0 <WM_DefaultProc+0x44>
 80064de:	2300      	movs	r3, #0
 80064e0:	60e3      	str	r3, [r4, #12]
 80064e2:	bd10      	pop	{r4, pc}

080064e4 <_cbBackWin>:
 80064e4:	6803      	ldr	r3, [r0, #0]
 80064e6:	2b0e      	cmp	r3, #14
 80064e8:	b510      	push	{r4, lr}
 80064ea:	4604      	mov	r4, r0
 80064ec:	d002      	beq.n	80064f4 <_cbBackWin+0x10>
 80064ee:	2b0f      	cmp	r3, #15
 80064f0:	d009      	beq.n	8006506 <_cbBackWin+0x22>
 80064f2:	e020      	b.n	8006536 <_cbBackWin+0x52>
 80064f4:	68c3      	ldr	r3, [r0, #12]
 80064f6:	685a      	ldr	r2, [r3, #4]
 80064f8:	2a01      	cmp	r2, #1
 80064fa:	d121      	bne.n	8006540 <_cbBackWin+0x5c>
 80064fc:	6818      	ldr	r0, [r3, #0]
 80064fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006502:	f003 bbbd 	b.w	8009c80 <GUI_StoreKey>
 8006506:	4a0f      	ldr	r2, [pc, #60]	; (8006544 <_cbBackWin+0x60>)
 8006508:	6843      	ldr	r3, [r0, #4]
 800650a:	6811      	ldr	r1, [r2, #0]
 800650c:	428b      	cmp	r3, r1
 800650e:	d006      	beq.n	800651e <_cbBackWin+0x3a>
 8006510:	6852      	ldr	r2, [r2, #4]
 8006512:	4293      	cmp	r3, r2
 8006514:	bf14      	ite	ne
 8006516:	f04f 33ff 	movne.w	r3, #4294967295
 800651a:	2301      	moveq	r3, #1
 800651c:	e000      	b.n	8006520 <_cbBackWin+0x3c>
 800651e:	2300      	movs	r3, #0
 8006520:	4a09      	ldr	r2, [pc, #36]	; (8006548 <_cbBackWin+0x64>)
 8006522:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8006526:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800652a:	4298      	cmp	r0, r3
 800652c:	d003      	beq.n	8006536 <_cbBackWin+0x52>
 800652e:	f004 fd40 	bl	800afb2 <GUI_SetBkColor>
 8006532:	f004 fb2d 	bl	800ab90 <GUI_Clear>
 8006536:	4620      	mov	r0, r4
 8006538:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800653c:	f7ff bfae 	b.w	800649c <WM_DefaultProc>
 8006540:	bd10      	pop	{r4, pc}
 8006542:	bf00      	nop
 8006544:	20002c84 	.word	0x20002c84
 8006548:	20002cb8 	.word	0x20002cb8

0800654c <WM_Init>:
 800654c:	b530      	push	{r4, r5, lr}
 800654e:	4b2b      	ldr	r3, [pc, #172]	; (80065fc <WM_Init+0xb0>)
 8006550:	7818      	ldrb	r0, [r3, #0]
 8006552:	b085      	sub	sp, #20
 8006554:	461d      	mov	r5, r3
 8006556:	2800      	cmp	r0, #0
 8006558:	d14d      	bne.n	80065f6 <WM_Init+0xaa>
 800655a:	4b29      	ldr	r3, [pc, #164]	; (8006600 <WM_Init+0xb4>)
 800655c:	6018      	str	r0, [r3, #0]
 800655e:	4b29      	ldr	r3, [pc, #164]	; (8006604 <WM_Init+0xb8>)
 8006560:	6018      	str	r0, [r3, #0]
 8006562:	4b29      	ldr	r3, [pc, #164]	; (8006608 <WM_Init+0xbc>)
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	6458      	str	r0, [r3, #68]	; 0x44
 8006568:	4b28      	ldr	r3, [pc, #160]	; (800660c <WM_Init+0xc0>)
 800656a:	8018      	strh	r0, [r3, #0]
 800656c:	4b28      	ldr	r3, [pc, #160]	; (8006610 <WM_Init+0xc4>)
 800656e:	4604      	mov	r4, r0
 8006570:	8018      	strh	r0, [r3, #0]
 8006572:	4620      	mov	r0, r4
 8006574:	f004 f9c2 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8006578:	b1c0      	cbz	r0, 80065ac <WM_Init+0x60>
 800657a:	f04f 32ff 	mov.w	r2, #4294967295
 800657e:	2302      	movs	r3, #2
 8006580:	e88d 000c 	stmia.w	sp, {r2, r3}
 8006584:	2000      	movs	r0, #0
 8006586:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800658a:	4b22      	ldr	r3, [pc, #136]	; (8006614 <WM_Init+0xc8>)
 800658c:	9302      	str	r3, [sp, #8]
 800658e:	9003      	str	r0, [sp, #12]
 8006590:	4613      	mov	r3, r2
 8006592:	4601      	mov	r1, r0
 8006594:	f7ff fb82 	bl	8005c9c <WM_CreateWindowAsChild>
 8006598:	4b1f      	ldr	r3, [pc, #124]	; (8006618 <WM_Init+0xcc>)
 800659a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800659e:	4b1f      	ldr	r3, [pc, #124]	; (800661c <WM_Init+0xd0>)
 80065a0:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80065a4:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80065a8:	f7ff fb4a 	bl	8005c40 <WM_InvalidateWindow>
 80065ac:	3401      	adds	r4, #1
 80065ae:	2c02      	cmp	r4, #2
 80065b0:	d1df      	bne.n	8006572 <WM_Init+0x26>
 80065b2:	481b      	ldr	r0, [pc, #108]	; (8006620 <WM_Init+0xd4>)
 80065b4:	f7fe f87c 	bl	80046b0 <WM__AddCriticalHandle>
 80065b8:	481a      	ldr	r0, [pc, #104]	; (8006624 <WM_Init+0xd8>)
 80065ba:	f7fe f879 	bl	80046b0 <WM__AddCriticalHandle>
 80065be:	481a      	ldr	r0, [pc, #104]	; (8006628 <WM_Init+0xdc>)
 80065c0:	f7fe f876 	bl	80046b0 <WM__AddCriticalHandle>
 80065c4:	4819      	ldr	r0, [pc, #100]	; (800662c <WM_Init+0xe0>)
 80065c6:	f7fe f873 	bl	80046b0 <WM__AddCriticalHandle>
 80065ca:	4819      	ldr	r0, [pc, #100]	; (8006630 <WM_Init+0xe4>)
 80065cc:	f7fe f870 	bl	80046b0 <WM__AddCriticalHandle>
 80065d0:	4818      	ldr	r0, [pc, #96]	; (8006634 <WM_Init+0xe8>)
 80065d2:	f7fe f86d 	bl	80046b0 <WM__AddCriticalHandle>
 80065d6:	4b10      	ldr	r3, [pc, #64]	; (8006618 <WM_Init+0xcc>)
 80065d8:	6818      	ldr	r0, [r3, #0]
 80065da:	f7ff fb3f 	bl	8005c5c <WM_SelectWindow>
 80065de:	f7ff ff4b 	bl	8006478 <WM_Activate>
 80065e2:	2301      	movs	r3, #1
 80065e4:	702b      	strb	r3, [r5, #0]
 80065e6:	4814      	ldr	r0, [pc, #80]	; (8006638 <WM_Init+0xec>)
 80065e8:	4b14      	ldr	r3, [pc, #80]	; (800663c <WM_Init+0xf0>)
 80065ea:	6003      	str	r3, [r0, #0]
 80065ec:	b005      	add	sp, #20
 80065ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80065f2:	f004 badd 	b.w	800abb0 <GUI__RegisterExit>
 80065f6:	b005      	add	sp, #20
 80065f8:	bd30      	pop	{r4, r5, pc}
 80065fa:	bf00      	nop
 80065fc:	20002af4 	.word	0x20002af4
 8006600:	20002ca0 	.word	0x20002ca0
 8006604:	20002af0 	.word	0x20002af0
 8006608:	200000b8 	.word	0x200000b8
 800660c:	20002c9c 	.word	0x20002c9c
 8006610:	20002c7c 	.word	0x20002c7c
 8006614:	080064e5 	.word	0x080064e5
 8006618:	20002c84 	.word	0x20002c84
 800661c:	20002cb8 	.word	0x20002cb8
 8006620:	20002e1c 	.word	0x20002e1c
 8006624:	20002e0c 	.word	0x20002e0c
 8006628:	20002dfc 	.word	0x20002dfc
 800662c:	20002e24 	.word	0x20002e24
 8006630:	20002e14 	.word	0x20002e14
 8006634:	20002e04 	.word	0x20002e04
 8006638:	20002acc 	.word	0x20002acc
 800663c:	08005271 	.word	0x08005271

08006640 <_CreateStaticDevice>:
 8006640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006644:	b087      	sub	sp, #28
 8006646:	4604      	mov	r4, r0
 8006648:	f005 f916 	bl	800b878 <GUI_ALLOC_LockH>
 800664c:	af06      	add	r7, sp, #24
 800664e:	f8b0 8000 	ldrh.w	r8, [r0]
 8006652:	8886      	ldrh	r6, [r0, #4]
 8006654:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 8006658:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 800665c:	f847 0d04 	str.w	r0, [r7, #-4]!
 8006660:	fa0f f888 	sxth.w	r8, r8
 8006664:	b236      	sxth	r6, r6
 8006666:	ebc8 0606 	rsb	r6, r8, r6
 800666a:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 800666e:	3601      	adds	r6, #1
 8006670:	4638      	mov	r0, r7
 8006672:	fa0f f989 	sxth.w	r9, r9
 8006676:	fa0f f58b 	sxth.w	r5, fp
 800667a:	f005 f90b 	bl	800b894 <GUI_ALLOC_UnlockH>
 800667e:	ebc9 0505 	rsb	r5, r9, r5
 8006682:	2e00      	cmp	r6, #0
 8006684:	f105 0501 	add.w	r5, r5, #1
 8006688:	dd4d      	ble.n	8006726 <_CreateStaticDevice+0xe6>
 800668a:	2d00      	cmp	r5, #0
 800668c:	dd4b      	ble.n	8006726 <_CreateStaticDevice+0xe6>
 800668e:	f1ba 0f00 	cmp.w	sl, #0
 8006692:	d04a      	beq.n	800672a <_CreateStaticDevice+0xea>
 8006694:	4650      	mov	r0, sl
 8006696:	f005 f8ef 	bl	800b878 <GUI_ALLOC_LockH>
 800669a:	ab06      	add	r3, sp, #24
 800669c:	8886      	ldrh	r6, [r0, #4]
 800669e:	f843 0d08 	str.w	r0, [r3, #-8]!
 80066a2:	88c5      	ldrh	r5, [r0, #6]
 80066a4:	b236      	sxth	r6, r6
 80066a6:	4618      	mov	r0, r3
 80066a8:	f005 f8f4 	bl	800b894 <GUI_ALLOC_UnlockH>
 80066ac:	4546      	cmp	r6, r8
 80066ae:	d102      	bne.n	80066b6 <_CreateStaticDevice+0x76>
 80066b0:	b22d      	sxth	r5, r5
 80066b2:	454d      	cmp	r5, r9
 80066b4:	d032      	beq.n	800671c <_CreateStaticDevice+0xdc>
 80066b6:	4650      	mov	r0, sl
 80066b8:	4641      	mov	r1, r8
 80066ba:	464a      	mov	r2, r9
 80066bc:	f000 f888 	bl	80067d0 <GUI_MEMDEV_SetOrg>
 80066c0:	e02c      	b.n	800671c <_CreateStaticDevice+0xdc>
 80066c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80066c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80066c8:	6283      	str	r3, [r0, #40]	; 0x28
 80066ca:	4638      	mov	r0, r7
 80066cc:	f005 f8e2 	bl	800b894 <GUI_ALLOC_UnlockH>
 80066d0:	4640      	mov	r0, r8
 80066d2:	f000 ff99 	bl	8007608 <GUI_MEMDEV_Select>
 80066d6:	4607      	mov	r7, r0
 80066d8:	4650      	mov	r0, sl
 80066da:	f003 faa9 	bl	8009c30 <GUI__AlphaPreserveTrans>
 80066de:	4640      	mov	r0, r8
 80066e0:	f000 f8b6 	bl	8006850 <GUI_MEMDEV_GetDataPtr>
 80066e4:	4a2d      	ldr	r2, [pc, #180]	; (800679c <_CreateStaticDevice+0x15c>)
 80066e6:	4b2e      	ldr	r3, [pc, #184]	; (80067a0 <_CreateStaticDevice+0x160>)
 80066e8:	7811      	ldrb	r1, [r2, #0]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	4375      	muls	r5, r6
 80066ee:	00aa      	lsls	r2, r5, #2
 80066f0:	4e2c      	ldr	r6, [pc, #176]	; (80067a4 <_CreateStaticDevice+0x164>)
 80066f2:	4d2d      	ldr	r5, [pc, #180]	; (80067a8 <_CreateStaticDevice+0x168>)
 80066f4:	4798      	blx	r3
 80066f6:	4620      	mov	r0, r4
 80066f8:	f8d5 8000 	ldr.w	r8, [r5]
 80066fc:	6034      	str	r4, [r6, #0]
 80066fe:	f7fe fa90 	bl	8004c22 <WM_GetWindowOrgX>
 8006702:	6028      	str	r0, [r5, #0]
 8006704:	4620      	mov	r0, r4
 8006706:	f7ff fd8f 	bl	8006228 <WM__Paint1>
 800670a:	2000      	movs	r0, #0
 800670c:	f8c5 8000 	str.w	r8, [r5]
 8006710:	6030      	str	r0, [r6, #0]
 8006712:	f003 fa8d 	bl	8009c30 <GUI__AlphaPreserveTrans>
 8006716:	4638      	mov	r0, r7
 8006718:	f000 ff76 	bl	8007608 <GUI_MEMDEV_Select>
 800671c:	4620      	mov	r0, r4
 800671e:	f005 f8a1 	bl	800b864 <GUI_ALLOC_h2p>
 8006722:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8006724:	e037      	b.n	8006796 <_CreateStaticDevice+0x156>
 8006726:	2000      	movs	r0, #0
 8006728:	e035      	b.n	8006796 <_CreateStaticDevice+0x156>
 800672a:	f7fe f9df 	bl	8004aec <WM_GetDesktopWindow>
 800672e:	4284      	cmp	r4, r0
 8006730:	d112      	bne.n	8006758 <_CreateStaticDevice+0x118>
 8006732:	f002 f8fb 	bl	800892c <LCD_GetXSize>
 8006736:	4682      	mov	sl, r0
 8006738:	f002 f900 	bl	800893c <LCD_GetYSize>
 800673c:	4556      	cmp	r6, sl
 800673e:	dc02      	bgt.n	8006746 <_CreateStaticDevice+0x106>
 8006740:	4285      	cmp	r5, r0
 8006742:	dd09      	ble.n	8006758 <_CreateStaticDevice+0x118>
 8006744:	e000      	b.n	8006748 <_CreateStaticDevice+0x108>
 8006746:	4656      	mov	r6, sl
 8006748:	4285      	cmp	r5, r0
 800674a:	bfa8      	it	ge
 800674c:	4605      	movge	r5, r0
 800674e:	4631      	mov	r1, r6
 8006750:	4620      	mov	r0, r4
 8006752:	462a      	mov	r2, r5
 8006754:	f7fe fc90 	bl	8005078 <WM_SetSize>
 8006758:	4b14      	ldr	r3, [pc, #80]	; (80067ac <_CreateStaticDevice+0x16c>)
 800675a:	9301      	str	r3, [sp, #4]
 800675c:	f04f 0a01 	mov.w	sl, #1
 8006760:	4b13      	ldr	r3, [pc, #76]	; (80067b0 <_CreateStaticDevice+0x170>)
 8006762:	9302      	str	r3, [sp, #8]
 8006764:	4640      	mov	r0, r8
 8006766:	4649      	mov	r1, r9
 8006768:	4632      	mov	r2, r6
 800676a:	462b      	mov	r3, r5
 800676c:	f8cd a000 	str.w	sl, [sp]
 8006770:	f000 fe54 	bl	800741c <GUI_MEMDEV__CreateFixed>
 8006774:	4680      	mov	r8, r0
 8006776:	4620      	mov	r0, r4
 8006778:	f005 f87e 	bl	800b878 <GUI_ALLOC_LockH>
 800677c:	9005      	str	r0, [sp, #20]
 800677e:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 8006782:	f1b8 0f00 	cmp.w	r8, #0
 8006786:	d19c      	bne.n	80066c2 <_CreateStaticDevice+0x82>
 8006788:	4638      	mov	r0, r7
 800678a:	f005 f883 	bl	800b894 <GUI_ALLOC_UnlockH>
 800678e:	4620      	mov	r0, r4
 8006790:	f7ff fd4a 	bl	8006228 <WM__Paint1>
 8006794:	4640      	mov	r0, r8
 8006796:	b007      	add	sp, #28
 8006798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800679c:	20000094 	.word	0x20000094
 80067a0:	200000a4 	.word	0x200000a4
 80067a4:	20002cd0 	.word	0x20002cd0
 80067a8:	20002ce8 	.word	0x20002ce8
 80067ac:	08010328 	.word	0x08010328
 80067b0:	08012480 	.word	0x08012480

080067b4 <GUI_MEMDEV_Paint1Static>:
 80067b4:	b538      	push	{r3, r4, r5, lr}
 80067b6:	4605      	mov	r5, r0
 80067b8:	2405      	movs	r4, #5
 80067ba:	4628      	mov	r0, r5
 80067bc:	f7ff ff40 	bl	8006640 <_CreateStaticDevice>
 80067c0:	b910      	cbnz	r0, 80067c8 <GUI_MEMDEV_Paint1Static+0x14>
 80067c2:	3c01      	subs	r4, #1
 80067c4:	d1f9      	bne.n	80067ba <GUI_MEMDEV_Paint1Static+0x6>
 80067c6:	bd38      	pop	{r3, r4, r5, pc}
 80067c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80067cc:	f007 b9fc 	b.w	800dbc8 <GUI_MEMDEV_Write>

080067d0 <GUI_MEMDEV_SetOrg>:
 80067d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80067d2:	460d      	mov	r5, r1
 80067d4:	4614      	mov	r4, r2
 80067d6:	b918      	cbnz	r0, 80067e0 <GUI_MEMDEV_SetOrg+0x10>
 80067d8:	4b11      	ldr	r3, [pc, #68]	; (8006820 <GUI_MEMDEV_SetOrg+0x50>)
 80067da:	681b      	ldr	r3, [r3, #0]
 80067dc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80067de:	b1e8      	cbz	r0, 800681c <GUI_MEMDEV_SetOrg+0x4c>
 80067e0:	f005 f84a 	bl	800b878 <GUI_ALLOC_LockH>
 80067e4:	b2a4      	uxth	r4, r4
 80067e6:	b2ad      	uxth	r5, r5
 80067e8:	80c4      	strh	r4, [r0, #6]
 80067ea:	8085      	strh	r5, [r0, #4]
 80067ec:	9000      	str	r0, [sp, #0]
 80067ee:	f002 fc03 	bl	8008ff8 <LCD_SetClipRectMax>
 80067f2:	9b00      	ldr	r3, [sp, #0]
 80067f4:	6958      	ldr	r0, [r3, #20]
 80067f6:	b170      	cbz	r0, 8006816 <GUI_MEMDEV_SetOrg+0x46>
 80067f8:	f005 f83e 	bl	800b878 <GUI_ALLOC_LockH>
 80067fc:	9b00      	ldr	r3, [sp, #0]
 80067fe:	9001      	str	r0, [sp, #4]
 8006800:	891a      	ldrh	r2, [r3, #8]
 8006802:	895b      	ldrh	r3, [r3, #10]
 8006804:	8082      	strh	r2, [r0, #4]
 8006806:	80c3      	strh	r3, [r0, #6]
 8006808:	b112      	cbz	r2, 8006810 <GUI_MEMDEV_SetOrg+0x40>
 800680a:	b10b      	cbz	r3, 8006810 <GUI_MEMDEV_SetOrg+0x40>
 800680c:	8005      	strh	r5, [r0, #0]
 800680e:	8044      	strh	r4, [r0, #2]
 8006810:	a801      	add	r0, sp, #4
 8006812:	f005 f83f 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006816:	4668      	mov	r0, sp
 8006818:	f005 f83c 	bl	800b894 <GUI_ALLOC_UnlockH>
 800681c:	b003      	add	sp, #12
 800681e:	bd30      	pop	{r4, r5, pc}
 8006820:	200000b8 	.word	0x200000b8

08006824 <GUI_MEMDEV_GetYSize>:
 8006824:	b513      	push	{r0, r1, r4, lr}
 8006826:	b920      	cbnz	r0, 8006832 <GUI_MEMDEV_GetYSize+0xe>
 8006828:	4b08      	ldr	r3, [pc, #32]	; (800684c <GUI_MEMDEV_GetYSize+0x28>)
 800682a:	681b      	ldr	r3, [r3, #0]
 800682c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800682e:	4604      	mov	r4, r0
 8006830:	b148      	cbz	r0, 8006846 <GUI_MEMDEV_GetYSize+0x22>
 8006832:	f005 f821 	bl	800b878 <GUI_ALLOC_LockH>
 8006836:	ab02      	add	r3, sp, #8
 8006838:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 800683c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006840:	4618      	mov	r0, r3
 8006842:	f005 f827 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006846:	4620      	mov	r0, r4
 8006848:	b002      	add	sp, #8
 800684a:	bd10      	pop	{r4, pc}
 800684c:	200000b8 	.word	0x200000b8

08006850 <GUI_MEMDEV_GetDataPtr>:
 8006850:	b513      	push	{r0, r1, r4, lr}
 8006852:	b150      	cbz	r0, 800686a <GUI_MEMDEV_GetDataPtr+0x1a>
 8006854:	f005 f810 	bl	800b878 <GUI_ALLOC_LockH>
 8006858:	4604      	mov	r4, r0
 800685a:	a802      	add	r0, sp, #8
 800685c:	f840 4d04 	str.w	r4, [r0, #-4]!
 8006860:	f005 f818 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006864:	f104 0018 	add.w	r0, r4, #24
 8006868:	e7ff      	b.n	800686a <GUI_MEMDEV_GetDataPtr+0x1a>
 800686a:	b002      	add	sp, #8
 800686c:	bd10      	pop	{r4, pc}
	...

08006870 <GUI_MEMDEV_Draw>:
 8006870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006874:	461e      	mov	r6, r3
 8006876:	b089      	sub	sp, #36	; 0x24
 8006878:	4b4e      	ldr	r3, [pc, #312]	; (80069b4 <GUI_MEMDEV_Draw+0x144>)
 800687a:	9204      	str	r2, [sp, #16]
 800687c:	681a      	ldr	r2, [r3, #0]
 800687e:	9103      	str	r1, [sp, #12]
 8006880:	7c54      	ldrb	r4, [r2, #17]
 8006882:	4a4d      	ldr	r2, [pc, #308]	; (80069b8 <GUI_MEMDEV_Draw+0x148>)
 8006884:	5712      	ldrsb	r2, [r2, r4]
 8006886:	2a01      	cmp	r2, #1
 8006888:	4605      	mov	r5, r0
 800688a:	469b      	mov	fp, r3
 800688c:	4620      	mov	r0, r4
 800688e:	dd06      	ble.n	800689e <GUI_MEMDEV_Draw+0x2e>
 8006890:	f002 f83a 	bl	8008908 <LCD_GetXSizeEx>
 8006894:	4607      	mov	r7, r0
 8006896:	4620      	mov	r0, r4
 8006898:	f002 f839 	bl	800890e <LCD_GetYSizeEx>
 800689c:	e005      	b.n	80068aa <GUI_MEMDEV_Draw+0x3a>
 800689e:	f002 f839 	bl	8008914 <LCD_GetVXSizeEx>
 80068a2:	4607      	mov	r7, r0
 80068a4:	4620      	mov	r0, r4
 80068a6:	f002 f838 	bl	800891a <LCD_GetVYSizeEx>
 80068aa:	4604      	mov	r4, r0
 80068ac:	b325      	cbz	r5, 80068f8 <GUI_MEMDEV_Draw+0x88>
 80068ae:	a806      	add	r0, sp, #24
 80068b0:	a907      	add	r1, sp, #28
 80068b2:	f004 fabb 	bl	800ae2c <GUI_GetOrg>
 80068b6:	9b06      	ldr	r3, [sp, #24]
 80068b8:	f9b5 a000 	ldrsh.w	sl, [r5]
 80068bc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80068c0:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 80068c4:	441f      	add	r7, r3
 80068c6:	9b07      	ldr	r3, [sp, #28]
 80068c8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80068cc:	3f01      	subs	r7, #1
 80068ce:	4297      	cmp	r7, r2
 80068d0:	bfd4      	ite	le
 80068d2:	ebca 0707 	rsble	r7, sl, r7
 80068d6:	ebca 0702 	rsbgt	r7, sl, r2
 80068da:	441c      	add	r4, r3
 80068dc:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80068e0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 80068e4:	3c01      	subs	r4, #1
 80068e6:	4294      	cmp	r4, r2
 80068e8:	bfd4      	ite	le
 80068ea:	ebc8 0404 	rsble	r4, r8, r4
 80068ee:	ebc8 0402 	rsbgt	r4, r8, r2
 80068f2:	3701      	adds	r7, #1
 80068f4:	3401      	adds	r4, #1
 80068f6:	e001      	b.n	80068fc <GUI_MEMDEV_Draw+0x8c>
 80068f8:	46a8      	mov	r8, r5
 80068fa:	46aa      	mov	sl, r5
 80068fc:	b906      	cbnz	r6, 8006900 <GUI_MEMDEV_Draw+0x90>
 80068fe:	4266      	negs	r6, r4
 8006900:	2f00      	cmp	r7, #0
 8006902:	dd52      	ble.n	80069aa <GUI_MEMDEV_Draw+0x13a>
 8006904:	2c00      	cmp	r4, #0
 8006906:	dd50      	ble.n	80069aa <GUI_MEMDEV_Draw+0x13a>
 8006908:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800690a:	9300      	str	r3, [sp, #0]
 800690c:	4650      	mov	r0, sl
 800690e:	4641      	mov	r1, r8
 8006910:	463a      	mov	r2, r7
 8006912:	4633      	mov	r3, r6
 8006914:	f000 fe3c 	bl	8007590 <GUI_MEMDEV_CreateEx>
 8006918:	4605      	mov	r5, r0
 800691a:	b920      	cbnz	r0, 8006926 <GUI_MEMDEV_Draw+0xb6>
 800691c:	9804      	ldr	r0, [sp, #16]
 800691e:	9b03      	ldr	r3, [sp, #12]
 8006920:	4798      	blx	r3
 8006922:	2001      	movs	r0, #1
 8006924:	e042      	b.n	80069ac <GUI_MEMDEV_Draw+0x13c>
 8006926:	f7ff ff7d 	bl	8006824 <GUI_MEMDEV_GetYSize>
 800692a:	42a0      	cmp	r0, r4
 800692c:	4606      	mov	r6, r0
 800692e:	d006      	beq.n	800693e <GUI_MEMDEV_Draw+0xce>
 8006930:	f8db 3000 	ldr.w	r3, [fp]
 8006934:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006936:	b110      	cbz	r0, 800693e <GUI_MEMDEV_Draw+0xce>
 8006938:	2132      	movs	r1, #50	; 0x32
 800693a:	f7fd fe2b 	bl	8004594 <WM__SendMessageNoPara>
 800693e:	4628      	mov	r0, r5
 8006940:	f000 fe62 	bl	8007608 <GUI_MEMDEV_Select>
 8006944:	4273      	negs	r3, r6
 8006946:	9305      	str	r3, [sp, #20]
 8006948:	46a1      	mov	r9, r4
 800694a:	2700      	movs	r7, #0
 800694c:	45b1      	cmp	r9, r6
 800694e:	da03      	bge.n	8006958 <GUI_MEMDEV_Draw+0xe8>
 8006950:	4628      	mov	r0, r5
 8006952:	4649      	mov	r1, r9
 8006954:	f007 fa38 	bl	800ddc8 <GUI_MEMDEV_ReduceYSize>
 8006958:	b147      	cbz	r7, 800696c <GUI_MEMDEV_Draw+0xfc>
 800695a:	4628      	mov	r0, r5
 800695c:	4651      	mov	r1, sl
 800695e:	eb07 0208 	add.w	r2, r7, r8
 8006962:	f7ff ff35 	bl	80067d0 <GUI_MEMDEV_SetOrg>
 8006966:	4628      	mov	r0, r5
 8006968:	f007 fa44 	bl	800ddf4 <GUI_MEMDEV_Clear>
 800696c:	9b03      	ldr	r3, [sp, #12]
 800696e:	9804      	ldr	r0, [sp, #16]
 8006970:	4798      	blx	r3
 8006972:	4b12      	ldr	r3, [pc, #72]	; (80069bc <GUI_MEMDEV_Draw+0x14c>)
 8006974:	681b      	ldr	r3, [r3, #0]
 8006976:	b10b      	cbz	r3, 800697c <GUI_MEMDEV_Draw+0x10c>
 8006978:	2000      	movs	r0, #0
 800697a:	4798      	blx	r3
 800697c:	4628      	mov	r0, r5
 800697e:	f000 febb 	bl	80076f8 <GUI_MEMDEV_CopyToLCD>
 8006982:	4437      	add	r7, r6
 8006984:	9b05      	ldr	r3, [sp, #20]
 8006986:	42a7      	cmp	r7, r4
 8006988:	4499      	add	r9, r3
 800698a:	dbdf      	blt.n	800694c <GUI_MEMDEV_Draw+0xdc>
 800698c:	4628      	mov	r0, r5
 800698e:	f000 fddd 	bl	800754c <GUI_MEMDEV_Delete>
 8006992:	2000      	movs	r0, #0
 8006994:	f000 fe38 	bl	8007608 <GUI_MEMDEV_Select>
 8006998:	42a6      	cmp	r6, r4
 800699a:	d006      	beq.n	80069aa <GUI_MEMDEV_Draw+0x13a>
 800699c:	f8db 3000 	ldr.w	r3, [fp]
 80069a0:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80069a2:	b110      	cbz	r0, 80069aa <GUI_MEMDEV_Draw+0x13a>
 80069a4:	2133      	movs	r1, #51	; 0x33
 80069a6:	f7fd fdf5 	bl	8004594 <WM__SendMessageNoPara>
 80069aa:	2000      	movs	r0, #0
 80069ac:	b009      	add	sp, #36	; 0x24
 80069ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80069b2:	bf00      	nop
 80069b4:	200000b8 	.word	0x200000b8
 80069b8:	20002cd8 	.word	0x20002cd8
 80069bc:	20002af8 	.word	0x20002af8

080069c0 <_GetDevData>:
 80069c0:	4802      	ldr	r0, [pc, #8]	; (80069cc <_GetDevData+0xc>)
 80069c2:	2901      	cmp	r1, #1
 80069c4:	bf18      	it	ne
 80069c6:	2000      	movne	r0, #0
 80069c8:	4770      	bx	lr
 80069ca:	bf00      	nop
 80069cc:	08010328 	.word	0x08010328

080069d0 <_GetDevFunc>:
 80069d0:	4802      	ldr	r0, [pc, #8]	; (80069dc <_GetDevFunc+0xc>)
 80069d2:	2916      	cmp	r1, #22
 80069d4:	bf18      	it	ne
 80069d6:	2000      	movne	r0, #0
 80069d8:	4770      	bx	lr
 80069da:	bf00      	nop
 80069dc:	0800d9d9 	.word	0x0800d9d9

080069e0 <_GetDevProp>:
 80069e0:	2908      	cmp	r1, #8
 80069e2:	bf0c      	ite	eq
 80069e4:	2020      	moveq	r0, #32
 80069e6:	2000      	movne	r0, #0
 80069e8:	4770      	bx	lr

080069ea <_SetOrg>:
 80069ea:	b508      	push	{r3, lr}
 80069ec:	6800      	ldr	r0, [r0, #0]
 80069ee:	68c3      	ldr	r3, [r0, #12]
 80069f0:	6a1b      	ldr	r3, [r3, #32]
 80069f2:	4798      	blx	r3
 80069f4:	bd08      	pop	{r3, pc}

080069f6 <_GetRect>:
 80069f6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80069f8:	6880      	ldr	r0, [r0, #8]
 80069fa:	460c      	mov	r4, r1
 80069fc:	f004 ff3c 	bl	800b878 <GUI_ALLOC_LockH>
 8006a00:	4603      	mov	r3, r0
 8006a02:	a802      	add	r0, sp, #8
 8006a04:	8899      	ldrh	r1, [r3, #4]
 8006a06:	88da      	ldrh	r2, [r3, #6]
 8006a08:	891d      	ldrh	r5, [r3, #8]
 8006a0a:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006a0e:	895b      	ldrh	r3, [r3, #10]
 8006a10:	8021      	strh	r1, [r4, #0]
 8006a12:	8062      	strh	r2, [r4, #2]
 8006a14:	4429      	add	r1, r5
 8006a16:	441a      	add	r2, r3
 8006a18:	3901      	subs	r1, #1
 8006a1a:	3a01      	subs	r2, #1
 8006a1c:	80a1      	strh	r1, [r4, #4]
 8006a1e:	80e2      	strh	r2, [r4, #6]
 8006a20:	f004 ff38 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006a24:	b003      	add	sp, #12
 8006a26:	bd30      	pop	{r4, r5, pc}

08006a28 <_XY2PTR>:
 8006a28:	4b0e      	ldr	r3, [pc, #56]	; (8006a64 <_XY2PTR+0x3c>)
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a2e:	4605      	mov	r5, r0
 8006a30:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006a32:	460e      	mov	r6, r1
 8006a34:	f004 ff20 	bl	800b878 <GUI_ALLOC_LockH>
 8006a38:	4603      	mov	r3, r0
 8006a3a:	a802      	add	r0, sp, #8
 8006a3c:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8006a40:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006a44:	f103 0118 	add.w	r1, r3, #24
 8006a48:	1b36      	subs	r6, r6, r4
 8006a4a:	68dc      	ldr	r4, [r3, #12]
 8006a4c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006a50:	fb04 1406 	mla	r4, r4, r6, r1
 8006a54:	1aed      	subs	r5, r5, r3
 8006a56:	f004 ff1d 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006a5a:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8006a5e:	4620      	mov	r0, r4
 8006a60:	b002      	add	sp, #8
 8006a62:	bd70      	pop	{r4, r5, r6, pc}
 8006a64:	200000b8 	.word	0x200000b8

08006a68 <_GetPixelIndex>:
 8006a68:	b508      	push	{r3, lr}
 8006a6a:	4608      	mov	r0, r1
 8006a6c:	4611      	mov	r1, r2
 8006a6e:	f7ff ffdb 	bl	8006a28 <_XY2PTR>
 8006a72:	6800      	ldr	r0, [r0, #0]
 8006a74:	bd08      	pop	{r3, pc}
	...

08006a78 <_XorPixel>:
 8006a78:	4b15      	ldr	r3, [pc, #84]	; (8006ad0 <_XorPixel+0x58>)
 8006a7a:	681b      	ldr	r3, [r3, #0]
 8006a7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a7e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006a80:	4615      	mov	r5, r2
 8006a82:	460e      	mov	r6, r1
 8006a84:	f004 fef8 	bl	800b878 <GUI_ALLOC_LockH>
 8006a88:	4629      	mov	r1, r5
 8006a8a:	9000      	str	r0, [sp, #0]
 8006a8c:	4630      	mov	r0, r6
 8006a8e:	f7ff ffcb 	bl	8006a28 <_XY2PTR>
 8006a92:	9b00      	ldr	r3, [sp, #0]
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	691b      	ldr	r3, [r3, #16]
 8006a98:	4604      	mov	r4, r0
 8006a9a:	689b      	ldr	r3, [r3, #8]
 8006a9c:	4798      	blx	r3
 8006a9e:	6823      	ldr	r3, [r4, #0]
 8006aa0:	4058      	eors	r0, r3
 8006aa2:	9b00      	ldr	r3, [sp, #0]
 8006aa4:	6020      	str	r0, [r4, #0]
 8006aa6:	6958      	ldr	r0, [r3, #20]
 8006aa8:	b160      	cbz	r0, 8006ac4 <_XorPixel+0x4c>
 8006aaa:	f004 fee5 	bl	800b878 <GUI_ALLOC_LockH>
 8006aae:	ac02      	add	r4, sp, #8
 8006ab0:	6883      	ldr	r3, [r0, #8]
 8006ab2:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006ab6:	681b      	ldr	r3, [r3, #0]
 8006ab8:	4631      	mov	r1, r6
 8006aba:	462a      	mov	r2, r5
 8006abc:	4798      	blx	r3
 8006abe:	4620      	mov	r0, r4
 8006ac0:	f004 fee8 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006ac4:	4668      	mov	r0, sp
 8006ac6:	f004 fee5 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006aca:	b002      	add	sp, #8
 8006acc:	bd70      	pop	{r4, r5, r6, pc}
 8006ace:	bf00      	nop
 8006ad0:	200000b8 	.word	0x200000b8

08006ad4 <_SetPixelIndex>:
 8006ad4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006ad6:	461c      	mov	r4, r3
 8006ad8:	4b10      	ldr	r3, [pc, #64]	; (8006b1c <_SetPixelIndex+0x48>)
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006ade:	460e      	mov	r6, r1
 8006ae0:	4615      	mov	r5, r2
 8006ae2:	f004 fec9 	bl	800b878 <GUI_ALLOC_LockH>
 8006ae6:	4629      	mov	r1, r5
 8006ae8:	9000      	str	r0, [sp, #0]
 8006aea:	4630      	mov	r0, r6
 8006aec:	f7ff ff9c 	bl	8006a28 <_XY2PTR>
 8006af0:	9b00      	ldr	r3, [sp, #0]
 8006af2:	6004      	str	r4, [r0, #0]
 8006af4:	6958      	ldr	r0, [r3, #20]
 8006af6:	b160      	cbz	r0, 8006b12 <_SetPixelIndex+0x3e>
 8006af8:	f004 febe 	bl	800b878 <GUI_ALLOC_LockH>
 8006afc:	ac02      	add	r4, sp, #8
 8006afe:	6883      	ldr	r3, [r0, #8]
 8006b00:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006b04:	681b      	ldr	r3, [r3, #0]
 8006b06:	4631      	mov	r1, r6
 8006b08:	462a      	mov	r2, r5
 8006b0a:	4798      	blx	r3
 8006b0c:	4620      	mov	r0, r4
 8006b0e:	f004 fec1 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006b12:	4668      	mov	r0, sp
 8006b14:	f004 febe 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006b18:	b002      	add	sp, #8
 8006b1a:	bd70      	pop	{r4, r5, r6, pc}
 8006b1c:	200000b8 	.word	0x200000b8

08006b20 <_DrawVLine>:
 8006b20:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b24:	4d2c      	ldr	r5, [pc, #176]	; (8006bd8 <_DrawVLine+0xb8>)
 8006b26:	461e      	mov	r6, r3
 8006b28:	682b      	ldr	r3, [r5, #0]
 8006b2a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006b2c:	460f      	mov	r7, r1
 8006b2e:	4614      	mov	r4, r2
 8006b30:	f004 fea2 	bl	800b878 <GUI_ALLOC_LockH>
 8006b34:	9000      	str	r0, [sp, #0]
 8006b36:	6940      	ldr	r0, [r0, #20]
 8006b38:	46a9      	mov	r9, r5
 8006b3a:	b108      	cbz	r0, 8006b40 <_DrawVLine+0x20>
 8006b3c:	f004 fe9c 	bl	800b878 <GUI_ALLOC_LockH>
 8006b40:	9001      	str	r0, [sp, #4]
 8006b42:	4621      	mov	r1, r4
 8006b44:	4638      	mov	r0, r7
 8006b46:	f7ff ff6f 	bl	8006a28 <_XY2PTR>
 8006b4a:	f8d9 2000 	ldr.w	r2, [r9]
 8006b4e:	9b00      	ldr	r3, [sp, #0]
 8006b50:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 8006b52:	7c12      	ldrb	r2, [r2, #16]
 8006b54:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8006b58:	f8d1 9000 	ldr.w	r9, [r1]
 8006b5c:	07d2      	lsls	r2, r2, #31
 8006b5e:	4605      	mov	r5, r0
 8006b60:	d51f      	bpl.n	8006ba2 <_DrawVLine+0x82>
 8006b62:	681b      	ldr	r3, [r3, #0]
 8006b64:	691b      	ldr	r3, [r3, #16]
 8006b66:	689b      	ldr	r3, [r3, #8]
 8006b68:	4798      	blx	r3
 8006b6a:	4680      	mov	r8, r0
 8006b6c:	9801      	ldr	r0, [sp, #4]
 8006b6e:	b128      	cbz	r0, 8006b7c <_DrawVLine+0x5c>
 8006b70:	6882      	ldr	r2, [r0, #8]
 8006b72:	4639      	mov	r1, r7
 8006b74:	f8d2 c000 	ldr.w	ip, [r2]
 8006b78:	4622      	mov	r2, r4
 8006b7a:	47e0      	blx	ip
 8006b7c:	682b      	ldr	r3, [r5, #0]
 8006b7e:	ea83 0308 	eor.w	r3, r3, r8
 8006b82:	602b      	str	r3, [r5, #0]
 8006b84:	9b00      	ldr	r3, [sp, #0]
 8006b86:	3401      	adds	r4, #1
 8006b88:	68db      	ldr	r3, [r3, #12]
 8006b8a:	42b4      	cmp	r4, r6
 8006b8c:	441d      	add	r5, r3
 8006b8e:	dded      	ble.n	8006b6c <_DrawVLine+0x4c>
 8006b90:	4668      	mov	r0, sp
 8006b92:	f004 fe7f 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006b96:	9b01      	ldr	r3, [sp, #4]
 8006b98:	b1d3      	cbz	r3, 8006bd0 <_DrawVLine+0xb0>
 8006b9a:	a801      	add	r0, sp, #4
 8006b9c:	f004 fe7a 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006ba0:	e016      	b.n	8006bd0 <_DrawVLine+0xb0>
 8006ba2:	9b01      	ldr	r3, [sp, #4]
 8006ba4:	b163      	cbz	r3, 8006bc0 <_DrawVLine+0xa0>
 8006ba6:	9801      	ldr	r0, [sp, #4]
 8006ba8:	6883      	ldr	r3, [r0, #8]
 8006baa:	4622      	mov	r2, r4
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	4639      	mov	r1, r7
 8006bb0:	3401      	adds	r4, #1
 8006bb2:	4798      	blx	r3
 8006bb4:	42b4      	cmp	r4, r6
 8006bb6:	f8c5 9000 	str.w	r9, [r5]
 8006bba:	4445      	add	r5, r8
 8006bbc:	ddf3      	ble.n	8006ba6 <_DrawVLine+0x86>
 8006bbe:	e7e7      	b.n	8006b90 <_DrawVLine+0x70>
 8006bc0:	1b34      	subs	r4, r6, r4
 8006bc2:	3401      	adds	r4, #1
 8006bc4:	3c01      	subs	r4, #1
 8006bc6:	f8c5 9000 	str.w	r9, [r5]
 8006bca:	4445      	add	r5, r8
 8006bcc:	d1fa      	bne.n	8006bc4 <_DrawVLine+0xa4>
 8006bce:	e7df      	b.n	8006b90 <_DrawVLine+0x70>
 8006bd0:	b003      	add	sp, #12
 8006bd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006bd6:	bf00      	nop
 8006bd8:	200000b8 	.word	0x200000b8

08006bdc <_FillRect>:
 8006bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006be0:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8006c90 <_FillRect+0xb4>
 8006be4:	4614      	mov	r4, r2
 8006be6:	f8db 2000 	ldr.w	r2, [fp]
 8006bea:	b085      	sub	sp, #20
 8006bec:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8006bee:	460f      	mov	r7, r1
 8006bf0:	461d      	mov	r5, r3
 8006bf2:	f004 fe41 	bl	800b878 <GUI_ALLOC_LockH>
 8006bf6:	4621      	mov	r1, r4
 8006bf8:	9002      	str	r0, [sp, #8]
 8006bfa:	4638      	mov	r0, r7
 8006bfc:	f7ff ff14 	bl	8006a28 <_XY2PTR>
 8006c00:	9a02      	ldr	r2, [sp, #8]
 8006c02:	f8db 3000 	ldr.w	r3, [fp]
 8006c06:	f8d2 900c 	ldr.w	r9, [r2, #12]
 8006c0a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006c0c:	4606      	mov	r6, r0
 8006c0e:	6950      	ldr	r0, [r2, #20]
 8006c10:	f8d3 a000 	ldr.w	sl, [r3]
 8006c14:	1bed      	subs	r5, r5, r7
 8006c16:	3501      	adds	r5, #1
 8006c18:	b338      	cbz	r0, 8006c6a <_FillRect+0x8e>
 8006c1a:	f004 fe2d 	bl	800b878 <GUI_ALLOC_LockH>
 8006c1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006c20:	f10d 0810 	add.w	r8, sp, #16
 8006c24:	1b13      	subs	r3, r2, r4
 8006c26:	f848 0d04 	str.w	r0, [r8, #-4]!
 8006c2a:	3301      	adds	r3, #1
 8006c2c:	9300      	str	r3, [sp, #0]
 8006c2e:	4639      	mov	r1, r7
 8006c30:	4622      	mov	r2, r4
 8006c32:	462b      	mov	r3, r5
 8006c34:	f007 f8b2 	bl	800dd9c <GUI_USAGE_AddRect>
 8006c38:	4640      	mov	r0, r8
 8006c3a:	f004 fe2b 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006c3e:	e014      	b.n	8006c6a <_FillRect+0x8e>
 8006c40:	f8db 3000 	ldr.w	r3, [fp]
 8006c44:	7c1b      	ldrb	r3, [r3, #16]
 8006c46:	07db      	lsls	r3, r3, #31
 8006c48:	d513      	bpl.n	8006c72 <_FillRect+0x96>
 8006c4a:	9b02      	ldr	r3, [sp, #8]
 8006c4c:	681b      	ldr	r3, [r3, #0]
 8006c4e:	691b      	ldr	r3, [r3, #16]
 8006c50:	689b      	ldr	r3, [r3, #8]
 8006c52:	4798      	blx	r3
 8006c54:	4632      	mov	r2, r6
 8006c56:	462b      	mov	r3, r5
 8006c58:	6811      	ldr	r1, [r2, #0]
 8006c5a:	3b01      	subs	r3, #1
 8006c5c:	ea81 0100 	eor.w	r1, r1, r0
 8006c60:	f842 1b04 	str.w	r1, [r2], #4
 8006c64:	d1f8      	bne.n	8006c58 <_FillRect+0x7c>
 8006c66:	444e      	add	r6, r9
 8006c68:	3401      	adds	r4, #1
 8006c6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c6c:	429c      	cmp	r4, r3
 8006c6e:	dde7      	ble.n	8006c40 <_FillRect+0x64>
 8006c70:	e008      	b.n	8006c84 <_FillRect+0xa8>
 8006c72:	2d00      	cmp	r5, #0
 8006c74:	ddf7      	ble.n	8006c66 <_FillRect+0x8a>
 8006c76:	462b      	mov	r3, r5
 8006c78:	4632      	mov	r2, r6
 8006c7a:	3b01      	subs	r3, #1
 8006c7c:	f842 ab04 	str.w	sl, [r2], #4
 8006c80:	d1fb      	bne.n	8006c7a <_FillRect+0x9e>
 8006c82:	e7f0      	b.n	8006c66 <_FillRect+0x8a>
 8006c84:	a802      	add	r0, sp, #8
 8006c86:	f004 fe05 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006c8a:	b005      	add	sp, #20
 8006c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c90:	200000b8 	.word	0x200000b8

08006c94 <_DrawHLine>:
 8006c94:	b507      	push	{r0, r1, r2, lr}
 8006c96:	9200      	str	r2, [sp, #0]
 8006c98:	f7ff ffa0 	bl	8006bdc <_FillRect>
 8006c9c:	b003      	add	sp, #12
 8006c9e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08006ca4 <_DrawBitmap>:
 8006ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ca8:	4c90      	ldr	r4, [pc, #576]	; (8006eec <_DrawBitmap+0x248>)
 8006caa:	b091      	sub	sp, #68	; 0x44
 8006cac:	469b      	mov	fp, r3
 8006cae:	6823      	ldr	r3, [r4, #0]
 8006cb0:	9008      	str	r0, [sp, #32]
 8006cb2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006cb4:	9207      	str	r2, [sp, #28]
 8006cb6:	460e      	mov	r6, r1
 8006cb8:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 8006cbc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8006cbe:	2800      	cmp	r0, #0
 8006cc0:	f000 838b 	beq.w	80073da <_DrawBitmap+0x736>
 8006cc4:	f004 fdd8 	bl	800b878 <GUI_ALLOC_LockH>
 8006cc8:	900e      	str	r0, [sp, #56]	; 0x38
 8006cca:	6940      	ldr	r0, [r0, #20]
 8006ccc:	b108      	cbz	r0, 8006cd2 <_DrawBitmap+0x2e>
 8006cce:	f004 fdd3 	bl	800b878 <GUI_ALLOC_LockH>
 8006cd2:	900f      	str	r0, [sp, #60]	; 0x3c
 8006cd4:	a810      	add	r0, sp, #64	; 0x40
 8006cd6:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8006cda:	68db      	ldr	r3, [r3, #12]
 8006cdc:	930a      	str	r3, [sp, #40]	; 0x28
 8006cde:	f004 fdd9 	bl	800b894 <GUI_ALLOC_UnlockH>
 8006ce2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006ce4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006ce6:	4437      	add	r7, r6
 8006ce8:	9704      	str	r7, [sp, #16]
 8006cea:	b150      	cbz	r0, 8006d02 <_DrawBitmap+0x5e>
 8006cec:	6823      	ldr	r3, [r4, #0]
 8006cee:	7c1b      	ldrb	r3, [r3, #16]
 8006cf0:	079c      	lsls	r4, r3, #30
 8006cf2:	d406      	bmi.n	8006d02 <_DrawBitmap+0x5e>
 8006cf4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006cf6:	9700      	str	r7, [sp, #0]
 8006cf8:	9904      	ldr	r1, [sp, #16]
 8006cfa:	9a07      	ldr	r2, [sp, #28]
 8006cfc:	465b      	mov	r3, fp
 8006cfe:	f007 f84d 	bl	800dd9c <GUI_USAGE_AddRect>
 8006d02:	9804      	ldr	r0, [sp, #16]
 8006d04:	9907      	ldr	r1, [sp, #28]
 8006d06:	f7ff fe8f 	bl	8006a28 <_XY2PTR>
 8006d0a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006d0c:	2f17      	cmp	r7, #23
 8006d0e:	4606      	mov	r6, r0
 8006d10:	dd64      	ble.n	8006ddc <_DrawBitmap+0x138>
 8006d12:	ea4f 078b 	mov.w	r7, fp, lsl #2
 8006d16:	9706      	str	r7, [sp, #24]
 8006d18:	f04f 0900 	mov.w	r9, #0
 8006d1c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006d1e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006d20:	45b9      	cmp	r9, r7
 8006d22:	da57      	bge.n	8006dd4 <_DrawBitmap+0x130>
 8006d24:	b130      	cbz	r0, 8006d34 <_DrawBitmap+0x90>
 8006d26:	6883      	ldr	r3, [r0, #8]
 8006d28:	9a07      	ldr	r2, [sp, #28]
 8006d2a:	685c      	ldr	r4, [r3, #4]
 8006d2c:	9904      	ldr	r1, [sp, #16]
 8006d2e:	444a      	add	r2, r9
 8006d30:	465b      	mov	r3, fp
 8006d32:	47a0      	blx	r4
 8006d34:	9f08      	ldr	r7, [sp, #32]
 8006d36:	693b      	ldr	r3, [r7, #16]
 8006d38:	68d8      	ldr	r0, [r3, #12]
 8006d3a:	b130      	cbz	r0, 8006d4a <_DrawBitmap+0xa6>
 8006d3c:	4b6c      	ldr	r3, [pc, #432]	; (8006ef0 <_DrawBitmap+0x24c>)
 8006d3e:	9a06      	ldr	r2, [sp, #24]
 8006d40:	681b      	ldr	r3, [r3, #0]
 8006d42:	4630      	mov	r0, r6
 8006d44:	4651      	mov	r1, sl
 8006d46:	4798      	blx	r3
 8006d48:	e03d      	b.n	8006dc6 <_DrawBitmap+0x122>
 8006d4a:	685b      	ldr	r3, [r3, #4]
 8006d4c:	4798      	blx	r3
 8006d4e:	0e00      	lsrs	r0, r0, #24
 8006d50:	9005      	str	r0, [sp, #20]
 8006d52:	4635      	mov	r5, r6
 8006d54:	465f      	mov	r7, fp
 8006d56:	4654      	mov	r4, sl
 8006d58:	463b      	mov	r3, r7
 8006d5a:	4622      	mov	r2, r4
 8006d5c:	f04f 0800 	mov.w	r8, #0
 8006d60:	f852 1b04 	ldr.w	r1, [r2], #4
 8006d64:	9805      	ldr	r0, [sp, #20]
 8006d66:	0e09      	lsrs	r1, r1, #24
 8006d68:	4281      	cmp	r1, r0
 8006d6a:	9805      	ldr	r0, [sp, #20]
 8006d6c:	bf08      	it	eq
 8006d6e:	f108 0801 	addeq.w	r8, r8, #1
 8006d72:	4281      	cmp	r1, r0
 8006d74:	f103 33ff 	add.w	r3, r3, #4294967295
 8006d78:	d012      	beq.n	8006da0 <_DrawBitmap+0xfc>
 8006d7a:	f1b8 0f00 	cmp.w	r8, #0
 8006d7e:	d012      	beq.n	8006da6 <_DrawBitmap+0x102>
 8006d80:	4a5b      	ldr	r2, [pc, #364]	; (8006ef0 <_DrawBitmap+0x24c>)
 8006d82:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8006d86:	f8d2 c000 	ldr.w	ip, [r2]
 8006d8a:	9303      	str	r3, [sp, #12]
 8006d8c:	4628      	mov	r0, r5
 8006d8e:	4621      	mov	r1, r4
 8006d90:	461a      	mov	r2, r3
 8006d92:	47e0      	blx	ip
 8006d94:	9b03      	ldr	r3, [sp, #12]
 8006d96:	ebc8 0707 	rsb	r7, r8, r7
 8006d9a:	441d      	add	r5, r3
 8006d9c:	441c      	add	r4, r3
 8006d9e:	e010      	b.n	8006dc2 <_DrawBitmap+0x11e>
 8006da0:	2b00      	cmp	r3, #0
 8006da2:	d1dd      	bne.n	8006d60 <_DrawBitmap+0xbc>
 8006da4:	e7e9      	b.n	8006d7a <_DrawBitmap+0xd6>
 8006da6:	6820      	ldr	r0, [r4, #0]
 8006da8:	0e02      	lsrs	r2, r0, #24
 8006daa:	2aff      	cmp	r2, #255	; 0xff
 8006dac:	d006      	beq.n	8006dbc <_DrawBitmap+0x118>
 8006dae:	4b51      	ldr	r3, [pc, #324]	; (8006ef4 <_DrawBitmap+0x250>)
 8006db0:	6829      	ldr	r1, [r5, #0]
 8006db2:	681b      	ldr	r3, [r3, #0]
 8006db4:	43d2      	mvns	r2, r2
 8006db6:	b2d2      	uxtb	r2, r2
 8006db8:	4798      	blx	r3
 8006dba:	6028      	str	r0, [r5, #0]
 8006dbc:	3504      	adds	r5, #4
 8006dbe:	3404      	adds	r4, #4
 8006dc0:	3f01      	subs	r7, #1
 8006dc2:	2f00      	cmp	r7, #0
 8006dc4:	d1c8      	bne.n	8006d58 <_DrawBitmap+0xb4>
 8006dc6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006dc8:	44ba      	add	sl, r7
 8006dca:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006dcc:	f109 0901 	add.w	r9, r9, #1
 8006dd0:	443e      	add	r6, r7
 8006dd2:	e7a3      	b.n	8006d1c <_DrawBitmap+0x78>
 8006dd4:	2800      	cmp	r0, #0
 8006dd6:	f040 82fd 	bne.w	80073d4 <_DrawBitmap+0x730>
 8006dda:	e2fe      	b.n	80073da <_DrawBitmap+0x736>
 8006ddc:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006dde:	2f10      	cmp	r7, #16
 8006de0:	d134      	bne.n	8006e4c <_DrawBitmap+0x1a8>
 8006de2:	1f06      	subs	r6, r0, #4
 8006de4:	2500      	movs	r5, #0
 8006de6:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006de8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006dea:	42bd      	cmp	r5, r7
 8006dec:	f280 80a3 	bge.w	8006f36 <_DrawBitmap+0x292>
 8006df0:	9f07      	ldr	r7, [sp, #28]
 8006df2:	442f      	add	r7, r5
 8006df4:	b13c      	cbz	r4, 8006e06 <_DrawBitmap+0x162>
 8006df6:	68a3      	ldr	r3, [r4, #8]
 8006df8:	9904      	ldr	r1, [sp, #16]
 8006dfa:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8006dfe:	4620      	mov	r0, r4
 8006e00:	463a      	mov	r2, r7
 8006e02:	465b      	mov	r3, fp
 8006e04:	47e0      	blx	ip
 8006e06:	f1aa 0902 	sub.w	r9, sl, #2
 8006e0a:	9605      	str	r6, [sp, #20]
 8006e0c:	46d8      	mov	r8, fp
 8006e0e:	9808      	ldr	r0, [sp, #32]
 8006e10:	9904      	ldr	r1, [sp, #16]
 8006e12:	6903      	ldr	r3, [r0, #16]
 8006e14:	f839 0f02 	ldrh.w	r0, [r9, #2]!
 8006e18:	685b      	ldr	r3, [r3, #4]
 8006e1a:	4459      	add	r1, fp
 8006e1c:	ebc8 0101 	rsb	r1, r8, r1
 8006e20:	9103      	str	r1, [sp, #12]
 8006e22:	4798      	blx	r3
 8006e24:	9b05      	ldr	r3, [sp, #20]
 8006e26:	9903      	ldr	r1, [sp, #12]
 8006e28:	f843 0f04 	str.w	r0, [r3, #4]!
 8006e2c:	9305      	str	r3, [sp, #20]
 8006e2e:	b124      	cbz	r4, 8006e3a <_DrawBitmap+0x196>
 8006e30:	68a3      	ldr	r3, [r4, #8]
 8006e32:	4620      	mov	r0, r4
 8006e34:	681b      	ldr	r3, [r3, #0]
 8006e36:	463a      	mov	r2, r7
 8006e38:	4798      	blx	r3
 8006e3a:	f1b8 0801 	subs.w	r8, r8, #1
 8006e3e:	d1e6      	bne.n	8006e0e <_DrawBitmap+0x16a>
 8006e40:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006e42:	44ba      	add	sl, r7
 8006e44:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006e46:	3501      	adds	r5, #1
 8006e48:	443e      	add	r6, r7
 8006e4a:	e7cc      	b.n	8006de6 <_DrawBitmap+0x142>
 8006e4c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006e4e:	2f08      	cmp	r7, #8
 8006e50:	f100 0604 	add.w	r6, r0, #4
 8006e54:	d173      	bne.n	8006f3e <_DrawBitmap+0x29a>
 8006e56:	9f07      	ldr	r7, [sp, #28]
 8006e58:	9907      	ldr	r1, [sp, #28]
 8006e5a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006e5c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006e5e:	1a7b      	subs	r3, r7, r1
 8006e60:	4293      	cmp	r3, r2
 8006e62:	f1a6 0004 	sub.w	r0, r6, #4
 8006e66:	da66      	bge.n	8006f36 <_DrawBitmap+0x292>
 8006e68:	4b20      	ldr	r3, [pc, #128]	; (8006eec <_DrawBitmap+0x248>)
 8006e6a:	681b      	ldr	r3, [r3, #0]
 8006e6c:	7c1b      	ldrb	r3, [r3, #16]
 8006e6e:	b36d      	cbz	r5, 8006ecc <_DrawBitmap+0x228>
 8006e70:	f013 0303 	ands.w	r3, r3, #3
 8006e74:	d005      	beq.n	8006e82 <_DrawBitmap+0x1de>
 8006e76:	2b02      	cmp	r3, #2
 8006e78:	d157      	bne.n	8006f2a <_DrawBitmap+0x286>
 8006e7a:	46b1      	mov	r9, r6
 8006e7c:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006e80:	e01c      	b.n	8006ebc <_DrawBitmap+0x218>
 8006e82:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8006e86:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8006e8a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8006e8e:	3301      	adds	r3, #1
 8006e90:	455b      	cmp	r3, fp
 8006e92:	d1f6      	bne.n	8006e82 <_DrawBitmap+0x1de>
 8006e94:	e049      	b.n	8006f2a <_DrawBitmap+0x286>
 8006e96:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8006e9a:	f849 3c04 	str.w	r3, [r9, #-4]
 8006e9e:	b12c      	cbz	r4, 8006eac <_DrawBitmap+0x208>
 8006ea0:	68a3      	ldr	r3, [r4, #8]
 8006ea2:	4620      	mov	r0, r4
 8006ea4:	681b      	ldr	r3, [r3, #0]
 8006ea6:	4641      	mov	r1, r8
 8006ea8:	463a      	mov	r2, r7
 8006eaa:	4798      	blx	r3
 8006eac:	9b04      	ldr	r3, [sp, #16]
 8006eae:	f108 0801 	add.w	r8, r8, #1
 8006eb2:	445b      	add	r3, fp
 8006eb4:	4543      	cmp	r3, r8
 8006eb6:	f109 0904 	add.w	r9, r9, #4
 8006eba:	d036      	beq.n	8006f2a <_DrawBitmap+0x286>
 8006ebc:	9804      	ldr	r0, [sp, #16]
 8006ebe:	ebc0 030a 	rsb	r3, r0, sl
 8006ec2:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006ec6:	2b00      	cmp	r3, #0
 8006ec8:	d0f0      	beq.n	8006eac <_DrawBitmap+0x208>
 8006eca:	e7e4      	b.n	8006e96 <_DrawBitmap+0x1f2>
 8006ecc:	f013 0303 	ands.w	r3, r3, #3
 8006ed0:	d005      	beq.n	8006ede <_DrawBitmap+0x23a>
 8006ed2:	2b02      	cmp	r3, #2
 8006ed4:	d129      	bne.n	8006f2a <_DrawBitmap+0x286>
 8006ed6:	46b1      	mov	r9, r6
 8006ed8:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006edc:	e01d      	b.n	8006f1a <_DrawBitmap+0x276>
 8006ede:	4b04      	ldr	r3, [pc, #16]	; (8006ef0 <_DrawBitmap+0x24c>)
 8006ee0:	4651      	mov	r1, sl
 8006ee2:	681b      	ldr	r3, [r3, #0]
 8006ee4:	465a      	mov	r2, fp
 8006ee6:	4798      	blx	r3
 8006ee8:	e01f      	b.n	8006f2a <_DrawBitmap+0x286>
 8006eea:	bf00      	nop
 8006eec:	200000b8 	.word	0x200000b8
 8006ef0:	200000a8 	.word	0x200000a8
 8006ef4:	200000ac 	.word	0x200000ac
 8006ef8:	f849 3c04 	str.w	r3, [r9, #-4]
 8006efc:	b12c      	cbz	r4, 8006f0a <_DrawBitmap+0x266>
 8006efe:	68a3      	ldr	r3, [r4, #8]
 8006f00:	4620      	mov	r0, r4
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	4641      	mov	r1, r8
 8006f06:	463a      	mov	r2, r7
 8006f08:	4798      	blx	r3
 8006f0a:	9b04      	ldr	r3, [sp, #16]
 8006f0c:	f108 0801 	add.w	r8, r8, #1
 8006f10:	445b      	add	r3, fp
 8006f12:	4543      	cmp	r3, r8
 8006f14:	f109 0904 	add.w	r9, r9, #4
 8006f18:	d007      	beq.n	8006f2a <_DrawBitmap+0x286>
 8006f1a:	9904      	ldr	r1, [sp, #16]
 8006f1c:	ebc1 030a 	rsb	r3, r1, sl
 8006f20:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	d0f0      	beq.n	8006f0a <_DrawBitmap+0x266>
 8006f28:	e7e6      	b.n	8006ef8 <_DrawBitmap+0x254>
 8006f2a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8006f2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006f2e:	4492      	add	sl, r2
 8006f30:	3701      	adds	r7, #1
 8006f32:	441e      	add	r6, r3
 8006f34:	e790      	b.n	8006e58 <_DrawBitmap+0x1b4>
 8006f36:	2c00      	cmp	r4, #0
 8006f38:	f040 824c 	bne.w	80073d4 <_DrawBitmap+0x730>
 8006f3c:	e24d      	b.n	80073da <_DrawBitmap+0x736>
 8006f3e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006f40:	4bb2      	ldr	r3, [pc, #712]	; (800720c <_DrawBitmap+0x568>)
 8006f42:	9608      	str	r6, [sp, #32]
 8006f44:	007f      	lsls	r7, r7, #1
 8006f46:	970c      	str	r7, [sp, #48]	; 0x30
 8006f48:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006f4a:	00bf      	lsls	r7, r7, #2
 8006f4c:	970d      	str	r7, [sp, #52]	; 0x34
 8006f4e:	9f07      	ldr	r7, [sp, #28]
 8006f50:	9705      	str	r7, [sp, #20]
 8006f52:	2d00      	cmp	r5, #0
 8006f54:	bf08      	it	eq
 8006f56:	461d      	moveq	r5, r3
 8006f58:	9f08      	ldr	r7, [sp, #32]
 8006f5a:	9807      	ldr	r0, [sp, #28]
 8006f5c:	1f3c      	subs	r4, r7, #4
 8006f5e:	9f05      	ldr	r7, [sp, #20]
 8006f60:	1a3b      	subs	r3, r7, r0
 8006f62:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006f64:	42bb      	cmp	r3, r7
 8006f66:	f280 8233 	bge.w	80073d0 <_DrawBitmap+0x72c>
 8006f6a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006f6c:	2f02      	cmp	r7, #2
 8006f6e:	f000 80ad 	beq.w	80070cc <_DrawBitmap+0x428>
 8006f72:	2f04      	cmp	r7, #4
 8006f74:	f000 8150 	beq.w	8007218 <_DrawBitmap+0x574>
 8006f78:	2f01      	cmp	r7, #1
 8006f7a:	f040 821f 	bne.w	80073bc <_DrawBitmap+0x718>
 8006f7e:	f8df 9294 	ldr.w	r9, [pc, #660]	; 8007214 <_DrawBitmap+0x570>
 8006f82:	f8d9 3000 	ldr.w	r3, [r9]
 8006f86:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006f88:	f004 fc76 	bl	800b878 <GUI_ALLOC_LockH>
 8006f8c:	f89a 3000 	ldrb.w	r3, [sl]
 8006f90:	4a9f      	ldr	r2, [pc, #636]	; (8007210 <_DrawBitmap+0x56c>)
 8006f92:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006f94:	5cd6      	ldrb	r6, [r2, r3]
 8006f96:	f8d9 3000 	ldr.w	r3, [r9]
 8006f9a:	900e      	str	r0, [sp, #56]	; 0x38
 8006f9c:	7c1b      	ldrb	r3, [r3, #16]
 8006f9e:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8006fa2:	f003 0303 	and.w	r3, r3, #3
 8006fa6:	2b02      	cmp	r3, #2
 8006fa8:	465f      	mov	r7, fp
 8006faa:	f1c1 0808 	rsb	r8, r1, #8
 8006fae:	fa46 f601 	asr.w	r6, r6, r1
 8006fb2:	d020      	beq.n	8006ff6 <_DrawBitmap+0x352>
 8006fb4:	2b03      	cmp	r3, #3
 8006fb6:	d061      	beq.n	800707c <_DrawBitmap+0x3d8>
 8006fb8:	2b01      	cmp	r3, #1
 8006fba:	d05f      	beq.n	800707c <_DrawBitmap+0x3d8>
 8006fbc:	4652      	mov	r2, sl
 8006fbe:	4547      	cmp	r7, r8
 8006fc0:	bf38      	it	cc
 8006fc2:	46b8      	movcc	r8, r7
 8006fc4:	ebc8 0707 	rsb	r7, r8, r7
 8006fc8:	4643      	mov	r3, r8
 8006fca:	4621      	mov	r1, r4
 8006fcc:	f006 0001 	and.w	r0, r6, #1
 8006fd0:	3b01      	subs	r3, #1
 8006fd2:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8006fd6:	f841 0b04 	str.w	r0, [r1], #4
 8006fda:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8006fde:	d1f5      	bne.n	8006fcc <_DrawBitmap+0x328>
 8006fe0:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006fe4:	2f00      	cmp	r7, #0
 8006fe6:	d06d      	beq.n	80070c4 <_DrawBitmap+0x420>
 8006fe8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006fec:	4988      	ldr	r1, [pc, #544]	; (8007210 <_DrawBitmap+0x56c>)
 8006fee:	f04f 0808 	mov.w	r8, #8
 8006ff2:	5cce      	ldrb	r6, [r1, r3]
 8006ff4:	e7e3      	b.n	8006fbe <_DrawBitmap+0x31a>
 8006ff6:	686b      	ldr	r3, [r5, #4]
 8006ff8:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8006ffc:	930b      	str	r3, [sp, #44]	; 0x2c
 8006ffe:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8007002:	4547      	cmp	r7, r8
 8007004:	bf38      	it	cc
 8007006:	46b8      	movcc	r8, r7
 8007008:	ebc8 0707 	rsb	r7, r8, r7
 800700c:	f1bc 0f00 	cmp.w	ip, #0
 8007010:	d026      	beq.n	8007060 <_DrawBitmap+0x3bc>
 8007012:	b91e      	cbnz	r6, 800701c <_DrawBitmap+0x378>
 8007014:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8007018:	44c1      	add	r9, r8
 800701a:	e025      	b.n	8007068 <_DrawBitmap+0x3c4>
 800701c:	07f0      	lsls	r0, r6, #31
 800701e:	d50c      	bpl.n	800703a <_DrawBitmap+0x396>
 8007020:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8007024:	9a05      	ldr	r2, [sp, #20]
 8007026:	681b      	ldr	r3, [r3, #0]
 8007028:	f8cd c00c 	str.w	ip, [sp, #12]
 800702c:	4660      	mov	r0, ip
 800702e:	4649      	mov	r1, r9
 8007030:	4798      	blx	r3
 8007032:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007034:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007038:	6023      	str	r3, [r4, #0]
 800703a:	f1b8 0801 	subs.w	r8, r8, #1
 800703e:	f109 0901 	add.w	r9, r9, #1
 8007042:	f104 0404 	add.w	r4, r4, #4
 8007046:	d00f      	beq.n	8007068 <_DrawBitmap+0x3c4>
 8007048:	0876      	lsrs	r6, r6, #1
 800704a:	e7e2      	b.n	8007012 <_DrawBitmap+0x36e>
 800704c:	07f1      	lsls	r1, r6, #31
 800704e:	bf44      	itt	mi
 8007050:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 8007052:	6023      	strmi	r3, [r4, #0]
 8007054:	f1b8 0801 	subs.w	r8, r8, #1
 8007058:	f104 0404 	add.w	r4, r4, #4
 800705c:	d004      	beq.n	8007068 <_DrawBitmap+0x3c4>
 800705e:	0876      	lsrs	r6, r6, #1
 8007060:	2e00      	cmp	r6, #0
 8007062:	d1f3      	bne.n	800704c <_DrawBitmap+0x3a8>
 8007064:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8007068:	b367      	cbz	r7, 80070c4 <_DrawBitmap+0x420>
 800706a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800706c:	4a68      	ldr	r2, [pc, #416]	; (8007210 <_DrawBitmap+0x56c>)
 800706e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8007072:	9009      	str	r0, [sp, #36]	; 0x24
 8007074:	5cd6      	ldrb	r6, [r2, r3]
 8007076:	f04f 0808 	mov.w	r8, #8
 800707a:	e7c2      	b.n	8007002 <_DrawBitmap+0x35e>
 800707c:	6803      	ldr	r3, [r0, #0]
 800707e:	691b      	ldr	r3, [r3, #16]
 8007080:	689b      	ldr	r3, [r3, #8]
 8007082:	4798      	blx	r3
 8007084:	4651      	mov	r1, sl
 8007086:	4547      	cmp	r7, r8
 8007088:	bf38      	it	cc
 800708a:	46b8      	movcc	r8, r7
 800708c:	ebc8 0707 	rsb	r7, r8, r7
 8007090:	1d23      	adds	r3, r4, #4
 8007092:	46c6      	mov	lr, r8
 8007094:	07f2      	lsls	r2, r6, #31
 8007096:	d504      	bpl.n	80070a2 <_DrawBitmap+0x3fe>
 8007098:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800709c:	4042      	eors	r2, r0
 800709e:	f843 2c04 	str.w	r2, [r3, #-4]
 80070a2:	f1be 0e01 	subs.w	lr, lr, #1
 80070a6:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80070aa:	f103 0304 	add.w	r3, r3, #4
 80070ae:	d1f1      	bne.n	8007094 <_DrawBitmap+0x3f0>
 80070b0:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 80070b4:	b137      	cbz	r7, 80070c4 <_DrawBitmap+0x420>
 80070b6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80070ba:	4a55      	ldr	r2, [pc, #340]	; (8007210 <_DrawBitmap+0x56c>)
 80070bc:	f04f 0808 	mov.w	r8, #8
 80070c0:	5cd6      	ldrb	r6, [r2, r3]
 80070c2:	e7e0      	b.n	8007086 <_DrawBitmap+0x3e2>
 80070c4:	a80e      	add	r0, sp, #56	; 0x38
 80070c6:	f004 fbe5 	bl	800b894 <GUI_ALLOC_UnlockH>
 80070ca:	e177      	b.n	80073bc <_DrawBitmap+0x718>
 80070cc:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80070ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80070d0:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 80070d4:	f1c7 0604 	rsb	r6, r7, #4
 80070d8:	f89a 7000 	ldrb.w	r7, [sl]
 80070dc:	409f      	lsls	r7, r3
 80070de:	4b4d      	ldr	r3, [pc, #308]	; (8007214 <_DrawBitmap+0x570>)
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	7c1b      	ldrb	r3, [r3, #16]
 80070e4:	f003 0303 	and.w	r3, r3, #3
 80070e8:	2b01      	cmp	r3, #1
 80070ea:	b2f6      	uxtb	r6, r6
 80070ec:	b2ff      	uxtb	r7, r7
 80070ee:	d066      	beq.n	80071be <_DrawBitmap+0x51a>
 80070f0:	d308      	bcc.n	8007104 <_DrawBitmap+0x460>
 80070f2:	2b02      	cmp	r3, #2
 80070f4:	f040 8162 	bne.w	80073bc <_DrawBitmap+0x718>
 80070f8:	9804      	ldr	r0, [sp, #16]
 80070fa:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80070fe:	46d8      	mov	r8, fp
 8007100:	9006      	str	r0, [sp, #24]
 8007102:	e03e      	b.n	8007182 <_DrawBitmap+0x4de>
 8007104:	4652      	mov	r2, sl
 8007106:	465b      	mov	r3, fp
 8007108:	429e      	cmp	r6, r3
 800710a:	bfc8      	it	gt
 800710c:	b2de      	uxtbgt	r6, r3
 800710e:	1b9b      	subs	r3, r3, r6
 8007110:	4631      	mov	r1, r6
 8007112:	4620      	mov	r0, r4
 8007114:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 8007118:	3901      	subs	r1, #1
 800711a:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 800711e:	f840 cb04 	str.w	ip, [r0], #4
 8007122:	00bf      	lsls	r7, r7, #2
 8007124:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8007128:	b2ff      	uxtb	r7, r7
 800712a:	d1f3      	bne.n	8007114 <_DrawBitmap+0x470>
 800712c:	3e01      	subs	r6, #1
 800712e:	b2f6      	uxtb	r6, r6
 8007130:	3601      	adds	r6, #1
 8007132:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8007136:	2b00      	cmp	r3, #0
 8007138:	f000 8140 	beq.w	80073bc <_DrawBitmap+0x718>
 800713c:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 8007140:	2604      	movs	r6, #4
 8007142:	e7e1      	b.n	8007108 <_DrawBitmap+0x464>
 8007144:	9906      	ldr	r1, [sp, #24]
 8007146:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800714a:	4449      	add	r1, r9
 800714c:	d122      	bne.n	8007194 <_DrawBitmap+0x4f0>
 800714e:	f109 0901 	add.w	r9, r9, #1
 8007152:	fa5f f289 	uxtb.w	r2, r9
 8007156:	00bf      	lsls	r7, r7, #2
 8007158:	4296      	cmp	r6, r2
 800715a:	b2ff      	uxtb	r7, r7
 800715c:	d1f2      	bne.n	8007144 <_DrawBitmap+0x4a0>
 800715e:	9f06      	ldr	r7, [sp, #24]
 8007160:	3e01      	subs	r6, #1
 8007162:	b2f6      	uxtb	r6, r6
 8007164:	1c7b      	adds	r3, r7, #1
 8007166:	1c72      	adds	r2, r6, #1
 8007168:	199e      	adds	r6, r3, r6
 800716a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 800716e:	9606      	str	r6, [sp, #24]
 8007170:	f1b8 0f00 	cmp.w	r8, #0
 8007174:	f000 8122 	beq.w	80073bc <_DrawBitmap+0x718>
 8007178:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800717a:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800717e:	9309      	str	r3, [sp, #36]	; 0x24
 8007180:	2604      	movs	r6, #4
 8007182:	4546      	cmp	r6, r8
 8007184:	bfc8      	it	gt
 8007186:	fa5f f688 	uxtbgt.w	r6, r8
 800718a:	ebc6 0808 	rsb	r8, r6, r8
 800718e:	f04f 0900 	mov.w	r9, #0
 8007192:	e7d7      	b.n	8007144 <_DrawBitmap+0x4a0>
 8007194:	09ba      	lsrs	r2, r7, #6
 8007196:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800719a:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 800719e:	f1bc 0f00 	cmp.w	ip, #0
 80071a2:	d0d4      	beq.n	800714e <_DrawBitmap+0x4aa>
 80071a4:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80071a8:	6812      	ldr	r2, [r2, #0]
 80071aa:	920b      	str	r2, [sp, #44]	; 0x2c
 80071ac:	4660      	mov	r0, ip
 80071ae:	f8cd c00c 	str.w	ip, [sp, #12]
 80071b2:	9a05      	ldr	r2, [sp, #20]
 80071b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80071b6:	4798      	blx	r3
 80071b8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80071bc:	e7c7      	b.n	800714e <_DrawBitmap+0x4aa>
 80071be:	4650      	mov	r0, sl
 80071c0:	465b      	mov	r3, fp
 80071c2:	429e      	cmp	r6, r3
 80071c4:	bfc8      	it	gt
 80071c6:	b2de      	uxtbgt	r6, r3
 80071c8:	1b9b      	subs	r3, r3, r6
 80071ca:	1d22      	adds	r2, r4, #4
 80071cc:	46b4      	mov	ip, r6
 80071ce:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 80071d2:	d005      	beq.n	80071e0 <_DrawBitmap+0x53c>
 80071d4:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80071d8:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 80071dc:	f842 1c04 	str.w	r1, [r2, #-4]
 80071e0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80071e4:	00bf      	lsls	r7, r7, #2
 80071e6:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 80071ea:	b2ff      	uxtb	r7, r7
 80071ec:	f102 0204 	add.w	r2, r2, #4
 80071f0:	d1ed      	bne.n	80071ce <_DrawBitmap+0x52a>
 80071f2:	3e01      	subs	r6, #1
 80071f4:	b2f6      	uxtb	r6, r6
 80071f6:	3601      	adds	r6, #1
 80071f8:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 80071fc:	2b00      	cmp	r3, #0
 80071fe:	f000 80dd 	beq.w	80073bc <_DrawBitmap+0x718>
 8007202:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8007206:	2604      	movs	r6, #4
 8007208:	e7db      	b.n	80071c2 <_DrawBitmap+0x51e>
 800720a:	bf00      	nop
 800720c:	080102e8 	.word	0x080102e8
 8007210:	080122e8 	.word	0x080122e8
 8007214:	200000b8 	.word	0x200000b8
 8007218:	4a71      	ldr	r2, [pc, #452]	; (80073e0 <_DrawBitmap+0x73c>)
 800721a:	f89a 3000 	ldrb.w	r3, [sl]
 800721e:	6812      	ldr	r2, [r2, #0]
 8007220:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007222:	7c12      	ldrb	r2, [r2, #16]
 8007224:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8007226:	f002 0203 	and.w	r2, r2, #3
 800722a:	4083      	lsls	r3, r0
 800722c:	2a01      	cmp	r2, #1
 800722e:	b2de      	uxtb	r6, r3
 8007230:	f000 809c 	beq.w	800736c <_DrawBitmap+0x6c8>
 8007234:	d302      	bcc.n	800723c <_DrawBitmap+0x598>
 8007236:	2a02      	cmp	r2, #2
 8007238:	d035      	beq.n	80072a6 <_DrawBitmap+0x602>
 800723a:	e0bf      	b.n	80073bc <_DrawBitmap+0x718>
 800723c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800723e:	b15f      	cbz	r7, 8007258 <_DrawBitmap+0x5b4>
 8007240:	0936      	lsrs	r6, r6, #4
 8007242:	f10a 0201 	add.w	r2, sl, #1
 8007246:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800724a:	6023      	str	r3, [r4, #0]
 800724c:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8007250:	9c08      	ldr	r4, [sp, #32]
 8007252:	f10b 33ff 	add.w	r3, fp, #4294967295
 8007256:	e001      	b.n	800725c <_DrawBitmap+0x5b8>
 8007258:	465b      	mov	r3, fp
 800725a:	4652      	mov	r2, sl
 800725c:	2b01      	cmp	r3, #1
 800725e:	dd1a      	ble.n	8007296 <_DrawBitmap+0x5f2>
 8007260:	1058      	asrs	r0, r3, #1
 8007262:	f104 0108 	add.w	r1, r4, #8
 8007266:	f003 0301 	and.w	r3, r3, #1
 800726a:	eb02 0800 	add.w	r8, r2, r0
 800726e:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 8007272:	f006 060f 	and.w	r6, r6, #15
 8007276:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 800727a:	f841 7c08 	str.w	r7, [r1, #-8]
 800727e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8007282:	f841 6c04 	str.w	r6, [r1, #-4]
 8007286:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800728a:	4542      	cmp	r2, r8
 800728c:	f101 0108 	add.w	r1, r1, #8
 8007290:	d1ed      	bne.n	800726e <_DrawBitmap+0x5ca>
 8007292:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 8007296:	2b00      	cmp	r3, #0
 8007298:	f000 8090 	beq.w	80073bc <_DrawBitmap+0x718>
 800729c:	0936      	lsrs	r6, r6, #4
 800729e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 80072a2:	6023      	str	r3, [r4, #0]
 80072a4:	e08a      	b.n	80073bc <_DrawBitmap+0x718>
 80072a6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80072a8:	b1c0      	cbz	r0, 80072dc <_DrawBitmap+0x638>
 80072aa:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 80072ae:	d00a      	beq.n	80072c6 <_DrawBitmap+0x622>
 80072b0:	0936      	lsrs	r6, r6, #4
 80072b2:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 80072b6:	6023      	str	r3, [r4, #0]
 80072b8:	b12f      	cbz	r7, 80072c6 <_DrawBitmap+0x622>
 80072ba:	68bb      	ldr	r3, [r7, #8]
 80072bc:	9904      	ldr	r1, [sp, #16]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	9a05      	ldr	r2, [sp, #20]
 80072c2:	4638      	mov	r0, r7
 80072c4:	4798      	blx	r3
 80072c6:	9904      	ldr	r1, [sp, #16]
 80072c8:	9c08      	ldr	r4, [sp, #32]
 80072ca:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80072ce:	f101 0801 	add.w	r8, r1, #1
 80072d2:	f10b 3cff 	add.w	ip, fp, #4294967295
 80072d6:	f10a 0901 	add.w	r9, sl, #1
 80072da:	e011      	b.n	8007300 <_DrawBitmap+0x65c>
 80072dc:	46dc      	mov	ip, fp
 80072de:	46d1      	mov	r9, sl
 80072e0:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80072e4:	e00c      	b.n	8007300 <_DrawBitmap+0x65c>
 80072e6:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 80072ea:	d10d      	bne.n	8007308 <_DrawBitmap+0x664>
 80072ec:	f016 060f 	ands.w	r6, r6, #15
 80072f0:	d11b      	bne.n	800732a <_DrawBitmap+0x686>
 80072f2:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 80072f6:	3408      	adds	r4, #8
 80072f8:	f108 0802 	add.w	r8, r8, #2
 80072fc:	f1ac 0c02 	sub.w	ip, ip, #2
 8007300:	f1bc 0f01 	cmp.w	ip, #1
 8007304:	dcef      	bgt.n	80072e6 <_DrawBitmap+0x642>
 8007306:	e021      	b.n	800734c <_DrawBitmap+0x6a8>
 8007308:	0933      	lsrs	r3, r6, #4
 800730a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800730e:	6023      	str	r3, [r4, #0]
 8007310:	2f00      	cmp	r7, #0
 8007312:	d0eb      	beq.n	80072ec <_DrawBitmap+0x648>
 8007314:	68bb      	ldr	r3, [r7, #8]
 8007316:	9a05      	ldr	r2, [sp, #20]
 8007318:	681b      	ldr	r3, [r3, #0]
 800731a:	f8cd c00c 	str.w	ip, [sp, #12]
 800731e:	4638      	mov	r0, r7
 8007320:	4641      	mov	r1, r8
 8007322:	4798      	blx	r3
 8007324:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007328:	e7e0      	b.n	80072ec <_DrawBitmap+0x648>
 800732a:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800732e:	6063      	str	r3, [r4, #4]
 8007330:	2f00      	cmp	r7, #0
 8007332:	d0de      	beq.n	80072f2 <_DrawBitmap+0x64e>
 8007334:	68bb      	ldr	r3, [r7, #8]
 8007336:	9a05      	ldr	r2, [sp, #20]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	f8cd c00c 	str.w	ip, [sp, #12]
 800733e:	4638      	mov	r0, r7
 8007340:	f108 0101 	add.w	r1, r8, #1
 8007344:	4798      	blx	r3
 8007346:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800734a:	e7d2      	b.n	80072f2 <_DrawBitmap+0x64e>
 800734c:	f1bc 0f00 	cmp.w	ip, #0
 8007350:	d034      	beq.n	80073bc <_DrawBitmap+0x718>
 8007352:	0936      	lsrs	r6, r6, #4
 8007354:	d032      	beq.n	80073bc <_DrawBitmap+0x718>
 8007356:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800735a:	6023      	str	r3, [r4, #0]
 800735c:	b377      	cbz	r7, 80073bc <_DrawBitmap+0x718>
 800735e:	68bb      	ldr	r3, [r7, #8]
 8007360:	9a05      	ldr	r2, [sp, #20]
 8007362:	681b      	ldr	r3, [r3, #0]
 8007364:	4638      	mov	r0, r7
 8007366:	4641      	mov	r1, r8
 8007368:	4798      	blx	r3
 800736a:	e027      	b.n	80073bc <_DrawBitmap+0x718>
 800736c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800736e:	f1c7 0302 	rsb	r3, r7, #2
 8007372:	b2db      	uxtb	r3, r3
 8007374:	4657      	mov	r7, sl
 8007376:	465a      	mov	r2, fp
 8007378:	4293      	cmp	r3, r2
 800737a:	bfc8      	it	gt
 800737c:	b2d3      	uxtbgt	r3, r2
 800737e:	1ad2      	subs	r2, r2, r3
 8007380:	1d20      	adds	r0, r4, #4
 8007382:	469c      	mov	ip, r3
 8007384:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8007388:	d005      	beq.n	8007396 <_DrawBitmap+0x6f2>
 800738a:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800738e:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8007392:	f840 1c04 	str.w	r1, [r0, #-4]
 8007396:	f10c 3cff 	add.w	ip, ip, #4294967295
 800739a:	0136      	lsls	r6, r6, #4
 800739c:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 80073a0:	b2f6      	uxtb	r6, r6
 80073a2:	f100 0004 	add.w	r0, r0, #4
 80073a6:	d1ed      	bne.n	8007384 <_DrawBitmap+0x6e0>
 80073a8:	3b01      	subs	r3, #1
 80073aa:	b2db      	uxtb	r3, r3
 80073ac:	3301      	adds	r3, #1
 80073ae:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80073b2:	b11a      	cbz	r2, 80073bc <_DrawBitmap+0x718>
 80073b4:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 80073b8:	2302      	movs	r3, #2
 80073ba:	e7dd      	b.n	8007378 <_DrawBitmap+0x6d4>
 80073bc:	9b05      	ldr	r3, [sp, #20]
 80073be:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80073c0:	3301      	adds	r3, #1
 80073c2:	44ba      	add	sl, r7
 80073c4:	9305      	str	r3, [sp, #20]
 80073c6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80073c8:	9b08      	ldr	r3, [sp, #32]
 80073ca:	443b      	add	r3, r7
 80073cc:	9308      	str	r3, [sp, #32]
 80073ce:	e5c3      	b.n	8006f58 <_DrawBitmap+0x2b4>
 80073d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80073d2:	b113      	cbz	r3, 80073da <_DrawBitmap+0x736>
 80073d4:	a80f      	add	r0, sp, #60	; 0x3c
 80073d6:	f004 fa5d 	bl	800b894 <GUI_ALLOC_UnlockH>
 80073da:	b011      	add	sp, #68	; 0x44
 80073dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80073e0:	200000b8 	.word	0x200000b8

080073e4 <GUI_MEMDEV__WriteToActiveAt>:
 80073e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80073e8:	460e      	mov	r6, r1
 80073ea:	4690      	mov	r8, r2
 80073ec:	4607      	mov	r7, r0
 80073ee:	f004 fa43 	bl	800b878 <GUI_ALLOC_LockH>
 80073f2:	6803      	ldr	r3, [r0, #0]
 80073f4:	ac02      	add	r4, sp, #8
 80073f6:	68db      	ldr	r3, [r3, #12]
 80073f8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80073fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073fe:	2000      	movs	r0, #0
 8007400:	2116      	movs	r1, #22
 8007402:	4798      	blx	r3
 8007404:	4605      	mov	r5, r0
 8007406:	4620      	mov	r0, r4
 8007408:	f004 fa44 	bl	800b894 <GUI_ALLOC_UnlockH>
 800740c:	b11d      	cbz	r5, 8007416 <GUI_MEMDEV__WriteToActiveAt+0x32>
 800740e:	4638      	mov	r0, r7
 8007410:	4631      	mov	r1, r6
 8007412:	4642      	mov	r2, r8
 8007414:	47a8      	blx	r5
 8007416:	b002      	add	sp, #8
 8007418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800741c <GUI_MEMDEV__CreateFixed>:
 800741c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007420:	4e3e      	ldr	r6, [pc, #248]	; (800751c <GUI_MEMDEV__CreateFixed+0x100>)
 8007422:	b087      	sub	sp, #28
 8007424:	461d      	mov	r5, r3
 8007426:	6833      	ldr	r3, [r6, #0]
 8007428:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800742a:	7c5b      	ldrb	r3, [r3, #17]
 800742c:	4683      	mov	fp, r0
 800742e:	468a      	mov	sl, r1
 8007430:	4690      	mov	r8, r2
 8007432:	9811      	ldr	r0, [sp, #68]	; 0x44
 8007434:	9912      	ldr	r1, [sp, #72]	; 0x48
 8007436:	2200      	movs	r2, #0
 8007438:	f003 fa72 	bl	800a920 <GUI_DEVICE_Create>
 800743c:	4604      	mov	r4, r0
 800743e:	2800      	cmp	r0, #0
 8007440:	d033      	beq.n	80074aa <GUI_MEMDEV__CreateFixed+0x8e>
 8007442:	6903      	ldr	r3, [r0, #16]
 8007444:	689b      	ldr	r3, [r3, #8]
 8007446:	4798      	blx	r3
 8007448:	f001 fb15 	bl	8008a76 <LCD__GetBPPDevice>
 800744c:	fb08 f600 	mul.w	r6, r8, r0
 8007450:	9003      	str	r0, [sp, #12]
 8007452:	3607      	adds	r6, #7
 8007454:	f004 fb50 	bl	800baf8 <GUI_ALLOC_RequestSize>
 8007458:	f017 0901 	ands.w	r9, r7, #1
 800745c:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 8007460:	d104      	bne.n	800746c <GUI_MEMDEV__CreateFixed+0x50>
 8007462:	2304      	movs	r3, #4
 8007464:	fb90 f0f3 	sdiv	r0, r0, r3
 8007468:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800746c:	2d00      	cmp	r5, #0
 800746e:	dc09      	bgt.n	8007484 <GUI_MEMDEV__CreateFixed+0x68>
 8007470:	b11e      	cbz	r6, 800747a <GUI_MEMDEV__CreateFixed+0x5e>
 8007472:	3818      	subs	r0, #24
 8007474:	fbb0 f0f6 	udiv	r0, r0, r6
 8007478:	e000      	b.n	800747c <GUI_MEMDEV__CreateFixed+0x60>
 800747a:	4630      	mov	r0, r6
 800747c:	426d      	negs	r5, r5
 800747e:	42a8      	cmp	r0, r5
 8007480:	bfb8      	it	lt
 8007482:	4605      	movlt	r5, r0
 8007484:	f1b9 0f00 	cmp.w	r9, #0
 8007488:	d109      	bne.n	800749e <GUI_MEMDEV__CreateFixed+0x82>
 800748a:	f8cd 9000 	str.w	r9, [sp]
 800748e:	4658      	mov	r0, fp
 8007490:	4651      	mov	r1, sl
 8007492:	4642      	mov	r2, r8
 8007494:	462b      	mov	r3, r5
 8007496:	f006 fc41 	bl	800dd1c <GUI_USAGE_BM_Create>
 800749a:	4607      	mov	r7, r0
 800749c:	e000      	b.n	80074a0 <GUI_MEMDEV__CreateFixed+0x84>
 800749e:	2700      	movs	r7, #0
 80074a0:	2d00      	cmp	r5, #0
 80074a2:	dc04      	bgt.n	80074ae <GUI_MEMDEV__CreateFixed+0x92>
 80074a4:	4620      	mov	r0, r4
 80074a6:	f003 fa39 	bl	800a91c <GUI_DEVICE_Delete>
 80074aa:	2000      	movs	r0, #0
 80074ac:	e032      	b.n	8007514 <GUI_MEMDEV__CreateFixed+0xf8>
 80074ae:	fb06 f005 	mul.w	r0, r6, r5
 80074b2:	3018      	adds	r0, #24
 80074b4:	f1b9 0f00 	cmp.w	r9, #0
 80074b8:	d002      	beq.n	80074c0 <GUI_MEMDEV__CreateFixed+0xa4>
 80074ba:	f004 fba9 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 80074be:	e001      	b.n	80074c4 <GUI_MEMDEV__CreateFixed+0xa8>
 80074c0:	f004 fbd4 	bl	800bc6c <GUI_ALLOC_AllocZero>
 80074c4:	4681      	mov	r9, r0
 80074c6:	b940      	cbnz	r0, 80074da <GUI_MEMDEV__CreateFixed+0xbe>
 80074c8:	4620      	mov	r0, r4
 80074ca:	f003 fa27 	bl	800a91c <GUI_DEVICE_Delete>
 80074ce:	2f00      	cmp	r7, #0
 80074d0:	d0eb      	beq.n	80074aa <GUI_MEMDEV__CreateFixed+0x8e>
 80074d2:	4638      	mov	r0, r7
 80074d4:	f004 fa0a 	bl	800b8ec <GUI_ALLOC_Free>
 80074d8:	e01b      	b.n	8007512 <GUI_MEMDEV__CreateFixed+0xf6>
 80074da:	f004 f9cd 	bl	800b878 <GUI_ALLOC_LockH>
 80074de:	4603      	mov	r3, r0
 80074e0:	a806      	add	r0, sp, #24
 80074e2:	9a03      	ldr	r2, [sp, #12]
 80074e4:	f840 3d04 	str.w	r3, [r0, #-4]!
 80074e8:	611a      	str	r2, [r3, #16]
 80074ea:	601c      	str	r4, [r3, #0]
 80074ec:	f8a3 b004 	strh.w	fp, [r3, #4]
 80074f0:	f8a3 a006 	strh.w	sl, [r3, #6]
 80074f4:	f8a3 8008 	strh.w	r8, [r3, #8]
 80074f8:	815d      	strh	r5, [r3, #10]
 80074fa:	60de      	str	r6, [r3, #12]
 80074fc:	615f      	str	r7, [r3, #20]
 80074fe:	f004 f9c9 	bl	800b894 <GUI_ALLOC_UnlockH>
 8007502:	4a06      	ldr	r2, [pc, #24]	; (800751c <GUI_MEMDEV__CreateFixed+0x100>)
 8007504:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007506:	6123      	str	r3, [r4, #16]
 8007508:	6813      	ldr	r3, [r2, #0]
 800750a:	f8c4 9008 	str.w	r9, [r4, #8]
 800750e:	7c5b      	ldrb	r3, [r3, #17]
 8007510:	61a3      	str	r3, [r4, #24]
 8007512:	4648      	mov	r0, r9
 8007514:	b007      	add	sp, #28
 8007516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800751a:	bf00      	nop
 800751c:	200000b8 	.word	0x200000b8

08007520 <GUI_MEMDEV_GetBitsPerPixel>:
 8007520:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007522:	4605      	mov	r5, r0
 8007524:	b170      	cbz	r0, 8007544 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 8007526:	f004 f9a7 	bl	800b878 <GUI_ALLOC_LockH>
 800752a:	6803      	ldr	r3, [r0, #0]
 800752c:	ac02      	add	r4, sp, #8
 800752e:	691b      	ldr	r3, [r3, #16]
 8007530:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007534:	689b      	ldr	r3, [r3, #8]
 8007536:	4798      	blx	r3
 8007538:	f001 fa9d 	bl	8008a76 <LCD__GetBPPDevice>
 800753c:	4605      	mov	r5, r0
 800753e:	4620      	mov	r0, r4
 8007540:	f004 f9a8 	bl	800b894 <GUI_ALLOC_UnlockH>
 8007544:	4628      	mov	r0, r5
 8007546:	b003      	add	sp, #12
 8007548:	bd30      	pop	{r4, r5, pc}
	...

0800754c <GUI_MEMDEV_Delete>:
 800754c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800754e:	4604      	mov	r4, r0
 8007550:	b1d0      	cbz	r0, 8007588 <GUI_MEMDEV_Delete+0x3c>
 8007552:	4b0e      	ldr	r3, [pc, #56]	; (800758c <GUI_MEMDEV_Delete+0x40>)
 8007554:	681b      	ldr	r3, [r3, #0]
 8007556:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007558:	4283      	cmp	r3, r0
 800755a:	d101      	bne.n	8007560 <GUI_MEMDEV_Delete+0x14>
 800755c:	f003 fd20 	bl	800afa0 <GUI_SelectLCD>
 8007560:	4620      	mov	r0, r4
 8007562:	f004 f989 	bl	800b878 <GUI_ALLOC_LockH>
 8007566:	9001      	str	r0, [sp, #4]
 8007568:	6940      	ldr	r0, [r0, #20]
 800756a:	b108      	cbz	r0, 8007570 <GUI_MEMDEV_Delete+0x24>
 800756c:	f006 fc02 	bl	800dd74 <GUI_USAGE_DecUseCnt>
 8007570:	ad02      	add	r5, sp, #8
 8007572:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8007576:	6818      	ldr	r0, [r3, #0]
 8007578:	f003 f9d0 	bl	800a91c <GUI_DEVICE_Delete>
 800757c:	4628      	mov	r0, r5
 800757e:	f004 f989 	bl	800b894 <GUI_ALLOC_UnlockH>
 8007582:	4620      	mov	r0, r4
 8007584:	f004 f9b2 	bl	800b8ec <GUI_ALLOC_Free>
 8007588:	b003      	add	sp, #12
 800758a:	bd30      	pop	{r4, r5, pc}
 800758c:	200000b8 	.word	0x200000b8

08007590 <GUI_MEMDEV_CreateEx>:
 8007590:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007594:	469a      	mov	sl, r3
 8007596:	4b19      	ldr	r3, [pc, #100]	; (80075fc <GUI_MEMDEV_CreateEx+0x6c>)
 8007598:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800759a:	681b      	ldr	r3, [r3, #0]
 800759c:	4607      	mov	r7, r0
 800759e:	7c58      	ldrb	r0, [r3, #17]
 80075a0:	4b17      	ldr	r3, [pc, #92]	; (8007600 <GUI_MEMDEV_CreateEx+0x70>)
 80075a2:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80075a6:	4688      	mov	r8, r1
 80075a8:	4691      	mov	r9, r2
 80075aa:	68e3      	ldr	r3, [r4, #12]
 80075ac:	681b      	ldr	r3, [r3, #0]
 80075ae:	2b04      	cmp	r3, #4
 80075b0:	d006      	beq.n	80075c0 <GUI_MEMDEV_CreateEx+0x30>
 80075b2:	6824      	ldr	r4, [r4, #0]
 80075b4:	2c00      	cmp	r4, #0
 80075b6:	d1f8      	bne.n	80075aa <GUI_MEMDEV_CreateEx+0x1a>
 80075b8:	f003 f9a0 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 80075bc:	4604      	mov	r4, r0
 80075be:	b130      	cbz	r0, 80075ce <GUI_MEMDEV_CreateEx+0x3e>
 80075c0:	68e3      	ldr	r3, [r4, #12]
 80075c2:	4620      	mov	r0, r4
 80075c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80075c6:	2101      	movs	r1, #1
 80075c8:	4798      	blx	r3
 80075ca:	4606      	mov	r6, r0
 80075cc:	b908      	cbnz	r0, 80075d2 <GUI_MEMDEV_CreateEx+0x42>
 80075ce:	2000      	movs	r0, #0
 80075d0:	e010      	b.n	80075f4 <GUI_MEMDEV_CreateEx+0x64>
 80075d2:	6924      	ldr	r4, [r4, #16]
 80075d4:	68a3      	ldr	r3, [r4, #8]
 80075d6:	4798      	blx	r3
 80075d8:	3001      	adds	r0, #1
 80075da:	bf04      	itt	eq
 80075dc:	f045 0501 	orreq.w	r5, r5, #1
 80075e0:	4c08      	ldreq	r4, [pc, #32]	; (8007604 <GUI_MEMDEV_CreateEx+0x74>)
 80075e2:	9402      	str	r4, [sp, #8]
 80075e4:	e88d 0060 	stmia.w	sp, {r5, r6}
 80075e8:	4638      	mov	r0, r7
 80075ea:	4641      	mov	r1, r8
 80075ec:	464a      	mov	r2, r9
 80075ee:	4653      	mov	r3, sl
 80075f0:	f7ff ff14 	bl	800741c <GUI_MEMDEV__CreateFixed>
 80075f4:	b004      	add	sp, #16
 80075f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80075fa:	bf00      	nop
 80075fc:	200000b8 	.word	0x200000b8
 8007600:	20002d2c 	.word	0x20002d2c
 8007604:	08012480 	.word	0x08012480

08007608 <GUI_MEMDEV_Select>:
 8007608:	4b11      	ldr	r3, [pc, #68]	; (8007650 <GUI_MEMDEV_Select+0x48>)
 800760a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800760c:	681a      	ldr	r2, [r3, #0]
 800760e:	4604      	mov	r4, r0
 8007610:	6e16      	ldr	r6, [r2, #96]	; 0x60
 8007612:	461f      	mov	r7, r3
 8007614:	b910      	cbnz	r0, 800761c <GUI_MEMDEV_Select+0x14>
 8007616:	f003 fcc3 	bl	800afa0 <GUI_SelectLCD>
 800761a:	e016      	b.n	800764a <GUI_MEMDEV_Select+0x42>
 800761c:	b10e      	cbz	r6, 8007622 <GUI_MEMDEV_Select+0x1a>
 800761e:	f003 fcbf 	bl	800afa0 <GUI_SelectLCD>
 8007622:	f7fe ff31 	bl	8006488 <WM_Deactivate>
 8007626:	4620      	mov	r0, r4
 8007628:	f004 f926 	bl	800b878 <GUI_ALLOC_LockH>
 800762c:	ad02      	add	r5, sp, #8
 800762e:	683b      	ldr	r3, [r7, #0]
 8007630:	f845 0d04 	str.w	r0, [r5, #-4]!
 8007634:	661c      	str	r4, [r3, #96]	; 0x60
 8007636:	6800      	ldr	r0, [r0, #0]
 8007638:	f003 f9b2 	bl	800a9a0 <GUI_DEVICE_Link>
 800763c:	4628      	mov	r0, r5
 800763e:	f004 f929 	bl	800b894 <GUI_ALLOC_UnlockH>
 8007642:	f001 f8cf 	bl	80087e4 <LCD_UpdateColorIndices>
 8007646:	f001 fcd7 	bl	8008ff8 <LCD_SetClipRectMax>
 800764a:	4630      	mov	r0, r6
 800764c:	b003      	add	sp, #12
 800764e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007650:	200000b8 	.word	0x200000b8

08007654 <GUI_MEMDEV_CopyToLCDAt>:
 8007654:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007658:	460c      	mov	r4, r1
 800765a:	b085      	sub	sp, #20
 800765c:	4615      	mov	r5, r2
 800765e:	4606      	mov	r6, r0
 8007660:	2800      	cmp	r0, #0
 8007662:	d041      	beq.n	80076e8 <GUI_MEMDEV_CopyToLCDAt+0x94>
 8007664:	2000      	movs	r0, #0
 8007666:	f003 fca8 	bl	800afba <GUI_SetDrawMode>
 800766a:	4b21      	ldr	r3, [pc, #132]	; (80076f0 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800766c:	681b      	ldr	r3, [r3, #0]
 800766e:	4607      	mov	r7, r0
 8007670:	4630      	mov	r0, r6
 8007672:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 8007676:	f004 f8ff 	bl	800b878 <GUI_ALLOC_LockH>
 800767a:	6803      	ldr	r3, [r0, #0]
 800767c:	9001      	str	r0, [sp, #4]
 800767e:	6998      	ldr	r0, [r3, #24]
 8007680:	f002 fae8 	bl	8009c54 <GUI_SelectLayer>
 8007684:	4b1b      	ldr	r3, [pc, #108]	; (80076f4 <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 8007686:	429c      	cmp	r4, r3
 8007688:	9b01      	ldr	r3, [sp, #4]
 800768a:	bf04      	itt	eq
 800768c:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 8007690:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 8007694:	891a      	ldrh	r2, [r3, #8]
 8007696:	895b      	ldrh	r3, [r3, #10]
 8007698:	f8ad 4008 	strh.w	r4, [sp, #8]
 800769c:	3a01      	subs	r2, #1
 800769e:	3b01      	subs	r3, #1
 80076a0:	4422      	add	r2, r4
 80076a2:	442b      	add	r3, r5
 80076a4:	4681      	mov	r9, r0
 80076a6:	f8ad 200c 	strh.w	r2, [sp, #12]
 80076aa:	f8ad 300e 	strh.w	r3, [sp, #14]
 80076ae:	f8ad 500a 	strh.w	r5, [sp, #10]
 80076b2:	f7fe fee1 	bl	8006478 <WM_Activate>
 80076b6:	a801      	add	r0, sp, #4
 80076b8:	f004 f8ec 	bl	800b894 <GUI_ALLOC_UnlockH>
 80076bc:	a802      	add	r0, sp, #8
 80076be:	f7fe fd2b 	bl	8006118 <WM__InitIVRSearch>
 80076c2:	b948      	cbnz	r0, 80076d8 <GUI_MEMDEV_CopyToLCDAt+0x84>
 80076c4:	4648      	mov	r0, r9
 80076c6:	f002 fac5 	bl	8009c54 <GUI_SelectLayer>
 80076ca:	4640      	mov	r0, r8
 80076cc:	f7ff ff9c 	bl	8007608 <GUI_MEMDEV_Select>
 80076d0:	4638      	mov	r0, r7
 80076d2:	f003 fc72 	bl	800afba <GUI_SetDrawMode>
 80076d6:	e007      	b.n	80076e8 <GUI_MEMDEV_CopyToLCDAt+0x94>
 80076d8:	4630      	mov	r0, r6
 80076da:	4621      	mov	r1, r4
 80076dc:	462a      	mov	r2, r5
 80076de:	f005 fde9 	bl	800d2b4 <GUI_MEMDEV__WriteToActiveOpaque>
 80076e2:	f7fe fc57 	bl	8005f94 <WM__GetNextIVR>
 80076e6:	e7ec      	b.n	80076c2 <GUI_MEMDEV_CopyToLCDAt+0x6e>
 80076e8:	b005      	add	sp, #20
 80076ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80076ee:	bf00      	nop
 80076f0:	200000b8 	.word	0x200000b8
 80076f4:	fffff001 	.word	0xfffff001

080076f8 <GUI_MEMDEV_CopyToLCD>:
 80076f8:	4901      	ldr	r1, [pc, #4]	; (8007700 <GUI_MEMDEV_CopyToLCD+0x8>)
 80076fa:	460a      	mov	r2, r1
 80076fc:	f7ff bfaa 	b.w	8007654 <GUI_MEMDEV_CopyToLCDAt>
 8007700:	fffff001 	.word	0xfffff001

08007704 <_SetPhysRAMAddr>:
 8007704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007706:	4604      	mov	r4, r0
 8007708:	460e      	mov	r6, r1
 800770a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800770e:	212a      	movs	r1, #42	; 0x2a
 8007710:	4615      	mov	r5, r2
 8007712:	4798      	blx	r3
 8007714:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007716:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800771a:	4431      	add	r1, r6
 800771c:	4620      	mov	r0, r4
 800771e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007722:	4798      	blx	r3
 8007724:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007726:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800772a:	b2b7      	uxth	r7, r6
 800772c:	4439      	add	r1, r7
 800772e:	4620      	mov	r0, r4
 8007730:	b2c9      	uxtb	r1, r1
 8007732:	4798      	blx	r3
 8007734:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007736:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800773a:	4431      	add	r1, r6
 800773c:	4620      	mov	r0, r4
 800773e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007742:	4798      	blx	r3
 8007744:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007746:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800774a:	4439      	add	r1, r7
 800774c:	4620      	mov	r0, r4
 800774e:	b2c9      	uxtb	r1, r1
 8007750:	4798      	blx	r3
 8007752:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8007756:	4620      	mov	r0, r4
 8007758:	212b      	movs	r1, #43	; 0x2b
 800775a:	4798      	blx	r3
 800775c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800775e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007762:	4429      	add	r1, r5
 8007764:	4620      	mov	r0, r4
 8007766:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800776a:	4798      	blx	r3
 800776c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800776e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007772:	b2ae      	uxth	r6, r5
 8007774:	4431      	add	r1, r6
 8007776:	4620      	mov	r0, r4
 8007778:	b2c9      	uxtb	r1, r1
 800777a:	4798      	blx	r3
 800777c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800777e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007782:	4429      	add	r1, r5
 8007784:	4620      	mov	r0, r4
 8007786:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800778a:	4798      	blx	r3
 800778c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800778e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007792:	4431      	add	r1, r6
 8007794:	4620      	mov	r0, r4
 8007796:	b2c9      	uxtb	r1, r1
 8007798:	4798      	blx	r3
 800779a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800779e:	4620      	mov	r0, r4
 80077a0:	212c      	movs	r1, #44	; 0x2c
 80077a2:	4798      	blx	r3
 80077a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080077a6 <_SetRect>:
 80077a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077aa:	4604      	mov	r4, r0
 80077ac:	4688      	mov	r8, r1
 80077ae:	461f      	mov	r7, r3
 80077b0:	212a      	movs	r1, #42	; 0x2a
 80077b2:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80077b6:	9d06      	ldr	r5, [sp, #24]
 80077b8:	4616      	mov	r6, r2
 80077ba:	4798      	blx	r3
 80077bc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077be:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077c2:	4441      	add	r1, r8
 80077c4:	4620      	mov	r0, r4
 80077c6:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80077ca:	4798      	blx	r3
 80077cc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077ce:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077d2:	4441      	add	r1, r8
 80077d4:	4620      	mov	r0, r4
 80077d6:	b2c9      	uxtb	r1, r1
 80077d8:	4798      	blx	r3
 80077da:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077dc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077e0:	4439      	add	r1, r7
 80077e2:	4620      	mov	r0, r4
 80077e4:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80077e8:	4798      	blx	r3
 80077ea:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077ec:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077f0:	4439      	add	r1, r7
 80077f2:	4620      	mov	r0, r4
 80077f4:	b2c9      	uxtb	r1, r1
 80077f6:	4798      	blx	r3
 80077f8:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80077fc:	4620      	mov	r0, r4
 80077fe:	212b      	movs	r1, #43	; 0x2b
 8007800:	4798      	blx	r3
 8007802:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007804:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007808:	4431      	add	r1, r6
 800780a:	4620      	mov	r0, r4
 800780c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007810:	4798      	blx	r3
 8007812:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007814:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007818:	4431      	add	r1, r6
 800781a:	4620      	mov	r0, r4
 800781c:	b2c9      	uxtb	r1, r1
 800781e:	4798      	blx	r3
 8007820:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007822:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007826:	4429      	add	r1, r5
 8007828:	4620      	mov	r0, r4
 800782a:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800782e:	4798      	blx	r3
 8007830:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007832:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007836:	4429      	add	r1, r5
 8007838:	4620      	mov	r0, r4
 800783a:	b2c9      	uxtb	r1, r1
 800783c:	4798      	blx	r3
 800783e:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8007842:	4620      	mov	r0, r4
 8007844:	212c      	movs	r1, #44	; 0x2c
 8007846:	4798      	blx	r3
 8007848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800784c <_SetOrientation>:
 800784c:	b513      	push	{r0, r1, r4, lr}
 800784e:	4a0d      	ldr	r2, [pc, #52]	; (8007884 <_SetOrientation+0x38>)
 8007850:	4604      	mov	r4, r0
 8007852:	6851      	ldr	r1, [r2, #4]
 8007854:	6810      	ldr	r0, [r2, #0]
 8007856:	466b      	mov	r3, sp
 8007858:	c303      	stmia	r3!, {r0, r1}
 800785a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800785e:	4620      	mov	r0, r4
 8007860:	2136      	movs	r1, #54	; 0x36
 8007862:	4798      	blx	r3
 8007864:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007866:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 8007868:	aa02      	add	r2, sp, #8
 800786a:	4413      	add	r3, r2
 800786c:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 8007870:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 8007874:	4319      	orrs	r1, r3
 8007876:	4620      	mov	r0, r4
 8007878:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800787c:	b289      	uxth	r1, r1
 800787e:	4798      	blx	r3
 8007880:	b002      	add	sp, #8
 8007882:	bd10      	pop	{r4, pc}
 8007884:	080101e8 	.word	0x080101e8

08007888 <_ReadPixel_16bpp_B8>:
 8007888:	b513      	push	{r0, r1, r4, lr}
 800788a:	4604      	mov	r4, r0
 800788c:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8007890:	202e      	movs	r0, #46	; 0x2e
 8007892:	4798      	blx	r3
 8007894:	6a21      	ldr	r1, [r4, #32]
 8007896:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800789a:	4668      	mov	r0, sp
 800789c:	3103      	adds	r1, #3
 800789e:	4798      	blx	r3
 80078a0:	6a22      	ldr	r2, [r4, #32]
 80078a2:	ab00      	add	r3, sp, #0
 80078a4:	4413      	add	r3, r2
 80078a6:	f81d 2002 	ldrb.w	r2, [sp, r2]
 80078aa:	7859      	ldrb	r1, [r3, #1]
 80078ac:	7898      	ldrb	r0, [r3, #2]
 80078ae:	08d2      	lsrs	r2, r2, #3
 80078b0:	0889      	lsrs	r1, r1, #2
 80078b2:	02d2      	lsls	r2, r2, #11
 80078b4:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 80078b8:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 80078bc:	b002      	add	sp, #8
 80078be:	bd10      	pop	{r4, pc}

080078c0 <_ReadPixel_16bpp_B16_I>:
 80078c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80078c2:	4604      	mov	r4, r0
 80078c4:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 80078c8:	202e      	movs	r0, #46	; 0x2e
 80078ca:	4798      	blx	r3
 80078cc:	6a21      	ldr	r1, [r4, #32]
 80078ce:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80078d2:	4668      	mov	r0, sp
 80078d4:	3102      	adds	r1, #2
 80078d6:	4798      	blx	r3
 80078d8:	6a23      	ldr	r3, [r4, #32]
 80078da:	a900      	add	r1, sp, #0
 80078dc:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 80078e0:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 80078e4:	8852      	ldrh	r2, [r2, #2]
 80078e6:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 80078ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80078ee:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 80078f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80078f6:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 80078fa:	b004      	add	sp, #16
 80078fc:	bd10      	pop	{r4, pc}

080078fe <_SetReg_B8>:
 80078fe:	b538      	push	{r3, r4, r5, lr}
 8007900:	4604      	mov	r4, r0
 8007902:	460d      	mov	r5, r1
 8007904:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8007908:	0a08      	lsrs	r0, r1, #8
 800790a:	4798      	blx	r3
 800790c:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8007910:	b2e8      	uxtb	r0, r5
 8007912:	4798      	blx	r3
 8007914:	bd38      	pop	{r3, r4, r5, pc}

08007916 <_SetReg_B16>:
 8007916:	b508      	push	{r3, lr}
 8007918:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800791c:	4608      	mov	r0, r1
 800791e:	4798      	blx	r3
 8007920:	bd08      	pop	{r3, pc}

08007922 <_WritePara_B8>:
 8007922:	b508      	push	{r3, lr}
 8007924:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8007928:	b2c8      	uxtb	r0, r1
 800792a:	4798      	blx	r3
 800792c:	bd08      	pop	{r3, pc}

0800792e <_WritePara_B16>:
 800792e:	b508      	push	{r3, lr}
 8007930:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 8007934:	4608      	mov	r0, r1
 8007936:	4798      	blx	r3
 8007938:	bd08      	pop	{r3, pc}
	...

0800793c <_SetInterface>:
 800793c:	2908      	cmp	r1, #8
 800793e:	d002      	beq.n	8007946 <_SetInterface+0xa>
 8007940:	2910      	cmp	r1, #16
 8007942:	d005      	beq.n	8007950 <_SetInterface+0x14>
 8007944:	4770      	bx	lr
 8007946:	4b06      	ldr	r3, [pc, #24]	; (8007960 <_SetInterface+0x24>)
 8007948:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800794c:	4b05      	ldr	r3, [pc, #20]	; (8007964 <_SetInterface+0x28>)
 800794e:	e003      	b.n	8007958 <_SetInterface+0x1c>
 8007950:	4b05      	ldr	r3, [pc, #20]	; (8007968 <_SetInterface+0x2c>)
 8007952:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 8007956:	4b05      	ldr	r3, [pc, #20]	; (800796c <_SetInterface+0x30>)
 8007958:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 800795c:	4770      	bx	lr
 800795e:	bf00      	nop
 8007960:	080078ff 	.word	0x080078ff
 8007964:	08007923 	.word	0x08007923
 8007968:	08007917 	.word	0x08007917
 800796c:	0800792f 	.word	0x0800792f

08007970 <_ReadRect_16bpp_B8>:
 8007970:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007972:	b085      	sub	sp, #20
 8007974:	6884      	ldr	r4, [r0, #8]
 8007976:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007978:	9700      	str	r7, [sp, #0]
 800797a:	1abd      	subs	r5, r7, r2
 800797c:	1a58      	subs	r0, r3, r1
 800797e:	3501      	adds	r5, #1
 8007980:	fb00 5505 	mla	r5, r0, r5, r5
 8007984:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007988:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800798a:	4620      	mov	r0, r4
 800798c:	47b8      	blx	r7
 800798e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8007992:	202e      	movs	r0, #46	; 0x2e
 8007994:	4798      	blx	r3
 8007996:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800799a:	6a21      	ldr	r1, [r4, #32]
 800799c:	a802      	add	r0, sp, #8
 800799e:	4798      	blx	r3
 80079a0:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 80079a4:	a802      	add	r0, sp, #8
 80079a6:	2103      	movs	r1, #3
 80079a8:	4798      	blx	r3
 80079aa:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80079ae:	f89d 2009 	ldrb.w	r2, [sp, #9]
 80079b2:	08db      	lsrs	r3, r3, #3
 80079b4:	0892      	lsrs	r2, r2, #2
 80079b6:	02db      	lsls	r3, r3, #11
 80079b8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80079bc:	f89d 200a 	ldrb.w	r2, [sp, #10]
 80079c0:	3d01      	subs	r5, #1
 80079c2:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80079c6:	f826 3b02 	strh.w	r3, [r6], #2
 80079ca:	d1e9      	bne.n	80079a0 <_ReadRect_16bpp_B8+0x30>
 80079cc:	b005      	add	sp, #20
 80079ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

080079d0 <_ReadRect_16bpp_B16_I>:
 80079d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80079d2:	b087      	sub	sp, #28
 80079d4:	6884      	ldr	r4, [r0, #8]
 80079d6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80079d8:	9700      	str	r7, [sp, #0]
 80079da:	1abd      	subs	r5, r7, r2
 80079dc:	1a58      	subs	r0, r3, r1
 80079de:	3501      	adds	r5, #1
 80079e0:	fb00 5505 	mla	r5, r0, r5, r5
 80079e4:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80079e8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80079ea:	4620      	mov	r0, r4
 80079ec:	47b8      	blx	r7
 80079ee:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 80079f2:	202e      	movs	r0, #46	; 0x2e
 80079f4:	4798      	blx	r3
 80079f6:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80079fa:	6a21      	ldr	r1, [r4, #32]
 80079fc:	a802      	add	r0, sp, #8
 80079fe:	4798      	blx	r3
 8007a00:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 8007a04:	a802      	add	r0, sp, #8
 8007a06:	2102      	movs	r1, #2
 8007a08:	4798      	blx	r3
 8007a0a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8007a0e:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 8007a12:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8007a16:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 8007a1a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8007a1e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8007a22:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007a26:	3d01      	subs	r5, #1
 8007a28:	f826 3b02 	strh.w	r3, [r6], #2
 8007a2c:	d1e8      	bne.n	8007a00 <_ReadRect_16bpp_B16_I+0x30>
 8007a2e:	b007      	add	sp, #28
 8007a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007a34 <GUIDRV_FlexColor_SetFunc66709>:
 8007a34:	b510      	push	{r4, lr}
 8007a36:	4604      	mov	r4, r0
 8007a38:	f000 fde2 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 8007a3c:	68a3      	ldr	r3, [r4, #8]
 8007a3e:	4a12      	ldr	r2, [pc, #72]	; (8007a88 <GUIDRV_FlexColor_SetFunc66709+0x54>)
 8007a40:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 8007a44:	4a11      	ldr	r2, [pc, #68]	; (8007a8c <GUIDRV_FlexColor_SetFunc66709+0x58>)
 8007a46:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 8007a4a:	4a11      	ldr	r2, [pc, #68]	; (8007a90 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 8007a4c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 8007a50:	4a10      	ldr	r2, [pc, #64]	; (8007a94 <GUIDRV_FlexColor_SetFunc66709+0x60>)
 8007a52:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8007a56:	2200      	movs	r2, #0
 8007a58:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8007a5c:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 8007a60:	4a0d      	ldr	r2, [pc, #52]	; (8007a98 <GUIDRV_FlexColor_SetFunc66709+0x64>)
 8007a62:	490e      	ldr	r1, [pc, #56]	; (8007a9c <GUIDRV_FlexColor_SetFunc66709+0x68>)
 8007a64:	6812      	ldr	r2, [r2, #0]
 8007a66:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8007a6a:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 8007a6c:	6809      	ldr	r1, [r1, #0]
 8007a6e:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 8007a72:	f022 0203 	bic.w	r2, r2, #3
 8007a76:	490a      	ldr	r1, [pc, #40]	; (8007aa0 <GUIDRV_FlexColor_SetFunc66709+0x6c>)
 8007a78:	84da      	strh	r2, [r3, #38]	; 0x26
 8007a7a:	4a0a      	ldr	r2, [pc, #40]	; (8007aa4 <GUIDRV_FlexColor_SetFunc66709+0x70>)
 8007a7c:	f8c3 10cc 	str.w	r1, [r3, #204]	; 0xcc
 8007a80:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8007a84:	bd10      	pop	{r4, pc}
 8007a86:	bf00      	nop
 8007a88:	08007705 	.word	0x08007705
 8007a8c:	080077a7 	.word	0x080077a7
 8007a90:	0800784d 	.word	0x0800784d
 8007a94:	08007889 	.word	0x08007889
 8007a98:	2000009c 	.word	0x2000009c
 8007a9c:	20000098 	.word	0x20000098
 8007aa0:	08007971 	.word	0x08007971
 8007aa4:	0800793d 	.word	0x0800793d

08007aa8 <_WriteU16_A1>:
 8007aa8:	b508      	push	{r3, lr}
 8007aaa:	0a0b      	lsrs	r3, r1, #8
 8007aac:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 8007ab0:	f880 1072 	strb.w	r1, [r0, #114]	; 0x72
 8007ab4:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
 8007ab8:	2102      	movs	r1, #2
 8007aba:	3071      	adds	r0, #113	; 0x71
 8007abc:	4798      	blx	r3
 8007abe:	bd08      	pop	{r3, pc}

08007ac0 <_WriteDataMP>:
 8007ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ac2:	6e86      	ldr	r6, [r0, #104]	; 0x68
 8007ac4:	4604      	mov	r4, r0
 8007ac6:	460f      	mov	r7, r1
 8007ac8:	4615      	mov	r5, r2
 8007aca:	2300      	movs	r3, #0
 8007acc:	b1a5      	cbz	r5, 8007af8 <_WriteDataMP+0x38>
 8007ace:	f837 2b02 	ldrh.w	r2, [r7], #2
 8007ad2:	4630      	mov	r0, r6
 8007ad4:	3301      	adds	r3, #1
 8007ad6:	0a11      	lsrs	r1, r2, #8
 8007ad8:	2bfa      	cmp	r3, #250	; 0xfa
 8007ada:	f800 1b02 	strb.w	r1, [r0], #2
 8007ade:	7072      	strb	r2, [r6, #1]
 8007ae0:	d107      	bne.n	8007af2 <_WriteDataMP+0x32>
 8007ae2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007ae6:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8007ae8:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8007aec:	4798      	blx	r3
 8007aee:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8007af0:	2300      	movs	r3, #0
 8007af2:	3d01      	subs	r5, #1
 8007af4:	4606      	mov	r6, r0
 8007af6:	e7e9      	b.n	8007acc <_WriteDataMP+0xc>
 8007af8:	b123      	cbz	r3, 8007b04 <_WriteDataMP+0x44>
 8007afa:	f8d4 2120 	ldr.w	r2, [r4, #288]	; 0x120
 8007afe:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8007b00:	0059      	lsls	r1, r3, #1
 8007b02:	4790      	blx	r2
 8007b04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007b06 <_ReadData>:
 8007b06:	b508      	push	{r3, lr}
 8007b08:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 8007b0c:	4798      	blx	r3
 8007b0e:	bd08      	pop	{r3, pc}

08007b10 <_WriteData>:
 8007b10:	b289      	uxth	r1, r1
 8007b12:	f7ff bfc9 	b.w	8007aa8 <_WriteU16_A1>
	...

08007b18 <_FillRect>:
 8007b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b1c:	4f40      	ldr	r7, [pc, #256]	; (8007c20 <_FillRect+0x108>)
 8007b1e:	6884      	ldr	r4, [r0, #8]
 8007b20:	4682      	mov	sl, r0
 8007b22:	6838      	ldr	r0, [r7, #0]
 8007b24:	7c00      	ldrb	r0, [r0, #16]
 8007b26:	f010 0f01 	tst.w	r0, #1
 8007b2a:	b085      	sub	sp, #20
 8007b2c:	460e      	mov	r6, r1
 8007b2e:	4615      	mov	r5, r2
 8007b30:	4698      	mov	r8, r3
 8007b32:	ebc1 0903 	rsb	r9, r1, r3
 8007b36:	d045      	beq.n	8007bc4 <_FillRect+0xac>
 8007b38:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 8007b3c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007b3e:	4285      	cmp	r5, r0
 8007b40:	dc6b      	bgt.n	8007c1a <_FillRect+0x102>
 8007b42:	f8d4 c0cc 	ldr.w	ip, [r4, #204]	; 0xcc
 8007b46:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007b48:	f1bc 0f00 	cmp.w	ip, #0
 8007b4c:	d101      	bne.n	8007b52 <_FillRect+0x3a>
 8007b4e:	46b4      	mov	ip, r6
 8007b50:	e007      	b.n	8007b62 <_FillRect+0x4a>
 8007b52:	e88d 00a0 	stmia.w	sp, {r5, r7}
 8007b56:	4650      	mov	r0, sl
 8007b58:	4631      	mov	r1, r6
 8007b5a:	462a      	mov	r2, r5
 8007b5c:	4643      	mov	r3, r8
 8007b5e:	47e0      	blx	ip
 8007b60:	e011      	b.n	8007b86 <_FillRect+0x6e>
 8007b62:	45c4      	cmp	ip, r8
 8007b64:	dc0e      	bgt.n	8007b84 <_FillRect+0x6c>
 8007b66:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 8007b6a:	f8cd c00c 	str.w	ip, [sp, #12]
 8007b6e:	4661      	mov	r1, ip
 8007b70:	4650      	mov	r0, sl
 8007b72:	462a      	mov	r2, r5
 8007b74:	4798      	blx	r3
 8007b76:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007b7a:	f827 0b02 	strh.w	r0, [r7], #2
 8007b7e:	f10c 0c01 	add.w	ip, ip, #1
 8007b82:	e7ee      	b.n	8007b62 <_FillRect+0x4a>
 8007b84:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007b86:	1ebb      	subs	r3, r7, #2
 8007b88:	f109 0c01 	add.w	ip, r9, #1
 8007b8c:	445f      	add	r7, fp
 8007b8e:	42bb      	cmp	r3, r7
 8007b90:	d005      	beq.n	8007b9e <_FillRect+0x86>
 8007b92:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007b94:	8859      	ldrh	r1, [r3, #2]
 8007b96:	404a      	eors	r2, r1
 8007b98:	f823 2f02 	strh.w	r2, [r3, #2]!
 8007b9c:	e7f7      	b.n	8007b8e <_FillRect+0x76>
 8007b9e:	9500      	str	r5, [sp, #0]
 8007ba0:	462a      	mov	r2, r5
 8007ba2:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007ba6:	f8cd c00c 	str.w	ip, [sp, #12]
 8007baa:	4620      	mov	r0, r4
 8007bac:	4631      	mov	r1, r6
 8007bae:	4643      	mov	r3, r8
 8007bb0:	47b8      	blx	r7
 8007bb2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007bb6:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8007bb8:	4620      	mov	r0, r4
 8007bba:	4662      	mov	r2, ip
 8007bbc:	f7ff ff80 	bl	8007ac0 <_WriteDataMP>
 8007bc0:	3501      	adds	r5, #1
 8007bc2:	e7bb      	b.n	8007b3c <_FillRect+0x24>
 8007bc4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007bc6:	9000      	str	r0, [sp, #0]
 8007bc8:	1a85      	subs	r5, r0, r2
 8007bca:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007bce:	4620      	mov	r0, r4
 8007bd0:	47b0      	blx	r6
 8007bd2:	683b      	ldr	r3, [r7, #0]
 8007bd4:	6ea6      	ldr	r6, [r4, #104]	; 0x68
 8007bd6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007bd8:	681b      	ldr	r3, [r3, #0]
 8007bda:	f109 0901 	add.w	r9, r9, #1
 8007bde:	fb05 9509 	mla	r5, r5, r9, r9
 8007be2:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8007be6:	fa5f f983 	uxtb.w	r9, r3
 8007bea:	2301      	movs	r3, #1
 8007bec:	b1ad      	cbz	r5, 8007c1a <_FillRect+0x102>
 8007bee:	2df9      	cmp	r5, #249	; 0xf9
 8007bf0:	bf34      	ite	cc
 8007bf2:	462f      	movcc	r7, r5
 8007bf4:	27f9      	movcs	r7, #249	; 0xf9
 8007bf6:	0079      	lsls	r1, r7, #1
 8007bf8:	b143      	cbz	r3, 8007c0c <_FillRect+0xf4>
 8007bfa:	4633      	mov	r3, r6
 8007bfc:	1872      	adds	r2, r6, r1
 8007bfe:	4293      	cmp	r3, r2
 8007c00:	d004      	beq.n	8007c0c <_FillRect+0xf4>
 8007c02:	f883 8001 	strb.w	r8, [r3, #1]
 8007c06:	f803 9f02 	strb.w	r9, [r3, #2]!
 8007c0a:	e7f8      	b.n	8007bfe <_FillRect+0xe6>
 8007c0c:	f8d4 2120 	ldr.w	r2, [r4, #288]	; 0x120
 8007c10:	1c70      	adds	r0, r6, #1
 8007c12:	4790      	blx	r2
 8007c14:	1bed      	subs	r5, r5, r7
 8007c16:	2300      	movs	r3, #0
 8007c18:	e7e8      	b.n	8007bec <_FillRect+0xd4>
 8007c1a:	b005      	add	sp, #20
 8007c1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c20:	200000b8 	.word	0x200000b8

08007c24 <_DrawBitmap>:
 8007c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c28:	b08d      	sub	sp, #52	; 0x34
 8007c2a:	6885      	ldr	r5, [r0, #8]
 8007c2c:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8007c2e:	9305      	str	r3, [sp, #20]
 8007c30:	1e7b      	subs	r3, r7, #1
 8007c32:	2b01      	cmp	r3, #1
 8007c34:	9009      	str	r0, [sp, #36]	; 0x24
 8007c36:	9108      	str	r1, [sp, #32]
 8007c38:	920a      	str	r2, [sp, #40]	; 0x28
 8007c3a:	950b      	str	r5, [sp, #44]	; 0x2c
 8007c3c:	d903      	bls.n	8007c46 <_DrawBitmap+0x22>
 8007c3e:	2f04      	cmp	r7, #4
 8007c40:	d001      	beq.n	8007c46 <_DrawBitmap+0x22>
 8007c42:	2f08      	cmp	r7, #8
 8007c44:	d106      	bne.n	8007c54 <_DrawBitmap+0x30>
 8007c46:	4b91      	ldr	r3, [pc, #580]	; (8007e8c <_DrawBitmap+0x268>)
 8007c48:	681b      	ldr	r3, [r3, #0]
 8007c4a:	7c1b      	ldrb	r3, [r3, #16]
 8007c4c:	f003 0303 	and.w	r3, r3, #3
 8007c50:	2b02      	cmp	r3, #2
 8007c52:	d010      	beq.n	8007c76 <_DrawBitmap+0x52>
 8007c54:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007c56:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8007c58:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007c5a:	9908      	ldr	r1, [sp, #32]
 8007c5c:	9b05      	ldr	r3, [sp, #20]
 8007c5e:	443a      	add	r2, r7
 8007c60:	4429      	add	r1, r5
 8007c62:	3a01      	subs	r2, #1
 8007c64:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007c66:	9200      	str	r2, [sp, #0]
 8007c68:	440b      	add	r3, r1
 8007c6a:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 8007c6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007c70:	4628      	mov	r0, r5
 8007c72:	3b01      	subs	r3, #1
 8007c74:	47a0      	blx	r4
 8007c76:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8007c7a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007c7c:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8007c7e:	ebc5 030b 	rsb	r3, r5, fp
 8007c82:	42bb      	cmp	r3, r7
 8007c84:	f280 8253 	bge.w	800812e <_DrawBitmap+0x50a>
 8007c88:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8007c8a:	1e7b      	subs	r3, r7, #1
 8007c8c:	2b0f      	cmp	r3, #15
 8007c8e:	f200 8247 	bhi.w	8008120 <_DrawBitmap+0x4fc>
 8007c92:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007c96:	0010      	.short	0x0010
 8007c98:	024500bb 	.word	0x024500bb
 8007c9c:	02450144 	.word	0x02450144
 8007ca0:	02450245 	.word	0x02450245
 8007ca4:	024501db 	.word	0x024501db
 8007ca8:	02450245 	.word	0x02450245
 8007cac:	02450245 	.word	0x02450245
 8007cb0:	02450245 	.word	0x02450245
 8007cb4:	0240      	.short	0x0240
 8007cb6:	4b75      	ldr	r3, [pc, #468]	; (8007e8c <_DrawBitmap+0x268>)
 8007cb8:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007cba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007cbc:	681b      	ldr	r3, [r3, #0]
 8007cbe:	68ac      	ldr	r4, [r5, #8]
 8007cc0:	7c1b      	ldrb	r3, [r3, #16]
 8007cc2:	687d      	ldr	r5, [r7, #4]
 8007cc4:	683e      	ldr	r6, [r7, #0]
 8007cc6:	9507      	str	r5, [sp, #28]
 8007cc8:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8007cca:	9d08      	ldr	r5, [sp, #32]
 8007ccc:	f003 0303 	and.w	r3, r3, #3
 8007cd0:	443d      	add	r5, r7
 8007cd2:	2b02      	cmp	r3, #2
 8007cd4:	9503      	str	r5, [sp, #12]
 8007cd6:	d01c      	beq.n	8007d12 <_DrawBitmap+0xee>
 8007cd8:	2b03      	cmp	r3, #3
 8007cda:	d071      	beq.n	8007dc0 <_DrawBitmap+0x19c>
 8007cdc:	2b01      	cmp	r3, #1
 8007cde:	d06f      	beq.n	8007dc0 <_DrawBitmap+0x19c>
 8007ce0:	9f05      	ldr	r7, [sp, #20]
 8007ce2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007ce4:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 8007ce8:	f898 2000 	ldrb.w	r2, [r8]
 8007cec:	2380      	movs	r3, #128	; 0x80
 8007cee:	412b      	asrs	r3, r5
 8007cf0:	421a      	tst	r2, r3
 8007cf2:	bf16      	itet	ne
 8007cf4:	9807      	ldrne	r0, [sp, #28]
 8007cf6:	b2b1      	uxtheq	r1, r6
 8007cf8:	b281      	uxthne	r1, r0
 8007cfa:	3501      	adds	r5, #1
 8007cfc:	4620      	mov	r0, r4
 8007cfe:	f7ff fed3 	bl	8007aa8 <_WriteU16_A1>
 8007d02:	2d08      	cmp	r5, #8
 8007d04:	bf04      	itt	eq
 8007d06:	f108 0801 	addeq.w	r8, r8, #1
 8007d0a:	2500      	moveq	r5, #0
 8007d0c:	3f01      	subs	r7, #1
 8007d0e:	d1eb      	bne.n	8007ce8 <_DrawBitmap+0xc4>
 8007d10:	e206      	b.n	8008120 <_DrawBitmap+0x4fc>
 8007d12:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007d14:	f8dd a00c 	ldr.w	sl, [sp, #12]
 8007d18:	9506      	str	r5, [sp, #24]
 8007d1a:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8007d1e:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8007d22:	2500      	movs	r5, #0
 8007d24:	4656      	mov	r6, sl
 8007d26:	462b      	mov	r3, r5
 8007d28:	9f06      	ldr	r7, [sp, #24]
 8007d2a:	f04f 0c80 	mov.w	ip, #128	; 0x80
 8007d2e:	783a      	ldrb	r2, [r7, #0]
 8007d30:	fa4c fc08 	asr.w	ip, ip, r8
 8007d34:	ea12 0c0c 	ands.w	ip, r2, ip
 8007d38:	d00b      	beq.n	8007d52 <_DrawBitmap+0x12e>
 8007d3a:	b913      	cbnz	r3, 8007d42 <_DrawBitmap+0x11e>
 8007d3c:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8007d40:	46b2      	mov	sl, r6
 8007d42:	9f07      	ldr	r7, [sp, #28]
 8007d44:	f8a9 7000 	strh.w	r7, [r9]
 8007d48:	3501      	adds	r5, #1
 8007d4a:	f109 0902 	add.w	r9, r9, #2
 8007d4e:	2301      	movs	r3, #1
 8007d50:	e017      	b.n	8007d82 <_DrawBitmap+0x15e>
 8007d52:	2b01      	cmp	r3, #1
 8007d54:	d114      	bne.n	8007d80 <_DrawBitmap+0x15c>
 8007d56:	f8cd b000 	str.w	fp, [sp]
 8007d5a:	1e73      	subs	r3, r6, #1
 8007d5c:	f8cd c010 	str.w	ip, [sp, #16]
 8007d60:	4620      	mov	r0, r4
 8007d62:	4651      	mov	r1, sl
 8007d64:	465a      	mov	r2, fp
 8007d66:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007d6a:	47b8      	blx	r7
 8007d6c:	462a      	mov	r2, r5
 8007d6e:	4620      	mov	r0, r4
 8007d70:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8007d72:	f7ff fea5 	bl	8007ac0 <_WriteDataMP>
 8007d76:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007d7a:	4665      	mov	r5, ip
 8007d7c:	4663      	mov	r3, ip
 8007d7e:	e000      	b.n	8007d82 <_DrawBitmap+0x15e>
 8007d80:	4663      	mov	r3, ip
 8007d82:	f108 0801 	add.w	r8, r8, #1
 8007d86:	f1b8 0f08 	cmp.w	r8, #8
 8007d8a:	f106 0601 	add.w	r6, r6, #1
 8007d8e:	d104      	bne.n	8007d9a <_DrawBitmap+0x176>
 8007d90:	9f06      	ldr	r7, [sp, #24]
 8007d92:	3701      	adds	r7, #1
 8007d94:	9706      	str	r7, [sp, #24]
 8007d96:	f04f 0800 	mov.w	r8, #0
 8007d9a:	9a05      	ldr	r2, [sp, #20]
 8007d9c:	9f03      	ldr	r7, [sp, #12]
 8007d9e:	443a      	add	r2, r7
 8007da0:	42b2      	cmp	r2, r6
 8007da2:	d1c1      	bne.n	8007d28 <_DrawBitmap+0x104>
 8007da4:	9f05      	ldr	r7, [sp, #20]
 8007da6:	1e7b      	subs	r3, r7, #1
 8007da8:	9f03      	ldr	r7, [sp, #12]
 8007daa:	443b      	add	r3, r7
 8007dac:	2d00      	cmp	r5, #0
 8007dae:	f000 81b7 	beq.w	8008120 <_DrawBitmap+0x4fc>
 8007db2:	f8cd b000 	str.w	fp, [sp]
 8007db6:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007dba:	4620      	mov	r0, r4
 8007dbc:	4651      	mov	r1, sl
 8007dbe:	e13f      	b.n	8008040 <_DrawBitmap+0x41c>
 8007dc0:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8007dc4:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 8007dc6:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007dc8:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8007dcc:	9f03      	ldr	r7, [sp, #12]
 8007dce:	782a      	ldrb	r2, [r5, #0]
 8007dd0:	2380      	movs	r3, #128	; 0x80
 8007dd2:	4133      	asrs	r3, r6
 8007dd4:	44b9      	add	r9, r7
 8007dd6:	421a      	tst	r2, r3
 8007dd8:	ebc8 0909 	rsb	r9, r8, r9
 8007ddc:	d00d      	beq.n	8007dfa <_DrawBitmap+0x1d6>
 8007dde:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 8007de2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007de4:	4649      	mov	r1, r9
 8007de6:	465a      	mov	r2, fp
 8007de8:	4798      	blx	r3
 8007dea:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007dec:	f8d4 70f8 	ldr.w	r7, [r4, #248]	; 0xf8
 8007df0:	4043      	eors	r3, r0
 8007df2:	4649      	mov	r1, r9
 8007df4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007df6:	465a      	mov	r2, fp
 8007df8:	47b8      	blx	r7
 8007dfa:	3601      	adds	r6, #1
 8007dfc:	2e08      	cmp	r6, #8
 8007dfe:	bf04      	itt	eq
 8007e00:	3501      	addeq	r5, #1
 8007e02:	2600      	moveq	r6, #0
 8007e04:	f1b8 0801 	subs.w	r8, r8, #1
 8007e08:	d1de      	bne.n	8007dc8 <_DrawBitmap+0x1a4>
 8007e0a:	e189      	b.n	8008120 <_DrawBitmap+0x4fc>
 8007e0c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007e0e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007e10:	68ac      	ldr	r4, [r5, #8]
 8007e12:	2f00      	cmp	r7, #0
 8007e14:	f000 8184 	beq.w	8008120 <_DrawBitmap+0x4fc>
 8007e18:	4b1c      	ldr	r3, [pc, #112]	; (8007e8c <_DrawBitmap+0x268>)
 8007e1a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007e1c:	681b      	ldr	r3, [r3, #0]
 8007e1e:	f895 a000 	ldrb.w	sl, [r5]
 8007e22:	7c1b      	ldrb	r3, [r3, #16]
 8007e24:	f013 0303 	ands.w	r3, r3, #3
 8007e28:	d011      	beq.n	8007e4e <_DrawBitmap+0x22a>
 8007e2a:	2b02      	cmp	r3, #2
 8007e2c:	f040 8178 	bne.w	8008120 <_DrawBitmap+0x4fc>
 8007e30:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007e32:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007e36:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007e38:	9703      	str	r7, [sp, #12]
 8007e3a:	44a9      	add	r9, r5
 8007e3c:	46a8      	mov	r8, r5
 8007e3e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007e40:	9507      	str	r5, [sp, #28]
 8007e42:	2500      	movs	r5, #0
 8007e44:	f8cd 9018 	str.w	r9, [sp, #24]
 8007e48:	464e      	mov	r6, r9
 8007e4a:	462b      	mov	r3, r5
 8007e4c:	e040      	b.n	8007ed0 <_DrawBitmap+0x2ac>
 8007e4e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007e50:	9e05      	ldr	r6, [sp, #20]
 8007e52:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007e54:	f1c5 0303 	rsb	r3, r5, #3
 8007e58:	005b      	lsls	r3, r3, #1
 8007e5a:	f1c3 0206 	rsb	r2, r3, #6
 8007e5e:	21c0      	movs	r1, #192	; 0xc0
 8007e60:	fa41 f202 	asr.w	r2, r1, r2
 8007e64:	ea02 020a 	and.w	r2, r2, sl
 8007e68:	fa22 f303 	lsr.w	r3, r2, r3
 8007e6c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8007e6e:	4620      	mov	r0, r4
 8007e70:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 8007e74:	3501      	adds	r5, #1
 8007e76:	f7ff fe17 	bl	8007aa8 <_WriteU16_A1>
 8007e7a:	2d04      	cmp	r5, #4
 8007e7c:	d103      	bne.n	8007e86 <_DrawBitmap+0x262>
 8007e7e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007e82:	2500      	movs	r5, #0
 8007e84:	3701      	adds	r7, #1
 8007e86:	3e01      	subs	r6, #1
 8007e88:	d1e4      	bne.n	8007e54 <_DrawBitmap+0x230>
 8007e8a:	e149      	b.n	8008120 <_DrawBitmap+0x4fc>
 8007e8c:	200000b8 	.word	0x200000b8
 8007e90:	b913      	cbnz	r3, 8007e98 <_DrawBitmap+0x274>
 8007e92:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007e94:	9703      	str	r7, [sp, #12]
 8007e96:	9606      	str	r6, [sp, #24]
 8007e98:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007e9a:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007e9e:	9f03      	ldr	r7, [sp, #12]
 8007ea0:	803b      	strh	r3, [r7, #0]
 8007ea2:	3702      	adds	r7, #2
 8007ea4:	3501      	adds	r5, #1
 8007ea6:	9703      	str	r7, [sp, #12]
 8007ea8:	2301      	movs	r3, #1
 8007eaa:	f108 0801 	add.w	r8, r8, #1
 8007eae:	f1b8 0f04 	cmp.w	r8, #4
 8007eb2:	f106 0601 	add.w	r6, r6, #1
 8007eb6:	d106      	bne.n	8007ec6 <_DrawBitmap+0x2a2>
 8007eb8:	9f07      	ldr	r7, [sp, #28]
 8007eba:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007ebe:	3701      	adds	r7, #1
 8007ec0:	9707      	str	r7, [sp, #28]
 8007ec2:	f04f 0800 	mov.w	r8, #0
 8007ec6:	9a05      	ldr	r2, [sp, #20]
 8007ec8:	444a      	add	r2, r9
 8007eca:	42b2      	cmp	r2, r6
 8007ecc:	f000 80ad 	beq.w	800802a <_DrawBitmap+0x406>
 8007ed0:	f1c8 0203 	rsb	r2, r8, #3
 8007ed4:	0052      	lsls	r2, r2, #1
 8007ed6:	f1c2 0106 	rsb	r1, r2, #6
 8007eda:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 8007ede:	fa4c fc01 	asr.w	ip, ip, r1
 8007ee2:	ea0c 0c0a 	and.w	ip, ip, sl
 8007ee6:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007eea:	d1d1      	bne.n	8007e90 <_DrawBitmap+0x26c>
 8007eec:	2b01      	cmp	r3, #1
 8007eee:	d114      	bne.n	8007f1a <_DrawBitmap+0x2f6>
 8007ef0:	f8cd b000 	str.w	fp, [sp]
 8007ef4:	1e73      	subs	r3, r6, #1
 8007ef6:	f8cd c010 	str.w	ip, [sp, #16]
 8007efa:	4620      	mov	r0, r4
 8007efc:	9906      	ldr	r1, [sp, #24]
 8007efe:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007f02:	465a      	mov	r2, fp
 8007f04:	47b8      	blx	r7
 8007f06:	462a      	mov	r2, r5
 8007f08:	4620      	mov	r0, r4
 8007f0a:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8007f0c:	f7ff fdd8 	bl	8007ac0 <_WriteDataMP>
 8007f10:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007f14:	4665      	mov	r5, ip
 8007f16:	4663      	mov	r3, ip
 8007f18:	e7c7      	b.n	8007eaa <_DrawBitmap+0x286>
 8007f1a:	4663      	mov	r3, ip
 8007f1c:	e7c5      	b.n	8007eaa <_DrawBitmap+0x286>
 8007f1e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007f20:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007f22:	68ac      	ldr	r4, [r5, #8]
 8007f24:	2f00      	cmp	r7, #0
 8007f26:	f000 80fb 	beq.w	8008120 <_DrawBitmap+0x4fc>
 8007f2a:	4b82      	ldr	r3, [pc, #520]	; (8008134 <_DrawBitmap+0x510>)
 8007f2c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007f2e:	681b      	ldr	r3, [r3, #0]
 8007f30:	f895 a000 	ldrb.w	sl, [r5]
 8007f34:	7c1b      	ldrb	r3, [r3, #16]
 8007f36:	f013 0303 	ands.w	r3, r3, #3
 8007f3a:	d011      	beq.n	8007f60 <_DrawBitmap+0x33c>
 8007f3c:	2b02      	cmp	r3, #2
 8007f3e:	f040 80ef 	bne.w	8008120 <_DrawBitmap+0x4fc>
 8007f42:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007f44:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007f48:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007f4a:	9703      	str	r7, [sp, #12]
 8007f4c:	44a9      	add	r9, r5
 8007f4e:	46a8      	mov	r8, r5
 8007f50:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007f52:	9507      	str	r5, [sp, #28]
 8007f54:	2500      	movs	r5, #0
 8007f56:	f8cd 9018 	str.w	r9, [sp, #24]
 8007f5a:	464e      	mov	r6, r9
 8007f5c:	462b      	mov	r3, r5
 8007f5e:	e03d      	b.n	8007fdc <_DrawBitmap+0x3b8>
 8007f60:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007f62:	9e05      	ldr	r6, [sp, #20]
 8007f64:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007f66:	f1c5 0301 	rsb	r3, r5, #1
 8007f6a:	009b      	lsls	r3, r3, #2
 8007f6c:	f1c3 0204 	rsb	r2, r3, #4
 8007f70:	21f0      	movs	r1, #240	; 0xf0
 8007f72:	fa41 f202 	asr.w	r2, r1, r2
 8007f76:	ea02 020a 	and.w	r2, r2, sl
 8007f7a:	fa22 f303 	lsr.w	r3, r2, r3
 8007f7e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8007f80:	4620      	mov	r0, r4
 8007f82:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 8007f86:	3501      	adds	r5, #1
 8007f88:	f7ff fd8e 	bl	8007aa8 <_WriteU16_A1>
 8007f8c:	2d02      	cmp	r5, #2
 8007f8e:	d103      	bne.n	8007f98 <_DrawBitmap+0x374>
 8007f90:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007f94:	2500      	movs	r5, #0
 8007f96:	3701      	adds	r7, #1
 8007f98:	3e01      	subs	r6, #1
 8007f9a:	d1e4      	bne.n	8007f66 <_DrawBitmap+0x342>
 8007f9c:	e0c0      	b.n	8008120 <_DrawBitmap+0x4fc>
 8007f9e:	b913      	cbnz	r3, 8007fa6 <_DrawBitmap+0x382>
 8007fa0:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007fa2:	9703      	str	r7, [sp, #12]
 8007fa4:	9606      	str	r6, [sp, #24]
 8007fa6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007fa8:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007fac:	9f03      	ldr	r7, [sp, #12]
 8007fae:	803b      	strh	r3, [r7, #0]
 8007fb0:	3702      	adds	r7, #2
 8007fb2:	3501      	adds	r5, #1
 8007fb4:	9703      	str	r7, [sp, #12]
 8007fb6:	2301      	movs	r3, #1
 8007fb8:	f108 0801 	add.w	r8, r8, #1
 8007fbc:	f1b8 0f02 	cmp.w	r8, #2
 8007fc0:	f106 0601 	add.w	r6, r6, #1
 8007fc4:	d106      	bne.n	8007fd4 <_DrawBitmap+0x3b0>
 8007fc6:	9f07      	ldr	r7, [sp, #28]
 8007fc8:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007fcc:	3701      	adds	r7, #1
 8007fce:	9707      	str	r7, [sp, #28]
 8007fd0:	f04f 0800 	mov.w	r8, #0
 8007fd4:	9a05      	ldr	r2, [sp, #20]
 8007fd6:	444a      	add	r2, r9
 8007fd8:	42b2      	cmp	r2, r6
 8007fda:	d026      	beq.n	800802a <_DrawBitmap+0x406>
 8007fdc:	f1c8 0201 	rsb	r2, r8, #1
 8007fe0:	0092      	lsls	r2, r2, #2
 8007fe2:	f1c2 0104 	rsb	r1, r2, #4
 8007fe6:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 8007fea:	fa4c fc01 	asr.w	ip, ip, r1
 8007fee:	ea0c 0c0a 	and.w	ip, ip, sl
 8007ff2:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007ff6:	d1d2      	bne.n	8007f9e <_DrawBitmap+0x37a>
 8007ff8:	2b01      	cmp	r3, #1
 8007ffa:	d114      	bne.n	8008026 <_DrawBitmap+0x402>
 8007ffc:	f8cd b000 	str.w	fp, [sp]
 8008000:	1e73      	subs	r3, r6, #1
 8008002:	f8cd c010 	str.w	ip, [sp, #16]
 8008006:	4620      	mov	r0, r4
 8008008:	9906      	ldr	r1, [sp, #24]
 800800a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800800e:	465a      	mov	r2, fp
 8008010:	47b8      	blx	r7
 8008012:	462a      	mov	r2, r5
 8008014:	4620      	mov	r0, r4
 8008016:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008018:	f7ff fd52 	bl	8007ac0 <_WriteDataMP>
 800801c:	f8dd c010 	ldr.w	ip, [sp, #16]
 8008020:	4665      	mov	r5, ip
 8008022:	4663      	mov	r3, ip
 8008024:	e7c8      	b.n	8007fb8 <_DrawBitmap+0x394>
 8008026:	4663      	mov	r3, ip
 8008028:	e7c6      	b.n	8007fb8 <_DrawBitmap+0x394>
 800802a:	9f05      	ldr	r7, [sp, #20]
 800802c:	1e7b      	subs	r3, r7, #1
 800802e:	444b      	add	r3, r9
 8008030:	2d00      	cmp	r5, #0
 8008032:	d075      	beq.n	8008120 <_DrawBitmap+0x4fc>
 8008034:	f8cd b000 	str.w	fp, [sp]
 8008038:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800803c:	9906      	ldr	r1, [sp, #24]
 800803e:	4620      	mov	r0, r4
 8008040:	465a      	mov	r2, fp
 8008042:	47b0      	blx	r6
 8008044:	4620      	mov	r0, r4
 8008046:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008048:	462a      	mov	r2, r5
 800804a:	e067      	b.n	800811c <_DrawBitmap+0x4f8>
 800804c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800804e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008050:	68ac      	ldr	r4, [r5, #8]
 8008052:	2f00      	cmp	r7, #0
 8008054:	d064      	beq.n	8008120 <_DrawBitmap+0x4fc>
 8008056:	4b37      	ldr	r3, [pc, #220]	; (8008134 <_DrawBitmap+0x510>)
 8008058:	681b      	ldr	r3, [r3, #0]
 800805a:	7c1b      	ldrb	r3, [r3, #16]
 800805c:	f013 0303 	ands.w	r3, r3, #3
 8008060:	d009      	beq.n	8008076 <_DrawBitmap+0x452>
 8008062:	2b02      	cmp	r3, #2
 8008064:	d15c      	bne.n	8008120 <_DrawBitmap+0x4fc>
 8008066:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800806a:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800806e:	2600      	movs	r6, #0
 8008070:	464f      	mov	r7, r9
 8008072:	4633      	mov	r3, r6
 8008074:	e022      	b.n	80080bc <_DrawBitmap+0x498>
 8008076:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008078:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800807a:	9f05      	ldr	r7, [sp, #20]
 800807c:	443b      	add	r3, r7
 800807e:	1b5b      	subs	r3, r3, r5
 8008080:	2b00      	cmp	r3, #0
 8008082:	dd4d      	ble.n	8008120 <_DrawBitmap+0x4fc>
 8008084:	f815 3b01 	ldrb.w	r3, [r5], #1
 8008088:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800808a:	4620      	mov	r0, r4
 800808c:	f837 1023 	ldrh.w	r1, [r7, r3, lsl #2]
 8008090:	f7ff fd0a 	bl	8007aa8 <_WriteU16_A1>
 8008094:	e7f0      	b.n	8008078 <_DrawBitmap+0x454>
 8008096:	b913      	cbnz	r3, 800809e <_DrawBitmap+0x47a>
 8008098:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800809c:	46b9      	mov	r9, r7
 800809e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80080a0:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 80080a4:	f8a8 3000 	strh.w	r3, [r8]
 80080a8:	3601      	adds	r6, #1
 80080aa:	f108 0802 	add.w	r8, r8, #2
 80080ae:	2301      	movs	r3, #1
 80080b0:	9a08      	ldr	r2, [sp, #32]
 80080b2:	9d05      	ldr	r5, [sp, #20]
 80080b4:	3701      	adds	r7, #1
 80080b6:	442a      	add	r2, r5
 80080b8:	42ba      	cmp	r2, r7
 80080ba:	d01c      	beq.n	80080f6 <_DrawBitmap+0x4d2>
 80080bc:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80080be:	9808      	ldr	r0, [sp, #32]
 80080c0:	1a2a      	subs	r2, r5, r0
 80080c2:	f812 a007 	ldrb.w	sl, [r2, r7]
 80080c6:	f1ba 0f00 	cmp.w	sl, #0
 80080ca:	d1e4      	bne.n	8008096 <_DrawBitmap+0x472>
 80080cc:	2b01      	cmp	r3, #1
 80080ce:	d110      	bne.n	80080f2 <_DrawBitmap+0x4ce>
 80080d0:	f8cd b000 	str.w	fp, [sp]
 80080d4:	1e7b      	subs	r3, r7, #1
 80080d6:	4620      	mov	r0, r4
 80080d8:	4649      	mov	r1, r9
 80080da:	465a      	mov	r2, fp
 80080dc:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 80080e0:	47a8      	blx	r5
 80080e2:	4632      	mov	r2, r6
 80080e4:	4620      	mov	r0, r4
 80080e6:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 80080e8:	f7ff fcea 	bl	8007ac0 <_WriteDataMP>
 80080ec:	4656      	mov	r6, sl
 80080ee:	4653      	mov	r3, sl
 80080f0:	e7de      	b.n	80080b0 <_DrawBitmap+0x48c>
 80080f2:	4653      	mov	r3, sl
 80080f4:	e7dc      	b.n	80080b0 <_DrawBitmap+0x48c>
 80080f6:	9f08      	ldr	r7, [sp, #32]
 80080f8:	1e6b      	subs	r3, r5, #1
 80080fa:	443b      	add	r3, r7
 80080fc:	b186      	cbz	r6, 8008120 <_DrawBitmap+0x4fc>
 80080fe:	f8cd b000 	str.w	fp, [sp]
 8008102:	4620      	mov	r0, r4
 8008104:	4649      	mov	r1, r9
 8008106:	465a      	mov	r2, fp
 8008108:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800810c:	47a8      	blx	r5
 800810e:	4620      	mov	r0, r4
 8008110:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008112:	4632      	mov	r2, r6
 8008114:	e002      	b.n	800811c <_DrawBitmap+0x4f8>
 8008116:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008118:	9919      	ldr	r1, [sp, #100]	; 0x64
 800811a:	9a05      	ldr	r2, [sp, #20]
 800811c:	f7ff fcd0 	bl	8007ac0 <_WriteDataMP>
 8008120:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008122:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8008124:	443d      	add	r5, r7
 8008126:	9519      	str	r5, [sp, #100]	; 0x64
 8008128:	f10b 0b01 	add.w	fp, fp, #1
 800812c:	e5a5      	b.n	8007c7a <_DrawBitmap+0x56>
 800812e:	b00d      	add	sp, #52	; 0x34
 8008130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008134:	200000b8 	.word	0x200000b8

08008138 <GUIDRV_FlexColor_SetMode16bppC0B8>:
 8008138:	b510      	push	{r4, lr}
 800813a:	4604      	mov	r4, r0
 800813c:	f000 fa60 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 8008140:	68a4      	ldr	r4, [r4, #8]
 8008142:	4b10      	ldr	r3, [pc, #64]	; (8008184 <GUIDRV_FlexColor_SetMode16bppC0B8+0x4c>)
 8008144:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8008148:	4b0f      	ldr	r3, [pc, #60]	; (8008188 <GUIDRV_FlexColor_SetMode16bppC0B8+0x50>)
 800814a:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 800814e:	4b0f      	ldr	r3, [pc, #60]	; (800818c <GUIDRV_FlexColor_SetMode16bppC0B8+0x54>)
 8008150:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 8008154:	4b0e      	ldr	r3, [pc, #56]	; (8008190 <GUIDRV_FlexColor_SetMode16bppC0B8+0x58>)
 8008156:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
 800815a:	4b0e      	ldr	r3, [pc, #56]	; (8008194 <GUIDRV_FlexColor_SetMode16bppC0B8+0x5c>)
 800815c:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8008160:	4b0d      	ldr	r3, [pc, #52]	; (8008198 <GUIDRV_FlexColor_SetMode16bppC0B8+0x60>)
 8008162:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8008166:	f8d4 30cc 	ldr.w	r3, [r4, #204]	; 0xcc
 800816a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800816e:	4620      	mov	r0, r4
 8008170:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8008174:	2108      	movs	r1, #8
 8008176:	4798      	blx	r3
 8008178:	2310      	movs	r3, #16
 800817a:	63a3      	str	r3, [r4, #56]	; 0x38
 800817c:	4b07      	ldr	r3, [pc, #28]	; (800819c <GUIDRV_FlexColor_SetMode16bppC0B8+0x64>)
 800817e:	6463      	str	r3, [r4, #68]	; 0x44
 8008180:	bd10      	pop	{r4, pc}
 8008182:	bf00      	nop
 8008184:	08007c25 	.word	0x08007c25
 8008188:	08007b19 	.word	0x08007b19
 800818c:	0800854f 	.word	0x0800854f
 8008190:	080084bf 	.word	0x080084bf
 8008194:	08007b07 	.word	0x08007b07
 8008198:	08007b11 	.word	0x08007b11
 800819c:	0801250c 	.word	0x0801250c

080081a0 <_Log2PhysX_X0Y0S0>:
 80081a0:	4608      	mov	r0, r1
 80081a2:	4770      	bx	lr

080081a4 <_Log2PhysX_X1Y0S0>:
 80081a4:	6800      	ldr	r0, [r0, #0]
 80081a6:	1a40      	subs	r0, r0, r1
 80081a8:	3801      	subs	r0, #1
 80081aa:	4770      	bx	lr

080081ac <_Log2PhysX_X0Y1S0>:
 80081ac:	4608      	mov	r0, r1
 80081ae:	4770      	bx	lr

080081b0 <_Log2PhysX_X1Y1S0>:
 80081b0:	6800      	ldr	r0, [r0, #0]
 80081b2:	1a40      	subs	r0, r0, r1
 80081b4:	3801      	subs	r0, #1
 80081b6:	4770      	bx	lr

080081b8 <_Log2PhysX_X0Y0S1>:
 80081b8:	4610      	mov	r0, r2
 80081ba:	4770      	bx	lr

080081bc <_Log2PhysX_X1Y0S1>:
 80081bc:	6840      	ldr	r0, [r0, #4]
 80081be:	1a80      	subs	r0, r0, r2
 80081c0:	3801      	subs	r0, #1
 80081c2:	4770      	bx	lr

080081c4 <_Log2PhysX_X0Y1S1>:
 80081c4:	4610      	mov	r0, r2
 80081c6:	4770      	bx	lr

080081c8 <_Log2PhysX_X1Y1S1>:
 80081c8:	6840      	ldr	r0, [r0, #4]
 80081ca:	1a80      	subs	r0, r0, r2
 80081cc:	3801      	subs	r0, #1
 80081ce:	4770      	bx	lr

080081d0 <_Log2PhysY_X0Y0S0>:
 80081d0:	4610      	mov	r0, r2
 80081d2:	4770      	bx	lr

080081d4 <_Log2PhysY_X1Y0S0>:
 80081d4:	4610      	mov	r0, r2
 80081d6:	4770      	bx	lr

080081d8 <_Log2PhysY_X0Y1S0>:
 80081d8:	6840      	ldr	r0, [r0, #4]
 80081da:	1a80      	subs	r0, r0, r2
 80081dc:	3801      	subs	r0, #1
 80081de:	4770      	bx	lr

080081e0 <_Log2PhysY_X1Y1S0>:
 80081e0:	6840      	ldr	r0, [r0, #4]
 80081e2:	1a80      	subs	r0, r0, r2
 80081e4:	3801      	subs	r0, #1
 80081e6:	4770      	bx	lr

080081e8 <_Log2PhysY_X0Y0S1>:
 80081e8:	4608      	mov	r0, r1
 80081ea:	4770      	bx	lr

080081ec <_Log2PhysY_X1Y0S1>:
 80081ec:	4608      	mov	r0, r1
 80081ee:	4770      	bx	lr

080081f0 <_Log2PhysY_X0Y1S1>:
 80081f0:	6800      	ldr	r0, [r0, #0]
 80081f2:	1a40      	subs	r0, r0, r1
 80081f4:	3801      	subs	r0, #1
 80081f6:	4770      	bx	lr

080081f8 <_Log2PhysY_X1Y1S1>:
 80081f8:	6800      	ldr	r0, [r0, #0]
 80081fa:	1a40      	subs	r0, r0, r1
 80081fc:	3801      	subs	r0, #1
 80081fe:	4770      	bx	lr

08008200 <_SetPixelIndex>:
 8008200:	b510      	push	{r4, lr}
 8008202:	6884      	ldr	r4, [r0, #8]
 8008204:	f8d4 40f8 	ldr.w	r4, [r4, #248]	; 0xf8
 8008208:	47a0      	blx	r4
 800820a:	bd10      	pop	{r4, pc}

0800820c <_GetPixelIndex>:
 800820c:	b508      	push	{r3, lr}
 800820e:	6883      	ldr	r3, [r0, #8]
 8008210:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8008214:	4798      	blx	r3
 8008216:	bd08      	pop	{r3, pc}

08008218 <_XorPixel>:
 8008218:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800821a:	4604      	mov	r4, r0
 800821c:	460f      	mov	r7, r1
 800821e:	4616      	mov	r6, r2
 8008220:	6885      	ldr	r5, [r0, #8]
 8008222:	f7ff fff3 	bl	800820c <_GetPixelIndex>
 8008226:	9001      	str	r0, [sp, #4]
 8008228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800822c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800822e:	4620      	mov	r0, r4
 8008230:	4639      	mov	r1, r7
 8008232:	4632      	mov	r2, r6
 8008234:	ea8e 0303 	eor.w	r3, lr, r3
 8008238:	f7ff ffe2 	bl	8008200 <_SetPixelIndex>
 800823c:	b003      	add	sp, #12
 800823e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008240 <_DrawHLine>:
 8008240:	b513      	push	{r0, r1, r4, lr}
 8008242:	6884      	ldr	r4, [r0, #8]
 8008244:	9200      	str	r2, [sp, #0]
 8008246:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800824a:	47a0      	blx	r4
 800824c:	b002      	add	sp, #8
 800824e:	bd10      	pop	{r4, pc}

08008250 <_DrawVLine>:
 8008250:	b513      	push	{r0, r1, r4, lr}
 8008252:	6884      	ldr	r4, [r0, #8]
 8008254:	9300      	str	r3, [sp, #0]
 8008256:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800825a:	460b      	mov	r3, r1
 800825c:	47a0      	blx	r4
 800825e:	b002      	add	sp, #8
 8008260:	bd10      	pop	{r4, pc}

08008262 <_FillRect>:
 8008262:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008264:	9c06      	ldr	r4, [sp, #24]
 8008266:	6885      	ldr	r5, [r0, #8]
 8008268:	9400      	str	r4, [sp, #0]
 800826a:	f8d5 40f0 	ldr.w	r4, [r5, #240]	; 0xf0
 800826e:	47a0      	blx	r4
 8008270:	b003      	add	sp, #12
 8008272:	bd30      	pop	{r4, r5, pc}

08008274 <_DrawBitmap>:
 8008274:	b530      	push	{r4, r5, lr}
 8008276:	b087      	sub	sp, #28
 8008278:	6885      	ldr	r5, [r0, #8]
 800827a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800827c:	9400      	str	r4, [sp, #0]
 800827e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008280:	9401      	str	r4, [sp, #4]
 8008282:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8008284:	9402      	str	r4, [sp, #8]
 8008286:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008288:	9403      	str	r4, [sp, #12]
 800828a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800828c:	9404      	str	r4, [sp, #16]
 800828e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8008290:	9405      	str	r4, [sp, #20]
 8008292:	f8d5 40ec 	ldr.w	r4, [r5, #236]	; 0xec
 8008296:	47a0      	blx	r4
 8008298:	b007      	add	sp, #28
 800829a:	bd30      	pop	{r4, r5, pc}

0800829c <_GetDevFunc_SetRect>:
 800829c:	4770      	bx	lr
	...

080082a0 <_GetDevFunc_SetRectOutside>:
 80082a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80082a2:	9e07      	ldr	r6, [sp, #28]
 80082a4:	6884      	ldr	r4, [r0, #8]
 80082a6:	4d0c      	ldr	r5, [pc, #48]	; (80082d8 <_GetDevFunc_SetRectOutside+0x38>)
 80082a8:	b176      	cbz	r6, 80082c8 <_GetDevFunc_SetRectOutside+0x28>
 80082aa:	6828      	ldr	r0, [r5, #0]
 80082ac:	b988      	cbnz	r0, 80082d2 <_GetDevFunc_SetRectOutside+0x32>
 80082ae:	9806      	ldr	r0, [sp, #24]
 80082b0:	9000      	str	r0, [sp, #0]
 80082b2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 80082b6:	4620      	mov	r0, r4
 80082b8:	47b0      	blx	r6
 80082ba:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 80082be:	602b      	str	r3, [r5, #0]
 80082c0:	4b06      	ldr	r3, [pc, #24]	; (80082dc <_GetDevFunc_SetRectOutside+0x3c>)
 80082c2:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80082c6:	e004      	b.n	80082d2 <_GetDevFunc_SetRectOutside+0x32>
 80082c8:	682b      	ldr	r3, [r5, #0]
 80082ca:	b113      	cbz	r3, 80082d2 <_GetDevFunc_SetRectOutside+0x32>
 80082cc:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80082d0:	602e      	str	r6, [r5, #0]
 80082d2:	b002      	add	sp, #8
 80082d4:	bd70      	pop	{r4, r5, r6, pc}
 80082d6:	bf00      	nop
 80082d8:	20002afc 	.word	0x20002afc
 80082dc:	0800829d 	.word	0x0800829d

080082e0 <_ReadPixelCust_16bpp>:
 80082e0:	b508      	push	{r3, lr}
 80082e2:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80082e4:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 80082e8:	6990      	ldr	r0, [r2, #24]
 80082ea:	4798      	blx	r3
 80082ec:	bd08      	pop	{r3, pc}

080082ee <_ReadPixelCust_18bpp>:
 80082ee:	b508      	push	{r3, lr}
 80082f0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80082f2:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
 80082f6:	6990      	ldr	r0, [r2, #24]
 80082f8:	4798      	blx	r3
 80082fa:	bd08      	pop	{r3, pc}

080082fc <_ReadRectCust_16bpp>:
 80082fc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008300:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008302:	6884      	ldr	r4, [r0, #8]
 8008304:	9500      	str	r5, [sp, #0]
 8008306:	4617      	mov	r7, r2
 8008308:	4620      	mov	r0, r4
 800830a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800830e:	4699      	mov	r9, r3
 8008310:	4688      	mov	r8, r1
 8008312:	1bed      	subs	r5, r5, r7
 8008314:	47b0      	blx	r6
 8008316:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8008318:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 800831c:	6988      	ldr	r0, [r1, #24]
 800831e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008320:	ebc8 0809 	rsb	r8, r8, r9
 8008324:	1c6a      	adds	r2, r5, #1
 8008326:	fb08 2202 	mla	r2, r8, r2, r2
 800832a:	4798      	blx	r3
 800832c:	b003      	add	sp, #12
 800832e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008332 <_ReadRectCust_18bpp>:
 8008332:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008336:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008338:	6884      	ldr	r4, [r0, #8]
 800833a:	9500      	str	r5, [sp, #0]
 800833c:	4617      	mov	r7, r2
 800833e:	4620      	mov	r0, r4
 8008340:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8008344:	4699      	mov	r9, r3
 8008346:	4688      	mov	r8, r1
 8008348:	1bed      	subs	r5, r5, r7
 800834a:	47b0      	blx	r6
 800834c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800834e:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8008352:	6988      	ldr	r0, [r1, #24]
 8008354:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008356:	ebc8 0809 	rsb	r8, r8, r9
 800835a:	1c6a      	adds	r2, r5, #1
 800835c:	fb08 2202 	mla	r2, r8, r2, r2
 8008360:	4798      	blx	r3
 8008362:	b003      	add	sp, #12
 8008364:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008368 <_GetDevFunc>:
 8008368:	3901      	subs	r1, #1
 800836a:	2917      	cmp	r1, #23
 800836c:	d828      	bhi.n	80083c0 <_GetDevFunc+0x58>
 800836e:	e8df f001 	tbb	[pc, r1]
 8008372:	2714      	.short	0x2714
 8008374:	27272727 	.word	0x27272727
 8008378:	0e272727 	.word	0x0e272727
 800837c:	0c191210 	.word	0x0c191210
 8008380:	27272729 	.word	0x27272729
 8008384:	23272727 	.word	0x23272727
 8008388:	251e      	.short	0x251e
 800838a:	480f      	ldr	r0, [pc, #60]	; (80083c8 <_GetDevFunc+0x60>)
 800838c:	4770      	bx	lr
 800838e:	480f      	ldr	r0, [pc, #60]	; (80083cc <_GetDevFunc+0x64>)
 8008390:	4770      	bx	lr
 8008392:	480f      	ldr	r0, [pc, #60]	; (80083d0 <_GetDevFunc+0x68>)
 8008394:	4770      	bx	lr
 8008396:	480f      	ldr	r0, [pc, #60]	; (80083d4 <_GetDevFunc+0x6c>)
 8008398:	4770      	bx	lr
 800839a:	6803      	ldr	r3, [r0, #0]
 800839c:	689b      	ldr	r3, [r3, #8]
 800839e:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
 80083a2:	4770      	bx	lr
 80083a4:	6803      	ldr	r3, [r0, #0]
 80083a6:	689b      	ldr	r3, [r3, #8]
 80083a8:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 80083ac:	4770      	bx	lr
 80083ae:	6803      	ldr	r3, [r0, #0]
 80083b0:	689b      	ldr	r3, [r3, #8]
 80083b2:	f8d3 0100 	ldr.w	r0, [r3, #256]	; 0x100
 80083b6:	4770      	bx	lr
 80083b8:	4807      	ldr	r0, [pc, #28]	; (80083d8 <_GetDevFunc+0x70>)
 80083ba:	4770      	bx	lr
 80083bc:	4807      	ldr	r0, [pc, #28]	; (80083dc <_GetDevFunc+0x74>)
 80083be:	4770      	bx	lr
 80083c0:	2000      	movs	r0, #0
 80083c2:	4770      	bx	lr
 80083c4:	4806      	ldr	r0, [pc, #24]	; (80083e0 <_GetDevFunc+0x78>)
 80083c6:	4770      	bx	lr
 80083c8:	08008761 	.word	0x08008761
 80083cc:	08008737 	.word	0x08008737
 80083d0:	08008723 	.word	0x08008723
 80083d4:	080086d9 	.word	0x080086d9
 80083d8:	0800863d 	.word	0x0800863d
 80083dc:	080082a1 	.word	0x080082a1
 80083e0:	0800874b 	.word	0x0800874b

080083e4 <_GetDevProp>:
 80083e4:	3901      	subs	r1, #1
 80083e6:	6880      	ldr	r0, [r0, #8]
 80083e8:	290d      	cmp	r1, #13
 80083ea:	d823      	bhi.n	8008434 <_GetDevProp+0x50>
 80083ec:	e8df f001 	tbb	[pc, r1]
 80083f0:	0f0d0b09 	.word	0x0f0d0b09
 80083f4:	11222222 	.word	0x11222222
 80083f8:	13252507 	.word	0x13252507
 80083fc:	1d18      	.short	0x1d18
 80083fe:	2000      	movs	r0, #0
 8008400:	4770      	bx	lr
 8008402:	6800      	ldr	r0, [r0, #0]
 8008404:	4770      	bx	lr
 8008406:	6840      	ldr	r0, [r0, #4]
 8008408:	4770      	bx	lr
 800840a:	6880      	ldr	r0, [r0, #8]
 800840c:	4770      	bx	lr
 800840e:	68c0      	ldr	r0, [r0, #12]
 8008410:	4770      	bx	lr
 8008412:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8008414:	4770      	bx	lr
 8008416:	b188      	cbz	r0, 800843c <_GetDevProp+0x58>
 8008418:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800841a:	f000 0001 	and.w	r0, r0, #1
 800841e:	4770      	bx	lr
 8008420:	b160      	cbz	r0, 800843c <_GetDevProp+0x58>
 8008422:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008424:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8008428:	4770      	bx	lr
 800842a:	b138      	cbz	r0, 800843c <_GetDevProp+0x58>
 800842c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800842e:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8008432:	4770      	bx	lr
 8008434:	f04f 30ff 	mov.w	r0, #4294967295
 8008438:	4770      	bx	lr
 800843a:	2001      	movs	r0, #1
 800843c:	4770      	bx	lr

0800843e <_GetDevData>:
 800843e:	6883      	ldr	r3, [r0, #8]
 8008440:	2901      	cmp	r1, #1
 8008442:	bf0c      	ite	eq
 8008444:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 8008446:	2000      	movne	r0, #0
 8008448:	4770      	bx	lr

0800844a <_GetRect>:
 800844a:	6883      	ldr	r3, [r0, #8]
 800844c:	2200      	movs	r2, #0
 800844e:	800a      	strh	r2, [r1, #0]
 8008450:	804a      	strh	r2, [r1, #2]
 8008452:	681a      	ldr	r2, [r3, #0]
 8008454:	685b      	ldr	r3, [r3, #4]
 8008456:	3a01      	subs	r2, #1
 8008458:	3b01      	subs	r3, #1
 800845a:	808a      	strh	r2, [r1, #4]
 800845c:	80cb      	strh	r3, [r1, #6]
 800845e:	4770      	bx	lr

08008460 <GUIDRV_FlexColor__SetLog2Phys>:
 8008460:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008462:	4d10      	ldr	r5, [pc, #64]	; (80084a4 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 8008464:	462e      	mov	r6, r5
 8008466:	4607      	mov	r7, r0
 8008468:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800846a:	b091      	sub	sp, #68	; 0x44
 800846c:	466c      	mov	r4, sp
 800846e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008470:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8008474:	3520      	adds	r5, #32
 8008476:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800847a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800847c:	ac08      	add	r4, sp, #32
 800847e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008480:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008484:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008488:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800848a:	aa10      	add	r2, sp, #64	; 0x40
 800848c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008490:	f853 2c40 	ldr.w	r2, [r3, #-64]
 8008494:	f8c7 2108 	str.w	r2, [r7, #264]	; 0x108
 8008498:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800849c:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 80084a0:	b011      	add	sp, #68	; 0x44
 80084a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80084a4:	080101f0 	.word	0x080101f0

080084a8 <_SetOrg>:
 80084a8:	b507      	push	{r0, r1, r2, lr}
 80084aa:	6980      	ldr	r0, [r0, #24]
 80084ac:	e88d 0006 	stmia.w	sp, {r1, r2}
 80084b0:	2103      	movs	r1, #3
 80084b2:	466a      	mov	r2, sp
 80084b4:	f7f8 fa48 	bl	8000948 <LCD_X_DisplayDriver>
 80084b8:	b003      	add	sp, #12
 80084ba:	f85d fb04 	ldr.w	pc, [sp], #4

080084be <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 80084be:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80084c2:	6884      	ldr	r4, [r0, #8]
 80084c4:	4698      	mov	r8, r3
 80084c6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80084c8:	079b      	lsls	r3, r3, #30
 80084ca:	4689      	mov	r9, r1
 80084cc:	4617      	mov	r7, r2
 80084ce:	d532      	bpl.n	8008536 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 80084d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80084d4:	4620      	mov	r0, r4
 80084d6:	4798      	blx	r3
 80084d8:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 80084dc:	4606      	mov	r6, r0
 80084de:	463a      	mov	r2, r7
 80084e0:	4620      	mov	r0, r4
 80084e2:	4649      	mov	r1, r9
 80084e4:	47a8      	blx	r5
 80084e6:	6923      	ldr	r3, [r4, #16]
 80084e8:	69a2      	ldr	r2, [r4, #24]
 80084ea:	429e      	cmp	r6, r3
 80084ec:	bfac      	ite	ge
 80084ee:	2300      	movge	r3, #0
 80084f0:	2301      	movlt	r3, #1
 80084f2:	4296      	cmp	r6, r2
 80084f4:	bfd4      	ite	le
 80084f6:	461a      	movle	r2, r3
 80084f8:	f043 0201 	orrgt.w	r2, r3, #1
 80084fc:	6963      	ldr	r3, [r4, #20]
 80084fe:	4298      	cmp	r0, r3
 8008500:	bfac      	ite	ge
 8008502:	4613      	movge	r3, r2
 8008504:	f042 0301 	orrlt.w	r3, r2, #1
 8008508:	4605      	mov	r5, r0
 800850a:	b913      	cbnz	r3, 8008512 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 800850c:	69e3      	ldr	r3, [r4, #28]
 800850e:	4298      	cmp	r0, r3
 8008510:	dd0a      	ble.n	8008528 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 8008512:	6862      	ldr	r2, [r4, #4]
 8008514:	6823      	ldr	r3, [r4, #0]
 8008516:	3a01      	subs	r2, #1
 8008518:	9200      	str	r2, [sp, #0]
 800851a:	2100      	movs	r1, #0
 800851c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008520:	4620      	mov	r0, r4
 8008522:	460a      	mov	r2, r1
 8008524:	3b01      	subs	r3, #1
 8008526:	47b8      	blx	r7
 8008528:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800852c:	4620      	mov	r0, r4
 800852e:	4631      	mov	r1, r6
 8008530:	462a      	mov	r2, r5
 8008532:	47b8      	blx	r7
 8008534:	e003      	b.n	800853e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 8008536:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800853a:	4620      	mov	r0, r4
 800853c:	47a8      	blx	r5
 800853e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008542:	4620      	mov	r0, r4
 8008544:	4641      	mov	r1, r8
 8008546:	4798      	blx	r3
 8008548:	b003      	add	sp, #12
 800854a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800854e <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800854e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008550:	6884      	ldr	r4, [r0, #8]
 8008552:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8008554:	079b      	lsls	r3, r3, #30
 8008556:	460f      	mov	r7, r1
 8008558:	4616      	mov	r6, r2
 800855a:	d545      	bpl.n	80085e8 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 800855c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008560:	4620      	mov	r0, r4
 8008562:	4798      	blx	r3
 8008564:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008568:	4632      	mov	r2, r6
 800856a:	4605      	mov	r5, r0
 800856c:	4639      	mov	r1, r7
 800856e:	4620      	mov	r0, r4
 8008570:	4798      	blx	r3
 8008572:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8008576:	4606      	mov	r6, r0
 8008578:	b11b      	cbz	r3, 8008582 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800857a:	4620      	mov	r0, r4
 800857c:	2101      	movs	r1, #1
 800857e:	2200      	movs	r2, #0
 8008580:	4798      	blx	r3
 8008582:	6923      	ldr	r3, [r4, #16]
 8008584:	69a2      	ldr	r2, [r4, #24]
 8008586:	429d      	cmp	r5, r3
 8008588:	bfac      	ite	ge
 800858a:	2300      	movge	r3, #0
 800858c:	2301      	movlt	r3, #1
 800858e:	4295      	cmp	r5, r2
 8008590:	bfd4      	ite	le
 8008592:	461a      	movle	r2, r3
 8008594:	f043 0201 	orrgt.w	r2, r3, #1
 8008598:	6963      	ldr	r3, [r4, #20]
 800859a:	429e      	cmp	r6, r3
 800859c:	bfac      	ite	ge
 800859e:	4613      	movge	r3, r2
 80085a0:	f042 0301 	orrlt.w	r3, r2, #1
 80085a4:	b913      	cbnz	r3, 80085ac <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 80085a6:	69e3      	ldr	r3, [r4, #28]
 80085a8:	429e      	cmp	r6, r3
 80085aa:	dd0a      	ble.n	80085c2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 80085ac:	6862      	ldr	r2, [r4, #4]
 80085ae:	6823      	ldr	r3, [r4, #0]
 80085b0:	3a01      	subs	r2, #1
 80085b2:	9200      	str	r2, [sp, #0]
 80085b4:	2100      	movs	r1, #0
 80085b6:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80085ba:	4620      	mov	r0, r4
 80085bc:	460a      	mov	r2, r1
 80085be:	3b01      	subs	r3, #1
 80085c0:	47b8      	blx	r7
 80085c2:	4629      	mov	r1, r5
 80085c4:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80085c8:	4620      	mov	r0, r4
 80085ca:	4632      	mov	r2, r6
 80085cc:	4798      	blx	r3
 80085ce:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80085d2:	4620      	mov	r0, r4
 80085d4:	4798      	blx	r3
 80085d6:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80085da:	4605      	mov	r5, r0
 80085dc:	b16b      	cbz	r3, 80085fa <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80085de:	4620      	mov	r0, r4
 80085e0:	2100      	movs	r1, #0
 80085e2:	2201      	movs	r2, #1
 80085e4:	4798      	blx	r3
 80085e6:	e008      	b.n	80085fa <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80085e8:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80085ec:	4620      	mov	r0, r4
 80085ee:	4798      	blx	r3
 80085f0:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80085f4:	4620      	mov	r0, r4
 80085f6:	4798      	blx	r3
 80085f8:	4605      	mov	r5, r0
 80085fa:	4628      	mov	r0, r5
 80085fc:	b003      	add	sp, #12
 80085fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008600 <GUIDRV_FlexColor__InitOnce>:
 8008600:	b538      	push	{r3, r4, r5, lr}
 8008602:	6885      	ldr	r5, [r0, #8]
 8008604:	4604      	mov	r4, r0
 8008606:	b99d      	cbnz	r5, 8008630 <GUIDRV_FlexColor__InitOnce+0x30>
 8008608:	f44f 70be 	mov.w	r0, #380	; 0x17c
 800860c:	f003 fa04 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 8008610:	4b08      	ldr	r3, [pc, #32]	; (8008634 <GUIDRV_FlexColor__InitOnce+0x34>)
 8008612:	60a0      	str	r0, [r4, #8]
 8008614:	681b      	ldr	r3, [r3, #0]
 8008616:	f44f 72be 	mov.w	r2, #380	; 0x17c
 800861a:	4629      	mov	r1, r5
 800861c:	4798      	blx	r3
 800861e:	68a3      	ldr	r3, [r4, #8]
 8008620:	2202      	movs	r2, #2
 8008622:	84da      	strh	r2, [r3, #38]	; 0x26
 8008624:	2201      	movs	r2, #1
 8008626:	621a      	str	r2, [r3, #32]
 8008628:	4a03      	ldr	r2, [pc, #12]	; (8008638 <GUIDRV_FlexColor__InitOnce+0x38>)
 800862a:	641c      	str	r4, [r3, #64]	; 0x40
 800862c:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 8008630:	bd38      	pop	{r3, r4, r5, pc}
 8008632:	bf00      	nop
 8008634:	200000a4 	.word	0x200000a4
 8008638:	08008461 	.word	0x08008461

0800863c <_SetDevFunc>:
 800863c:	b570      	push	{r4, r5, r6, lr}
 800863e:	4606      	mov	r6, r0
 8008640:	460d      	mov	r5, r1
 8008642:	4614      	mov	r4, r2
 8008644:	f7ff ffdc 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 8008648:	68b3      	ldr	r3, [r6, #8]
 800864a:	2b00      	cmp	r3, #0
 800864c:	d03b      	beq.n	80086c6 <_SetDevFunc+0x8a>
 800864e:	2d26      	cmp	r5, #38	; 0x26
 8008650:	d002      	beq.n	8008658 <_SetDevFunc+0x1c>
 8008652:	2d27      	cmp	r5, #39	; 0x27
 8008654:	d016      	beq.n	8008684 <_SetDevFunc+0x48>
 8008656:	bd70      	pop	{r4, r5, r6, pc}
 8008658:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800865a:	2a10      	cmp	r2, #16
 800865c:	d002      	beq.n	8008664 <_SetDevFunc+0x28>
 800865e:	2a12      	cmp	r2, #18
 8008660:	d008      	beq.n	8008674 <_SetDevFunc+0x38>
 8008662:	bd70      	pop	{r4, r5, r6, pc}
 8008664:	4a18      	ldr	r2, [pc, #96]	; (80086c8 <_SetDevFunc+0x8c>)
 8008666:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800866a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800866e:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8008672:	bd70      	pop	{r4, r5, r6, pc}
 8008674:	4a15      	ldr	r2, [pc, #84]	; (80086cc <_SetDevFunc+0x90>)
 8008676:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800867a:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800867e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 8008682:	bd70      	pop	{r4, r5, r6, pc}
 8008684:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008686:	2a10      	cmp	r2, #16
 8008688:	d002      	beq.n	8008690 <_SetDevFunc+0x54>
 800868a:	2a12      	cmp	r2, #18
 800868c:	d00e      	beq.n	80086ac <_SetDevFunc+0x70>
 800868e:	bd70      	pop	{r4, r5, r6, pc}
 8008690:	b13c      	cbz	r4, 80086a2 <_SetDevFunc+0x66>
 8008692:	4a0f      	ldr	r2, [pc, #60]	; (80086d0 <_SetDevFunc+0x94>)
 8008694:	f8c3 40e4 	str.w	r4, [r3, #228]	; 0xe4
 8008698:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800869c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 80086a0:	bd70      	pop	{r4, r5, r6, pc}
 80086a2:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 80086a6:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 80086aa:	bd70      	pop	{r4, r5, r6, pc}
 80086ac:	b13c      	cbz	r4, 80086be <_SetDevFunc+0x82>
 80086ae:	4a09      	ldr	r2, [pc, #36]	; (80086d4 <_SetDevFunc+0x98>)
 80086b0:	f8c3 40e8 	str.w	r4, [r3, #232]	; 0xe8
 80086b4:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 80086b8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80086bc:	bd70      	pop	{r4, r5, r6, pc}
 80086be:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 80086c2:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 80086c6:	bd70      	pop	{r4, r5, r6, pc}
 80086c8:	080082e1 	.word	0x080082e1
 80086cc:	080082ef 	.word	0x080082ef
 80086d0:	080082fd 	.word	0x080082fd
 80086d4:	08008333 	.word	0x08008333

080086d8 <_GetDevFunc_Init>:
 80086d8:	b538      	push	{r3, r4, r5, lr}
 80086da:	4605      	mov	r5, r0
 80086dc:	f7ff ff90 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 80086e0:	68ac      	ldr	r4, [r5, #8]
 80086e2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80086e6:	f003 f997 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 80086ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80086ec:	66a0      	str	r0, [r4, #104]	; 0x68
 80086ee:	3307      	adds	r3, #7
 80086f0:	10d8      	asrs	r0, r3, #3
 80086f2:	6823      	ldr	r3, [r4, #0]
 80086f4:	4358      	muls	r0, r3
 80086f6:	f003 f98f 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 80086fa:	2101      	movs	r1, #1
 80086fc:	2200      	movs	r2, #0
 80086fe:	66e0      	str	r0, [r4, #108]	; 0x6c
 8008700:	69a8      	ldr	r0, [r5, #24]
 8008702:	f7f8 f921 	bl	8000948 <LCD_X_DisplayDriver>
 8008706:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800870a:	4605      	mov	r5, r0
 800870c:	4620      	mov	r0, r4
 800870e:	4798      	blx	r3
 8008710:	4620      	mov	r0, r4
 8008712:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8008716:	4798      	blx	r3
 8008718:	2d00      	cmp	r5, #0
 800871a:	bfd4      	ite	le
 800871c:	2000      	movle	r0, #0
 800871e:	2001      	movgt	r0, #1
 8008720:	bd38      	pop	{r3, r4, r5, pc}

08008722 <_GetDevFunc_SetSize>:
 8008722:	b570      	push	{r4, r5, r6, lr}
 8008724:	4604      	mov	r4, r0
 8008726:	460d      	mov	r5, r1
 8008728:	4616      	mov	r6, r2
 800872a:	f7ff ff69 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 800872e:	68a3      	ldr	r3, [r4, #8]
 8008730:	e883 0060 	stmia.w	r3, {r5, r6}
 8008734:	bd70      	pop	{r4, r5, r6, pc}

08008736 <_GetDevFunc_SetVSize>:
 8008736:	b570      	push	{r4, r5, r6, lr}
 8008738:	4604      	mov	r4, r0
 800873a:	460d      	mov	r5, r1
 800873c:	4616      	mov	r6, r2
 800873e:	f7ff ff5f 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 8008742:	68a3      	ldr	r3, [r4, #8]
 8008744:	609d      	str	r5, [r3, #8]
 8008746:	60de      	str	r6, [r3, #12]
 8008748:	bd70      	pop	{r4, r5, r6, pc}

0800874a <_GetDevFunc_Off>:
 800874a:	b510      	push	{r4, lr}
 800874c:	4604      	mov	r4, r0
 800874e:	f7ff ff57 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 8008752:	69a0      	ldr	r0, [r4, #24]
 8008754:	2106      	movs	r1, #6
 8008756:	2200      	movs	r2, #0
 8008758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800875c:	f7f8 b8f4 	b.w	8000948 <LCD_X_DisplayDriver>

08008760 <_GetDevFunc_On>:
 8008760:	b510      	push	{r4, lr}
 8008762:	4604      	mov	r4, r0
 8008764:	f7ff ff4c 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 8008768:	69a0      	ldr	r0, [r4, #24]
 800876a:	2105      	movs	r1, #5
 800876c:	2200      	movs	r2, #0
 800876e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008772:	f7f8 b8e9 	b.w	8000948 <LCD_X_DisplayDriver>

08008776 <GUIDRV_FlexColor_Config>:
 8008776:	b538      	push	{r3, r4, r5, lr}
 8008778:	4605      	mov	r5, r0
 800877a:	460c      	mov	r4, r1
 800877c:	f7ff ff40 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 8008780:	68ab      	ldr	r3, [r5, #8]
 8008782:	6822      	ldr	r2, [r4, #0]
 8008784:	62da      	str	r2, [r3, #44]	; 0x2c
 8008786:	6862      	ldr	r2, [r4, #4]
 8008788:	631a      	str	r2, [r3, #48]	; 0x30
 800878a:	68a2      	ldr	r2, [r4, #8]
 800878c:	635a      	str	r2, [r3, #52]	; 0x34
 800878e:	0752      	lsls	r2, r2, #29
 8008790:	d507      	bpl.n	80087a2 <GUIDRV_FlexColor_Config+0x2c>
 8008792:	e893 0006 	ldmia.w	r3, {r1, r2}
 8008796:	601a      	str	r2, [r3, #0]
 8008798:	6059      	str	r1, [r3, #4]
 800879a:	68da      	ldr	r2, [r3, #12]
 800879c:	6899      	ldr	r1, [r3, #8]
 800879e:	60d9      	str	r1, [r3, #12]
 80087a0:	609a      	str	r2, [r3, #8]
 80087a2:	89a2      	ldrh	r2, [r4, #12]
 80087a4:	849a      	strh	r2, [r3, #36]	; 0x24
 80087a6:	6922      	ldr	r2, [r4, #16]
 80087a8:	b112      	cbz	r2, 80087b0 <GUIDRV_FlexColor_Config+0x3a>
 80087aa:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80087ae:	621a      	str	r2, [r3, #32]
 80087b0:	bd38      	pop	{r3, r4, r5, pc}

080087b2 <GUIDRV_FlexColor_SetFunc>:
 80087b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80087b6:	4604      	mov	r4, r0
 80087b8:	461f      	mov	r7, r3
 80087ba:	4616      	mov	r6, r2
 80087bc:	4688      	mov	r8, r1
 80087be:	f7ff ff1f 	bl	8008600 <GUIDRV_FlexColor__InitOnce>
 80087c2:	68a5      	ldr	r5, [r4, #8]
 80087c4:	4641      	mov	r1, r8
 80087c6:	2268      	movs	r2, #104	; 0x68
 80087c8:	f505 708a 	add.w	r0, r5, #276	; 0x114
 80087cc:	f007 fc6a 	bl	80100a4 <memcpy>
 80087d0:	4620      	mov	r0, r4
 80087d2:	47b0      	blx	r6
 80087d4:	4620      	mov	r0, r4
 80087d6:	47b8      	blx	r7
 80087d8:	6923      	ldr	r3, [r4, #16]
 80087da:	689b      	ldr	r3, [r3, #8]
 80087dc:	4798      	blx	r3
 80087de:	62a8      	str	r0, [r5, #40]	; 0x28
 80087e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080087e4 <LCD_UpdateColorIndices>:
 80087e4:	b510      	push	{r4, lr}
 80087e6:	4c07      	ldr	r4, [pc, #28]	; (8008804 <LCD_UpdateColorIndices+0x20>)
 80087e8:	6823      	ldr	r3, [r4, #0]
 80087ea:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80087ec:	f000 fc68 	bl	80090c0 <LCD_Color2Index>
 80087f0:	f000 fc86 	bl	8009100 <LCD_SetColorIndex>
 80087f4:	6823      	ldr	r3, [r4, #0]
 80087f6:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80087f8:	f000 fc62 	bl	80090c0 <LCD_Color2Index>
 80087fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008800:	f000 bc9a 	b.w	8009138 <LCD_SetBkColorIndex>
 8008804:	200000b8 	.word	0x200000b8

08008808 <LCD_SetClipRectEx>:
 8008808:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800880a:	4c09      	ldr	r4, [pc, #36]	; (8008830 <LCD_SetClipRectEx+0x28>)
 800880c:	6823      	ldr	r3, [r4, #0]
 800880e:	7c5a      	ldrb	r2, [r3, #17]
 8008810:	4b08      	ldr	r3, [pc, #32]	; (8008834 <LCD_SetClipRectEx+0x2c>)
 8008812:	4605      	mov	r5, r0
 8008814:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008818:	68c2      	ldr	r2, [r0, #12]
 800881a:	4669      	mov	r1, sp
 800881c:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800881e:	4790      	blx	r2
 8008820:	6820      	ldr	r0, [r4, #0]
 8008822:	4629      	mov	r1, r5
 8008824:	466a      	mov	r2, sp
 8008826:	3008      	adds	r0, #8
 8008828:	f000 fcf1 	bl	800920e <GUI__IntersectRects>
 800882c:	b003      	add	sp, #12
 800882e:	bd30      	pop	{r4, r5, pc}
 8008830:	200000b8 	.word	0x200000b8
 8008834:	20002d2c 	.word	0x20002d2c

08008838 <LCD_SetVSizeEx>:
 8008838:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800883a:	460d      	mov	r5, r1
 800883c:	4614      	mov	r4, r2
 800883e:	f002 f85d 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8008842:	9001      	str	r0, [sp, #4]
 8008844:	b908      	cbnz	r0, 800884a <LCD_SetVSizeEx+0x12>
 8008846:	2001      	movs	r0, #1
 8008848:	e00c      	b.n	8008864 <LCD_SetVSizeEx+0x2c>
 800884a:	68c3      	ldr	r3, [r0, #12]
 800884c:	210a      	movs	r1, #10
 800884e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008850:	a801      	add	r0, sp, #4
 8008852:	4798      	blx	r3
 8008854:	4603      	mov	r3, r0
 8008856:	2800      	cmp	r0, #0
 8008858:	d0f5      	beq.n	8008846 <LCD_SetVSizeEx+0xe>
 800885a:	9801      	ldr	r0, [sp, #4]
 800885c:	4629      	mov	r1, r5
 800885e:	4622      	mov	r2, r4
 8008860:	4798      	blx	r3
 8008862:	2000      	movs	r0, #0
 8008864:	b003      	add	sp, #12
 8008866:	bd30      	pop	{r4, r5, pc}

08008868 <LCD_SetSizeEx>:
 8008868:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800886a:	460d      	mov	r5, r1
 800886c:	4614      	mov	r4, r2
 800886e:	f002 f845 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8008872:	9001      	str	r0, [sp, #4]
 8008874:	b908      	cbnz	r0, 800887a <LCD_SetSizeEx+0x12>
 8008876:	2001      	movs	r0, #1
 8008878:	e00c      	b.n	8008894 <LCD_SetSizeEx+0x2c>
 800887a:	68c3      	ldr	r3, [r0, #12]
 800887c:	210b      	movs	r1, #11
 800887e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008880:	a801      	add	r0, sp, #4
 8008882:	4798      	blx	r3
 8008884:	4603      	mov	r3, r0
 8008886:	2800      	cmp	r0, #0
 8008888:	d0f5      	beq.n	8008876 <LCD_SetSizeEx+0xe>
 800888a:	9801      	ldr	r0, [sp, #4]
 800888c:	4629      	mov	r1, r5
 800888e:	4622      	mov	r2, r4
 8008890:	4798      	blx	r3
 8008892:	2000      	movs	r0, #0
 8008894:	b003      	add	sp, #12
 8008896:	bd30      	pop	{r4, r5, pc}

08008898 <LCD_SetLUTEntryEx>:
 8008898:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800889a:	460d      	mov	r5, r1
 800889c:	4614      	mov	r4, r2
 800889e:	f002 f82d 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 80088a2:	9001      	str	r0, [sp, #4]
 80088a4:	b908      	cbnz	r0, 80088aa <LCD_SetLUTEntryEx+0x12>
 80088a6:	2001      	movs	r0, #1
 80088a8:	e00c      	b.n	80088c4 <LCD_SetLUTEntryEx+0x2c>
 80088aa:	68c3      	ldr	r3, [r0, #12]
 80088ac:	2110      	movs	r1, #16
 80088ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80088b0:	a801      	add	r0, sp, #4
 80088b2:	4798      	blx	r3
 80088b4:	4603      	mov	r3, r0
 80088b6:	2800      	cmp	r0, #0
 80088b8:	d0f5      	beq.n	80088a6 <LCD_SetLUTEntryEx+0xe>
 80088ba:	9801      	ldr	r0, [sp, #4]
 80088bc:	4629      	mov	r1, r5
 80088be:	4622      	mov	r2, r4
 80088c0:	4798      	blx	r3
 80088c2:	2000      	movs	r0, #0
 80088c4:	b003      	add	sp, #12
 80088c6:	bd30      	pop	{r4, r5, pc}

080088c8 <_GetDevProp>:
 80088c8:	2801      	cmp	r0, #1
 80088ca:	b510      	push	{r4, lr}
 80088cc:	460c      	mov	r4, r1
 80088ce:	dc08      	bgt.n	80088e2 <_GetDevProp+0x1a>
 80088d0:	f002 f814 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 80088d4:	b120      	cbz	r0, 80088e0 <_GetDevProp+0x18>
 80088d6:	68c3      	ldr	r3, [r0, #12]
 80088d8:	4621      	mov	r1, r4
 80088da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80088dc:	4798      	blx	r3
 80088de:	bd10      	pop	{r4, pc}
 80088e0:	bd10      	pop	{r4, pc}
 80088e2:	2000      	movs	r0, #0
 80088e4:	bd10      	pop	{r4, pc}

080088e6 <_GetMaxValue>:
 80088e6:	b538      	push	{r3, r4, r5, lr}
 80088e8:	4604      	mov	r4, r0
 80088ea:	4621      	mov	r1, r4
 80088ec:	2001      	movs	r0, #1
 80088ee:	f7ff ffeb 	bl	80088c8 <_GetDevProp>
 80088f2:	4621      	mov	r1, r4
 80088f4:	4605      	mov	r5, r0
 80088f6:	2000      	movs	r0, #0
 80088f8:	f7ff ffe6 	bl	80088c8 <_GetDevProp>
 80088fc:	42a8      	cmp	r0, r5
 80088fe:	bfb8      	it	lt
 8008900:	4628      	movlt	r0, r5
 8008902:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8008906:	bd38      	pop	{r3, r4, r5, pc}

08008908 <LCD_GetXSizeEx>:
 8008908:	2101      	movs	r1, #1
 800890a:	f7ff bfdd 	b.w	80088c8 <_GetDevProp>

0800890e <LCD_GetYSizeEx>:
 800890e:	2102      	movs	r1, #2
 8008910:	f7ff bfda 	b.w	80088c8 <_GetDevProp>

08008914 <LCD_GetVXSizeEx>:
 8008914:	2103      	movs	r1, #3
 8008916:	f7ff bfd7 	b.w	80088c8 <_GetDevProp>

0800891a <LCD_GetVYSizeEx>:
 800891a:	2104      	movs	r1, #4
 800891c:	f7ff bfd4 	b.w	80088c8 <_GetDevProp>

08008920 <LCD_GetBitsPerPixelEx>:
 8008920:	2108      	movs	r1, #8
 8008922:	f7ff bfd1 	b.w	80088c8 <_GetDevProp>

08008926 <LCD_GetNumColorsEx>:
 8008926:	2109      	movs	r1, #9
 8008928:	f7ff bfce 	b.w	80088c8 <_GetDevProp>

0800892c <LCD_GetXSize>:
 800892c:	4b02      	ldr	r3, [pc, #8]	; (8008938 <LCD_GetXSize+0xc>)
 800892e:	681b      	ldr	r3, [r3, #0]
 8008930:	7c58      	ldrb	r0, [r3, #17]
 8008932:	f7ff bfe9 	b.w	8008908 <LCD_GetXSizeEx>
 8008936:	bf00      	nop
 8008938:	200000b8 	.word	0x200000b8

0800893c <LCD_GetYSize>:
 800893c:	4b02      	ldr	r3, [pc, #8]	; (8008948 <LCD_GetYSize+0xc>)
 800893e:	681b      	ldr	r3, [r3, #0]
 8008940:	7c58      	ldrb	r0, [r3, #17]
 8008942:	f7ff bfe4 	b.w	800890e <LCD_GetYSizeEx>
 8008946:	bf00      	nop
 8008948:	200000b8 	.word	0x200000b8

0800894c <LCD_GetNumColors>:
 800894c:	4b02      	ldr	r3, [pc, #8]	; (8008958 <LCD_GetNumColors+0xc>)
 800894e:	681b      	ldr	r3, [r3, #0]
 8008950:	7c58      	ldrb	r0, [r3, #17]
 8008952:	f7ff bfe8 	b.w	8008926 <LCD_GetNumColorsEx>
 8008956:	bf00      	nop
 8008958:	200000b8 	.word	0x200000b8

0800895c <GUI_GetBitsPerPixelEx>:
 800895c:	b508      	push	{r3, lr}
 800895e:	4b04      	ldr	r3, [pc, #16]	; (8008970 <GUI_GetBitsPerPixelEx+0x14>)
 8008960:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8008964:	68c3      	ldr	r3, [r0, #12]
 8008966:	2108      	movs	r1, #8
 8008968:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800896a:	4798      	blx	r3
 800896c:	bd08      	pop	{r3, pc}
 800896e:	bf00      	nop
 8008970:	20002d2c 	.word	0x20002d2c

08008974 <LCD_GetPaletteEx>:
 8008974:	b508      	push	{r3, lr}
 8008976:	f001 ffc1 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 800897a:	b120      	cbz	r0, 8008986 <LCD_GetPaletteEx+0x12>
 800897c:	68c3      	ldr	r3, [r0, #12]
 800897e:	2102      	movs	r1, #2
 8008980:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008982:	4798      	blx	r3
 8008984:	bd08      	pop	{r3, pc}
 8008986:	bd08      	pop	{r3, pc}

08008988 <LCD_GetPalette>:
 8008988:	4b02      	ldr	r3, [pc, #8]	; (8008994 <LCD_GetPalette+0xc>)
 800898a:	681b      	ldr	r3, [r3, #0]
 800898c:	7c58      	ldrb	r0, [r3, #17]
 800898e:	f7ff bff1 	b.w	8008974 <LCD_GetPaletteEx>
 8008992:	bf00      	nop
 8008994:	200000b8 	.word	0x200000b8

08008998 <GUI_GetpfIndex2ColorEx>:
 8008998:	4b02      	ldr	r3, [pc, #8]	; (80089a4 <GUI_GetpfIndex2ColorEx+0xc>)
 800899a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800899e:	691b      	ldr	r3, [r3, #16]
 80089a0:	6858      	ldr	r0, [r3, #4]
 80089a2:	4770      	bx	lr
 80089a4:	20002d2c 	.word	0x20002d2c

080089a8 <GUI_GetpfColor2IndexEx>:
 80089a8:	4b02      	ldr	r3, [pc, #8]	; (80089b4 <GUI_GetpfColor2IndexEx+0xc>)
 80089aa:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80089ae:	691b      	ldr	r3, [r3, #16]
 80089b0:	6818      	ldr	r0, [r3, #0]
 80089b2:	4770      	bx	lr
 80089b4:	20002d2c 	.word	0x20002d2c

080089b8 <LCD_GetXSizeMax>:
 80089b8:	2001      	movs	r0, #1
 80089ba:	f7ff bf94 	b.w	80088e6 <_GetMaxValue>

080089be <LCD_GetYSizeMax>:
 80089be:	2002      	movs	r0, #2
 80089c0:	f7ff bf91 	b.w	80088e6 <_GetMaxValue>

080089c4 <LCD_GetVXSizeMax>:
 80089c4:	2003      	movs	r0, #3
 80089c6:	f7ff bf8e 	b.w	80088e6 <_GetMaxValue>
	...

080089cc <LCD_SetDisplaySize>:
 80089cc:	4b02      	ldr	r3, [pc, #8]	; (80089d8 <LCD_SetDisplaySize+0xc>)
 80089ce:	6018      	str	r0, [r3, #0]
 80089d0:	4b02      	ldr	r3, [pc, #8]	; (80089dc <LCD_SetDisplaySize+0x10>)
 80089d2:	6019      	str	r1, [r3, #0]
 80089d4:	4770      	bx	lr
 80089d6:	bf00      	nop
 80089d8:	20002b04 	.word	0x20002b04
 80089dc:	20002b00 	.word	0x20002b00

080089e0 <LCD_GetXSizeDisplay>:
 80089e0:	4b01      	ldr	r3, [pc, #4]	; (80089e8 <LCD_GetXSizeDisplay+0x8>)
 80089e2:	6818      	ldr	r0, [r3, #0]
 80089e4:	4770      	bx	lr
 80089e6:	bf00      	nop
 80089e8:	20002b04 	.word	0x20002b04

080089ec <LCD_GetYSizeDisplay>:
 80089ec:	4b01      	ldr	r3, [pc, #4]	; (80089f4 <LCD_GetYSizeDisplay+0x8>)
 80089ee:	6818      	ldr	r0, [r3, #0]
 80089f0:	4770      	bx	lr
 80089f2:	bf00      	nop
 80089f4:	20002b00 	.word	0x20002b00

080089f8 <LCD__GetBPP>:
 80089f8:	2800      	cmp	r0, #0
 80089fa:	d03b      	beq.n	8008a74 <LCD__GetBPP+0x7c>
 80089fc:	f030 0301 	bics.w	r3, r0, #1
 8008a00:	d029      	beq.n	8008a56 <LCD__GetBPP+0x5e>
 8008a02:	f030 0303 	bics.w	r3, r0, #3
 8008a06:	d028      	beq.n	8008a5a <LCD__GetBPP+0x62>
 8008a08:	f030 0307 	bics.w	r3, r0, #7
 8008a0c:	d027      	beq.n	8008a5e <LCD__GetBPP+0x66>
 8008a0e:	f030 030f 	bics.w	r3, r0, #15
 8008a12:	d026      	beq.n	8008a62 <LCD__GetBPP+0x6a>
 8008a14:	f030 031f 	bics.w	r3, r0, #31
 8008a18:	d025      	beq.n	8008a66 <LCD__GetBPP+0x6e>
 8008a1a:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8008a1e:	d024      	beq.n	8008a6a <LCD__GetBPP+0x72>
 8008a20:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 8008a24:	f023 0301 	bic.w	r3, r3, #1
 8008a28:	b30b      	cbz	r3, 8008a6e <LCD__GetBPP+0x76>
 8008a2a:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 8008a2e:	f023 030f 	bic.w	r3, r3, #15
 8008a32:	b1e3      	cbz	r3, 8008a6e <LCD__GetBPP+0x76>
 8008a34:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8008a38:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8008a3c:	b1bb      	cbz	r3, 8008a6e <LCD__GetBPP+0x76>
 8008a3e:	0c03      	lsrs	r3, r0, #16
 8008a40:	041b      	lsls	r3, r3, #16
 8008a42:	b1a3      	cbz	r3, 8008a6e <LCD__GetBPP+0x76>
 8008a44:	0c83      	lsrs	r3, r0, #18
 8008a46:	049b      	lsls	r3, r3, #18
 8008a48:	b19b      	cbz	r3, 8008a72 <LCD__GetBPP+0x7a>
 8008a4a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8008a4e:	bf0c      	ite	eq
 8008a50:	2018      	moveq	r0, #24
 8008a52:	2020      	movne	r0, #32
 8008a54:	4770      	bx	lr
 8008a56:	2001      	movs	r0, #1
 8008a58:	4770      	bx	lr
 8008a5a:	2002      	movs	r0, #2
 8008a5c:	4770      	bx	lr
 8008a5e:	2003      	movs	r0, #3
 8008a60:	4770      	bx	lr
 8008a62:	2004      	movs	r0, #4
 8008a64:	4770      	bx	lr
 8008a66:	2005      	movs	r0, #5
 8008a68:	4770      	bx	lr
 8008a6a:	2008      	movs	r0, #8
 8008a6c:	4770      	bx	lr
 8008a6e:	2010      	movs	r0, #16
 8008a70:	4770      	bx	lr
 8008a72:	2012      	movs	r0, #18
 8008a74:	4770      	bx	lr

08008a76 <LCD__GetBPPDevice>:
 8008a76:	b508      	push	{r3, lr}
 8008a78:	f7ff ffbe 	bl	80089f8 <LCD__GetBPP>
 8008a7c:	2801      	cmp	r0, #1
 8008a7e:	d00f      	beq.n	8008aa0 <LCD__GetBPPDevice+0x2a>
 8008a80:	1e83      	subs	r3, r0, #2
 8008a82:	2b06      	cmp	r3, #6
 8008a84:	d909      	bls.n	8008a9a <LCD__GetBPPDevice+0x24>
 8008a86:	f1a0 0309 	sub.w	r3, r0, #9
 8008a8a:	2b07      	cmp	r3, #7
 8008a8c:	d907      	bls.n	8008a9e <LCD__GetBPPDevice+0x28>
 8008a8e:	3811      	subs	r0, #17
 8008a90:	2810      	cmp	r0, #16
 8008a92:	bf34      	ite	cc
 8008a94:	2020      	movcc	r0, #32
 8008a96:	2000      	movcs	r0, #0
 8008a98:	bd08      	pop	{r3, pc}
 8008a9a:	2008      	movs	r0, #8
 8008a9c:	bd08      	pop	{r3, pc}
 8008a9e:	2010      	movs	r0, #16
 8008aa0:	bd08      	pop	{r3, pc}
	...

08008aa4 <_SetDrawMode>:
 8008aa4:	b570      	push	{r4, r5, r6, lr}
 8008aa6:	4b08      	ldr	r3, [pc, #32]	; (8008ac8 <_SetDrawMode+0x24>)
 8008aa8:	681b      	ldr	r3, [r3, #0]
 8008aaa:	7c1a      	ldrb	r2, [r3, #16]
 8008aac:	ea80 0102 	eor.w	r1, r0, r2
 8008ab0:	0749      	lsls	r1, r1, #29
 8008ab2:	d505      	bpl.n	8008ac0 <_SetDrawMode+0x1c>
 8008ab4:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8008ab6:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8008ab8:	6826      	ldr	r6, [r4, #0]
 8008aba:	680d      	ldr	r5, [r1, #0]
 8008abc:	6025      	str	r5, [r4, #0]
 8008abe:	600e      	str	r6, [r1, #0]
 8008ac0:	7418      	strb	r0, [r3, #16]
 8008ac2:	4610      	mov	r0, r2
 8008ac4:	bd70      	pop	{r4, r5, r6, pc}
 8008ac6:	bf00      	nop
 8008ac8:	200000b8 	.word	0x200000b8

08008acc <LCD_SetDrawMode>:
 8008acc:	b508      	push	{r3, lr}
 8008ace:	4b02      	ldr	r3, [pc, #8]	; (8008ad8 <LCD_SetDrawMode+0xc>)
 8008ad0:	681b      	ldr	r3, [r3, #0]
 8008ad2:	689b      	ldr	r3, [r3, #8]
 8008ad4:	4798      	blx	r3
 8008ad6:	bd08      	pop	{r3, pc}
 8008ad8:	200000a0 	.word	0x200000a0

08008adc <LCD_DrawPixel>:
 8008adc:	b538      	push	{r3, r4, r5, lr}
 8008ade:	4b14      	ldr	r3, [pc, #80]	; (8008b30 <LCD_DrawPixel+0x54>)
 8008ae0:	681b      	ldr	r3, [r3, #0]
 8008ae2:	460a      	mov	r2, r1
 8008ae4:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 8008ae8:	428a      	cmp	r2, r1
 8008aea:	4604      	mov	r4, r0
 8008aec:	db1e      	blt.n	8008b2c <LCD_DrawPixel+0x50>
 8008aee:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8008af2:	428a      	cmp	r2, r1
 8008af4:	dc1a      	bgt.n	8008b2c <LCD_DrawPixel+0x50>
 8008af6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8008afa:	4288      	cmp	r0, r1
 8008afc:	db16      	blt.n	8008b2c <LCD_DrawPixel+0x50>
 8008afe:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 8008b02:	4288      	cmp	r0, r1
 8008b04:	dc12      	bgt.n	8008b2c <LCD_DrawPixel+0x50>
 8008b06:	7c19      	ldrb	r1, [r3, #16]
 8008b08:	7c58      	ldrb	r0, [r3, #17]
 8008b0a:	f011 0f01 	tst.w	r1, #1
 8008b0e:	4909      	ldr	r1, [pc, #36]	; (8008b34 <LCD_DrawPixel+0x58>)
 8008b10:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8008b14:	d004      	beq.n	8008b20 <LCD_DrawPixel+0x44>
 8008b16:	68c3      	ldr	r3, [r0, #12]
 8008b18:	4621      	mov	r1, r4
 8008b1a:	69db      	ldr	r3, [r3, #28]
 8008b1c:	4798      	blx	r3
 8008b1e:	bd38      	pop	{r3, r4, r5, pc}
 8008b20:	68c1      	ldr	r1, [r0, #12]
 8008b22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008b24:	698d      	ldr	r5, [r1, #24]
 8008b26:	681b      	ldr	r3, [r3, #0]
 8008b28:	4621      	mov	r1, r4
 8008b2a:	47a8      	blx	r5
 8008b2c:	bd38      	pop	{r3, r4, r5, pc}
 8008b2e:	bf00      	nop
 8008b30:	200000b8 	.word	0x200000b8
 8008b34:	20002d2c 	.word	0x20002d2c

08008b38 <LCD_DrawHLine>:
 8008b38:	b538      	push	{r3, r4, r5, lr}
 8008b3a:	4b10      	ldr	r3, [pc, #64]	; (8008b7c <LCD_DrawHLine+0x44>)
 8008b3c:	681c      	ldr	r4, [r3, #0]
 8008b3e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8008b42:	4299      	cmp	r1, r3
 8008b44:	460d      	mov	r5, r1
 8008b46:	db17      	blt.n	8008b78 <LCD_DrawHLine+0x40>
 8008b48:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8008b4c:	4299      	cmp	r1, r3
 8008b4e:	dc13      	bgt.n	8008b78 <LCD_DrawHLine+0x40>
 8008b50:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8008b54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b58:	4288      	cmp	r0, r1
 8008b5a:	bfa8      	it	ge
 8008b5c:	4601      	movge	r1, r0
 8008b5e:	429a      	cmp	r2, r3
 8008b60:	bfb8      	it	lt
 8008b62:	4613      	movlt	r3, r2
 8008b64:	428b      	cmp	r3, r1
 8008b66:	db07      	blt.n	8008b78 <LCD_DrawHLine+0x40>
 8008b68:	7c60      	ldrb	r0, [r4, #17]
 8008b6a:	4a05      	ldr	r2, [pc, #20]	; (8008b80 <LCD_DrawHLine+0x48>)
 8008b6c:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8008b70:	68c2      	ldr	r2, [r0, #12]
 8008b72:	6894      	ldr	r4, [r2, #8]
 8008b74:	462a      	mov	r2, r5
 8008b76:	47a0      	blx	r4
 8008b78:	bd38      	pop	{r3, r4, r5, pc}
 8008b7a:	bf00      	nop
 8008b7c:	200000b8 	.word	0x200000b8
 8008b80:	20002d2c 	.word	0x20002d2c

08008b84 <LCD_DrawVLine>:
 8008b84:	b538      	push	{r3, r4, r5, lr}
 8008b86:	4b10      	ldr	r3, [pc, #64]	; (8008bc8 <LCD_DrawVLine+0x44>)
 8008b88:	681c      	ldr	r4, [r3, #0]
 8008b8a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8008b8e:	4605      	mov	r5, r0
 8008b90:	429d      	cmp	r5, r3
 8008b92:	4610      	mov	r0, r2
 8008b94:	db17      	blt.n	8008bc6 <LCD_DrawVLine+0x42>
 8008b96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b9a:	429d      	cmp	r5, r3
 8008b9c:	dc13      	bgt.n	8008bc6 <LCD_DrawVLine+0x42>
 8008b9e:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8008ba2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8008ba6:	4291      	cmp	r1, r2
 8008ba8:	bfa8      	it	ge
 8008baa:	460a      	movge	r2, r1
 8008bac:	4298      	cmp	r0, r3
 8008bae:	bfb8      	it	lt
 8008bb0:	4603      	movlt	r3, r0
 8008bb2:	4293      	cmp	r3, r2
 8008bb4:	db07      	blt.n	8008bc6 <LCD_DrawVLine+0x42>
 8008bb6:	7c60      	ldrb	r0, [r4, #17]
 8008bb8:	4904      	ldr	r1, [pc, #16]	; (8008bcc <LCD_DrawVLine+0x48>)
 8008bba:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8008bbe:	68c1      	ldr	r1, [r0, #12]
 8008bc0:	68cc      	ldr	r4, [r1, #12]
 8008bc2:	4629      	mov	r1, r5
 8008bc4:	47a0      	blx	r4
 8008bc6:	bd38      	pop	{r3, r4, r5, pc}
 8008bc8:	200000b8 	.word	0x200000b8
 8008bcc:	20002d2c 	.word	0x20002d2c

08008bd0 <LCD_FillRect>:
 8008bd0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008bd2:	460e      	mov	r6, r1
 8008bd4:	4912      	ldr	r1, [pc, #72]	; (8008c20 <LCD_FillRect+0x50>)
 8008bd6:	680c      	ldr	r4, [r1, #0]
 8008bd8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8008bdc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8008be0:	4288      	cmp	r0, r1
 8008be2:	bfa8      	it	ge
 8008be4:	4601      	movge	r1, r0
 8008be6:	42aa      	cmp	r2, r5
 8008be8:	bfb8      	it	lt
 8008bea:	4615      	movlt	r5, r2
 8008bec:	428d      	cmp	r5, r1
 8008bee:	db14      	blt.n	8008c1a <LCD_FillRect+0x4a>
 8008bf0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8008bf4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8008bf8:	4296      	cmp	r6, r2
 8008bfa:	bfa8      	it	ge
 8008bfc:	4632      	movge	r2, r6
 8008bfe:	4283      	cmp	r3, r0
 8008c00:	bfa8      	it	ge
 8008c02:	4603      	movge	r3, r0
 8008c04:	4293      	cmp	r3, r2
 8008c06:	db08      	blt.n	8008c1a <LCD_FillRect+0x4a>
 8008c08:	7c64      	ldrb	r4, [r4, #17]
 8008c0a:	4806      	ldr	r0, [pc, #24]	; (8008c24 <LCD_FillRect+0x54>)
 8008c0c:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008c10:	68c4      	ldr	r4, [r0, #12]
 8008c12:	9300      	str	r3, [sp, #0]
 8008c14:	6924      	ldr	r4, [r4, #16]
 8008c16:	462b      	mov	r3, r5
 8008c18:	47a0      	blx	r4
 8008c1a:	b002      	add	sp, #8
 8008c1c:	bd70      	pop	{r4, r5, r6, pc}
 8008c1e:	bf00      	nop
 8008c20:	200000b8 	.word	0x200000b8
 8008c24:	20002d2c 	.word	0x20002d2c

08008c28 <LCD__DrawBitmap_1bpp>:
 8008c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c2c:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 8008ddc <LCD__DrawBitmap_1bpp+0x1b4>
 8008c30:	b08f      	sub	sp, #60	; 0x3c
 8008c32:	f8dc c000 	ldr.w	ip, [ip]
 8008c36:	9009      	str	r0, [sp, #36]	; 0x24
 8008c38:	460e      	mov	r6, r1
 8008c3a:	4615      	mov	r5, r2
 8008c3c:	469b      	mov	fp, r3
 8008c3e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8008c40:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8008c44:	f1bc 0f00 	cmp.w	ip, #0
 8008c48:	d00d      	beq.n	8008c66 <LCD__DrawBitmap_1bpp+0x3e>
 8008c4a:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8008c4c:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8008c4e:	9500      	str	r5, [sp, #0]
 8008c50:	9601      	str	r6, [sp, #4]
 8008c52:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008c54:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8008c56:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8008c58:	9702      	str	r7, [sp, #8]
 8008c5a:	9503      	str	r5, [sp, #12]
 8008c5c:	9404      	str	r4, [sp, #16]
 8008c5e:	9605      	str	r6, [sp, #20]
 8008c60:	f8dc 4000 	ldr.w	r4, [ip]
 8008c64:	e053      	b.n	8008d0e <LCD__DrawBitmap_1bpp+0xe6>
 8008c66:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8008c68:	9819      	ldr	r0, [sp, #100]	; 0x64
 8008c6a:	ea47 0300 	orr.w	r3, r7, r0
 8008c6e:	2b01      	cmp	r3, #1
 8008c70:	d14f      	bne.n	8008d12 <LCD__DrawBitmap_1bpp+0xea>
 8008c72:	4b58      	ldr	r3, [pc, #352]	; (8008dd4 <LCD__DrawBitmap_1bpp+0x1ac>)
 8008c74:	6818      	ldr	r0, [r3, #0]
 8008c76:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8008c7a:	1a51      	subs	r1, r2, r1
 8008c7c:	2900      	cmp	r1, #0
 8008c7e:	dd08      	ble.n	8008c92 <LCD__DrawBitmap_1bpp+0x6a>
 8008c80:	ebc1 030b 	rsb	r3, r1, fp
 8008c84:	2b00      	cmp	r3, #0
 8008c86:	f340 80a2 	ble.w	8008dce <LCD__DrawBitmap_1bpp+0x1a6>
 8008c8a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008c8c:	fb07 4401 	mla	r4, r7, r1, r4
 8008c90:	e001      	b.n	8008c96 <LCD__DrawBitmap_1bpp+0x6e>
 8008c92:	465b      	mov	r3, fp
 8008c94:	4632      	mov	r2, r6
 8008c96:	445e      	add	r6, fp
 8008c98:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 8008c9c:	3e01      	subs	r6, #1
 8008c9e:	1a76      	subs	r6, r6, r1
 8008ca0:	2e00      	cmp	r6, #0
 8008ca2:	dd03      	ble.n	8008cac <LCD__DrawBitmap_1bpp+0x84>
 8008ca4:	1b9b      	subs	r3, r3, r6
 8008ca6:	2b00      	cmp	r3, #0
 8008ca8:	f340 8091 	ble.w	8008dce <LCD__DrawBitmap_1bpp+0x1a6>
 8008cac:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008cae:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 8008cb2:	4429      	add	r1, r5
 8008cb4:	3901      	subs	r1, #1
 8008cb6:	1b89      	subs	r1, r1, r6
 8008cb8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8008cba:	2900      	cmp	r1, #0
 8008cbc:	bfc8      	it	gt
 8008cbe:	ebc1 0505 	rsbgt	r5, r1, r5
 8008cc2:	ebc8 0106 	rsb	r1, r8, r6
 8008cc6:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8008cca:	42b1      	cmp	r1, r6
 8008ccc:	da0c      	bge.n	8008ce8 <LCD__DrawBitmap_1bpp+0xc0>
 8008cce:	ebc1 0c06 	rsb	ip, r1, r6
 8008cd2:	eb08 070c 	add.w	r7, r8, ip
 8008cd6:	1b8e      	subs	r6, r1, r6
 8008cd8:	f02c 0c07 	bic.w	ip, ip, #7
 8008cdc:	4435      	add	r5, r6
 8008cde:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 8008ce2:	4461      	add	r1, ip
 8008ce4:	f007 0807 	and.w	r8, r7, #7
 8008ce8:	2d00      	cmp	r5, #0
 8008cea:	dd70      	ble.n	8008dce <LCD__DrawBitmap_1bpp+0x1a6>
 8008cec:	7c46      	ldrb	r6, [r0, #17]
 8008cee:	483a      	ldr	r0, [pc, #232]	; (8008dd8 <LCD__DrawBitmap_1bpp+0x1b0>)
 8008cf0:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008cf2:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 8008cf6:	68c6      	ldr	r6, [r0, #12]
 8008cf8:	9701      	str	r7, [sp, #4]
 8008cfa:	9403      	str	r4, [sp, #12]
 8008cfc:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008cfe:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8008d00:	9300      	str	r3, [sp, #0]
 8008d02:	9702      	str	r7, [sp, #8]
 8008d04:	f8cd 8010 	str.w	r8, [sp, #16]
 8008d08:	9405      	str	r4, [sp, #20]
 8008d0a:	6874      	ldr	r4, [r6, #4]
 8008d0c:	462b      	mov	r3, r5
 8008d0e:	47a0      	blx	r4
 8008d10:	e05d      	b.n	8008dce <LCD__DrawBitmap_1bpp+0x1a6>
 8008d12:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008d14:	f1c7 0708 	rsb	r7, r7, #8
 8008d18:	970c      	str	r7, [sp, #48]	; 0x30
 8008d1a:	4667      	mov	r7, ip
 8008d1c:	45dc      	cmp	ip, fp
 8008d1e:	da56      	bge.n	8008dce <LCD__DrawBitmap_1bpp+0x1a6>
 8008d20:	4b2c      	ldr	r3, [pc, #176]	; (8008dd4 <LCD__DrawBitmap_1bpp+0x1ac>)
 8008d22:	9819      	ldr	r0, [sp, #100]	; 0x64
 8008d24:	681b      	ldr	r3, [r3, #0]
 8008d26:	4430      	add	r0, r6
 8008d28:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8008d2c:	900a      	str	r0, [sp, #40]	; 0x28
 8008d2e:	1e41      	subs	r1, r0, #1
 8008d30:	4291      	cmp	r1, r2
 8008d32:	910b      	str	r1, [sp, #44]	; 0x2c
 8008d34:	db45      	blt.n	8008dc2 <LCD__DrawBitmap_1bpp+0x19a>
 8008d36:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8008d3a:	429e      	cmp	r6, r3
 8008d3c:	dc41      	bgt.n	8008dc2 <LCD__DrawBitmap_1bpp+0x19a>
 8008d3e:	f04f 0800 	mov.w	r8, #0
 8008d42:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8008d46:	9408      	str	r4, [sp, #32]
 8008d48:	46c2      	mov	sl, r8
 8008d4a:	45aa      	cmp	sl, r5
 8008d4c:	da39      	bge.n	8008dc2 <LCD__DrawBitmap_1bpp+0x19a>
 8008d4e:	f1b8 0f00 	cmp.w	r8, #0
 8008d52:	d105      	bne.n	8008d60 <LCD__DrawBitmap_1bpp+0x138>
 8008d54:	9a08      	ldr	r2, [sp, #32]
 8008d56:	7817      	ldrb	r7, [r2, #0]
 8008d58:	3201      	adds	r2, #1
 8008d5a:	9208      	str	r2, [sp, #32]
 8008d5c:	f04f 0808 	mov.w	r8, #8
 8008d60:	980c      	ldr	r0, [sp, #48]	; 0x30
 8008d62:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008d64:	4a1b      	ldr	r2, [pc, #108]	; (8008dd4 <LCD__DrawBitmap_1bpp+0x1ac>)
 8008d66:	fa47 f300 	asr.w	r3, r7, r0
 8008d6a:	ebc1 0808 	rsb	r8, r1, r8
 8008d6e:	408f      	lsls	r7, r1
 8008d70:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8008d74:	b2ff      	uxtb	r7, r7
 8008d76:	d103      	bne.n	8008d80 <LCD__DrawBitmap_1bpp+0x158>
 8008d78:	6810      	ldr	r0, [r2, #0]
 8008d7a:	7c00      	ldrb	r0, [r0, #16]
 8008d7c:	0780      	lsls	r0, r0, #30
 8008d7e:	d41b      	bmi.n	8008db8 <LCD__DrawBitmap_1bpp+0x190>
 8008d80:	6812      	ldr	r2, [r2, #0]
 8008d82:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008d84:	6810      	ldr	r0, [r2, #0]
 8008d86:	900d      	str	r0, [sp, #52]	; 0x34
 8008d88:	981d      	ldr	r0, [sp, #116]	; 0x74
 8008d8a:	b110      	cbz	r0, 8008d92 <LCD__DrawBitmap_1bpp+0x16a>
 8008d8c:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8008d90:	e000      	b.n	8008d94 <LCD__DrawBitmap_1bpp+0x16c>
 8008d92:	b2db      	uxtb	r3, r3
 8008d94:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008d96:	6013      	str	r3, [r2, #0]
 8008d98:	1e4a      	subs	r2, r1, #1
 8008d9a:	444a      	add	r2, r9
 8008d9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008d9e:	f8cd c01c 	str.w	ip, [sp, #28]
 8008da2:	4648      	mov	r0, r9
 8008da4:	4631      	mov	r1, r6
 8008da6:	f7ff ff13 	bl	8008bd0 <LCD_FillRect>
 8008daa:	4b0a      	ldr	r3, [pc, #40]	; (8008dd4 <LCD__DrawBitmap_1bpp+0x1ac>)
 8008dac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008dae:	681b      	ldr	r3, [r3, #0]
 8008db0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8008db4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008db6:	601a      	str	r2, [r3, #0]
 8008db8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008dba:	f10a 0a01 	add.w	sl, sl, #1
 8008dbe:	4499      	add	r9, r3
 8008dc0:	e7c3      	b.n	8008d4a <LCD__DrawBitmap_1bpp+0x122>
 8008dc2:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8008dc4:	f10c 0c01 	add.w	ip, ip, #1
 8008dc8:	4434      	add	r4, r6
 8008dca:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8008dcc:	e7a6      	b.n	8008d1c <LCD__DrawBitmap_1bpp+0xf4>
 8008dce:	b00f      	add	sp, #60	; 0x3c
 8008dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dd4:	200000b8 	.word	0x200000b8
 8008dd8:	20002d2c 	.word	0x20002d2c
 8008ddc:	20002ce4 	.word	0x20002ce4

08008de0 <LCD_DrawBitmap>:
 8008de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008de4:	f8df c20c 	ldr.w	ip, [pc, #524]	; 8008ff4 <LCD_DrawBitmap+0x214>
 8008de8:	b091      	sub	sp, #68	; 0x44
 8008dea:	f8dc 9000 	ldr.w	r9, [ip]
 8008dee:	9207      	str	r2, [sp, #28]
 8008df0:	4605      	mov	r5, r0
 8008df2:	4688      	mov	r8, r1
 8008df4:	469b      	mov	fp, r3
 8008df6:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8008df8:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8008dfa:	f1b9 0f00 	cmp.w	r9, #0
 8008dfe:	d00c      	beq.n	8008e1a <LCD_DrawBitmap+0x3a>
 8008e00:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8008e02:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008e04:	9500      	str	r5, [sp, #0]
 8008e06:	9701      	str	r7, [sp, #4]
 8008e08:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8008e0a:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8008e0c:	9602      	str	r6, [sp, #8]
 8008e0e:	9503      	str	r5, [sp, #12]
 8008e10:	9404      	str	r4, [sp, #16]
 8008e12:	9705      	str	r7, [sp, #20]
 8008e14:	f8d9 4000 	ldr.w	r4, [r9]
 8008e18:	e081      	b.n	8008f1e <LCD_DrawBitmap+0x13e>
 8008e1a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008e1c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8008e1e:	ea47 0300 	orr.w	r3, r7, r0
 8008e22:	2b01      	cmp	r3, #1
 8008e24:	d17d      	bne.n	8008f22 <LCD_DrawBitmap+0x142>
 8008e26:	4b71      	ldr	r3, [pc, #452]	; (8008fec <LCD_DrawBitmap+0x20c>)
 8008e28:	6818      	ldr	r0, [r3, #0]
 8008e2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8008e2e:	1a53      	subs	r3, r2, r1
 8008e30:	2b00      	cmp	r3, #0
 8008e32:	dd08      	ble.n	8008e46 <LCD_DrawBitmap+0x66>
 8008e34:	ebc3 010b 	rsb	r1, r3, fp
 8008e38:	2900      	cmp	r1, #0
 8008e3a:	f340 80d4 	ble.w	8008fe6 <LCD_DrawBitmap+0x206>
 8008e3e:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008e40:	fb07 4403 	mla	r4, r7, r3, r4
 8008e44:	e001      	b.n	8008e4a <LCD_DrawBitmap+0x6a>
 8008e46:	4659      	mov	r1, fp
 8008e48:	4642      	mov	r2, r8
 8008e4a:	44d8      	add	r8, fp
 8008e4c:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8008e50:	f108 38ff 	add.w	r8, r8, #4294967295
 8008e54:	ebc3 0808 	rsb	r8, r3, r8
 8008e58:	f1b8 0f00 	cmp.w	r8, #0
 8008e5c:	dd04      	ble.n	8008e68 <LCD_DrawBitmap+0x88>
 8008e5e:	ebc8 0101 	rsb	r1, r8, r1
 8008e62:	2900      	cmp	r1, #0
 8008e64:	f340 80bf 	ble.w	8008fe6 <LCD_DrawBitmap+0x206>
 8008e68:	9b07      	ldr	r3, [sp, #28]
 8008e6a:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8008e6e:	442b      	add	r3, r5
 8008e70:	3b01      	subs	r3, #1
 8008e72:	ebcc 0303 	rsb	r3, ip, r3
 8008e76:	2b00      	cmp	r3, #0
 8008e78:	dd02      	ble.n	8008e80 <LCD_DrawBitmap+0xa0>
 8008e7a:	9f07      	ldr	r7, [sp, #28]
 8008e7c:	1aff      	subs	r7, r7, r3
 8008e7e:	9707      	str	r7, [sp, #28]
 8008e80:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8008e84:	4565      	cmp	r5, ip
 8008e86:	da33      	bge.n	8008ef0 <LCD_DrawBitmap+0x110>
 8008e88:	9f07      	ldr	r7, [sp, #28]
 8008e8a:	ebc5 030c 	rsb	r3, r5, ip
 8008e8e:	1aff      	subs	r7, r7, r3
 8008e90:	2e08      	cmp	r6, #8
 8008e92:	9707      	str	r7, [sp, #28]
 8008e94:	d027      	beq.n	8008ee6 <LCD_DrawBitmap+0x106>
 8008e96:	dc0d      	bgt.n	8008eb4 <LCD_DrawBitmap+0xd4>
 8008e98:	2e02      	cmp	r6, #2
 8008e9a:	d014      	beq.n	8008ec6 <LCD_DrawBitmap+0xe6>
 8008e9c:	2e04      	cmp	r6, #4
 8008e9e:	d01a      	beq.n	8008ed6 <LCD_DrawBitmap+0xf6>
 8008ea0:	2e01      	cmp	r6, #1
 8008ea2:	d126      	bne.n	8008ef2 <LCD_DrawBitmap+0x112>
 8008ea4:	f023 0c07 	bic.w	ip, r3, #7
 8008ea8:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8008eac:	4465      	add	r5, ip
 8008eae:	f003 0307 	and.w	r3, r3, #7
 8008eb2:	e01e      	b.n	8008ef2 <LCD_DrawBitmap+0x112>
 8008eb4:	2e18      	cmp	r6, #24
 8008eb6:	d018      	beq.n	8008eea <LCD_DrawBitmap+0x10a>
 8008eb8:	2e20      	cmp	r6, #32
 8008eba:	d016      	beq.n	8008eea <LCD_DrawBitmap+0x10a>
 8008ebc:	2e10      	cmp	r6, #16
 8008ebe:	d118      	bne.n	8008ef2 <LCD_DrawBitmap+0x112>
 8008ec0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8008ec4:	e013      	b.n	8008eee <LCD_DrawBitmap+0x10e>
 8008ec6:	f023 0c03 	bic.w	ip, r3, #3
 8008eca:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8008ece:	4465      	add	r5, ip
 8008ed0:	f003 0303 	and.w	r3, r3, #3
 8008ed4:	e00d      	b.n	8008ef2 <LCD_DrawBitmap+0x112>
 8008ed6:	f023 0c01 	bic.w	ip, r3, #1
 8008eda:	eb04 0463 	add.w	r4, r4, r3, asr #1
 8008ede:	4465      	add	r5, ip
 8008ee0:	f003 0301 	and.w	r3, r3, #1
 8008ee4:	e005      	b.n	8008ef2 <LCD_DrawBitmap+0x112>
 8008ee6:	441c      	add	r4, r3
 8008ee8:	e001      	b.n	8008eee <LCD_DrawBitmap+0x10e>
 8008eea:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8008eee:	4665      	mov	r5, ip
 8008ef0:	2300      	movs	r3, #0
 8008ef2:	9f07      	ldr	r7, [sp, #28]
 8008ef4:	2f00      	cmp	r7, #0
 8008ef6:	dd76      	ble.n	8008fe6 <LCD_DrawBitmap+0x206>
 8008ef8:	f890 e011 	ldrb.w	lr, [r0, #17]
 8008efc:	483c      	ldr	r0, [pc, #240]	; (8008ff0 <LCD_DrawBitmap+0x210>)
 8008efe:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008f00:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 8008f04:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8008f08:	9403      	str	r4, [sp, #12]
 8008f0a:	e88d 0042 	stmia.w	sp, {r1, r6}
 8008f0e:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8008f10:	9304      	str	r3, [sp, #16]
 8008f12:	9702      	str	r7, [sp, #8]
 8008f14:	9405      	str	r4, [sp, #20]
 8008f16:	f8de 4004 	ldr.w	r4, [lr, #4]
 8008f1a:	9b07      	ldr	r3, [sp, #28]
 8008f1c:	4629      	mov	r1, r5
 8008f1e:	47a0      	blx	r4
 8008f20:	e061      	b.n	8008fe6 <LCD_DrawBitmap+0x206>
 8008f22:	f1c6 0708 	rsb	r7, r6, #8
 8008f26:	970e      	str	r7, [sp, #56]	; 0x38
 8008f28:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008f2c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008f2e:	455f      	cmp	r7, fp
 8008f30:	da59      	bge.n	8008fe6 <LCD_DrawBitmap+0x206>
 8008f32:	4b2e      	ldr	r3, [pc, #184]	; (8008fec <LCD_DrawBitmap+0x20c>)
 8008f34:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008f36:	681b      	ldr	r3, [r3, #0]
 8008f38:	4447      	add	r7, r8
 8008f3a:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8008f3e:	970c      	str	r7, [sp, #48]	; 0x30
 8008f40:	3f01      	subs	r7, #1
 8008f42:	4297      	cmp	r7, r2
 8008f44:	970d      	str	r7, [sp, #52]	; 0x34
 8008f46:	db46      	blt.n	8008fd6 <LCD_DrawBitmap+0x1f6>
 8008f48:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8008f4c:	4598      	cmp	r8, r3
 8008f4e:	dc42      	bgt.n	8008fd6 <LCD_DrawBitmap+0x1f6>
 8008f50:	f04f 0a00 	mov.w	sl, #0
 8008f54:	940b      	str	r4, [sp, #44]	; 0x2c
 8008f56:	46ac      	mov	ip, r5
 8008f58:	4657      	mov	r7, sl
 8008f5a:	9807      	ldr	r0, [sp, #28]
 8008f5c:	4287      	cmp	r7, r0
 8008f5e:	da3a      	bge.n	8008fd6 <LCD_DrawBitmap+0x1f6>
 8008f60:	f1ba 0f00 	cmp.w	sl, #0
 8008f64:	d106      	bne.n	8008f74 <LCD_DrawBitmap+0x194>
 8008f66:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008f68:	f890 9000 	ldrb.w	r9, [r0]
 8008f6c:	3001      	adds	r0, #1
 8008f6e:	900b      	str	r0, [sp, #44]	; 0x2c
 8008f70:	f04f 0a08 	mov.w	sl, #8
 8008f74:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008f76:	4a1d      	ldr	r2, [pc, #116]	; (8008fec <LCD_DrawBitmap+0x20c>)
 8008f78:	fa49 f301 	asr.w	r3, r9, r1
 8008f7c:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8008f80:	fa09 f906 	lsl.w	r9, r9, r6
 8008f84:	fa5f f989 	uxtb.w	r9, r9
 8008f88:	ebc6 0a0a 	rsb	sl, r6, sl
 8008f8c:	d103      	bne.n	8008f96 <LCD_DrawBitmap+0x1b6>
 8008f8e:	6810      	ldr	r0, [r2, #0]
 8008f90:	7c00      	ldrb	r0, [r0, #16]
 8008f92:	0780      	lsls	r0, r0, #30
 8008f94:	d41b      	bmi.n	8008fce <LCD_DrawBitmap+0x1ee>
 8008f96:	6812      	ldr	r2, [r2, #0]
 8008f98:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008f9a:	6810      	ldr	r0, [r2, #0]
 8008f9c:	900f      	str	r0, [sp, #60]	; 0x3c
 8008f9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008fa0:	b110      	cbz	r0, 8008fa8 <LCD_DrawBitmap+0x1c8>
 8008fa2:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8008fa6:	e000      	b.n	8008faa <LCD_DrawBitmap+0x1ca>
 8008fa8:	b2db      	uxtb	r3, r3
 8008faa:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008fac:	6013      	str	r3, [r2, #0]
 8008fae:	1e4a      	subs	r2, r1, #1
 8008fb0:	4462      	add	r2, ip
 8008fb2:	4660      	mov	r0, ip
 8008fb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008fb6:	f8cd c020 	str.w	ip, [sp, #32]
 8008fba:	4641      	mov	r1, r8
 8008fbc:	f7ff fe08 	bl	8008bd0 <LCD_FillRect>
 8008fc0:	4b0a      	ldr	r3, [pc, #40]	; (8008fec <LCD_DrawBitmap+0x20c>)
 8008fc2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8008fc4:	681b      	ldr	r3, [r3, #0]
 8008fc6:	f8dd c020 	ldr.w	ip, [sp, #32]
 8008fca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008fcc:	601a      	str	r2, [r3, #0]
 8008fce:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8008fd0:	3701      	adds	r7, #1
 8008fd2:	449c      	add	ip, r3
 8008fd4:	e7c1      	b.n	8008f5a <LCD_DrawBitmap+0x17a>
 8008fd6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008fd8:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8008fdc:	3701      	adds	r7, #1
 8008fde:	970a      	str	r7, [sp, #40]	; 0x28
 8008fe0:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008fe2:	443c      	add	r4, r7
 8008fe4:	e7a2      	b.n	8008f2c <LCD_DrawBitmap+0x14c>
 8008fe6:	b011      	add	sp, #68	; 0x44
 8008fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008fec:	200000b8 	.word	0x200000b8
 8008ff0:	20002d2c 	.word	0x20002d2c
 8008ff4:	20002ce4 	.word	0x20002ce4

08008ff8 <LCD_SetClipRectMax>:
 8008ff8:	b508      	push	{r3, lr}
 8008ffa:	4b05      	ldr	r3, [pc, #20]	; (8009010 <LCD_SetClipRectMax+0x18>)
 8008ffc:	6819      	ldr	r1, [r3, #0]
 8008ffe:	4b05      	ldr	r3, [pc, #20]	; (8009014 <LCD_SetClipRectMax+0x1c>)
 8009000:	7c4a      	ldrb	r2, [r1, #17]
 8009002:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009006:	68c3      	ldr	r3, [r0, #12]
 8009008:	3108      	adds	r1, #8
 800900a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800900c:	4798      	blx	r3
 800900e:	bd08      	pop	{r3, pc}
 8009010:	200000b8 	.word	0x200000b8
 8009014:	20002d2c 	.word	0x20002d2c

08009018 <emWin_LCD_Init>:
 8009018:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800901a:	f7ff ffed 	bl	8008ff8 <LCD_SetClipRectMax>
 800901e:	f005 fd79 	bl	800eb14 <LCD_InitColors>
 8009022:	4604      	mov	r4, r0
 8009024:	2800      	cmp	r0, #0
 8009026:	d145      	bne.n	80090b4 <emWin_LCD_Init+0x9c>
 8009028:	4605      	mov	r5, r0
 800902a:	4628      	mov	r0, r5
 800902c:	f001 fc66 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8009030:	9001      	str	r0, [sp, #4]
 8009032:	b150      	cbz	r0, 800904a <emWin_LCD_Init+0x32>
 8009034:	68c3      	ldr	r3, [r0, #12]
 8009036:	210c      	movs	r1, #12
 8009038:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800903a:	a801      	add	r0, sp, #4
 800903c:	4798      	blx	r3
 800903e:	4603      	mov	r3, r0
 8009040:	2800      	cmp	r0, #0
 8009042:	d035      	beq.n	80090b0 <emWin_LCD_Init+0x98>
 8009044:	9801      	ldr	r0, [sp, #4]
 8009046:	4798      	blx	r3
 8009048:	4304      	orrs	r4, r0
 800904a:	3501      	adds	r5, #1
 800904c:	2d02      	cmp	r5, #2
 800904e:	d1ec      	bne.n	800902a <emWin_LCD_Init+0x12>
 8009050:	bb84      	cbnz	r4, 80090b4 <emWin_LCD_Init+0x9c>
 8009052:	f005 fd7b 	bl	800eb4c <LCD_InitLUT>
 8009056:	4b19      	ldr	r3, [pc, #100]	; (80090bc <emWin_LCD_Init+0xa4>)
 8009058:	681a      	ldr	r2, [r3, #0]
 800905a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800905e:	429a      	cmp	r2, r3
 8009060:	d101      	bne.n	8009066 <emWin_LCD_Init+0x4e>
 8009062:	2000      	movs	r0, #0
 8009064:	e027      	b.n	80090b6 <emWin_LCD_Init+0x9e>
 8009066:	2401      	movs	r4, #1
 8009068:	4620      	mov	r0, r4
 800906a:	f001 fc47 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 800906e:	9001      	str	r0, [sp, #4]
 8009070:	b1d0      	cbz	r0, 80090a8 <emWin_LCD_Init+0x90>
 8009072:	4620      	mov	r0, r4
 8009074:	f000 fdee 	bl	8009c54 <GUI_SelectLayer>
 8009078:	2004      	movs	r0, #4
 800907a:	f7ff fd27 	bl	8008acc <LCD_SetDrawMode>
 800907e:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8009082:	2000      	movs	r0, #0
 8009084:	4601      	mov	r1, r0
 8009086:	4613      	mov	r3, r2
 8009088:	f7ff fda2 	bl	8008bd0 <LCD_FillRect>
 800908c:	2000      	movs	r0, #0
 800908e:	f7ff fd1d 	bl	8008acc <LCD_SetDrawMode>
 8009092:	a802      	add	r0, sp, #8
 8009094:	210e      	movs	r1, #14
 8009096:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800909a:	68db      	ldr	r3, [r3, #12]
 800909c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800909e:	4798      	blx	r3
 80090a0:	4603      	mov	r3, r0
 80090a2:	b108      	cbz	r0, 80090a8 <emWin_LCD_Init+0x90>
 80090a4:	9801      	ldr	r0, [sp, #4]
 80090a6:	4798      	blx	r3
 80090a8:	f114 34ff 	adds.w	r4, r4, #4294967295
 80090ac:	d2dc      	bcs.n	8009068 <emWin_LCD_Init+0x50>
 80090ae:	e7d8      	b.n	8009062 <emWin_LCD_Init+0x4a>
 80090b0:	2001      	movs	r0, #1
 80090b2:	e000      	b.n	80090b6 <emWin_LCD_Init+0x9e>
 80090b4:	4620      	mov	r0, r4
 80090b6:	b003      	add	sp, #12
 80090b8:	bd30      	pop	{r4, r5, pc}
 80090ba:	bf00      	nop
 80090bc:	20002bb8 	.word	0x20002bb8

080090c0 <LCD_Color2Index>:
 80090c0:	b508      	push	{r3, lr}
 80090c2:	4b05      	ldr	r3, [pc, #20]	; (80090d8 <LCD_Color2Index+0x18>)
 80090c4:	681b      	ldr	r3, [r3, #0]
 80090c6:	7c5a      	ldrb	r2, [r3, #17]
 80090c8:	4b04      	ldr	r3, [pc, #16]	; (80090dc <LCD_Color2Index+0x1c>)
 80090ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80090ce:	691b      	ldr	r3, [r3, #16]
 80090d0:	681b      	ldr	r3, [r3, #0]
 80090d2:	4798      	blx	r3
 80090d4:	bd08      	pop	{r3, pc}
 80090d6:	bf00      	nop
 80090d8:	200000b8 	.word	0x200000b8
 80090dc:	20002d2c 	.word	0x20002d2c

080090e0 <LCD_Index2Color>:
 80090e0:	b508      	push	{r3, lr}
 80090e2:	4b05      	ldr	r3, [pc, #20]	; (80090f8 <LCD_Index2Color+0x18>)
 80090e4:	681b      	ldr	r3, [r3, #0]
 80090e6:	7c5a      	ldrb	r2, [r3, #17]
 80090e8:	4b04      	ldr	r3, [pc, #16]	; (80090fc <LCD_Index2Color+0x1c>)
 80090ea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80090ee:	691b      	ldr	r3, [r3, #16]
 80090f0:	685b      	ldr	r3, [r3, #4]
 80090f2:	4798      	blx	r3
 80090f4:	bd08      	pop	{r3, pc}
 80090f6:	bf00      	nop
 80090f8:	200000b8 	.word	0x200000b8
 80090fc:	20002d2c 	.word	0x20002d2c

08009100 <LCD_SetColorIndex>:
 8009100:	4b04      	ldr	r3, [pc, #16]	; (8009114 <LCD_SetColorIndex+0x14>)
 8009102:	681b      	ldr	r3, [r3, #0]
 8009104:	7c1a      	ldrb	r2, [r3, #16]
 8009106:	0752      	lsls	r2, r2, #29
 8009108:	bf4c      	ite	mi
 800910a:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 800910c:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 800910e:	6018      	str	r0, [r3, #0]
 8009110:	4770      	bx	lr
 8009112:	bf00      	nop
 8009114:	200000b8 	.word	0x200000b8

08009118 <_SetColor>:
 8009118:	b508      	push	{r3, lr}
 800911a:	4b06      	ldr	r3, [pc, #24]	; (8009134 <_SetColor+0x1c>)
 800911c:	681b      	ldr	r3, [r3, #0]
 800911e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8009120:	4281      	cmp	r1, r0
 8009122:	d006      	beq.n	8009132 <_SetColor+0x1a>
 8009124:	6318      	str	r0, [r3, #48]	; 0x30
 8009126:	f7ff ffcb 	bl	80090c0 <LCD_Color2Index>
 800912a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800912e:	f7ff bfe7 	b.w	8009100 <LCD_SetColorIndex>
 8009132:	bd08      	pop	{r3, pc}
 8009134:	200000b8 	.word	0x200000b8

08009138 <LCD_SetBkColorIndex>:
 8009138:	4b04      	ldr	r3, [pc, #16]	; (800914c <LCD_SetBkColorIndex+0x14>)
 800913a:	681b      	ldr	r3, [r3, #0]
 800913c:	7c1a      	ldrb	r2, [r3, #16]
 800913e:	0752      	lsls	r2, r2, #29
 8009140:	bf4c      	ite	mi
 8009142:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 8009144:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 8009146:	6018      	str	r0, [r3, #0]
 8009148:	4770      	bx	lr
 800914a:	bf00      	nop
 800914c:	200000b8 	.word	0x200000b8

08009150 <_SetBkColor>:
 8009150:	b508      	push	{r3, lr}
 8009152:	4b06      	ldr	r3, [pc, #24]	; (800916c <_SetBkColor+0x1c>)
 8009154:	681b      	ldr	r3, [r3, #0]
 8009156:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8009158:	4281      	cmp	r1, r0
 800915a:	d006      	beq.n	800916a <_SetBkColor+0x1a>
 800915c:	6358      	str	r0, [r3, #52]	; 0x34
 800915e:	f7ff ffaf 	bl	80090c0 <LCD_Color2Index>
 8009162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009166:	f7ff bfe7 	b.w	8009138 <LCD_SetBkColorIndex>
 800916a:	bd08      	pop	{r3, pc}
 800916c:	200000b8 	.word	0x200000b8

08009170 <LCD_SetBkColor>:
 8009170:	b508      	push	{r3, lr}
 8009172:	4b02      	ldr	r3, [pc, #8]	; (800917c <LCD_SetBkColor+0xc>)
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	685b      	ldr	r3, [r3, #4]
 8009178:	4798      	blx	r3
 800917a:	bd08      	pop	{r3, pc}
 800917c:	200000a0 	.word	0x200000a0

08009180 <LCD_SetColor>:
 8009180:	b508      	push	{r3, lr}
 8009182:	4b02      	ldr	r3, [pc, #8]	; (800918c <LCD_SetColor+0xc>)
 8009184:	681b      	ldr	r3, [r3, #0]
 8009186:	681b      	ldr	r3, [r3, #0]
 8009188:	4798      	blx	r3
 800918a:	bd08      	pop	{r3, pc}
 800918c:	200000a0 	.word	0x200000a0

08009190 <GUI__DivideRound32>:
 8009190:	b149      	cbz	r1, 80091a6 <GUI__DivideRound32+0x16>
 8009192:	2800      	cmp	r0, #0
 8009194:	ea4f 0361 	mov.w	r3, r1, asr #1
 8009198:	bfb4      	ite	lt
 800919a:	ebc3 0000 	rsblt	r0, r3, r0
 800919e:	18c0      	addge	r0, r0, r3
 80091a0:	fb90 f0f1 	sdiv	r0, r0, r1
 80091a4:	4770      	bx	lr
 80091a6:	4608      	mov	r0, r1
 80091a8:	4770      	bx	lr

080091aa <GUI__HandleEOLine>:
 80091aa:	b513      	push	{r0, r1, r4, lr}
 80091ac:	6802      	ldr	r2, [r0, #0]
 80091ae:	4604      	mov	r4, r0
 80091b0:	a802      	add	r0, sp, #8
 80091b2:	f840 2d04 	str.w	r2, [r0, #-4]!
 80091b6:	f000 fb59 	bl	800986c <GUI_UC__GetCharCodeInc>
 80091ba:	b2c0      	uxtb	r0, r0
 80091bc:	b120      	cbz	r0, 80091c8 <GUI__HandleEOLine+0x1e>
 80091be:	280a      	cmp	r0, #10
 80091c0:	d104      	bne.n	80091cc <GUI__HandleEOLine+0x22>
 80091c2:	9b01      	ldr	r3, [sp, #4]
 80091c4:	6023      	str	r3, [r4, #0]
 80091c6:	e001      	b.n	80091cc <GUI__HandleEOLine+0x22>
 80091c8:	2001      	movs	r0, #1
 80091ca:	e000      	b.n	80091ce <GUI__HandleEOLine+0x24>
 80091cc:	2000      	movs	r0, #0
 80091ce:	b002      	add	sp, #8
 80091d0:	bd10      	pop	{r4, pc}

080091d2 <GUI__IntersectRect>:
 80091d2:	880b      	ldrh	r3, [r1, #0]
 80091d4:	b510      	push	{r4, lr}
 80091d6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80091da:	b21a      	sxth	r2, r3
 80091dc:	4294      	cmp	r4, r2
 80091de:	bfb8      	it	lt
 80091e0:	8003      	strhlt	r3, [r0, #0]
 80091e2:	884b      	ldrh	r3, [r1, #2]
 80091e4:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80091e8:	b21a      	sxth	r2, r3
 80091ea:	4294      	cmp	r4, r2
 80091ec:	bfb8      	it	lt
 80091ee:	8043      	strhlt	r3, [r0, #2]
 80091f0:	888b      	ldrh	r3, [r1, #4]
 80091f2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80091f6:	b21a      	sxth	r2, r3
 80091f8:	4294      	cmp	r4, r2
 80091fa:	bfc8      	it	gt
 80091fc:	8083      	strhgt	r3, [r0, #4]
 80091fe:	88cb      	ldrh	r3, [r1, #6]
 8009200:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8009204:	b21a      	sxth	r2, r3
 8009206:	4291      	cmp	r1, r2
 8009208:	bfc8      	it	gt
 800920a:	80c3      	strhgt	r3, [r0, #6]
 800920c:	bd10      	pop	{r4, pc}

0800920e <GUI__IntersectRects>:
 800920e:	b570      	push	{r4, r5, r6, lr}
 8009210:	f9b2 3000 	ldrsh.w	r3, [r2]
 8009214:	f9b1 4000 	ldrsh.w	r4, [r1]
 8009218:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800921c:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8009220:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8009224:	429c      	cmp	r4, r3
 8009226:	bfb8      	it	lt
 8009228:	461c      	movlt	r4, r3
 800922a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800922e:	429d      	cmp	r5, r3
 8009230:	bfa8      	it	ge
 8009232:	462b      	movge	r3, r5
 8009234:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8009238:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800923c:	42ae      	cmp	r6, r5
 800923e:	bfb8      	it	lt
 8009240:	4635      	movlt	r5, r6
 8009242:	b2a4      	uxth	r4, r4
 8009244:	b2ad      	uxth	r5, r5
 8009246:	4291      	cmp	r1, r2
 8009248:	bfb8      	it	lt
 800924a:	460a      	movlt	r2, r1
 800924c:	8004      	strh	r4, [r0, #0]
 800924e:	8085      	strh	r5, [r0, #4]
 8009250:	b224      	sxth	r4, r4
 8009252:	b22d      	sxth	r5, r5
 8009254:	b29b      	uxth	r3, r3
 8009256:	b292      	uxth	r2, r2
 8009258:	42a5      	cmp	r5, r4
 800925a:	8043      	strh	r3, [r0, #2]
 800925c:	80c2      	strh	r2, [r0, #6]
 800925e:	db06      	blt.n	800926e <GUI__IntersectRects+0x60>
 8009260:	b210      	sxth	r0, r2
 8009262:	b21b      	sxth	r3, r3
 8009264:	4298      	cmp	r0, r3
 8009266:	bfb4      	ite	lt
 8009268:	2000      	movlt	r0, #0
 800926a:	2001      	movge	r0, #1
 800926c:	bd70      	pop	{r4, r5, r6, pc}
 800926e:	2000      	movs	r0, #0
 8009270:	bd70      	pop	{r4, r5, r6, pc}

08009272 <GUI__memset16>:
 8009272:	b570      	push	{r4, r5, r6, lr}
 8009274:	0784      	lsls	r4, r0, #30
 8009276:	d502      	bpl.n	800927e <GUI__memset16+0xc>
 8009278:	8001      	strh	r1, [r0, #0]
 800927a:	3a01      	subs	r2, #1
 800927c:	3002      	adds	r0, #2
 800927e:	0855      	lsrs	r5, r2, #1
 8009280:	462b      	mov	r3, r5
 8009282:	b305      	cbz	r5, 80092c6 <GUI__memset16+0x54>
 8009284:	2d03      	cmp	r5, #3
 8009286:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 800928a:	dc02      	bgt.n	8009292 <GUI__memset16+0x20>
 800928c:	4606      	mov	r6, r0
 800928e:	461d      	mov	r5, r3
 8009290:	e012      	b.n	80092b8 <GUI__memset16+0x46>
 8009292:	4603      	mov	r3, r0
 8009294:	462e      	mov	r6, r5
 8009296:	3e04      	subs	r6, #4
 8009298:	2e03      	cmp	r6, #3
 800929a:	601c      	str	r4, [r3, #0]
 800929c:	605c      	str	r4, [r3, #4]
 800929e:	609c      	str	r4, [r3, #8]
 80092a0:	60dc      	str	r4, [r3, #12]
 80092a2:	f103 0310 	add.w	r3, r3, #16
 80092a6:	dcf6      	bgt.n	8009296 <GUI__memset16+0x24>
 80092a8:	3d04      	subs	r5, #4
 80092aa:	08ab      	lsrs	r3, r5, #2
 80092ac:	1c5e      	adds	r6, r3, #1
 80092ae:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 80092b2:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 80092b6:	e7e9      	b.n	800928c <GUI__memset16+0x1a>
 80092b8:	b11d      	cbz	r5, 80092c2 <GUI__memset16+0x50>
 80092ba:	f846 4b04 	str.w	r4, [r6], #4
 80092be:	3d01      	subs	r5, #1
 80092c0:	e7fa      	b.n	80092b8 <GUI__memset16+0x46>
 80092c2:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80092c6:	07d3      	lsls	r3, r2, #31
 80092c8:	bf48      	it	mi
 80092ca:	8001      	strhmi	r1, [r0, #0]
 80092cc:	bd70      	pop	{r4, r5, r6, pc}

080092ce <GUI__ReduceRect>:
 80092ce:	880b      	ldrh	r3, [r1, #0]
 80092d0:	b292      	uxth	r2, r2
 80092d2:	4413      	add	r3, r2
 80092d4:	8003      	strh	r3, [r0, #0]
 80092d6:	888b      	ldrh	r3, [r1, #4]
 80092d8:	1a9b      	subs	r3, r3, r2
 80092da:	8083      	strh	r3, [r0, #4]
 80092dc:	884b      	ldrh	r3, [r1, #2]
 80092de:	4413      	add	r3, r2
 80092e0:	8043      	strh	r3, [r0, #2]
 80092e2:	88cb      	ldrh	r3, [r1, #6]
 80092e4:	1a9a      	subs	r2, r3, r2
 80092e6:	80c2      	strh	r2, [r0, #6]
 80092e8:	4770      	bx	lr

080092ea <GUI__sqrt32>:
 80092ea:	b510      	push	{r4, lr}
 80092ec:	2110      	movs	r1, #16
 80092ee:	2300      	movs	r3, #0
 80092f0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80092f4:	189c      	adds	r4, r3, r2
 80092f6:	4284      	cmp	r4, r0
 80092f8:	bf9c      	itt	ls
 80092fa:	18a3      	addls	r3, r4, r2
 80092fc:	ebc4 0000 	rsbls	r0, r4, r0
 8009300:	3901      	subs	r1, #1
 8009302:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8009306:	ea4f 0292 	mov.w	r2, r2, lsr #2
 800930a:	d1f3      	bne.n	80092f4 <GUI__sqrt32+0xa>
 800930c:	4618      	mov	r0, r3
 800930e:	bd10      	pop	{r4, pc}

08009310 <GUI__strcmp>:
 8009310:	b510      	push	{r4, lr}
 8009312:	4b09      	ldr	r3, [pc, #36]	; (8009338 <GUI__strcmp+0x28>)
 8009314:	2800      	cmp	r0, #0
 8009316:	bf08      	it	eq
 8009318:	4618      	moveq	r0, r3
 800931a:	2900      	cmp	r1, #0
 800931c:	bf08      	it	eq
 800931e:	4619      	moveq	r1, r3
 8009320:	2300      	movs	r3, #0
 8009322:	5cc4      	ldrb	r4, [r0, r3]
 8009324:	5cca      	ldrb	r2, [r1, r3]
 8009326:	42a2      	cmp	r2, r4
 8009328:	d104      	bne.n	8009334 <GUI__strcmp+0x24>
 800932a:	3301      	adds	r3, #1
 800932c:	2a00      	cmp	r2, #0
 800932e:	d1f8      	bne.n	8009322 <GUI__strcmp+0x12>
 8009330:	4610      	mov	r0, r2
 8009332:	bd10      	pop	{r4, pc}
 8009334:	2001      	movs	r0, #1
 8009336:	bd10      	pop	{r4, pc}
 8009338:	0801300c 	.word	0x0801300c

0800933c <GUI__strcmp_hp>:
 800933c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800933e:	460d      	mov	r5, r1
 8009340:	b160      	cbz	r0, 800935c <GUI__strcmp_hp+0x20>
 8009342:	f002 fa99 	bl	800b878 <GUI_ALLOC_LockH>
 8009346:	ac02      	add	r4, sp, #8
 8009348:	4629      	mov	r1, r5
 800934a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800934e:	f7ff ffdf 	bl	8009310 <GUI__strcmp>
 8009352:	4605      	mov	r5, r0
 8009354:	4620      	mov	r0, r4
 8009356:	f002 fa9d 	bl	800b894 <GUI_ALLOC_UnlockH>
 800935a:	e000      	b.n	800935e <GUI__strcmp_hp+0x22>
 800935c:	2501      	movs	r5, #1
 800935e:	4628      	mov	r0, r5
 8009360:	b003      	add	sp, #12
 8009362:	bd30      	pop	{r4, r5, pc}

08009364 <GUI__strlen>:
 8009364:	f04f 33ff 	mov.w	r3, #4294967295
 8009368:	b118      	cbz	r0, 8009372 <GUI__strlen+0xe>
 800936a:	3301      	adds	r3, #1
 800936c:	5cc2      	ldrb	r2, [r0, r3]
 800936e:	2a00      	cmp	r2, #0
 8009370:	d1fb      	bne.n	800936a <GUI__strlen+0x6>
 8009372:	4618      	mov	r0, r3
 8009374:	4770      	bx	lr
	...

08009378 <GUI__SetText>:
 8009378:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800937a:	6807      	ldr	r7, [r0, #0]
 800937c:	4605      	mov	r5, r0
 800937e:	4638      	mov	r0, r7
 8009380:	460e      	mov	r6, r1
 8009382:	f7ff ffdb 	bl	800933c <GUI__strcmp_hp>
 8009386:	b908      	cbnz	r0, 800938c <GUI__SetText+0x14>
 8009388:	2000      	movs	r0, #0
 800938a:	e02f      	b.n	80093ec <GUI__SetText+0x74>
 800938c:	4630      	mov	r0, r6
 800938e:	f7ff ffe9 	bl	8009364 <GUI__strlen>
 8009392:	1c44      	adds	r4, r0, #1
 8009394:	4638      	mov	r0, r7
 8009396:	f002 fa9d 	bl	800b8d4 <GUI_ALLOC_GetSize>
 800939a:	4284      	cmp	r4, r0
 800939c:	d110      	bne.n	80093c0 <GUI__SetText+0x48>
 800939e:	2c00      	cmp	r4, #0
 80093a0:	d0f2      	beq.n	8009388 <GUI__SetText+0x10>
 80093a2:	4638      	mov	r0, r7
 80093a4:	f002 fa68 	bl	800b878 <GUI_ALLOC_LockH>
 80093a8:	ad02      	add	r5, sp, #8
 80093aa:	4b11      	ldr	r3, [pc, #68]	; (80093f0 <GUI__SetText+0x78>)
 80093ac:	f845 0d04 	str.w	r0, [r5, #-4]!
 80093b0:	681b      	ldr	r3, [r3, #0]
 80093b2:	4631      	mov	r1, r6
 80093b4:	4622      	mov	r2, r4
 80093b6:	4798      	blx	r3
 80093b8:	4628      	mov	r0, r5
 80093ba:	f002 fa6b 	bl	800b894 <GUI_ALLOC_UnlockH>
 80093be:	e014      	b.n	80093ea <GUI__SetText+0x72>
 80093c0:	4620      	mov	r0, r4
 80093c2:	f002 fc25 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 80093c6:	4607      	mov	r7, r0
 80093c8:	2800      	cmp	r0, #0
 80093ca:	d0dd      	beq.n	8009388 <GUI__SetText+0x10>
 80093cc:	f002 fa54 	bl	800b878 <GUI_ALLOC_LockH>
 80093d0:	ac02      	add	r4, sp, #8
 80093d2:	4631      	mov	r1, r6
 80093d4:	f844 0d04 	str.w	r0, [r4, #-4]!
 80093d8:	f006 fe94 	bl	8010104 <strcpy>
 80093dc:	4620      	mov	r0, r4
 80093de:	f002 fa59 	bl	800b894 <GUI_ALLOC_UnlockH>
 80093e2:	4628      	mov	r0, r5
 80093e4:	f002 fc18 	bl	800bc18 <GUI_ALLOC_FreePtr>
 80093e8:	602f      	str	r7, [r5, #0]
 80093ea:	2001      	movs	r0, #1
 80093ec:	b003      	add	sp, #12
 80093ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80093f0:	200000a8 	.word	0x200000a8

080093f4 <GUI__ManageCacheEx>:
 80093f4:	2801      	cmp	r0, #1
 80093f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80093f8:	4604      	mov	r4, r0
 80093fa:	460d      	mov	r5, r1
 80093fc:	dc65      	bgt.n	80094ca <GUI__ManageCacheEx+0xd6>
 80093fe:	4b34      	ldr	r3, [pc, #208]	; (80094d0 <GUI__ManageCacheEx+0xdc>)
 8009400:	681b      	ldr	r3, [r3, #0]
 8009402:	b103      	cbz	r3, 8009406 <GUI__ManageCacheEx+0x12>
 8009404:	4798      	blx	r3
 8009406:	2d01      	cmp	r5, #1
 8009408:	d004      	beq.n	8009414 <GUI__ManageCacheEx+0x20>
 800940a:	2d02      	cmp	r5, #2
 800940c:	d021      	beq.n	8009452 <GUI__ManageCacheEx+0x5e>
 800940e:	2d00      	cmp	r5, #0
 8009410:	d15b      	bne.n	80094ca <GUI__ManageCacheEx+0xd6>
 8009412:	e035      	b.n	8009480 <GUI__ManageCacheEx+0x8c>
 8009414:	4e2f      	ldr	r6, [pc, #188]	; (80094d4 <GUI__ManageCacheEx+0xe0>)
 8009416:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 800941a:	b9b7      	cbnz	r7, 800944a <GUI__ManageCacheEx+0x56>
 800941c:	4620      	mov	r0, r4
 800941e:	f001 fa6d 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8009422:	9001      	str	r0, [sp, #4]
 8009424:	2800      	cmp	r0, #0
 8009426:	d050      	beq.n	80094ca <GUI__ManageCacheEx+0xd6>
 8009428:	68c3      	ldr	r3, [r0, #12]
 800942a:	210d      	movs	r1, #13
 800942c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800942e:	a801      	add	r0, sp, #4
 8009430:	4798      	blx	r3
 8009432:	4603      	mov	r3, r0
 8009434:	2800      	cmp	r0, #0
 8009436:	d048      	beq.n	80094ca <GUI__ManageCacheEx+0xd6>
 8009438:	9801      	ldr	r0, [sp, #4]
 800943a:	4629      	mov	r1, r5
 800943c:	4798      	blx	r3
 800943e:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8009442:	3301      	adds	r3, #1
 8009444:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 8009448:	e018      	b.n	800947c <GUI__ManageCacheEx+0x88>
 800944a:	3701      	adds	r7, #1
 800944c:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 8009450:	e03b      	b.n	80094ca <GUI__ManageCacheEx+0xd6>
 8009452:	4620      	mov	r0, r4
 8009454:	f001 fa52 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8009458:	9001      	str	r0, [sp, #4]
 800945a:	2800      	cmp	r0, #0
 800945c:	d035      	beq.n	80094ca <GUI__ManageCacheEx+0xd6>
 800945e:	68c3      	ldr	r3, [r0, #12]
 8009460:	210d      	movs	r1, #13
 8009462:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009464:	a801      	add	r0, sp, #4
 8009466:	4798      	blx	r3
 8009468:	4604      	mov	r4, r0
 800946a:	2800      	cmp	r0, #0
 800946c:	d02d      	beq.n	80094ca <GUI__ManageCacheEx+0xd6>
 800946e:	4b1a      	ldr	r3, [pc, #104]	; (80094d8 <GUI__ManageCacheEx+0xe4>)
 8009470:	681b      	ldr	r3, [r3, #0]
 8009472:	b103      	cbz	r3, 8009476 <GUI__ManageCacheEx+0x82>
 8009474:	4798      	blx	r3
 8009476:	9801      	ldr	r0, [sp, #4]
 8009478:	2102      	movs	r1, #2
 800947a:	47a0      	blx	r4
 800947c:	2000      	movs	r0, #0
 800947e:	e025      	b.n	80094cc <GUI__ManageCacheEx+0xd8>
 8009480:	4d14      	ldr	r5, [pc, #80]	; (80094d4 <GUI__ManageCacheEx+0xe0>)
 8009482:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8009486:	2b01      	cmp	r3, #1
 8009488:	d001      	beq.n	800948e <GUI__ManageCacheEx+0x9a>
 800948a:	2001      	movs	r0, #1
 800948c:	e015      	b.n	80094ba <GUI__ManageCacheEx+0xc6>
 800948e:	4620      	mov	r0, r4
 8009490:	f001 fa34 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8009494:	9001      	str	r0, [sp, #4]
 8009496:	2800      	cmp	r0, #0
 8009498:	d0f7      	beq.n	800948a <GUI__ManageCacheEx+0x96>
 800949a:	68c3      	ldr	r3, [r0, #12]
 800949c:	210d      	movs	r1, #13
 800949e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094a0:	a801      	add	r0, sp, #4
 80094a2:	4798      	blx	r3
 80094a4:	4606      	mov	r6, r0
 80094a6:	2800      	cmp	r0, #0
 80094a8:	d0ef      	beq.n	800948a <GUI__ManageCacheEx+0x96>
 80094aa:	4b0b      	ldr	r3, [pc, #44]	; (80094d8 <GUI__ManageCacheEx+0xe4>)
 80094ac:	681b      	ldr	r3, [r3, #0]
 80094ae:	b103      	cbz	r3, 80094b2 <GUI__ManageCacheEx+0xbe>
 80094b0:	4798      	blx	r3
 80094b2:	9801      	ldr	r0, [sp, #4]
 80094b4:	2100      	movs	r1, #0
 80094b6:	47b0      	blx	r6
 80094b8:	2000      	movs	r0, #0
 80094ba:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80094be:	2b00      	cmp	r3, #0
 80094c0:	bf18      	it	ne
 80094c2:	3b01      	subne	r3, #1
 80094c4:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 80094c8:	e000      	b.n	80094cc <GUI__ManageCacheEx+0xd8>
 80094ca:	2001      	movs	r0, #1
 80094cc:	b003      	add	sp, #12
 80094ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80094d0:	20002b14 	.word	0x20002b14
 80094d4:	20002b0c 	.word	0x20002b0c
 80094d8:	20002b08 	.word	0x20002b08

080094dc <GUI__ManageCache>:
 80094dc:	4b02      	ldr	r3, [pc, #8]	; (80094e8 <GUI__ManageCache+0xc>)
 80094de:	681b      	ldr	r3, [r3, #0]
 80094e0:	4601      	mov	r1, r0
 80094e2:	7c58      	ldrb	r0, [r3, #17]
 80094e4:	f7ff bf86 	b.w	80093f4 <GUI__ManageCacheEx>
 80094e8:	200000b8 	.word	0x200000b8

080094ec <GUI__MixColors>:
 80094ec:	f081 417f 	eor.w	r1, r1, #4278190080	; 0xff000000
 80094f0:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 80094f4:	0e0b      	lsrs	r3, r1, #24
 80094f6:	ea4f 6310 	mov.w	r3, r0, lsr #24
 80094fa:	b530      	push	{r4, r5, lr}
 80094fc:	fb02 f303 	mul.w	r3, r2, r3
 8009500:	f04f 04ff 	mov.w	r4, #255	; 0xff
 8009504:	fbb3 f3f4 	udiv	r3, r3, r4
 8009508:	bf08      	it	eq
 800950a:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 800950e:	1ae2      	subs	r2, r4, r3
 8009510:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8009514:	f001 25ff 	and.w	r5, r1, #4278255360	; 0xff00ff00
 8009518:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 800951c:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
 8009520:	0a2d      	lsrs	r5, r5, #8
 8009522:	435c      	muls	r4, r3
 8009524:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8009528:	4343      	muls	r3, r0
 800952a:	fb02 4405 	mla	r4, r2, r5, r4
 800952e:	fb02 3201 	mla	r2, r2, r1, r3
 8009532:	0a12      	lsrs	r2, r2, #8
 8009534:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 8009538:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 800953c:	ea44 0002 	orr.w	r0, r4, r2
 8009540:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 8009544:	bd30      	pop	{r4, r5, pc}
	...

08009548 <_OnExit>:
 8009548:	b570      	push	{r4, r5, r6, lr}
 800954a:	4c0a      	ldr	r4, [pc, #40]	; (8009574 <_OnExit+0x2c>)
 800954c:	4d0a      	ldr	r5, [pc, #40]	; (8009578 <_OnExit+0x30>)
 800954e:	6820      	ldr	r0, [r4, #0]
 8009550:	4e0a      	ldr	r6, [pc, #40]	; (800957c <_OnExit+0x34>)
 8009552:	f002 f97d 	bl	800b850 <GUI_ALLOC_FreeFixedBlock>
 8009556:	6828      	ldr	r0, [r5, #0]
 8009558:	f002 f97a 	bl	800b850 <GUI_ALLOC_FreeFixedBlock>
 800955c:	6830      	ldr	r0, [r6, #0]
 800955e:	f002 f977 	bl	800b850 <GUI_ALLOC_FreeFixedBlock>
 8009562:	4a07      	ldr	r2, [pc, #28]	; (8009580 <_OnExit+0x38>)
 8009564:	2300      	movs	r3, #0
 8009566:	6013      	str	r3, [r2, #0]
 8009568:	4a06      	ldr	r2, [pc, #24]	; (8009584 <_OnExit+0x3c>)
 800956a:	6033      	str	r3, [r6, #0]
 800956c:	602b      	str	r3, [r5, #0]
 800956e:	6023      	str	r3, [r4, #0]
 8009570:	6013      	str	r3, [r2, #0]
 8009572:	bd70      	pop	{r4, r5, r6, pc}
 8009574:	20002b1c 	.word	0x20002b1c
 8009578:	20002b18 	.word	0x20002b18
 800957c:	20002b20 	.word	0x20002b20
 8009580:	20002b24 	.word	0x20002b24
 8009584:	20002b34 	.word	0x20002b34

08009588 <GUI__GetAlphaBuffer>:
 8009588:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800958c:	461c      	mov	r4, r3
 800958e:	4b28      	ldr	r3, [pc, #160]	; (8009630 <GUI__GetAlphaBuffer+0xa8>)
 8009590:	4617      	mov	r7, r2
 8009592:	681a      	ldr	r2, [r3, #0]
 8009594:	4606      	mov	r6, r0
 8009596:	4688      	mov	r8, r1
 8009598:	b932      	cbnz	r2, 80095a8 <GUI__GetAlphaBuffer+0x20>
 800959a:	2201      	movs	r2, #1
 800959c:	4825      	ldr	r0, [pc, #148]	; (8009634 <GUI__GetAlphaBuffer+0xac>)
 800959e:	601a      	str	r2, [r3, #0]
 80095a0:	4b25      	ldr	r3, [pc, #148]	; (8009638 <GUI__GetAlphaBuffer+0xb0>)
 80095a2:	6003      	str	r3, [r0, #0]
 80095a4:	f001 fb04 	bl	800abb0 <GUI__RegisterExit>
 80095a8:	4d24      	ldr	r5, [pc, #144]	; (800963c <GUI__GetAlphaBuffer+0xb4>)
 80095aa:	682b      	ldr	r3, [r5, #0]
 80095ac:	b933      	cbnz	r3, 80095bc <GUI__GetAlphaBuffer+0x34>
 80095ae:	4b24      	ldr	r3, [pc, #144]	; (8009640 <GUI__GetAlphaBuffer+0xb8>)
 80095b0:	681b      	ldr	r3, [r3, #0]
 80095b2:	602b      	str	r3, [r5, #0]
 80095b4:	b913      	cbnz	r3, 80095bc <GUI__GetAlphaBuffer+0x34>
 80095b6:	f7ff fa05 	bl	80089c4 <LCD_GetVXSizeMax>
 80095ba:	6028      	str	r0, [r5, #0]
 80095bc:	b10c      	cbz	r4, 80095c2 <GUI__GetAlphaBuffer+0x3a>
 80095be:	682b      	ldr	r3, [r5, #0]
 80095c0:	6023      	str	r3, [r4, #0]
 80095c2:	b196      	cbz	r6, 80095ea <GUI__GetAlphaBuffer+0x62>
 80095c4:	4b1f      	ldr	r3, [pc, #124]	; (8009644 <GUI__GetAlphaBuffer+0xbc>)
 80095c6:	681a      	ldr	r2, [r3, #0]
 80095c8:	4699      	mov	r9, r3
 80095ca:	2400      	movs	r4, #0
 80095cc:	b94a      	cbnz	r2, 80095e2 <GUI__GetAlphaBuffer+0x5a>
 80095ce:	6828      	ldr	r0, [r5, #0]
 80095d0:	0080      	lsls	r0, r0, #2
 80095d2:	f002 fa21 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 80095d6:	f1d0 0401 	rsbs	r4, r0, #1
 80095da:	f8c9 0000 	str.w	r0, [r9]
 80095de:	bf38      	it	cc
 80095e0:	2400      	movcc	r4, #0
 80095e2:	f8d9 3000 	ldr.w	r3, [r9]
 80095e6:	6033      	str	r3, [r6, #0]
 80095e8:	e000      	b.n	80095ec <GUI__GetAlphaBuffer+0x64>
 80095ea:	4634      	mov	r4, r6
 80095ec:	f1b8 0f00 	cmp.w	r8, #0
 80095f0:	d00d      	beq.n	800960e <GUI__GetAlphaBuffer+0x86>
 80095f2:	4e15      	ldr	r6, [pc, #84]	; (8009648 <GUI__GetAlphaBuffer+0xc0>)
 80095f4:	6833      	ldr	r3, [r6, #0]
 80095f6:	b93b      	cbnz	r3, 8009608 <GUI__GetAlphaBuffer+0x80>
 80095f8:	6828      	ldr	r0, [r5, #0]
 80095fa:	0080      	lsls	r0, r0, #2
 80095fc:	f002 fa0c 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 8009600:	2800      	cmp	r0, #0
 8009602:	6030      	str	r0, [r6, #0]
 8009604:	bf08      	it	eq
 8009606:	2401      	moveq	r4, #1
 8009608:	6833      	ldr	r3, [r6, #0]
 800960a:	f8c8 3000 	str.w	r3, [r8]
 800960e:	b167      	cbz	r7, 800962a <GUI__GetAlphaBuffer+0xa2>
 8009610:	4e0e      	ldr	r6, [pc, #56]	; (800964c <GUI__GetAlphaBuffer+0xc4>)
 8009612:	6833      	ldr	r3, [r6, #0]
 8009614:	b93b      	cbnz	r3, 8009626 <GUI__GetAlphaBuffer+0x9e>
 8009616:	6828      	ldr	r0, [r5, #0]
 8009618:	0080      	lsls	r0, r0, #2
 800961a:	f002 f9fd 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 800961e:	2800      	cmp	r0, #0
 8009620:	6030      	str	r0, [r6, #0]
 8009622:	bf08      	it	eq
 8009624:	2401      	moveq	r4, #1
 8009626:	6833      	ldr	r3, [r6, #0]
 8009628:	603b      	str	r3, [r7, #0]
 800962a:	4620      	mov	r0, r4
 800962c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009630:	20002b34 	.word	0x20002b34
 8009634:	20002b28 	.word	0x20002b28
 8009638:	08009549 	.word	0x08009549
 800963c:	20002b24 	.word	0x20002b24
 8009640:	20002d34 	.word	0x20002d34
 8009644:	20002b1c 	.word	0x20002b1c
 8009648:	20002b18 	.word	0x20002b18
 800964c:	20002b20 	.word	0x20002b20

08009650 <GUI__DoAlphaBlending>:
 8009650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009654:	b093      	sub	sp, #76	; 0x4c
 8009656:	2400      	movs	r4, #0
 8009658:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800965a:	900b      	str	r0, [sp, #44]	; 0x2c
 800965c:	910c      	str	r1, [sp, #48]	; 0x30
 800965e:	4690      	mov	r8, r2
 8009660:	461f      	mov	r7, r3
 8009662:	6034      	str	r4, [r6, #0]
 8009664:	a80f      	add	r0, sp, #60	; 0x3c
 8009666:	a910      	add	r1, sp, #64	; 0x40
 8009668:	4622      	mov	r2, r4
 800966a:	ab11      	add	r3, sp, #68	; 0x44
 800966c:	f7ff ff8c 	bl	8009588 <GUI__GetAlphaBuffer>
 8009670:	4605      	mov	r5, r0
 8009672:	2800      	cmp	r0, #0
 8009674:	f040 80c5 	bne.w	8009802 <GUI__DoAlphaBlending+0x1b2>
 8009678:	4c64      	ldr	r4, [pc, #400]	; (800980c <GUI__DoAlphaBlending+0x1bc>)
 800967a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800967c:	6823      	ldr	r3, [r4, #0]
 800967e:	7c58      	ldrb	r0, [r3, #17]
 8009680:	4b63      	ldr	r3, [pc, #396]	; (8009810 <GUI__DoAlphaBlending+0x1c0>)
 8009682:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8009686:	9307      	str	r3, [sp, #28]
 8009688:	4297      	cmp	r7, r2
 800968a:	bfa8      	it	ge
 800968c:	4617      	movge	r7, r2
 800968e:	691a      	ldr	r2, [r3, #16]
 8009690:	920d      	str	r2, [sp, #52]	; 0x34
 8009692:	970a      	str	r7, [sp, #40]	; 0x28
 8009694:	f7ff f962 	bl	800895c <GUI_GetBitsPerPixelEx>
 8009698:	6823      	ldr	r3, [r4, #0]
 800969a:	9008      	str	r0, [sp, #32]
 800969c:	7c58      	ldrb	r0, [r3, #17]
 800969e:	f7ff f97b 	bl	8008998 <GUI_GetpfIndex2ColorEx>
 80096a2:	4b5c      	ldr	r3, [pc, #368]	; (8009814 <GUI__DoAlphaBlending+0x1c4>)
 80096a4:	9004      	str	r0, [sp, #16]
 80096a6:	4298      	cmp	r0, r3
 80096a8:	d005      	beq.n	80096b6 <GUI__DoAlphaBlending+0x66>
 80096aa:	4b5b      	ldr	r3, [pc, #364]	; (8009818 <GUI__DoAlphaBlending+0x1c8>)
 80096ac:	1ac3      	subs	r3, r0, r3
 80096ae:	bf18      	it	ne
 80096b0:	2301      	movne	r3, #1
 80096b2:	9306      	str	r3, [sp, #24]
 80096b4:	e000      	b.n	80096b8 <GUI__DoAlphaBlending+0x68>
 80096b6:	9506      	str	r5, [sp, #24]
 80096b8:	2500      	movs	r5, #0
 80096ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80096bc:	46ab      	mov	fp, r5
 80096be:	4643      	mov	r3, r8
 80096c0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80096c2:	f853 0b04 	ldr.w	r0, [r3], #4
 80096c6:	9305      	str	r3, [sp, #20]
 80096c8:	4790      	blx	r2
 80096ca:	0e03      	lsrs	r3, r0, #24
 80096cc:	4681      	mov	r9, r0
 80096ce:	9309      	str	r3, [sp, #36]	; 0x24
 80096d0:	f000 8087 	beq.w	80097e2 <GUI__DoAlphaBlending+0x192>
 80096d4:	f1bb 0f00 	cmp.w	fp, #0
 80096d8:	d13f      	bne.n	800975a <GUI__DoAlphaBlending+0x10a>
 80096da:	4b4c      	ldr	r3, [pc, #304]	; (800980c <GUI__DoAlphaBlending+0x1bc>)
 80096dc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80096de:	681b      	ldr	r3, [r3, #0]
 80096e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80096e2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80096e6:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 80096ea:	990c      	ldr	r1, [sp, #48]	; 0x30
 80096ec:	442f      	add	r7, r5
 80096ee:	42bb      	cmp	r3, r7
 80096f0:	bfc8      	it	gt
 80096f2:	ebc7 0b03 	rsbgt	fp, r7, r3
 80096f6:	eb0b 0a05 	add.w	sl, fp, r5
 80096fa:	bfc8      	it	gt
 80096fc:	461f      	movgt	r7, r3
 80096fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009700:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8009704:	4453      	add	r3, sl
 8009706:	4494      	add	ip, r2
 8009708:	9300      	str	r3, [sp, #0]
 800970a:	9b07      	ldr	r3, [sp, #28]
 800970c:	9301      	str	r3, [sp, #4]
 800970e:	f10c 32ff 	add.w	r2, ip, #4294967295
 8009712:	4638      	mov	r0, r7
 8009714:	460b      	mov	r3, r1
 8009716:	f8cd c00c 	str.w	ip, [sp, #12]
 800971a:	f005 f9ad 	bl	800ea78 <GUI_ReadRectEx>
 800971e:	9a08      	ldr	r2, [sp, #32]
 8009720:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8009722:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8009726:	2a17      	cmp	r2, #23
 8009728:	dc06      	bgt.n	8009738 <GUI__DoAlphaBlending+0xe8>
 800972a:	4450      	add	r0, sl
 800972c:	ebcb 0104 	rsb	r1, fp, r4
 8009730:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009732:	f005 fb05 	bl	800ed40 <GUI__ExpandPixelIndicesEx>
 8009736:	e001      	b.n	800973c <GUI__DoAlphaBlending+0xec>
 8009738:	9b06      	ldr	r3, [sp, #24]
 800973a:	b913      	cbnz	r3, 8009742 <GUI__DoAlphaBlending+0xf2>
 800973c:	f04f 0b01 	mov.w	fp, #1
 8009740:	e00b      	b.n	800975a <GUI__DoAlphaBlending+0x10a>
 8009742:	ebc7 070c 	rsb	r7, r7, ip
 8009746:	4482      	add	sl, r0
 8009748:	f8da 0000 	ldr.w	r0, [sl]
 800974c:	9a04      	ldr	r2, [sp, #16]
 800974e:	4790      	blx	r2
 8009750:	3f01      	subs	r7, #1
 8009752:	f84a 0b04 	str.w	r0, [sl], #4
 8009756:	d1f7      	bne.n	8009748 <GUI__DoAlphaBlending+0xf8>
 8009758:	e7f0      	b.n	800973c <GUI__DoAlphaBlending+0xec>
 800975a:	4b30      	ldr	r3, [pc, #192]	; (800981c <GUI__DoAlphaBlending+0x1cc>)
 800975c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800975e:	f8d3 c000 	ldr.w	ip, [r3]
 8009762:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8009764:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 8009768:	f1bc 0f00 	cmp.w	ip, #0
 800976c:	d024      	beq.n	80097b8 <GUI__DoAlphaBlending+0x168>
 800976e:	eb07 020a 	add.w	r2, r7, sl
 8009772:	4451      	add	r1, sl
 8009774:	9210      	str	r2, [sp, #64]	; 0x40
 8009776:	4623      	mov	r3, r4
 8009778:	910f      	str	r1, [sp, #60]	; 0x3c
 800977a:	4640      	mov	r0, r8
 800977c:	47e0      	blx	ip
 800977e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8009780:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8009782:	2300      	movs	r3, #0
 8009784:	f858 1003 	ldr.w	r1, [r8, r3]
 8009788:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 800978c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 8009790:	58e8      	ldr	r0, [r5, r3]
 8009792:	d101      	bne.n	8009798 <GUI__DoAlphaBlending+0x148>
 8009794:	50d0      	str	r0, [r2, r3]
 8009796:	e005      	b.n	80097a4 <GUI__DoAlphaBlending+0x154>
 8009798:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800979c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 80097a0:	bf08      	it	eq
 80097a2:	50d1      	streq	r1, [r2, r3]
 80097a4:	3c01      	subs	r4, #1
 80097a6:	f103 0304 	add.w	r3, r3, #4
 80097aa:	d1eb      	bne.n	8009784 <GUI__DoAlphaBlending+0x134>
 80097ac:	6833      	ldr	r3, [r6, #0]
 80097ae:	9710      	str	r7, [sp, #64]	; 0x40
 80097b0:	f043 0301 	orr.w	r3, r3, #1
 80097b4:	6033      	str	r3, [r6, #0]
 80097b6:	e022      	b.n	80097fe <GUI__DoAlphaBlending+0x1ae>
 80097b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097ba:	2bff      	cmp	r3, #255	; 0xff
 80097bc:	d104      	bne.n	80097c8 <GUI__DoAlphaBlending+0x178>
 80097be:	f851 300a 	ldr.w	r3, [r1, sl]
 80097c2:	f847 300a 	str.w	r3, [r7, sl]
 80097c6:	e013      	b.n	80097f0 <GUI__DoAlphaBlending+0x1a0>
 80097c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097ca:	f851 100a 	ldr.w	r1, [r1, sl]
 80097ce:	43da      	mvns	r2, r3
 80097d0:	4b13      	ldr	r3, [pc, #76]	; (8009820 <GUI__DoAlphaBlending+0x1d0>)
 80097d2:	f029 407f 	bic.w	r0, r9, #4278190080	; 0xff000000
 80097d6:	681b      	ldr	r3, [r3, #0]
 80097d8:	b2d2      	uxtb	r2, r2
 80097da:	4798      	blx	r3
 80097dc:	f847 000a 	str.w	r0, [r7, sl]
 80097e0:	e002      	b.n	80097e8 <GUI__DoAlphaBlending+0x198>
 80097e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80097e4:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 80097e8:	6833      	ldr	r3, [r6, #0]
 80097ea:	f043 0301 	orr.w	r3, r3, #1
 80097ee:	6033      	str	r3, [r6, #0]
 80097f0:	3c01      	subs	r4, #1
 80097f2:	f105 0501 	add.w	r5, r5, #1
 80097f6:	d002      	beq.n	80097fe <GUI__DoAlphaBlending+0x1ae>
 80097f8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80097fc:	e75f      	b.n	80096be <GUI__DoAlphaBlending+0x6e>
 80097fe:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009800:	e000      	b.n	8009804 <GUI__DoAlphaBlending+0x1b4>
 8009802:	4620      	mov	r0, r4
 8009804:	b013      	add	sp, #76	; 0x4c
 8009806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800980a:	bf00      	nop
 800980c:	200000b8 	.word	0x200000b8
 8009810:	20002d2c 	.word	0x20002d2c
 8009814:	0800be7f 	.word	0x0800be7f
 8009818:	0800be7d 	.word	0x0800be7d
 800981c:	20002b30 	.word	0x20002b30
 8009820:	200000ac 	.word	0x200000ac

08009824 <GUI__AllocAlphaBuffer>:
 8009824:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009826:	b108      	cbz	r0, 800982c <GUI__AllocAlphaBuffer+0x8>
 8009828:	aa03      	add	r2, sp, #12
 800982a:	e000      	b.n	800982e <GUI__AllocAlphaBuffer+0xa>
 800982c:	4602      	mov	r2, r0
 800982e:	a801      	add	r0, sp, #4
 8009830:	a902      	add	r1, sp, #8
 8009832:	2300      	movs	r3, #0
 8009834:	f7ff fea8 	bl	8009588 <GUI__GetAlphaBuffer>
 8009838:	b005      	add	sp, #20
 800983a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08009840 <GUI_SignalEvent>:
 8009840:	b508      	push	{r3, lr}
 8009842:	4b02      	ldr	r3, [pc, #8]	; (800984c <GUI_SignalEvent+0xc>)
 8009844:	681b      	ldr	r3, [r3, #0]
 8009846:	b103      	cbz	r3, 800984a <GUI_SignalEvent+0xa>
 8009848:	4798      	blx	r3
 800984a:	bd08      	pop	{r3, pc}
 800984c:	20002b38 	.word	0x20002b38

08009850 <GUI_AddDecMin>:
 8009850:	b570      	push	{r4, r5, r6, lr}
 8009852:	460c      	mov	r4, r1
 8009854:	4605      	mov	r5, r0
 8009856:	f001 fa41 	bl	800acdc <GUI_Long2Len>
 800985a:	4623      	mov	r3, r4
 800985c:	b2c1      	uxtb	r1, r0
 800985e:	2200      	movs	r2, #0
 8009860:	4628      	mov	r0, r5
 8009862:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009866:	f001 ba51 	b.w	800ad0c <GUI_AddDecShift>
	...

0800986c <GUI_UC__GetCharCodeInc>:
 800986c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800986e:	4e08      	ldr	r6, [pc, #32]	; (8009890 <GUI_UC__GetCharCodeInc+0x24>)
 8009870:	6804      	ldr	r4, [r0, #0]
 8009872:	6833      	ldr	r3, [r6, #0]
 8009874:	4605      	mov	r5, r0
 8009876:	681b      	ldr	r3, [r3, #0]
 8009878:	4620      	mov	r0, r4
 800987a:	4798      	blx	r3
 800987c:	6833      	ldr	r3, [r6, #0]
 800987e:	4607      	mov	r7, r0
 8009880:	685b      	ldr	r3, [r3, #4]
 8009882:	4620      	mov	r0, r4
 8009884:	4798      	blx	r3
 8009886:	4420      	add	r0, r4
 8009888:	6028      	str	r0, [r5, #0]
 800988a:	4638      	mov	r0, r7
 800988c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800988e:	bf00      	nop
 8009890:	20002d24 	.word	0x20002d24

08009894 <GUI_UC__NumChars2NumBytes>:
 8009894:	b570      	push	{r4, r5, r6, lr}
 8009896:	4604      	mov	r4, r0
 8009898:	460e      	mov	r6, r1
 800989a:	2500      	movs	r5, #0
 800989c:	b146      	cbz	r6, 80098b0 <GUI_UC__NumChars2NumBytes+0x1c>
 800989e:	4b05      	ldr	r3, [pc, #20]	; (80098b4 <GUI_UC__NumChars2NumBytes+0x20>)
 80098a0:	681b      	ldr	r3, [r3, #0]
 80098a2:	4620      	mov	r0, r4
 80098a4:	685b      	ldr	r3, [r3, #4]
 80098a6:	4798      	blx	r3
 80098a8:	3e01      	subs	r6, #1
 80098aa:	4404      	add	r4, r0
 80098ac:	4405      	add	r5, r0
 80098ae:	e7f5      	b.n	800989c <GUI_UC__NumChars2NumBytes+0x8>
 80098b0:	4628      	mov	r0, r5
 80098b2:	bd70      	pop	{r4, r5, r6, pc}
 80098b4:	20002d24 	.word	0x20002d24

080098b8 <GUI__GetNumChars>:
 80098b8:	b513      	push	{r0, r1, r4, lr}
 80098ba:	9001      	str	r0, [sp, #4]
 80098bc:	b130      	cbz	r0, 80098cc <GUI__GetNumChars+0x14>
 80098be:	2400      	movs	r4, #0
 80098c0:	a801      	add	r0, sp, #4
 80098c2:	f7ff ffd3 	bl	800986c <GUI_UC__GetCharCodeInc>
 80098c6:	b110      	cbz	r0, 80098ce <GUI__GetNumChars+0x16>
 80098c8:	3401      	adds	r4, #1
 80098ca:	e7f9      	b.n	80098c0 <GUI__GetNumChars+0x8>
 80098cc:	4604      	mov	r4, r0
 80098ce:	4620      	mov	r0, r4
 80098d0:	b002      	add	sp, #8
 80098d2:	bd10      	pop	{r4, pc}

080098d4 <_OnExit>:
 80098d4:	4a03      	ldr	r2, [pc, #12]	; (80098e4 <_OnExit+0x10>)
 80098d6:	2300      	movs	r3, #0
 80098d8:	6013      	str	r3, [r2, #0]
 80098da:	4a03      	ldr	r2, [pc, #12]	; (80098e8 <_OnExit+0x14>)
 80098dc:	6013      	str	r3, [r2, #0]
 80098de:	4a03      	ldr	r2, [pc, #12]	; (80098ec <_OnExit+0x18>)
 80098e0:	6013      	str	r3, [r2, #0]
 80098e2:	4770      	bx	lr
 80098e4:	20002b3c 	.word	0x20002b3c
 80098e8:	20002b48 	.word	0x20002b48
 80098ec:	20002b4c 	.word	0x20002b4c

080098f0 <GUI_TIMER_Exec>:
 80098f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80098f4:	4b19      	ldr	r3, [pc, #100]	; (800995c <GUI_TIMER_Exec+0x6c>)
 80098f6:	681f      	ldr	r7, [r3, #0]
 80098f8:	b085      	sub	sp, #20
 80098fa:	2500      	movs	r5, #0
 80098fc:	4698      	mov	r8, r3
 80098fe:	f8d8 3000 	ldr.w	r3, [r8]
 8009902:	4c16      	ldr	r4, [pc, #88]	; (800995c <GUI_TIMER_Exec+0x6c>)
 8009904:	b333      	cbz	r3, 8009954 <GUI_TIMER_Exec+0x64>
 8009906:	f000 f991 	bl	8009c2c <GUI_GetTime>
 800990a:	4606      	mov	r6, r0
 800990c:	6820      	ldr	r0, [r4, #0]
 800990e:	f001 ffb3 	bl	800b878 <GUI_ALLOC_LockH>
 8009912:	4603      	mov	r3, r0
 8009914:	a804      	add	r0, sp, #16
 8009916:	6959      	ldr	r1, [r3, #20]
 8009918:	f840 3d10 	str.w	r3, [r0, #-16]!
 800991c:	1b89      	subs	r1, r1, r6
 800991e:	2900      	cmp	r1, #0
 8009920:	dc13      	bgt.n	800994a <GUI_TIMER_Exec+0x5a>
 8009922:	6821      	ldr	r1, [r4, #0]
 8009924:	9103      	str	r1, [sp, #12]
 8009926:	9601      	str	r6, [sp, #4]
 8009928:	6919      	ldr	r1, [r3, #16]
 800992a:	685e      	ldr	r6, [r3, #4]
 800992c:	9102      	str	r1, [sp, #8]
 800992e:	4668      	mov	r0, sp
 8009930:	6026      	str	r6, [r4, #0]
 8009932:	f8d3 9000 	ldr.w	r9, [r3]
 8009936:	f001 ffad 	bl	800b894 <GUI_ALLOC_UnlockH>
 800993a:	a801      	add	r0, sp, #4
 800993c:	47c8      	blx	r9
 800993e:	b14e      	cbz	r6, 8009954 <GUI_TIMER_Exec+0x64>
 8009940:	6823      	ldr	r3, [r4, #0]
 8009942:	42bb      	cmp	r3, r7
 8009944:	d005      	beq.n	8009952 <GUI_TIMER_Exec+0x62>
 8009946:	2501      	movs	r5, #1
 8009948:	e7d9      	b.n	80098fe <GUI_TIMER_Exec+0xe>
 800994a:	4668      	mov	r0, sp
 800994c:	f001 ffa2 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009950:	e000      	b.n	8009954 <GUI_TIMER_Exec+0x64>
 8009952:	2500      	movs	r5, #0
 8009954:	4628      	mov	r0, r5
 8009956:	b005      	add	sp, #20
 8009958:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800995c:	20002b48 	.word	0x20002b48

08009960 <_Link>:
 8009960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009962:	4c25      	ldr	r4, [pc, #148]	; (80099f8 <_Link+0x98>)
 8009964:	b085      	sub	sp, #20
 8009966:	4605      	mov	r5, r0
 8009968:	f001 ff86 	bl	800b878 <GUI_ALLOC_LockH>
 800996c:	6823      	ldr	r3, [r4, #0]
 800996e:	9001      	str	r0, [sp, #4]
 8009970:	b913      	cbnz	r3, 8009978 <_Link+0x18>
 8009972:	6025      	str	r5, [r4, #0]
 8009974:	6043      	str	r3, [r0, #4]
 8009976:	e039      	b.n	80099ec <_Link+0x8c>
 8009978:	4618      	mov	r0, r3
 800997a:	f001 ff7d 	bl	800b878 <GUI_ALLOC_LockH>
 800997e:	ab04      	add	r3, sp, #16
 8009980:	6946      	ldr	r6, [r0, #20]
 8009982:	f843 0d10 	str.w	r0, [r3, #-16]!
 8009986:	4668      	mov	r0, sp
 8009988:	f001 ff84 	bl	800b894 <GUI_ALLOC_UnlockH>
 800998c:	9b01      	ldr	r3, [sp, #4]
 800998e:	695a      	ldr	r2, [r3, #20]
 8009990:	1b92      	subs	r2, r2, r6
 8009992:	2a00      	cmp	r2, #0
 8009994:	dc03      	bgt.n	800999e <_Link+0x3e>
 8009996:	6822      	ldr	r2, [r4, #0]
 8009998:	605a      	str	r2, [r3, #4]
 800999a:	6025      	str	r5, [r4, #0]
 800999c:	e026      	b.n	80099ec <_Link+0x8c>
 800999e:	6826      	ldr	r6, [r4, #0]
 80099a0:	4630      	mov	r0, r6
 80099a2:	f001 ff69 	bl	800b878 <GUI_ALLOC_LockH>
 80099a6:	ac04      	add	r4, sp, #16
 80099a8:	6846      	ldr	r6, [r0, #4]
 80099aa:	f844 0d08 	str.w	r0, [r4, #-8]!
 80099ae:	b1be      	cbz	r6, 80099e0 <_Link+0x80>
 80099b0:	4630      	mov	r0, r6
 80099b2:	f001 ff61 	bl	800b878 <GUI_ALLOC_LockH>
 80099b6:	ab04      	add	r3, sp, #16
 80099b8:	6947      	ldr	r7, [r0, #20]
 80099ba:	f843 0d04 	str.w	r0, [r3, #-4]!
 80099be:	4618      	mov	r0, r3
 80099c0:	f001 ff68 	bl	800b894 <GUI_ALLOC_UnlockH>
 80099c4:	9a01      	ldr	r2, [sp, #4]
 80099c6:	6953      	ldr	r3, [r2, #20]
 80099c8:	1bdb      	subs	r3, r3, r7
 80099ca:	2b00      	cmp	r3, #0
 80099cc:	9b02      	ldr	r3, [sp, #8]
 80099ce:	dc02      	bgt.n	80099d6 <_Link+0x76>
 80099d0:	6056      	str	r6, [r2, #4]
 80099d2:	605d      	str	r5, [r3, #4]
 80099d4:	e007      	b.n	80099e6 <_Link+0x86>
 80099d6:	4620      	mov	r0, r4
 80099d8:	685e      	ldr	r6, [r3, #4]
 80099da:	f001 ff5b 	bl	800b894 <GUI_ALLOC_UnlockH>
 80099de:	e7df      	b.n	80099a0 <_Link+0x40>
 80099e0:	9b01      	ldr	r3, [sp, #4]
 80099e2:	605e      	str	r6, [r3, #4]
 80099e4:	6045      	str	r5, [r0, #4]
 80099e6:	4620      	mov	r0, r4
 80099e8:	f001 ff54 	bl	800b894 <GUI_ALLOC_UnlockH>
 80099ec:	a801      	add	r0, sp, #4
 80099ee:	f001 ff51 	bl	800b894 <GUI_ALLOC_UnlockH>
 80099f2:	b005      	add	sp, #20
 80099f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099f6:	bf00      	nop
 80099f8:	20002b48 	.word	0x20002b48

080099fc <_Unlink>:
 80099fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80099fe:	4605      	mov	r5, r0
 8009a00:	b1f0      	cbz	r0, 8009a40 <_Unlink+0x44>
 8009a02:	f001 ff39 	bl	800b878 <GUI_ALLOC_LockH>
 8009a06:	4b0f      	ldr	r3, [pc, #60]	; (8009a44 <_Unlink+0x48>)
 8009a08:	9000      	str	r0, [sp, #0]
 8009a0a:	681c      	ldr	r4, [r3, #0]
 8009a0c:	42ac      	cmp	r4, r5
 8009a0e:	d104      	bne.n	8009a1a <_Unlink+0x1e>
 8009a10:	6842      	ldr	r2, [r0, #4]
 8009a12:	601a      	str	r2, [r3, #0]
 8009a14:	e011      	b.n	8009a3a <_Unlink+0x3e>
 8009a16:	f001 ff3d 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009a1a:	b174      	cbz	r4, 8009a3a <_Unlink+0x3e>
 8009a1c:	4620      	mov	r0, r4
 8009a1e:	f001 ff2b 	bl	800b878 <GUI_ALLOC_LockH>
 8009a22:	4603      	mov	r3, r0
 8009a24:	a802      	add	r0, sp, #8
 8009a26:	685c      	ldr	r4, [r3, #4]
 8009a28:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009a2c:	42ac      	cmp	r4, r5
 8009a2e:	d1f2      	bne.n	8009a16 <_Unlink+0x1a>
 8009a30:	9a00      	ldr	r2, [sp, #0]
 8009a32:	6852      	ldr	r2, [r2, #4]
 8009a34:	605a      	str	r2, [r3, #4]
 8009a36:	f001 ff2d 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009a3a:	4668      	mov	r0, sp
 8009a3c:	f001 ff2a 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009a40:	b003      	add	sp, #12
 8009a42:	bd30      	pop	{r4, r5, pc}
 8009a44:	20002b48 	.word	0x20002b48

08009a48 <GUI_TIMER__GetFirstTimer>:
 8009a48:	2300      	movs	r3, #0
 8009a4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a4c:	6003      	str	r3, [r0, #0]
 8009a4e:	4b09      	ldr	r3, [pc, #36]	; (8009a74 <GUI_TIMER__GetFirstTimer+0x2c>)
 8009a50:	681c      	ldr	r4, [r3, #0]
 8009a52:	4605      	mov	r5, r0
 8009a54:	b154      	cbz	r4, 8009a6c <GUI_TIMER__GetFirstTimer+0x24>
 8009a56:	4620      	mov	r0, r4
 8009a58:	f001 ff0e 	bl	800b878 <GUI_ALLOC_LockH>
 8009a5c:	ab02      	add	r3, sp, #8
 8009a5e:	6902      	ldr	r2, [r0, #16]
 8009a60:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009a64:	602a      	str	r2, [r5, #0]
 8009a66:	4618      	mov	r0, r3
 8009a68:	f001 ff14 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009a6c:	4620      	mov	r0, r4
 8009a6e:	b003      	add	sp, #12
 8009a70:	bd30      	pop	{r4, r5, pc}
 8009a72:	bf00      	nop
 8009a74:	20002b3c 	.word	0x20002b3c

08009a78 <GUI_TIMER__GetNextTimerLin>:
 8009a78:	2300      	movs	r3, #0
 8009a7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a7c:	600b      	str	r3, [r1, #0]
 8009a7e:	460e      	mov	r6, r1
 8009a80:	4604      	mov	r4, r0
 8009a82:	b190      	cbz	r0, 8009aaa <GUI_TIMER__GetNextTimerLin+0x32>
 8009a84:	f001 fef8 	bl	800b878 <GUI_ALLOC_LockH>
 8009a88:	ad02      	add	r5, sp, #8
 8009a8a:	6884      	ldr	r4, [r0, #8]
 8009a8c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009a90:	b144      	cbz	r4, 8009aa4 <GUI_TIMER__GetNextTimerLin+0x2c>
 8009a92:	4628      	mov	r0, r5
 8009a94:	f001 fefe 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009a98:	4620      	mov	r0, r4
 8009a9a:	f001 feed 	bl	800b878 <GUI_ALLOC_LockH>
 8009a9e:	6903      	ldr	r3, [r0, #16]
 8009aa0:	9001      	str	r0, [sp, #4]
 8009aa2:	6033      	str	r3, [r6, #0]
 8009aa4:	4628      	mov	r0, r5
 8009aa6:	f001 fef5 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009aaa:	4620      	mov	r0, r4
 8009aac:	b002      	add	sp, #8
 8009aae:	bd70      	pop	{r4, r5, r6, pc}

08009ab0 <GUI_TIMER_Create>:
 8009ab0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009ab4:	4681      	mov	r9, r0
 8009ab6:	201c      	movs	r0, #28
 8009ab8:	460e      	mov	r6, r1
 8009aba:	4690      	mov	r8, r2
 8009abc:	461f      	mov	r7, r3
 8009abe:	f002 f8d5 	bl	800bc6c <GUI_ALLOC_AllocZero>
 8009ac2:	4604      	mov	r4, r0
 8009ac4:	2800      	cmp	r0, #0
 8009ac6:	d031      	beq.n	8009b2c <GUI_TIMER_Create+0x7c>
 8009ac8:	4b1a      	ldr	r3, [pc, #104]	; (8009b34 <GUI_TIMER_Create+0x84>)
 8009aca:	4a1b      	ldr	r2, [pc, #108]	; (8009b38 <GUI_TIMER_Create+0x88>)
 8009acc:	601a      	str	r2, [r3, #0]
 8009ace:	f001 fed3 	bl	800b878 <GUI_ALLOC_LockH>
 8009ad2:	9000      	str	r0, [sp, #0]
 8009ad4:	b916      	cbnz	r6, 8009adc <GUI_TIMER_Create+0x2c>
 8009ad6:	f000 f8a9 	bl	8009c2c <GUI_GetTime>
 8009ada:	4606      	mov	r6, r0
 8009adc:	a802      	add	r0, sp, #8
 8009ade:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 8009ae2:	4668      	mov	r0, sp
 8009ae4:	616e      	str	r6, [r5, #20]
 8009ae6:	f8c5 9000 	str.w	r9, [r5]
 8009aea:	f8c5 8010 	str.w	r8, [r5, #16]
 8009aee:	81af      	strh	r7, [r5, #12]
 8009af0:	f001 fed0 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009af4:	4620      	mov	r0, r4
 8009af6:	f7ff ff33 	bl	8009960 <_Link>
 8009afa:	4b10      	ldr	r3, [pc, #64]	; (8009b3c <GUI_TIMER_Create+0x8c>)
 8009afc:	681a      	ldr	r2, [r3, #0]
 8009afe:	b932      	cbnz	r2, 8009b0e <GUI_TIMER_Create+0x5e>
 8009b00:	2201      	movs	r2, #1
 8009b02:	480f      	ldr	r0, [pc, #60]	; (8009b40 <GUI_TIMER_Create+0x90>)
 8009b04:	601a      	str	r2, [r3, #0]
 8009b06:	4b0f      	ldr	r3, [pc, #60]	; (8009b44 <GUI_TIMER_Create+0x94>)
 8009b08:	6003      	str	r3, [r0, #0]
 8009b0a:	f001 f851 	bl	800abb0 <GUI__RegisterExit>
 8009b0e:	4620      	mov	r0, r4
 8009b10:	f001 feb2 	bl	800b878 <GUI_ALLOC_LockH>
 8009b14:	4a0c      	ldr	r2, [pc, #48]	; (8009b48 <GUI_TIMER_Create+0x98>)
 8009b16:	9001      	str	r0, [sp, #4]
 8009b18:	6813      	ldr	r3, [r2, #0]
 8009b1a:	b913      	cbnz	r3, 8009b22 <GUI_TIMER_Create+0x72>
 8009b1c:	6014      	str	r4, [r2, #0]
 8009b1e:	6083      	str	r3, [r0, #8]
 8009b20:	e001      	b.n	8009b26 <GUI_TIMER_Create+0x76>
 8009b22:	6083      	str	r3, [r0, #8]
 8009b24:	6014      	str	r4, [r2, #0]
 8009b26:	a801      	add	r0, sp, #4
 8009b28:	f001 feb4 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009b2c:	4620      	mov	r0, r4
 8009b2e:	b003      	add	sp, #12
 8009b30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b34:	20002cfc 	.word	0x20002cfc
 8009b38:	080098f1 	.word	0x080098f1
 8009b3c:	20002b4c 	.word	0x20002b4c
 8009b40:	20002b40 	.word	0x20002b40
 8009b44:	080098d5 	.word	0x080098d5
 8009b48:	20002b3c 	.word	0x20002b3c

08009b4c <GUI_TIMER_Delete>:
 8009b4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009b4e:	4604      	mov	r4, r0
 8009b50:	b360      	cbz	r0, 8009bac <GUI_TIMER_Delete+0x60>
 8009b52:	4e17      	ldr	r6, [pc, #92]	; (8009bb0 <GUI_TIMER_Delete+0x64>)
 8009b54:	6835      	ldr	r5, [r6, #0]
 8009b56:	4285      	cmp	r5, r0
 8009b58:	d10b      	bne.n	8009b72 <GUI_TIMER_Delete+0x26>
 8009b5a:	f001 fe8d 	bl	800b878 <GUI_ALLOC_LockH>
 8009b5e:	ab02      	add	r3, sp, #8
 8009b60:	6882      	ldr	r2, [r0, #8]
 8009b62:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009b66:	6032      	str	r2, [r6, #0]
 8009b68:	4618      	mov	r0, r3
 8009b6a:	e017      	b.n	8009b9c <GUI_TIMER_Delete+0x50>
 8009b6c:	4668      	mov	r0, sp
 8009b6e:	f001 fe91 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009b72:	b1ad      	cbz	r5, 8009ba0 <GUI_TIMER_Delete+0x54>
 8009b74:	4628      	mov	r0, r5
 8009b76:	f001 fe7f 	bl	800b878 <GUI_ALLOC_LockH>
 8009b7a:	6885      	ldr	r5, [r0, #8]
 8009b7c:	ae02      	add	r6, sp, #8
 8009b7e:	42a5      	cmp	r5, r4
 8009b80:	f846 0d08 	str.w	r0, [r6, #-8]!
 8009b84:	d1f2      	bne.n	8009b6c <GUI_TIMER_Delete+0x20>
 8009b86:	4620      	mov	r0, r4
 8009b88:	f001 fe76 	bl	800b878 <GUI_ALLOC_LockH>
 8009b8c:	9b00      	ldr	r3, [sp, #0]
 8009b8e:	6882      	ldr	r2, [r0, #8]
 8009b90:	9001      	str	r0, [sp, #4]
 8009b92:	609a      	str	r2, [r3, #8]
 8009b94:	a801      	add	r0, sp, #4
 8009b96:	f001 fe7d 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009b9a:	4668      	mov	r0, sp
 8009b9c:	f001 fe7a 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009ba0:	4620      	mov	r0, r4
 8009ba2:	f7ff ff2b 	bl	80099fc <_Unlink>
 8009ba6:	4620      	mov	r0, r4
 8009ba8:	f001 fea0 	bl	800b8ec <GUI_ALLOC_Free>
 8009bac:	b002      	add	sp, #8
 8009bae:	bd70      	pop	{r4, r5, r6, pc}
 8009bb0:	20002b3c 	.word	0x20002b3c

08009bb4 <GUI_TIMER_SetPeriod>:
 8009bb4:	b513      	push	{r0, r1, r4, lr}
 8009bb6:	460c      	mov	r4, r1
 8009bb8:	b140      	cbz	r0, 8009bcc <GUI_TIMER_SetPeriod+0x18>
 8009bba:	f001 fe5d 	bl	800b878 <GUI_ALLOC_LockH>
 8009bbe:	ab02      	add	r3, sp, #8
 8009bc0:	6184      	str	r4, [r0, #24]
 8009bc2:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009bc6:	4618      	mov	r0, r3
 8009bc8:	f001 fe64 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009bcc:	b002      	add	sp, #8
 8009bce:	bd10      	pop	{r4, pc}

08009bd0 <GUI_TIMER_Restart>:
 8009bd0:	b513      	push	{r0, r1, r4, lr}
 8009bd2:	4604      	mov	r4, r0
 8009bd4:	b198      	cbz	r0, 8009bfe <GUI_TIMER_Restart+0x2e>
 8009bd6:	f001 fe4f 	bl	800b878 <GUI_ALLOC_LockH>
 8009bda:	9001      	str	r0, [sp, #4]
 8009bdc:	f000 f826 	bl	8009c2c <GUI_GetTime>
 8009be0:	ab02      	add	r3, sp, #8
 8009be2:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8009be6:	6991      	ldr	r1, [r2, #24]
 8009be8:	4408      	add	r0, r1
 8009bea:	6150      	str	r0, [r2, #20]
 8009bec:	4618      	mov	r0, r3
 8009bee:	f001 fe51 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009bf2:	4620      	mov	r0, r4
 8009bf4:	f7ff ff02 	bl	80099fc <_Unlink>
 8009bf8:	4620      	mov	r0, r4
 8009bfa:	f7ff feb1 	bl	8009960 <_Link>
 8009bfe:	b002      	add	sp, #8
 8009c00:	bd10      	pop	{r4, pc}

08009c02 <GUI_TIMER_GetFlag>:
 8009c02:	b513      	push	{r0, r1, r4, lr}
 8009c04:	460c      	mov	r4, r1
 8009c06:	b168      	cbz	r0, 8009c24 <GUI_TIMER_GetFlag+0x22>
 8009c08:	f001 fe36 	bl	800b878 <GUI_ALLOC_LockH>
 8009c0c:	ab02      	add	r3, sp, #8
 8009c0e:	8982      	ldrh	r2, [r0, #12]
 8009c10:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009c14:	4214      	tst	r4, r2
 8009c16:	4618      	mov	r0, r3
 8009c18:	bf0c      	ite	eq
 8009c1a:	2400      	moveq	r4, #0
 8009c1c:	2401      	movne	r4, #1
 8009c1e:	f001 fe39 	bl	800b894 <GUI_ALLOC_UnlockH>
 8009c22:	e000      	b.n	8009c26 <GUI_TIMER_GetFlag+0x24>
 8009c24:	2401      	movs	r4, #1
 8009c26:	4620      	mov	r0, r4
 8009c28:	b002      	add	sp, #8
 8009c2a:	bd10      	pop	{r4, pc}

08009c2c <GUI_GetTime>:
 8009c2c:	f7f6 bc66 	b.w	80004fc <GUI_X_GetTime>

08009c30 <GUI__AlphaPreserveTrans>:
 8009c30:	b510      	push	{r4, lr}
 8009c32:	4b07      	ldr	r3, [pc, #28]	; (8009c50 <GUI__AlphaPreserveTrans+0x20>)
 8009c34:	781c      	ldrb	r4, [r3, #0]
 8009c36:	b120      	cbz	r0, 8009c42 <GUI__AlphaPreserveTrans+0x12>
 8009c38:	2201      	movs	r2, #1
 8009c3a:	701a      	strb	r2, [r3, #0]
 8009c3c:	f04f 30ff 	mov.w	r0, #4294967295
 8009c40:	e002      	b.n	8009c48 <GUI__AlphaPreserveTrans+0x18>
 8009c42:	7018      	strb	r0, [r3, #0]
 8009c44:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8009c48:	f004 ffbe 	bl	800ebc8 <LCD_AA_SetAndMask>
 8009c4c:	4620      	mov	r0, r4
 8009c4e:	bd10      	pop	{r4, pc}
 8009c50:	20002d14 	.word	0x20002d14

08009c54 <GUI_SelectLayer>:
 8009c54:	b570      	push	{r4, r5, r6, lr}
 8009c56:	4d08      	ldr	r5, [pc, #32]	; (8009c78 <GUI_SelectLayer+0x24>)
 8009c58:	682b      	ldr	r3, [r5, #0]
 8009c5a:	2801      	cmp	r0, #1
 8009c5c:	4604      	mov	r4, r0
 8009c5e:	7c5e      	ldrb	r6, [r3, #17]
 8009c60:	d808      	bhi.n	8009c74 <GUI_SelectLayer+0x20>
 8009c62:	f000 fe4b 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8009c66:	b128      	cbz	r0, 8009c74 <GUI_SelectLayer+0x20>
 8009c68:	682b      	ldr	r3, [r5, #0]
 8009c6a:	745c      	strb	r4, [r3, #17]
 8009c6c:	f001 f998 	bl	800afa0 <GUI_SelectLCD>
 8009c70:	4b02      	ldr	r3, [pc, #8]	; (8009c7c <GUI_SelectLayer+0x28>)
 8009c72:	601c      	str	r4, [r3, #0]
 8009c74:	4630      	mov	r0, r6
 8009c76:	bd70      	pop	{r4, r5, r6, pc}
 8009c78:	200000b8 	.word	0x200000b8
 8009c7c:	20002ca4 	.word	0x20002ca4

08009c80 <GUI_StoreKey>:
 8009c80:	4b02      	ldr	r3, [pc, #8]	; (8009c8c <GUI_StoreKey+0xc>)
 8009c82:	681a      	ldr	r2, [r3, #0]
 8009c84:	b902      	cbnz	r2, 8009c88 <GUI_StoreKey+0x8>
 8009c86:	6018      	str	r0, [r3, #0]
 8009c88:	f7ff bdda 	b.w	8009840 <GUI_SignalEvent>
 8009c8c:	20002b50 	.word	0x20002b50

08009c90 <GUI_PollKeyMsg>:
 8009c90:	4a0a      	ldr	r2, [pc, #40]	; (8009cbc <GUI_PollKeyMsg+0x2c>)
 8009c92:	490b      	ldr	r1, [pc, #44]	; (8009cc0 <GUI_PollKeyMsg+0x30>)
 8009c94:	6813      	ldr	r3, [r2, #0]
 8009c96:	6809      	ldr	r1, [r1, #0]
 8009c98:	428b      	cmp	r3, r1
 8009c9a:	b510      	push	{r4, lr}
 8009c9c:	d00b      	beq.n	8009cb6 <GUI_PollKeyMsg+0x26>
 8009c9e:	4c09      	ldr	r4, [pc, #36]	; (8009cc4 <GUI_PollKeyMsg+0x34>)
 8009ca0:	42a3      	cmp	r3, r4
 8009ca2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8009ca6:	bf14      	ite	ne
 8009ca8:	3308      	addne	r3, #8
 8009caa:	3b50      	subeq	r3, #80	; 0x50
 8009cac:	6013      	str	r3, [r2, #0]
 8009cae:	f7fb f8d9 	bl	8004e64 <WM_OnKey>
 8009cb2:	2001      	movs	r0, #1
 8009cb4:	bd10      	pop	{r4, pc}
 8009cb6:	2000      	movs	r0, #0
 8009cb8:	bd10      	pop	{r4, pc}
 8009cba:	bf00      	nop
 8009cbc:	200000b4 	.word	0x200000b4
 8009cc0:	200000b0 	.word	0x200000b0
 8009cc4:	20002ba4 	.word	0x20002ba4

08009cc8 <_SetLineColor>:
 8009cc8:	4b1e      	ldr	r3, [pc, #120]	; (8009d44 <_SetLineColor+0x7c>)
 8009cca:	681b      	ldr	r3, [r3, #0]
 8009ccc:	7e9b      	ldrb	r3, [r3, #26]
 8009cce:	3b01      	subs	r3, #1
 8009cd0:	2b03      	cmp	r3, #3
 8009cd2:	d832      	bhi.n	8009d3a <_SetLineColor+0x72>
 8009cd4:	e8df f003 	tbb	[pc, r3]
 8009cd8:	221a0d02 	.word	0x221a0d02
 8009cdc:	4b1a      	ldr	r3, [pc, #104]	; (8009d48 <_SetLineColor+0x80>)
 8009cde:	3006      	adds	r0, #6
 8009ce0:	4003      	ands	r3, r0
 8009ce2:	2b00      	cmp	r3, #0
 8009ce4:	da03      	bge.n	8009cee <_SetLineColor+0x26>
 8009ce6:	3b01      	subs	r3, #1
 8009ce8:	f063 030f 	orn	r3, r3, #15
 8009cec:	3301      	adds	r3, #1
 8009cee:	2b0b      	cmp	r3, #11
 8009cf0:	e008      	b.n	8009d04 <_SetLineColor+0x3c>
 8009cf2:	4b16      	ldr	r3, [pc, #88]	; (8009d4c <_SetLineColor+0x84>)
 8009cf4:	4003      	ands	r3, r0
 8009cf6:	2b00      	cmp	r3, #0
 8009cf8:	da03      	bge.n	8009d02 <_SetLineColor+0x3a>
 8009cfa:	3b01      	subs	r3, #1
 8009cfc:	f063 0303 	orn	r3, r3, #3
 8009d00:	3301      	adds	r3, #1
 8009d02:	2b01      	cmp	r3, #1
 8009d04:	bfcc      	ite	gt
 8009d06:	2000      	movgt	r0, #0
 8009d08:	2001      	movle	r0, #1
 8009d0a:	4770      	bx	lr
 8009d0c:	2314      	movs	r3, #20
 8009d0e:	fb90 f2f3 	sdiv	r2, r0, r3
 8009d12:	fb03 0012 	mls	r0, r3, r2, r0
 8009d16:	280b      	cmp	r0, #11
 8009d18:	dc09      	bgt.n	8009d2e <_SetLineColor+0x66>
 8009d1a:	e010      	b.n	8009d3e <_SetLineColor+0x76>
 8009d1c:	2318      	movs	r3, #24
 8009d1e:	fb90 f2f3 	sdiv	r2, r0, r3
 8009d22:	fb03 0012 	mls	r0, r3, r2, r0
 8009d26:	280b      	cmp	r0, #11
 8009d28:	dd09      	ble.n	8009d3e <_SetLineColor+0x76>
 8009d2a:	f020 0004 	bic.w	r0, r0, #4
 8009d2e:	3810      	subs	r0, #16
 8009d30:	2801      	cmp	r0, #1
 8009d32:	bf8c      	ite	hi
 8009d34:	2000      	movhi	r0, #0
 8009d36:	2001      	movls	r0, #1
 8009d38:	4770      	bx	lr
 8009d3a:	2000      	movs	r0, #0
 8009d3c:	4770      	bx	lr
 8009d3e:	2001      	movs	r0, #1
 8009d40:	4770      	bx	lr
 8009d42:	bf00      	nop
 8009d44:	200000b8 	.word	0x200000b8
 8009d48:	8000000f 	.word	0x8000000f
 8009d4c:	80000003 	.word	0x80000003

08009d50 <GUI_sin>:
 8009d50:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8009d54:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8009d58:	bfc6      	itte	gt
 8009d5a:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 8009d5e:	2101      	movgt	r1, #1
 8009d60:	2100      	movle	r1, #0
 8009d62:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8009d66:	bfc8      	it	gt
 8009d68:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 8009d6c:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 8009d70:	b510      	push	{r4, lr}
 8009d72:	1182      	asrs	r2, r0, #6
 8009d74:	4c0b      	ldr	r4, [pc, #44]	; (8009da4 <GUI_sin+0x54>)
 8009d76:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8009d7a:	b29b      	uxth	r3, r3
 8009d7c:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 8009d80:	2b40      	cmp	r3, #64	; 0x40
 8009d82:	fb00 f003 	mul.w	r0, r0, r3
 8009d86:	d008      	beq.n	8009d9a <GUI_sin+0x4a>
 8009d88:	2a10      	cmp	r2, #16
 8009d8a:	d006      	beq.n	8009d9a <GUI_sin+0x4a>
 8009d8c:	3201      	adds	r2, #1
 8009d8e:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8009d92:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 8009d96:	fb03 0002 	mla	r0, r3, r2, r0
 8009d9a:	3020      	adds	r0, #32
 8009d9c:	0980      	lsrs	r0, r0, #6
 8009d9e:	b101      	cbz	r1, 8009da2 <GUI_sin+0x52>
 8009da0:	4240      	negs	r0, r0
 8009da2:	bd10      	pop	{r4, pc}
 8009da4:	080123f4 	.word	0x080123f4

08009da8 <GUI_cos>:
 8009da8:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8009dac:	f7ff bfd0 	b.w	8009d50 <GUI_sin>

08009db0 <GL_DrawLine1Ex>:
 8009db0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009db4:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8009db8:	1a17      	subs	r7, r2, r0
 8009dba:	1a5c      	subs	r4, r3, r1
 8009dbc:	ea54 0c07 	orrs.w	ip, r4, r7
 8009dc0:	4605      	mov	r5, r0
 8009dc2:	460e      	mov	r6, r1
 8009dc4:	f8d8 b000 	ldr.w	fp, [r8]
 8009dc8:	d104      	bne.n	8009dd4 <GL_DrawLine1Ex+0x24>
 8009dca:	b003      	add	sp, #12
 8009dcc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dd0:	f000 ba16 	b.w	800a200 <GL_DrawPoint>
 8009dd4:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 8009dd8:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 8009ddc:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8009de0:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8009de4:	4288      	cmp	r0, r1
 8009de6:	db04      	blt.n	8009df2 <GL_DrawLine1Ex+0x42>
 8009de8:	4621      	mov	r1, r4
 8009dea:	463c      	mov	r4, r7
 8009dec:	460f      	mov	r7, r1
 8009dee:	2100      	movs	r1, #0
 8009df0:	e006      	b.n	8009e00 <GL_DrawLine1Ex+0x50>
 8009df2:	4611      	mov	r1, r2
 8009df4:	461a      	mov	r2, r3
 8009df6:	460b      	mov	r3, r1
 8009df8:	4629      	mov	r1, r5
 8009dfa:	4635      	mov	r5, r6
 8009dfc:	460e      	mov	r6, r1
 8009dfe:	2101      	movs	r1, #1
 8009e00:	9100      	str	r1, [sp, #0]
 8009e02:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8009e06:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8009e0a:	428c      	cmp	r4, r1
 8009e0c:	d008      	beq.n	8009e20 <GL_DrawLine1Ex+0x70>
 8009e0e:	461e      	mov	r6, r3
 8009e10:	462b      	mov	r3, r5
 8009e12:	4264      	negs	r4, r4
 8009e14:	4615      	mov	r5, r2
 8009e16:	427f      	negs	r7, r7
 8009e18:	461a      	mov	r2, r3
 8009e1a:	f04f 3aff 	mov.w	sl, #4294967295
 8009e1e:	e001      	b.n	8009e24 <GL_DrawLine1Ex+0x74>
 8009e20:	f04f 0a01 	mov.w	sl, #1
 8009e24:	2f00      	cmp	r7, #0
 8009e26:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8009f70 <GL_DrawLine1Ex+0x1c0>
 8009e2a:	d13e      	bne.n	8009eaa <GL_DrawLine1Ex+0xfa>
 8009e2c:	9b00      	ldr	r3, [sp, #0]
 8009e2e:	b1d3      	cbz	r3, 8009e66 <GL_DrawLine1Ex+0xb6>
 8009e30:	f8d9 3000 	ldr.w	r3, [r9]
 8009e34:	7e9b      	ldrb	r3, [r3, #26]
 8009e36:	b98b      	cbnz	r3, 8009e5c <GL_DrawLine1Ex+0xac>
 8009e38:	4630      	mov	r0, r6
 8009e3a:	4629      	mov	r1, r5
 8009e3c:	b003      	add	sp, #12
 8009e3e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e42:	f7fe be9f 	b.w	8008b84 <LCD_DrawVLine>
 8009e46:	f7ff ff3f 	bl	8009cc8 <_SetLineColor>
 8009e4a:	b930      	cbnz	r0, 8009e5a <GL_DrawLine1Ex+0xaa>
 8009e4c:	f8d9 3000 	ldr.w	r3, [r9]
 8009e50:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e52:	4630      	mov	r0, r6
 8009e54:	685b      	ldr	r3, [r3, #4]
 8009e56:	1979      	adds	r1, r7, r5
 8009e58:	4798      	blx	r3
 8009e5a:	3701      	adds	r7, #1
 8009e5c:	42a7      	cmp	r7, r4
 8009e5e:	eb07 000b 	add.w	r0, r7, fp
 8009e62:	ddf0      	ble.n	8009e46 <GL_DrawLine1Ex+0x96>
 8009e64:	e01d      	b.n	8009ea2 <GL_DrawLine1Ex+0xf2>
 8009e66:	f8d9 3000 	ldr.w	r3, [r9]
 8009e6a:	7e99      	ldrb	r1, [r3, #26]
 8009e6c:	b111      	cbz	r1, 8009e74 <GL_DrawLine1Ex+0xc4>
 8009e6e:	f8dd a000 	ldr.w	sl, [sp]
 8009e72:	e012      	b.n	8009e9a <GL_DrawLine1Ex+0xea>
 8009e74:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e76:	4628      	mov	r0, r5
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	4631      	mov	r1, r6
 8009e7c:	4798      	blx	r3
 8009e7e:	e074      	b.n	8009f6a <GL_DrawLine1Ex+0x1ba>
 8009e80:	f7ff ff22 	bl	8009cc8 <_SetLineColor>
 8009e84:	b938      	cbnz	r0, 8009e96 <GL_DrawLine1Ex+0xe6>
 8009e86:	f8d9 3000 	ldr.w	r3, [r9]
 8009e8a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e8c:	eb0a 0005 	add.w	r0, sl, r5
 8009e90:	685b      	ldr	r3, [r3, #4]
 8009e92:	4631      	mov	r1, r6
 8009e94:	4798      	blx	r3
 8009e96:	f10a 0a01 	add.w	sl, sl, #1
 8009e9a:	45a2      	cmp	sl, r4
 8009e9c:	eb0a 000b 	add.w	r0, sl, fp
 8009ea0:	ddee      	ble.n	8009e80 <GL_DrawLine1Ex+0xd0>
 8009ea2:	3801      	subs	r0, #1
 8009ea4:	f8c8 0000 	str.w	r0, [r8]
 8009ea8:	e05f      	b.n	8009f6a <GL_DrawLine1Ex+0x1ba>
 8009eaa:	f8d9 1000 	ldr.w	r1, [r9]
 8009eae:	f04f 0202 	mov.w	r2, #2
 8009eb2:	7e89      	ldrb	r1, [r1, #26]
 8009eb4:	fb94 f2f2 	sdiv	r2, r4, r2
 8009eb8:	bfb8      	it	lt
 8009eba:	4252      	neglt	r2, r2
 8009ebc:	b9d9      	cbnz	r1, 8009ef6 <GL_DrawLine1Ex+0x146>
 8009ebe:	4693      	mov	fp, r2
 8009ec0:	46a8      	mov	r8, r5
 8009ec2:	ebc5 0308 	rsb	r3, r5, r8
 8009ec6:	42a3      	cmp	r3, r4
 8009ec8:	dc4f      	bgt.n	8009f6a <GL_DrawLine1Ex+0x1ba>
 8009eca:	9b00      	ldr	r3, [sp, #0]
 8009ecc:	fb9b f1f4 	sdiv	r1, fp, r4
 8009ed0:	4431      	add	r1, r6
 8009ed2:	b92b      	cbnz	r3, 8009ee0 <GL_DrawLine1Ex+0x130>
 8009ed4:	f8d9 3000 	ldr.w	r3, [r9]
 8009ed8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009eda:	4640      	mov	r0, r8
 8009edc:	685b      	ldr	r3, [r3, #4]
 8009ede:	e005      	b.n	8009eec <GL_DrawLine1Ex+0x13c>
 8009ee0:	f8d9 3000 	ldr.w	r3, [r9]
 8009ee4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009ee6:	685b      	ldr	r3, [r3, #4]
 8009ee8:	4608      	mov	r0, r1
 8009eea:	4641      	mov	r1, r8
 8009eec:	4798      	blx	r3
 8009eee:	f108 0801 	add.w	r8, r8, #1
 8009ef2:	44bb      	add	fp, r7
 8009ef4:	e7e5      	b.n	8009ec2 <GL_DrawLine1Ex+0x112>
 8009ef6:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009efa:	bf04      	itt	eq
 8009efc:	eb04 010b 	addeq.w	r1, r4, fp
 8009f00:	f8c8 1000 	streq.w	r1, [r8]
 8009f04:	9201      	str	r2, [sp, #4]
 8009f06:	46ab      	mov	fp, r5
 8009f08:	ebc5 010b 	rsb	r1, r5, fp
 8009f0c:	42a1      	cmp	r1, r4
 8009f0e:	f8d8 0000 	ldr.w	r0, [r8]
 8009f12:	dc1e      	bgt.n	8009f52 <GL_DrawLine1Ex+0x1a2>
 8009f14:	4450      	add	r0, sl
 8009f16:	f8c8 0000 	str.w	r0, [r8]
 8009f1a:	f7ff fed5 	bl	8009cc8 <_SetLineColor>
 8009f1e:	b980      	cbnz	r0, 8009f42 <GL_DrawLine1Ex+0x192>
 8009f20:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009f24:	f8d9 0000 	ldr.w	r0, [r9]
 8009f28:	9b00      	ldr	r3, [sp, #0]
 8009f2a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8009f2c:	fb9c f1f4 	sdiv	r1, ip, r4
 8009f30:	4431      	add	r1, r6
 8009f32:	b913      	cbnz	r3, 8009f3a <GL_DrawLine1Ex+0x18a>
 8009f34:	6843      	ldr	r3, [r0, #4]
 8009f36:	4658      	mov	r0, fp
 8009f38:	e002      	b.n	8009f40 <GL_DrawLine1Ex+0x190>
 8009f3a:	6843      	ldr	r3, [r0, #4]
 8009f3c:	4608      	mov	r0, r1
 8009f3e:	4659      	mov	r1, fp
 8009f40:	4798      	blx	r3
 8009f42:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009f46:	44bc      	add	ip, r7
 8009f48:	f10b 0b01 	add.w	fp, fp, #1
 8009f4c:	f8cd c004 	str.w	ip, [sp, #4]
 8009f50:	e7da      	b.n	8009f08 <GL_DrawLine1Ex+0x158>
 8009f52:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009f56:	bf04      	itt	eq
 8009f58:	1824      	addeq	r4, r4, r0
 8009f5a:	f8c8 4000 	streq.w	r4, [r8]
 8009f5e:	f8d8 2000 	ldr.w	r2, [r8]
 8009f62:	ebca 0302 	rsb	r3, sl, r2
 8009f66:	f8c8 3000 	str.w	r3, [r8]
 8009f6a:	b003      	add	sp, #12
 8009f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f70:	200000b8 	.word	0x200000b8

08009f74 <GL_DrawLineEx>:
 8009f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f78:	4d67      	ldr	r5, [pc, #412]	; (800a118 <GL_DrawLineEx+0x1a4>)
 8009f7a:	682c      	ldr	r4, [r5, #0]
 8009f7c:	f894 b018 	ldrb.w	fp, [r4, #24]
 8009f80:	f1bb 0f01 	cmp.w	fp, #1
 8009f84:	b087      	sub	sp, #28
 8009f86:	4681      	mov	r9, r0
 8009f88:	4688      	mov	r8, r1
 8009f8a:	4617      	mov	r7, r2
 8009f8c:	461e      	mov	r6, r3
 8009f8e:	46aa      	mov	sl, r5
 8009f90:	d104      	bne.n	8009f9c <GL_DrawLineEx+0x28>
 8009f92:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009f94:	9400      	str	r4, [sp, #0]
 8009f96:	f7ff ff0b 	bl	8009db0 <GL_DrawLine1Ex>
 8009f9a:	e0ba      	b.n	800a112 <GL_DrawLineEx+0x19e>
 8009f9c:	1a84      	subs	r4, r0, r2
 8009f9e:	1acd      	subs	r5, r1, r3
 8009fa0:	ea54 0305 	orrs.w	r3, r4, r5
 8009fa4:	f000 80b5 	beq.w	800a112 <GL_DrawLineEx+0x19e>
 8009fa8:	2c00      	cmp	r4, #0
 8009faa:	bfba      	itte	lt
 8009fac:	4264      	neglt	r4, r4
 8009fae:	2301      	movlt	r3, #1
 8009fb0:	2300      	movge	r3, #0
 8009fb2:	2d00      	cmp	r5, #0
 8009fb4:	bfbc      	itt	lt
 8009fb6:	426d      	neglt	r5, r5
 8009fb8:	f043 0302 	orrlt.w	r3, r3, #2
 8009fbc:	42a5      	cmp	r5, r4
 8009fbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009fc2:	dd04      	ble.n	8009fce <GL_DrawLineEx+0x5a>
 8009fc4:	4622      	mov	r2, r4
 8009fc6:	f043 0304 	orr.w	r3, r3, #4
 8009fca:	462c      	mov	r4, r5
 8009fcc:	4615      	mov	r5, r2
 8009fce:	2202      	movs	r2, #2
 8009fd0:	fb94 f2f2 	sdiv	r2, r4, r2
 8009fd4:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 8009fd8:	fb95 f4f4 	sdiv	r4, r5, r4
 8009fdc:	11a1      	asrs	r1, r4, #6
 8009fde:	4a4f      	ldr	r2, [pc, #316]	; (800a11c <GL_DrawLineEx+0x1a8>)
 8009fe0:	f3c4 0483 	ubfx	r4, r4, #2, #4
 8009fe4:	f1c4 0510 	rsb	r5, r4, #16
 8009fe8:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 8009fec:	2d10      	cmp	r5, #16
 8009fee:	fb05 f000 	mul.w	r0, r5, r0
 8009ff2:	d004      	beq.n	8009ffe <GL_DrawLineEx+0x8a>
 8009ff4:	3101      	adds	r1, #1
 8009ff6:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 8009ffa:	fb04 0002 	mla	r0, r4, r2, r0
 8009ffe:	2210      	movs	r2, #16
 800a000:	3008      	adds	r0, #8
 800a002:	fb90 f0f2 	sdiv	r0, r0, r2
 800a006:	0759      	lsls	r1, r3, #29
 800a008:	bf48      	it	mi
 800a00a:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 800a00e:	07da      	lsls	r2, r3, #31
 800a010:	bf48      	it	mi
 800a012:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 800a016:	079b      	lsls	r3, r3, #30
 800a018:	bf48      	it	mi
 800a01a:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 800a01e:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 800a022:	4628      	mov	r0, r5
 800a024:	f7ff fec0 	bl	8009da8 <GUI_cos>
 800a028:	fb00 f40b 	mul.w	r4, r0, fp
 800a02c:	4628      	mov	r0, r5
 800a02e:	f7ff fe8f 	bl	8009d50 <GUI_sin>
 800a032:	2c00      	cmp	r4, #0
 800a034:	fb00 f00b 	mul.w	r0, r0, fp
 800a038:	da04      	bge.n	800a044 <GL_DrawLineEx+0xd0>
 800a03a:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 800a03e:	129b      	asrs	r3, r3, #10
 800a040:	425b      	negs	r3, r3
 800a042:	e002      	b.n	800a04a <GL_DrawLineEx+0xd6>
 800a044:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800a048:	129b      	asrs	r3, r3, #10
 800a04a:	2800      	cmp	r0, #0
 800a04c:	da06      	bge.n	800a05c <GL_DrawLineEx+0xe8>
 800a04e:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 800a052:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800a056:	f1cb 0b00 	rsb	fp, fp, #0
 800a05a:	e003      	b.n	800a064 <GL_DrawLineEx+0xf0>
 800a05c:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 800a060:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800a064:	2b00      	cmp	r3, #0
 800a066:	dd03      	ble.n	800a070 <GL_DrawLineEx+0xfc>
 800a068:	1c58      	adds	r0, r3, #1
 800a06a:	1040      	asrs	r0, r0, #1
 800a06c:	105b      	asrs	r3, r3, #1
 800a06e:	e005      	b.n	800a07c <GL_DrawLineEx+0x108>
 800a070:	2202      	movs	r2, #2
 800a072:	fb93 f0f2 	sdiv	r0, r3, r2
 800a076:	3b01      	subs	r3, #1
 800a078:	fb93 f3f2 	sdiv	r3, r3, r2
 800a07c:	f1bb 0f00 	cmp.w	fp, #0
 800a080:	dd05      	ble.n	800a08e <GL_DrawLineEx+0x11a>
 800a082:	f10b 0201 	add.w	r2, fp, #1
 800a086:	1052      	asrs	r2, r2, #1
 800a088:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 800a08c:	e006      	b.n	800a09c <GL_DrawLineEx+0x128>
 800a08e:	2102      	movs	r1, #2
 800a090:	fb9b f2f1 	sdiv	r2, fp, r1
 800a094:	f10b 3bff 	add.w	fp, fp, #4294967295
 800a098:	fb9b fbf1 	sdiv	fp, fp, r1
 800a09c:	b280      	uxth	r0, r0
 800a09e:	fa1f f489 	uxth.w	r4, r9
 800a0a2:	1901      	adds	r1, r0, r4
 800a0a4:	b292      	uxth	r2, r2
 800a0a6:	f8ad 1008 	strh.w	r1, [sp, #8]
 800a0aa:	fa1f fb8b 	uxth.w	fp, fp
 800a0ae:	fa1f f188 	uxth.w	r1, r8
 800a0b2:	1855      	adds	r5, r2, r1
 800a0b4:	ebcb 0101 	rsb	r1, fp, r1
 800a0b8:	b29b      	uxth	r3, r3
 800a0ba:	f8ad 100e 	strh.w	r1, [sp, #14]
 800a0be:	b2b9      	uxth	r1, r7
 800a0c0:	1ae4      	subs	r4, r4, r3
 800a0c2:	1acb      	subs	r3, r1, r3
 800a0c4:	f8ad 3010 	strh.w	r3, [sp, #16]
 800a0c8:	b2b3      	uxth	r3, r6
 800a0ca:	4401      	add	r1, r0
 800a0cc:	ebcb 0b03 	rsb	fp, fp, r3
 800a0d0:	4413      	add	r3, r2
 800a0d2:	2200      	movs	r2, #0
 800a0d4:	f8ad 1014 	strh.w	r1, [sp, #20]
 800a0d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a0dc:	a802      	add	r0, sp, #8
 800a0de:	4613      	mov	r3, r2
 800a0e0:	2104      	movs	r1, #4
 800a0e2:	f8ad 500a 	strh.w	r5, [sp, #10]
 800a0e6:	f8ad 400c 	strh.w	r4, [sp, #12]
 800a0ea:	f8ad b012 	strh.w	fp, [sp, #18]
 800a0ee:	f005 f97f 	bl	800f3f0 <GL_FillPolygon>
 800a0f2:	f8da 3000 	ldr.w	r3, [sl]
 800a0f6:	7e5b      	ldrb	r3, [r3, #25]
 800a0f8:	b91b      	cbnz	r3, 800a102 <GL_DrawLineEx+0x18e>
 800a0fa:	4648      	mov	r0, r9
 800a0fc:	4641      	mov	r1, r8
 800a0fe:	f000 f87f 	bl	800a200 <GL_DrawPoint>
 800a102:	f8da 3000 	ldr.w	r3, [sl]
 800a106:	7e5b      	ldrb	r3, [r3, #25]
 800a108:	b91b      	cbnz	r3, 800a112 <GL_DrawLineEx+0x19e>
 800a10a:	4638      	mov	r0, r7
 800a10c:	4631      	mov	r1, r6
 800a10e:	f000 f877 	bl	800a200 <GL_DrawPoint>
 800a112:	b007      	add	sp, #28
 800a114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a118:	200000b8 	.word	0x200000b8
 800a11c:	08012416 	.word	0x08012416

0800a120 <GL_DrawLine>:
 800a120:	b530      	push	{r4, r5, lr}
 800a122:	b085      	sub	sp, #20
 800a124:	ac04      	add	r4, sp, #16
 800a126:	2500      	movs	r5, #0
 800a128:	f844 5d04 	str.w	r5, [r4, #-4]!
 800a12c:	9400      	str	r4, [sp, #0]
 800a12e:	f7ff ff21 	bl	8009f74 <GL_DrawLineEx>
 800a132:	b005      	add	sp, #20
 800a134:	bd30      	pop	{r4, r5, pc}
	...

0800a138 <GUI_DrawLine>:
 800a138:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a13c:	461e      	mov	r6, r3
 800a13e:	4b0c      	ldr	r3, [pc, #48]	; (800a170 <GUI_DrawLine+0x38>)
 800a140:	681c      	ldr	r4, [r3, #0]
 800a142:	4681      	mov	r9, r0
 800a144:	2000      	movs	r0, #0
 800a146:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800a148:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800a14a:	4688      	mov	r8, r1
 800a14c:	4617      	mov	r7, r2
 800a14e:	f7fb ffe3 	bl	8006118 <WM__InitIVRSearch>
 800a152:	b150      	cbz	r0, 800a16a <GUI_DrawLine+0x32>
 800a154:	eb09 0005 	add.w	r0, r9, r5
 800a158:	eb08 0104 	add.w	r1, r8, r4
 800a15c:	197a      	adds	r2, r7, r5
 800a15e:	1933      	adds	r3, r6, r4
 800a160:	f7ff ffde 	bl	800a120 <GL_DrawLine>
 800a164:	f7fb ff16 	bl	8005f94 <WM__GetNextIVR>
 800a168:	e7f3      	b.n	800a152 <GUI_DrawLine+0x1a>
 800a16a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a16e:	bf00      	nop
 800a170:	200000b8 	.word	0x200000b8

0800a174 <GUI_DrawHLine>:
 800a174:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a176:	4f10      	ldr	r7, [pc, #64]	; (800a1b8 <GUI_DrawHLine+0x44>)
 800a178:	683b      	ldr	r3, [r7, #0]
 800a17a:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800a17c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800a17e:	4405      	add	r5, r0
 800a180:	190e      	adds	r6, r1, r4
 800a182:	b2ab      	uxth	r3, r5
 800a184:	4414      	add	r4, r2
 800a186:	4668      	mov	r0, sp
 800a188:	f8ad 6000 	strh.w	r6, [sp]
 800a18c:	f8ad 4004 	strh.w	r4, [sp, #4]
 800a190:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a194:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a198:	f7fb ffbe 	bl	8006118 <WM__InitIVRSearch>
 800a19c:	b148      	cbz	r0, 800a1b2 <GUI_DrawHLine+0x3e>
 800a19e:	683b      	ldr	r3, [r7, #0]
 800a1a0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a1a2:	4630      	mov	r0, r6
 800a1a4:	681b      	ldr	r3, [r3, #0]
 800a1a6:	4629      	mov	r1, r5
 800a1a8:	4622      	mov	r2, r4
 800a1aa:	4798      	blx	r3
 800a1ac:	f7fb fef2 	bl	8005f94 <WM__GetNextIVR>
 800a1b0:	e7f4      	b.n	800a19c <GUI_DrawHLine+0x28>
 800a1b2:	b003      	add	sp, #12
 800a1b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1b6:	bf00      	nop
 800a1b8:	200000b8 	.word	0x200000b8

0800a1bc <GUI_DrawPixel>:
 800a1bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a1be:	4e0f      	ldr	r6, [pc, #60]	; (800a1fc <GUI_DrawPixel+0x40>)
 800a1c0:	6833      	ldr	r3, [r6, #0]
 800a1c2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800a1c4:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800a1c6:	4405      	add	r5, r0
 800a1c8:	b2ab      	uxth	r3, r5
 800a1ca:	440c      	add	r4, r1
 800a1cc:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a1d0:	f8ad 3000 	strh.w	r3, [sp]
 800a1d4:	4668      	mov	r0, sp
 800a1d6:	b2a3      	uxth	r3, r4
 800a1d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a1dc:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a1e0:	f7fb ff9a 	bl	8006118 <WM__InitIVRSearch>
 800a1e4:	b140      	cbz	r0, 800a1f8 <GUI_DrawPixel+0x3c>
 800a1e6:	6833      	ldr	r3, [r6, #0]
 800a1e8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a1ea:	4628      	mov	r0, r5
 800a1ec:	685b      	ldr	r3, [r3, #4]
 800a1ee:	4621      	mov	r1, r4
 800a1f0:	4798      	blx	r3
 800a1f2:	f7fb fecf 	bl	8005f94 <WM__GetNextIVR>
 800a1f6:	e7f5      	b.n	800a1e4 <GUI_DrawPixel+0x28>
 800a1f8:	b002      	add	sp, #8
 800a1fa:	bd70      	pop	{r4, r5, r6, pc}
 800a1fc:	200000b8 	.word	0x200000b8

0800a200 <GL_DrawPoint>:
 800a200:	b508      	push	{r3, lr}
 800a202:	4b08      	ldr	r3, [pc, #32]	; (800a224 <GL_DrawPoint+0x24>)
 800a204:	681b      	ldr	r3, [r3, #0]
 800a206:	7e1a      	ldrb	r2, [r3, #24]
 800a208:	2a01      	cmp	r2, #1
 800a20a:	d103      	bne.n	800a214 <GL_DrawPoint+0x14>
 800a20c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a20e:	685b      	ldr	r3, [r3, #4]
 800a210:	4798      	blx	r3
 800a212:	bd08      	pop	{r3, pc}
 800a214:	2302      	movs	r3, #2
 800a216:	3a01      	subs	r2, #1
 800a218:	fb92 f2f3 	sdiv	r2, r2, r3
 800a21c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a220:	f000 bf32 	b.w	800b088 <GL_FillCircle>
 800a224:	200000b8 	.word	0x200000b8

0800a228 <GUI_DrawVLine>:
 800a228:	4b0f      	ldr	r3, [pc, #60]	; (800a268 <GUI_DrawVLine+0x40>)
 800a22a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a22c:	681b      	ldr	r3, [r3, #0]
 800a22e:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800a230:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800a232:	4406      	add	r6, r0
 800a234:	190d      	adds	r5, r1, r4
 800a236:	b2b3      	uxth	r3, r6
 800a238:	4414      	add	r4, r2
 800a23a:	4668      	mov	r0, sp
 800a23c:	f8ad 3000 	strh.w	r3, [sp]
 800a240:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a244:	f8ad 5002 	strh.w	r5, [sp, #2]
 800a248:	f8ad 4006 	strh.w	r4, [sp, #6]
 800a24c:	f7fb ff64 	bl	8006118 <WM__InitIVRSearch>
 800a250:	b138      	cbz	r0, 800a262 <GUI_DrawVLine+0x3a>
 800a252:	4630      	mov	r0, r6
 800a254:	4629      	mov	r1, r5
 800a256:	4622      	mov	r2, r4
 800a258:	f7fe fc94 	bl	8008b84 <LCD_DrawVLine>
 800a25c:	f7fb fe9a 	bl	8005f94 <WM__GetNextIVR>
 800a260:	e7f6      	b.n	800a250 <GUI_DrawVLine+0x28>
 800a262:	b002      	add	sp, #8
 800a264:	bd70      	pop	{r4, r5, r6, pc}
 800a266:	bf00      	nop
 800a268:	200000b8 	.word	0x200000b8

0800a26c <GUI_FillRect>:
 800a26c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a26e:	4c0f      	ldr	r4, [pc, #60]	; (800a2ac <GUI_FillRect+0x40>)
 800a270:	6824      	ldr	r4, [r4, #0]
 800a272:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800a274:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800a276:	1947      	adds	r7, r0, r5
 800a278:	190e      	adds	r6, r1, r4
 800a27a:	4415      	add	r5, r2
 800a27c:	441c      	add	r4, r3
 800a27e:	4668      	mov	r0, sp
 800a280:	f8ad 7000 	strh.w	r7, [sp]
 800a284:	f8ad 5004 	strh.w	r5, [sp, #4]
 800a288:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a28c:	f8ad 4006 	strh.w	r4, [sp, #6]
 800a290:	f7fb ff42 	bl	8006118 <WM__InitIVRSearch>
 800a294:	b140      	cbz	r0, 800a2a8 <GUI_FillRect+0x3c>
 800a296:	4638      	mov	r0, r7
 800a298:	4631      	mov	r1, r6
 800a29a:	462a      	mov	r2, r5
 800a29c:	4623      	mov	r3, r4
 800a29e:	f7fe fc97 	bl	8008bd0 <LCD_FillRect>
 800a2a2:	f7fb fe77 	bl	8005f94 <WM__GetNextIVR>
 800a2a6:	e7f5      	b.n	800a294 <GUI_FillRect+0x28>
 800a2a8:	b003      	add	sp, #12
 800a2aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2ac:	200000b8 	.word	0x200000b8

0800a2b0 <GUI_FillRectEx>:
 800a2b0:	4603      	mov	r3, r0
 800a2b2:	f9b0 0000 	ldrsh.w	r0, [r0]
 800a2b6:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 800a2ba:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800a2be:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800a2c2:	f7ff bfd3 	b.w	800a26c <GUI_FillRect>
	...

0800a2c8 <GUI_DrawGraphEx>:
 800a2c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2cc:	4698      	mov	r8, r3
 800a2ce:	4b81      	ldr	r3, [pc, #516]	; (800a4d4 <GUI_DrawGraphEx+0x20c>)
 800a2d0:	b08b      	sub	sp, #44	; 0x2c
 800a2d2:	468a      	mov	sl, r1
 800a2d4:	6819      	ldr	r1, [r3, #0]
 800a2d6:	9006      	str	r0, [sp, #24]
 800a2d8:	2000      	movs	r0, #0
 800a2da:	4691      	mov	r9, r2
 800a2dc:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800a2de:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800a2e0:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 800a2e2:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 800a2e4:	f7fb ff18 	bl	8006118 <WM__InitIVRSearch>
 800a2e8:	2800      	cmp	r0, #0
 800a2ea:	f000 80ef 	beq.w	800a4cc <GUI_DrawGraphEx+0x204>
 800a2ee:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 800a2f2:	9806      	ldr	r0, [sp, #24]
 800a2f4:	3b01      	subs	r3, #1
 800a2f6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a2fa:	9307      	str	r3, [sp, #28]
 800a2fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a2fe:	2b00      	cmp	r3, #0
 800a300:	bf14      	ite	ne
 800a302:	f06f 0301 	mvnne.w	r3, #1
 800a306:	2302      	moveq	r3, #2
 800a308:	44a9      	add	r9, r5
 800a30a:	4444      	add	r4, r8
 800a30c:	9309      	str	r3, [sp, #36]	; 0x24
 800a30e:	b927      	cbnz	r7, 800a31a <GUI_DrawGraphEx+0x52>
 800a310:	f7fb fe40 	bl	8005f94 <WM__GetNextIVR>
 800a314:	2800      	cmp	r0, #0
 800a316:	d1fa      	bne.n	800a30e <GUI_DrawGraphEx+0x46>
 800a318:	e0d8      	b.n	800a4cc <GUI_DrawGraphEx+0x204>
 800a31a:	2e00      	cmp	r6, #0
 800a31c:	d0f8      	beq.n	800a310 <GUI_DrawGraphEx+0x48>
 800a31e:	f1ba 0f00 	cmp.w	sl, #0
 800a322:	ddf5      	ble.n	800a310 <GUI_DrawGraphEx+0x48>
 800a324:	1c7b      	adds	r3, r7, #1
 800a326:	d104      	bne.n	800a332 <GUI_DrawGraphEx+0x6a>
 800a328:	2e01      	cmp	r6, #1
 800a32a:	bf14      	ite	ne
 800a32c:	2302      	movne	r3, #2
 800a32e:	2301      	moveq	r3, #1
 800a330:	e00a      	b.n	800a348 <GUI_DrawGraphEx+0x80>
 800a332:	2f01      	cmp	r7, #1
 800a334:	d104      	bne.n	800a340 <GUI_DrawGraphEx+0x78>
 800a336:	2e01      	cmp	r6, #1
 800a338:	bf14      	ite	ne
 800a33a:	2303      	movne	r3, #3
 800a33c:	2300      	moveq	r3, #0
 800a33e:	e003      	b.n	800a348 <GUI_DrawGraphEx+0x80>
 800a340:	2e01      	cmp	r6, #1
 800a342:	bf14      	ite	ne
 800a344:	2305      	movne	r3, #5
 800a346:	2304      	moveq	r3, #4
 800a348:	9305      	str	r3, [sp, #20]
 800a34a:	4b62      	ldr	r3, [pc, #392]	; (800a4d4 <GUI_DrawGraphEx+0x20c>)
 800a34c:	681b      	ldr	r3, [r3, #0]
 800a34e:	695b      	ldr	r3, [r3, #20]
 800a350:	b1eb      	cbz	r3, 800a38e <GUI_DrawGraphEx+0xc6>
 800a352:	f9b3 8000 	ldrsh.w	r8, [r3]
 800a356:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 800a35a:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800a35e:	f9b3 b006 	ldrsh.w	fp, [r3, #6]
 800a362:	9004      	str	r0, [sp, #16]
 800a364:	f108 38ff 	add.w	r8, r8, #4294967295
 800a368:	45c1      	cmp	r9, r8
 800a36a:	eb09 030a 	add.w	r3, r9, sl
 800a36e:	bfb8      	it	lt
 800a370:	ebc9 0808 	rsblt	r8, r9, r8
 800a374:	f103 33ff 	add.w	r3, r3, #4294967295
 800a378:	bfb4      	ite	lt
 800a37a:	ea28 78e8 	biclt.w	r8, r8, r8, asr #31
 800a37e:	f04f 0800 	movge.w	r8, #0
 800a382:	4293      	cmp	r3, r2
 800a384:	dd0a      	ble.n	800a39c <GUI_DrawGraphEx+0xd4>
 800a386:	ebc9 0202 	rsb	r2, r9, r2
 800a38a:	3201      	adds	r2, #1
 800a38c:	e007      	b.n	800a39e <GUI_DrawGraphEx+0xd6>
 800a38e:	f04f 3bff 	mov.w	fp, #4294967295
 800a392:	4652      	mov	r2, sl
 800a394:	f8cd b010 	str.w	fp, [sp, #16]
 800a398:	4698      	mov	r8, r3
 800a39a:	e000      	b.n	800a39e <GUI_DrawGraphEx+0xd6>
 800a39c:	4652      	mov	r2, sl
 800a39e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a3a0:	b91b      	cbnz	r3, 800a3aa <GUI_DrawGraphEx+0xe2>
 800a3a2:	9b06      	ldr	r3, [sp, #24]
 800a3a4:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 800a3a8:	e000      	b.n	800a3ac <GUI_DrawGraphEx+0xe4>
 800a3aa:	9b07      	ldr	r3, [sp, #28]
 800a3ac:	4590      	cmp	r8, r2
 800a3ae:	9303      	str	r3, [sp, #12]
 800a3b0:	daae      	bge.n	800a310 <GUI_DrawGraphEx+0x48>
 800a3b2:	444a      	add	r2, r9
 800a3b4:	9208      	str	r2, [sp, #32]
 800a3b6:	2200      	movs	r2, #0
 800a3b8:	44c8      	add	r8, r9
 800a3ba:	2301      	movs	r3, #1
 800a3bc:	9202      	str	r2, [sp, #8]
 800a3be:	9803      	ldr	r0, [sp, #12]
 800a3c0:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a3c2:	8805      	ldrh	r5, [r0, #0]
 800a3c4:	4408      	add	r0, r1
 800a3c6:	b22d      	sxth	r5, r5
 800a3c8:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800a3cc:	428d      	cmp	r5, r1
 800a3ce:	9003      	str	r0, [sp, #12]
 800a3d0:	d10d      	bne.n	800a3ee <GUI_DrawGraphEx+0x126>
 800a3d2:	9802      	ldr	r0, [sp, #8]
 800a3d4:	2800      	cmp	r0, #0
 800a3d6:	d16f      	bne.n	800a4b8 <GUI_DrawGraphEx+0x1f0>
 800a3d8:	2b00      	cmp	r3, #0
 800a3da:	d16f      	bne.n	800a4bc <GUI_DrawGraphEx+0x1f4>
 800a3dc:	4611      	mov	r1, r2
 800a3de:	f108 30ff 	add.w	r0, r8, #4294967295
 800a3e2:	9201      	str	r2, [sp, #4]
 800a3e4:	f7fe fb7a 	bl	8008adc <LCD_DrawPixel>
 800a3e8:	2301      	movs	r3, #1
 800a3ea:	9a01      	ldr	r2, [sp, #4]
 800a3ec:	e067      	b.n	800a4be <GUI_DrawGraphEx+0x1f6>
 800a3ee:	9805      	ldr	r0, [sp, #20]
 800a3f0:	1e41      	subs	r1, r0, #1
 800a3f2:	b1db      	cbz	r3, 800a42c <GUI_DrawGraphEx+0x164>
 800a3f4:	2904      	cmp	r1, #4
 800a3f6:	d817      	bhi.n	800a428 <GUI_DrawGraphEx+0x160>
 800a3f8:	e8df f001 	tbb	[pc, r1]
 800a3fc:	0b070503 	.word	0x0b070503
 800a400:	0f          	.byte	0x0f
 800a401:	00          	.byte	0x00
 800a402:	1b62      	subs	r2, r4, r5
 800a404:	e00e      	b.n	800a424 <GUI_DrawGraphEx+0x15c>
 800a406:	1b65      	subs	r5, r4, r5
 800a408:	e000      	b.n	800a40c <GUI_DrawGraphEx+0x144>
 800a40a:	4425      	add	r5, r4
 800a40c:	fbb5 f2f6 	udiv	r2, r5, r6
 800a410:	e008      	b.n	800a424 <GUI_DrawGraphEx+0x15c>
 800a412:	4425      	add	r5, r4
 800a414:	fb07 f205 	mul.w	r2, r7, r5
 800a418:	e004      	b.n	800a424 <GUI_DrawGraphEx+0x15c>
 800a41a:	4425      	add	r5, r4
 800a41c:	fb07 f205 	mul.w	r2, r7, r5
 800a420:	fbb2 f2f6 	udiv	r2, r2, r6
 800a424:	2300      	movs	r3, #0
 800a426:	e04a      	b.n	800a4be <GUI_DrawGraphEx+0x1f6>
 800a428:	192a      	adds	r2, r5, r4
 800a42a:	e7fb      	b.n	800a424 <GUI_DrawGraphEx+0x15c>
 800a42c:	2904      	cmp	r1, #4
 800a42e:	d812      	bhi.n	800a456 <GUI_DrawGraphEx+0x18e>
 800a430:	e8df f001 	tbb	[pc, r1]
 800a434:	0b070503 	.word	0x0b070503
 800a438:	0e          	.byte	0x0e
 800a439:	00          	.byte	0x00
 800a43a:	1b65      	subs	r5, r4, r5
 800a43c:	e00c      	b.n	800a458 <GUI_DrawGraphEx+0x190>
 800a43e:	1b65      	subs	r5, r4, r5
 800a440:	e000      	b.n	800a444 <GUI_DrawGraphEx+0x17c>
 800a442:	4425      	add	r5, r4
 800a444:	fbb5 f5f6 	udiv	r5, r5, r6
 800a448:	e006      	b.n	800a458 <GUI_DrawGraphEx+0x190>
 800a44a:	4425      	add	r5, r4
 800a44c:	437d      	muls	r5, r7
 800a44e:	e003      	b.n	800a458 <GUI_DrawGraphEx+0x190>
 800a450:	4425      	add	r5, r4
 800a452:	437d      	muls	r5, r7
 800a454:	e7f6      	b.n	800a444 <GUI_DrawGraphEx+0x17c>
 800a456:	4425      	add	r5, r4
 800a458:	9904      	ldr	r1, [sp, #16]
 800a45a:	428a      	cmp	r2, r1
 800a45c:	da01      	bge.n	800a462 <GUI_DrawGraphEx+0x19a>
 800a45e:	428d      	cmp	r5, r1
 800a460:	db25      	blt.n	800a4ae <GUI_DrawGraphEx+0x1e6>
 800a462:	455a      	cmp	r2, fp
 800a464:	dd01      	ble.n	800a46a <GUI_DrawGraphEx+0x1a2>
 800a466:	455d      	cmp	r5, fp
 800a468:	dc21      	bgt.n	800a4ae <GUI_DrawGraphEx+0x1e6>
 800a46a:	eb05 0c02 	add.w	ip, r5, r2
 800a46e:	2102      	movs	r1, #2
 800a470:	42aa      	cmp	r2, r5
 800a472:	fb9c fcf1 	sdiv	ip, ip, r1
 800a476:	f108 30ff 	add.w	r0, r8, #4294967295
 800a47a:	dc0b      	bgt.n	800a494 <GUI_DrawGraphEx+0x1cc>
 800a47c:	4611      	mov	r1, r2
 800a47e:	4662      	mov	r2, ip
 800a480:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a484:	f7fe fb7e 	bl	8008b84 <LCD_DrawVLine>
 800a488:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a48c:	4640      	mov	r0, r8
 800a48e:	4661      	mov	r1, ip
 800a490:	462a      	mov	r2, r5
 800a492:	e009      	b.n	800a4a8 <GUI_DrawGraphEx+0x1e0>
 800a494:	4661      	mov	r1, ip
 800a496:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a49a:	f7fe fb73 	bl	8008b84 <LCD_DrawVLine>
 800a49e:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a4a2:	4640      	mov	r0, r8
 800a4a4:	4629      	mov	r1, r5
 800a4a6:	4662      	mov	r2, ip
 800a4a8:	f7fe fb6c 	bl	8008b84 <LCD_DrawVLine>
 800a4ac:	9b00      	ldr	r3, [sp, #0]
 800a4ae:	9a02      	ldr	r2, [sp, #8]
 800a4b0:	3201      	adds	r2, #1
 800a4b2:	9202      	str	r2, [sp, #8]
 800a4b4:	462a      	mov	r2, r5
 800a4b6:	e002      	b.n	800a4be <GUI_DrawGraphEx+0x1f6>
 800a4b8:	2300      	movs	r3, #0
 800a4ba:	9302      	str	r3, [sp, #8]
 800a4bc:	2301      	movs	r3, #1
 800a4be:	9808      	ldr	r0, [sp, #32]
 800a4c0:	f108 0801 	add.w	r8, r8, #1
 800a4c4:	4580      	cmp	r8, r0
 800a4c6:	f47f af7a 	bne.w	800a3be <GUI_DrawGraphEx+0xf6>
 800a4ca:	e721      	b.n	800a310 <GUI_DrawGraphEx+0x48>
 800a4cc:	b00b      	add	sp, #44	; 0x2c
 800a4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4d2:	bf00      	nop
 800a4d4:	200000b8 	.word	0x200000b8

0800a4d8 <GUI_DispString>:
 800a4d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a4dc:	4604      	mov	r4, r0
 800a4de:	2800      	cmp	r0, #0
 800a4e0:	d079      	beq.n	800a5d6 <GUI_DispString+0xfe>
 800a4e2:	4d3e      	ldr	r5, [pc, #248]	; (800a5dc <GUI_DispString+0x104>)
 800a4e4:	f001 f8c8 	bl	800b678 <GUI_GetFontDistY>
 800a4e8:	682b      	ldr	r3, [r5, #0]
 800a4ea:	4680      	mov	r8, r0
 800a4ec:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800a4f0:	f001 f8aa 	bl	800b648 <GUI_GetYAdjust>
 800a4f4:	682b      	ldr	r3, [r5, #0]
 800a4f6:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a4f8:	b287      	uxth	r7, r0
 800a4fa:	1bd2      	subs	r2, r2, r7
 800a4fc:	849a      	strh	r2, [r3, #36]	; 0x24
 800a4fe:	7823      	ldrb	r3, [r4, #0]
 800a500:	2b00      	cmp	r3, #0
 800a502:	d05d      	beq.n	800a5c0 <GUI_DispString+0xe8>
 800a504:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800a508:	4620      	mov	r0, r4
 800a50a:	f000 ffeb 	bl	800b4e4 <GUI__GetLineNumChars>
 800a50e:	4606      	mov	r6, r0
 800a510:	4631      	mov	r1, r6
 800a512:	4620      	mov	r0, r4
 800a514:	f001 f814 	bl	800b540 <GUI__GetLineDistX>
 800a518:	682b      	ldr	r3, [r5, #0]
 800a51a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a51c:	f002 0203 	and.w	r2, r2, #3
 800a520:	2a01      	cmp	r2, #1
 800a522:	d005      	beq.n	800a530 <GUI_DispString+0x58>
 800a524:	2a02      	cmp	r2, #2
 800a526:	bf14      	ite	ne
 800a528:	2200      	movne	r2, #0
 800a52a:	fb90 f2f2 	sdiveq	r2, r0, r2
 800a52e:	e000      	b.n	800a532 <GUI_DispString+0x5a>
 800a530:	4602      	mov	r2, r0
 800a532:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800a534:	1a8a      	subs	r2, r1, r2
 800a536:	b292      	uxth	r2, r2
 800a538:	b291      	uxth	r1, r2
 800a53a:	8459      	strh	r1, [r3, #34]	; 0x22
 800a53c:	fa1f fa80 	uxth.w	sl, r0
 800a540:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800a542:	f8ad 1000 	strh.w	r1, [sp]
 800a546:	f10a 31ff 	add.w	r1, sl, #4294967295
 800a54a:	440a      	add	r2, r1
 800a54c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a550:	fa1f fb88 	uxth.w	fp, r8
 800a554:	3b01      	subs	r3, #1
 800a556:	445b      	add	r3, fp
 800a558:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a55c:	4620      	mov	r0, r4
 800a55e:	4631      	mov	r1, r6
 800a560:	466a      	mov	r2, sp
 800a562:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a566:	f001 f81b 	bl	800b5a0 <GUI__DispLine>
 800a56a:	682b      	ldr	r3, [r5, #0]
 800a56c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a570:	849a      	strh	r2, [r3, #36]	; 0x24
 800a572:	4620      	mov	r0, r4
 800a574:	4631      	mov	r1, r6
 800a576:	f7ff f98d 	bl	8009894 <GUI_UC__NumChars2NumBytes>
 800a57a:	5c23      	ldrb	r3, [r4, r0]
 800a57c:	2b0a      	cmp	r3, #10
 800a57e:	eb04 0200 	add.w	r2, r4, r0
 800a582:	d001      	beq.n	800a588 <GUI_DispString+0xb0>
 800a584:	2b0d      	cmp	r3, #13
 800a586:	d112      	bne.n	800a5ae <GUI_DispString+0xd6>
 800a588:	682b      	ldr	r3, [r5, #0]
 800a58a:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800a58c:	f001 0103 	and.w	r1, r1, #3
 800a590:	3901      	subs	r1, #1
 800a592:	2901      	cmp	r1, #1
 800a594:	bf8a      	itet	hi
 800a596:	8c19      	ldrhhi	r1, [r3, #32]
 800a598:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800a59c:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800a59e:	7811      	ldrb	r1, [r2, #0]
 800a5a0:	290a      	cmp	r1, #10
 800a5a2:	d10b      	bne.n	800a5bc <GUI_DispString+0xe4>
 800a5a4:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800a5a6:	448b      	add	fp, r1
 800a5a8:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800a5ac:	e006      	b.n	800a5bc <GUI_DispString+0xe4>
 800a5ae:	4b0b      	ldr	r3, [pc, #44]	; (800a5dc <GUI_DispString+0x104>)
 800a5b0:	f8bd 0000 	ldrh.w	r0, [sp]
 800a5b4:	681b      	ldr	r3, [r3, #0]
 800a5b6:	4482      	add	sl, r0
 800a5b8:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 800a5bc:	7813      	ldrb	r3, [r2, #0]
 800a5be:	b943      	cbnz	r3, 800a5d2 <GUI_DispString+0xfa>
 800a5c0:	682b      	ldr	r3, [r5, #0]
 800a5c2:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a5c4:	4417      	add	r7, r2
 800a5c6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a5c8:	849f      	strh	r7, [r3, #36]	; 0x24
 800a5ca:	f022 0203 	bic.w	r2, r2, #3
 800a5ce:	859a      	strh	r2, [r3, #44]	; 0x2c
 800a5d0:	e001      	b.n	800a5d6 <GUI_DispString+0xfe>
 800a5d2:	1c54      	adds	r4, r2, #1
 800a5d4:	e793      	b.n	800a4fe <GUI_DispString+0x26>
 800a5d6:	b003      	add	sp, #12
 800a5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a5dc:	200000b8 	.word	0x200000b8

0800a5e0 <GUI_DispStringAt>:
 800a5e0:	4b02      	ldr	r3, [pc, #8]	; (800a5ec <GUI_DispStringAt+0xc>)
 800a5e2:	681b      	ldr	r3, [r3, #0]
 800a5e4:	8459      	strh	r1, [r3, #34]	; 0x22
 800a5e6:	849a      	strh	r2, [r3, #36]	; 0x24
 800a5e8:	f7ff bf76 	b.w	800a4d8 <GUI_DispString>
 800a5ec:	200000b8 	.word	0x200000b8

0800a5f0 <GUI__DispStringInRect>:
 800a5f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5f4:	b087      	sub	sp, #28
 800a5f6:	460c      	mov	r4, r1
 800a5f8:	9001      	str	r0, [sp, #4]
 800a5fa:	4691      	mov	r9, r2
 800a5fc:	461d      	mov	r5, r3
 800a5fe:	f001 f83b 	bl	800b678 <GUI_GetFontDistY>
 800a602:	9f01      	ldr	r7, [sp, #4]
 800a604:	4680      	mov	r8, r0
 800a606:	b124      	cbz	r4, 800a612 <GUI__DispStringInRect+0x22>
 800a608:	6820      	ldr	r0, [r4, #0]
 800a60a:	6861      	ldr	r1, [r4, #4]
 800a60c:	ab04      	add	r3, sp, #16
 800a60e:	c303      	stmia	r3!, {r0, r1}
 800a610:	e002      	b.n	800a618 <GUI__DispStringInRect+0x28>
 800a612:	a804      	add	r0, sp, #16
 800a614:	f000 fbf0 	bl	800adf8 <GUI_GetClientRect>
 800a618:	f019 0a0c 	ands.w	sl, r9, #12
 800a61c:	d002      	beq.n	800a624 <GUI__DispStringInRect+0x34>
 800a61e:	462c      	mov	r4, r5
 800a620:	2600      	movs	r6, #0
 800a622:	e016      	b.n	800a652 <GUI__DispStringInRect+0x62>
 800a624:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 800a628:	e032      	b.n	800a690 <GUI__DispStringInRect+0xa0>
 800a62a:	4621      	mov	r1, r4
 800a62c:	9801      	ldr	r0, [sp, #4]
 800a62e:	f000 ff59 	bl	800b4e4 <GUI__GetLineNumChars>
 800a632:	f8dd b004 	ldr.w	fp, [sp, #4]
 800a636:	4601      	mov	r1, r0
 800a638:	1a24      	subs	r4, r4, r0
 800a63a:	4658      	mov	r0, fp
 800a63c:	f7ff f92a 	bl	8009894 <GUI_UC__NumChars2NumBytes>
 800a640:	eb0b 0300 	add.w	r3, fp, r0
 800a644:	a806      	add	r0, sp, #24
 800a646:	3601      	adds	r6, #1
 800a648:	f840 3d14 	str.w	r3, [r0, #-20]!
 800a64c:	f7fe fdad 	bl	80091aa <GUI__HandleEOLine>
 800a650:	b908      	cbnz	r0, 800a656 <GUI__DispStringInRect+0x66>
 800a652:	2c00      	cmp	r4, #0
 800a654:	d1e9      	bne.n	800a62a <GUI__DispStringInRect+0x3a>
 800a656:	f1ba 0f08 	cmp.w	sl, #8
 800a65a:	d005      	beq.n	800a668 <GUI__DispStringInRect+0x78>
 800a65c:	f1ba 0f0c 	cmp.w	sl, #12
 800a660:	d008      	beq.n	800a674 <GUI__DispStringInRect+0x84>
 800a662:	f1ba 0f04 	cmp.w	sl, #4
 800a666:	d112      	bne.n	800a68e <GUI__DispStringInRect+0x9e>
 800a668:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a66c:	fb08 4416 	mls	r4, r8, r6, r4
 800a670:	3401      	adds	r4, #1
 800a672:	e00d      	b.n	800a690 <GUI__DispStringInRect+0xa0>
 800a674:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a678:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a67c:	1ae4      	subs	r4, r4, r3
 800a67e:	3401      	adds	r4, #1
 800a680:	fb08 4416 	mls	r4, r8, r6, r4
 800a684:	2202      	movs	r2, #2
 800a686:	fb94 f4f2 	sdiv	r4, r4, r2
 800a68a:	441c      	add	r4, r3
 800a68c:	e000      	b.n	800a690 <GUI__DispStringInRect+0xa0>
 800a68e:	2400      	movs	r4, #0
 800a690:	9701      	str	r7, [sp, #4]
 800a692:	2600      	movs	r6, #0
 800a694:	2d00      	cmp	r5, #0
 800a696:	d04b      	beq.n	800a730 <GUI__DispStringInRect+0x140>
 800a698:	4629      	mov	r1, r5
 800a69a:	9801      	ldr	r0, [sp, #4]
 800a69c:	f000 ff22 	bl	800b4e4 <GUI__GetLineNumChars>
 800a6a0:	4607      	mov	r7, r0
 800a6a2:	1a2d      	subs	r5, r5, r0
 800a6a4:	4639      	mov	r1, r7
 800a6a6:	9801      	ldr	r0, [sp, #4]
 800a6a8:	f000 ff4a 	bl	800b540 <GUI__GetLineDistX>
 800a6ac:	f009 0303 	and.w	r3, r9, #3
 800a6b0:	2b01      	cmp	r3, #1
 800a6b2:	d00f      	beq.n	800a6d4 <GUI__DispStringInRect+0xe4>
 800a6b4:	2b02      	cmp	r3, #2
 800a6b6:	d003      	beq.n	800a6c0 <GUI__DispStringInRect+0xd0>
 800a6b8:	b983      	cbnz	r3, 800a6dc <GUI__DispStringInRect+0xec>
 800a6ba:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 800a6be:	e00d      	b.n	800a6dc <GUI__DispStringInRect+0xec>
 800a6c0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800a6c4:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a6c8:	1ab6      	subs	r6, r6, r2
 800a6ca:	1a36      	subs	r6, r6, r0
 800a6cc:	fb96 f6f3 	sdiv	r6, r6, r3
 800a6d0:	4416      	add	r6, r2
 800a6d2:	e003      	b.n	800a6dc <GUI__DispStringInRect+0xec>
 800a6d4:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a6d8:	1a36      	subs	r6, r6, r0
 800a6da:	3601      	adds	r6, #1
 800a6dc:	4b16      	ldr	r3, [pc, #88]	; (800a738 <GUI__DispStringInRect+0x148>)
 800a6de:	6819      	ldr	r1, [r3, #0]
 800a6e0:	3801      	subs	r0, #1
 800a6e2:	b2a3      	uxth	r3, r4
 800a6e4:	b2b2      	uxth	r2, r6
 800a6e6:	848b      	strh	r3, [r1, #36]	; 0x24
 800a6e8:	4430      	add	r0, r6
 800a6ea:	f8ad 300a 	strh.w	r3, [sp, #10]
 800a6ee:	f108 33ff 	add.w	r3, r8, #4294967295
 800a6f2:	4423      	add	r3, r4
 800a6f4:	844a      	strh	r2, [r1, #34]	; 0x22
 800a6f6:	f8ad 2008 	strh.w	r2, [sp, #8]
 800a6fa:	4639      	mov	r1, r7
 800a6fc:	aa02      	add	r2, sp, #8
 800a6fe:	f8ad 000c 	strh.w	r0, [sp, #12]
 800a702:	9801      	ldr	r0, [sp, #4]
 800a704:	f8ad 300e 	strh.w	r3, [sp, #14]
 800a708:	f000 ff4a 	bl	800b5a0 <GUI__DispLine>
 800a70c:	f8dd a004 	ldr.w	sl, [sp, #4]
 800a710:	4639      	mov	r1, r7
 800a712:	4650      	mov	r0, sl
 800a714:	f7ff f8be 	bl	8009894 <GUI_UC__NumChars2NumBytes>
 800a718:	af06      	add	r7, sp, #24
 800a71a:	4450      	add	r0, sl
 800a71c:	f847 0d14 	str.w	r0, [r7, #-20]!
 800a720:	f000 ffaa 	bl	800b678 <GUI_GetFontDistY>
 800a724:	4404      	add	r4, r0
 800a726:	4638      	mov	r0, r7
 800a728:	f7fe fd3f 	bl	80091aa <GUI__HandleEOLine>
 800a72c:	2800      	cmp	r0, #0
 800a72e:	d0b1      	beq.n	800a694 <GUI__DispStringInRect+0xa4>
 800a730:	b007      	add	sp, #28
 800a732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a736:	bf00      	nop
 800a738:	200000b8 	.word	0x200000b8

0800a73c <GUI_DispStringInRectMax>:
 800a73c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a740:	460c      	mov	r4, r1
 800a742:	4690      	mov	r8, r2
 800a744:	461f      	mov	r7, r3
 800a746:	4606      	mov	r6, r0
 800a748:	b1c0      	cbz	r0, 800a77c <GUI_DispStringInRectMax+0x40>
 800a74a:	b169      	cbz	r1, 800a768 <GUI_DispStringInRectMax+0x2c>
 800a74c:	4608      	mov	r0, r1
 800a74e:	f7fa fcb7 	bl	80050c0 <WM_SetUserClipRect>
 800a752:	4605      	mov	r5, r0
 800a754:	b148      	cbz	r0, 800a76a <GUI_DispStringInRectMax+0x2e>
 800a756:	4668      	mov	r0, sp
 800a758:	4621      	mov	r1, r4
 800a75a:	462a      	mov	r2, r5
 800a75c:	f7fe fd57 	bl	800920e <GUI__IntersectRects>
 800a760:	4668      	mov	r0, sp
 800a762:	f7fa fcad 	bl	80050c0 <WM_SetUserClipRect>
 800a766:	e000      	b.n	800a76a <GUI_DispStringInRectMax+0x2e>
 800a768:	460d      	mov	r5, r1
 800a76a:	4630      	mov	r0, r6
 800a76c:	4621      	mov	r1, r4
 800a76e:	4642      	mov	r2, r8
 800a770:	463b      	mov	r3, r7
 800a772:	f7ff ff3d 	bl	800a5f0 <GUI__DispStringInRect>
 800a776:	4628      	mov	r0, r5
 800a778:	f7fa fca2 	bl	80050c0 <WM_SetUserClipRect>
 800a77c:	b002      	add	sp, #8
 800a77e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a782 <GUI_DispStringInRect>:
 800a782:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800a786:	f7ff bfd9 	b.w	800a73c <GUI_DispStringInRectMax>

0800a78a <GUI_WrapGetNumLines>:
 800a78a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a78c:	4605      	mov	r5, r0
 800a78e:	460e      	mov	r6, r1
 800a790:	4617      	mov	r7, r2
 800a792:	2400      	movs	r4, #0
 800a794:	4628      	mov	r0, r5
 800a796:	4631      	mov	r1, r6
 800a798:	463a      	mov	r2, r7
 800a79a:	f004 fac7 	bl	800ed2c <GUI__WrapGetNumBytesToNextLine>
 800a79e:	b110      	cbz	r0, 800a7a6 <GUI_WrapGetNumLines+0x1c>
 800a7a0:	4405      	add	r5, r0
 800a7a2:	3401      	adds	r4, #1
 800a7a4:	e7f6      	b.n	800a794 <GUI_WrapGetNumLines+0xa>
 800a7a6:	4620      	mov	r0, r4
 800a7a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a7aa <GUI_DispStringInRectWrap>:
 800a7aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7ae:	b089      	sub	sp, #36	; 0x24
 800a7b0:	460c      	mov	r4, r1
 800a7b2:	9202      	str	r2, [sp, #8]
 800a7b4:	9303      	str	r3, [sp, #12]
 800a7b6:	4605      	mov	r5, r0
 800a7b8:	2800      	cmp	r0, #0
 800a7ba:	f000 8092 	beq.w	800a8e2 <GUI_DispStringInRectWrap+0x138>
 800a7be:	f8b1 a000 	ldrh.w	sl, [r1]
 800a7c2:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 800a7c6:	884e      	ldrh	r6, [r1, #2]
 800a7c8:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800a7cc:	fa0f f289 	sxth.w	r2, r9
 800a7d0:	fa0f f38a 	sxth.w	r3, sl
 800a7d4:	1ad3      	subs	r3, r2, r3
 800a7d6:	3301      	adds	r3, #1
 800a7d8:	9301      	str	r3, [sp, #4]
 800a7da:	f000 ff4d 	bl	800b678 <GUI_GetFontDistY>
 800a7de:	9902      	ldr	r1, [sp, #8]
 800a7e0:	f011 070c 	ands.w	r7, r1, #12
 800a7e4:	4680      	mov	r8, r0
 800a7e6:	d01b      	beq.n	800a820 <GUI_DispStringInRectWrap+0x76>
 800a7e8:	4628      	mov	r0, r5
 800a7ea:	9901      	ldr	r1, [sp, #4]
 800a7ec:	9a03      	ldr	r2, [sp, #12]
 800a7ee:	f7ff ffcc 	bl	800a78a <GUI_WrapGetNumLines>
 800a7f2:	2f08      	cmp	r7, #8
 800a7f4:	d003      	beq.n	800a7fe <GUI_DispStringInRectWrap+0x54>
 800a7f6:	2f0c      	cmp	r7, #12
 800a7f8:	d006      	beq.n	800a808 <GUI_DispStringInRectWrap+0x5e>
 800a7fa:	2f04      	cmp	r7, #4
 800a7fc:	d110      	bne.n	800a820 <GUI_DispStringInRectWrap+0x76>
 800a7fe:	f10b 0601 	add.w	r6, fp, #1
 800a802:	fb00 6618 	mls	r6, r0, r8, r6
 800a806:	e00a      	b.n	800a81e <GUI_DispStringInRectWrap+0x74>
 800a808:	b232      	sxth	r2, r6
 800a80a:	fa0f f38b 	sxth.w	r3, fp
 800a80e:	1a9b      	subs	r3, r3, r2
 800a810:	3301      	adds	r3, #1
 800a812:	fb08 3010 	mls	r0, r8, r0, r3
 800a816:	2302      	movs	r3, #2
 800a818:	fb90 f0f3 	sdiv	r0, r0, r3
 800a81c:	4406      	add	r6, r0
 800a81e:	b2b6      	uxth	r6, r6
 800a820:	4620      	mov	r0, r4
 800a822:	f7fa fc4d 	bl	80050c0 <WM_SetUserClipRect>
 800a826:	4607      	mov	r7, r0
 800a828:	b178      	cbz	r0, 800a84a <GUI_DispStringInRectWrap+0xa0>
 800a82a:	a804      	add	r0, sp, #16
 800a82c:	4621      	mov	r1, r4
 800a82e:	463a      	mov	r2, r7
 800a830:	f8ad a010 	strh.w	sl, [sp, #16]
 800a834:	f8ad 6012 	strh.w	r6, [sp, #18]
 800a838:	f8ad 9014 	strh.w	r9, [sp, #20]
 800a83c:	f8ad b016 	strh.w	fp, [sp, #22]
 800a840:	f7fe fce5 	bl	800920e <GUI__IntersectRects>
 800a844:	a804      	add	r0, sp, #16
 800a846:	f7fa fc3b 	bl	80050c0 <WM_SetUserClipRect>
 800a84a:	9901      	ldr	r1, [sp, #4]
 800a84c:	9a03      	ldr	r2, [sp, #12]
 800a84e:	4628      	mov	r0, r5
 800a850:	f004 fa3a 	bl	800ecc8 <GUI__WrapGetNumCharsDisp>
 800a854:	eb06 0b08 	add.w	fp, r6, r8
 800a858:	4602      	mov	r2, r0
 800a85a:	fa1f fb8b 	uxth.w	fp, fp
 800a85e:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a862:	4611      	mov	r1, r2
 800a864:	4628      	mov	r0, r5
 800a866:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a86a:	9200      	str	r2, [sp, #0]
 800a86c:	f8ad a018 	strh.w	sl, [sp, #24]
 800a870:	f8ad 601a 	strh.w	r6, [sp, #26]
 800a874:	f8ad 901c 	strh.w	r9, [sp, #28]
 800a878:	f000 fe62 	bl	800b540 <GUI__GetLineDistX>
 800a87c:	9902      	ldr	r1, [sp, #8]
 800a87e:	9a00      	ldr	r2, [sp, #0]
 800a880:	f001 0303 	and.w	r3, r1, #3
 800a884:	2b01      	cmp	r3, #1
 800a886:	d014      	beq.n	800a8b2 <GUI_DispStringInRectWrap+0x108>
 800a888:	2b02      	cmp	r3, #2
 800a88a:	d004      	beq.n	800a896 <GUI_DispStringInRectWrap+0xec>
 800a88c:	b9b3      	cbnz	r3, 800a8bc <GUI_DispStringInRectWrap+0x112>
 800a88e:	8823      	ldrh	r3, [r4, #0]
 800a890:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a894:	e012      	b.n	800a8bc <GUI_DispStringInRectWrap+0x112>
 800a896:	8821      	ldrh	r1, [r4, #0]
 800a898:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800a89c:	b20e      	sxth	r6, r1
 800a89e:	ebc6 060e 	rsb	r6, r6, lr
 800a8a2:	1a30      	subs	r0, r6, r0
 800a8a4:	3001      	adds	r0, #1
 800a8a6:	fb90 f3f3 	sdiv	r3, r0, r3
 800a8aa:	4419      	add	r1, r3
 800a8ac:	f8ad 1018 	strh.w	r1, [sp, #24]
 800a8b0:	e004      	b.n	800a8bc <GUI_DispStringInRectWrap+0x112>
 800a8b2:	88a3      	ldrh	r3, [r4, #4]
 800a8b4:	3301      	adds	r3, #1
 800a8b6:	1a18      	subs	r0, r3, r0
 800a8b8:	f8ad 0018 	strh.w	r0, [sp, #24]
 800a8bc:	4628      	mov	r0, r5
 800a8be:	4611      	mov	r1, r2
 800a8c0:	aa06      	add	r2, sp, #24
 800a8c2:	f000 fe6d 	bl	800b5a0 <GUI__DispLine>
 800a8c6:	4628      	mov	r0, r5
 800a8c8:	9901      	ldr	r1, [sp, #4]
 800a8ca:	9a03      	ldr	r2, [sp, #12]
 800a8cc:	f004 fa2e 	bl	800ed2c <GUI__WrapGetNumBytesToNextLine>
 800a8d0:	4405      	add	r5, r0
 800a8d2:	fa1f f68b 	uxth.w	r6, fp
 800a8d6:	782b      	ldrb	r3, [r5, #0]
 800a8d8:	2b00      	cmp	r3, #0
 800a8da:	d1b6      	bne.n	800a84a <GUI_DispStringInRectWrap+0xa0>
 800a8dc:	4638      	mov	r0, r7
 800a8de:	f7fa fbef 	bl	80050c0 <WM_SetUserClipRect>
 800a8e2:	b009      	add	sp, #36	; 0x24
 800a8e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a8e8 <GUI_GetStringDistX>:
 800a8e8:	b510      	push	{r4, lr}
 800a8ea:	4604      	mov	r4, r0
 800a8ec:	f7fe ffe4 	bl	80098b8 <GUI__GetNumChars>
 800a8f0:	4601      	mov	r1, r0
 800a8f2:	4620      	mov	r0, r4
 800a8f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a8f8:	f000 be22 	b.w	800b540 <GUI__GetLineDistX>

0800a8fc <GUI_DEVICE__GetpDriver>:
 800a8fc:	2801      	cmp	r0, #1
 800a8fe:	dc09      	bgt.n	800a914 <GUI_DEVICE__GetpDriver+0x18>
 800a900:	4b05      	ldr	r3, [pc, #20]	; (800a918 <GUI_DEVICE__GetpDriver+0x1c>)
 800a902:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800a906:	b120      	cbz	r0, 800a912 <GUI_DEVICE__GetpDriver+0x16>
 800a908:	68c3      	ldr	r3, [r0, #12]
 800a90a:	681b      	ldr	r3, [r3, #0]
 800a90c:	b11b      	cbz	r3, 800a916 <GUI_DEVICE__GetpDriver+0x1a>
 800a90e:	6800      	ldr	r0, [r0, #0]
 800a910:	e7f9      	b.n	800a906 <GUI_DEVICE__GetpDriver+0xa>
 800a912:	4770      	bx	lr
 800a914:	2000      	movs	r0, #0
 800a916:	4770      	bx	lr
 800a918:	20002d2c 	.word	0x20002d2c

0800a91c <GUI_DEVICE_Delete>:
 800a91c:	f000 bf98 	b.w	800b850 <GUI_ALLOC_FreeFixedBlock>

0800a920 <GUI_DEVICE_Create>:
 800a920:	2b01      	cmp	r3, #1
 800a922:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a924:	4606      	mov	r6, r0
 800a926:	460d      	mov	r5, r1
 800a928:	4617      	mov	r7, r2
 800a92a:	461c      	mov	r4, r3
 800a92c:	dd01      	ble.n	800a932 <GUI_DEVICE_Create+0x12>
 800a92e:	2000      	movs	r0, #0
 800a930:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a932:	201c      	movs	r0, #28
 800a934:	f001 f870 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 800a938:	2800      	cmp	r0, #0
 800a93a:	d0f8      	beq.n	800a92e <GUI_DEVICE_Create+0xe>
 800a93c:	b10d      	cbz	r5, 800a942 <GUI_DEVICE_Create+0x22>
 800a93e:	6105      	str	r5, [r0, #16]
 800a940:	e009      	b.n	800a956 <GUI_DEVICE_Create+0x36>
 800a942:	4b09      	ldr	r3, [pc, #36]	; (800a968 <GUI_DEVICE_Create+0x48>)
 800a944:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800a948:	b129      	cbz	r1, 800a956 <GUI_DEVICE_Create+0x36>
 800a94a:	680b      	ldr	r3, [r1, #0]
 800a94c:	b10b      	cbz	r3, 800a952 <GUI_DEVICE_Create+0x32>
 800a94e:	4619      	mov	r1, r3
 800a950:	e7fb      	b.n	800a94a <GUI_DEVICE_Create+0x2a>
 800a952:	690b      	ldr	r3, [r1, #16]
 800a954:	6103      	str	r3, [r0, #16]
 800a956:	2300      	movs	r3, #0
 800a958:	6083      	str	r3, [r0, #8]
 800a95a:	6184      	str	r4, [r0, #24]
 800a95c:	8287      	strh	r7, [r0, #20]
 800a95e:	60c6      	str	r6, [r0, #12]
 800a960:	6003      	str	r3, [r0, #0]
 800a962:	6043      	str	r3, [r0, #4]
 800a964:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a966:	bf00      	nop
 800a968:	20002d2c 	.word	0x20002d2c

0800a96c <GUI_DEVICE_Unlink>:
 800a96c:	6981      	ldr	r1, [r0, #24]
 800a96e:	4a0b      	ldr	r2, [pc, #44]	; (800a99c <GUI_DEVICE_Unlink+0x30>)
 800a970:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a974:	4283      	cmp	r3, r0
 800a976:	d105      	bne.n	800a984 <GUI_DEVICE_Unlink+0x18>
 800a978:	6803      	ldr	r3, [r0, #0]
 800a97a:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800a97e:	b10b      	cbz	r3, 800a984 <GUI_DEVICE_Unlink+0x18>
 800a980:	2200      	movs	r2, #0
 800a982:	605a      	str	r2, [r3, #4]
 800a984:	6843      	ldr	r3, [r0, #4]
 800a986:	b10b      	cbz	r3, 800a98c <GUI_DEVICE_Unlink+0x20>
 800a988:	6802      	ldr	r2, [r0, #0]
 800a98a:	601a      	str	r2, [r3, #0]
 800a98c:	6802      	ldr	r2, [r0, #0]
 800a98e:	b102      	cbz	r2, 800a992 <GUI_DEVICE_Unlink+0x26>
 800a990:	6053      	str	r3, [r2, #4]
 800a992:	2300      	movs	r3, #0
 800a994:	6003      	str	r3, [r0, #0]
 800a996:	6043      	str	r3, [r0, #4]
 800a998:	4770      	bx	lr
 800a99a:	bf00      	nop
 800a99c:	20002d2c 	.word	0x20002d2c

0800a9a0 <GUI_DEVICE_Link>:
 800a9a0:	b570      	push	{r4, r5, r6, lr}
 800a9a2:	b908      	cbnz	r0, 800a9a8 <GUI_DEVICE_Link+0x8>
 800a9a4:	2001      	movs	r0, #1
 800a9a6:	bd70      	pop	{r4, r5, r6, pc}
 800a9a8:	6982      	ldr	r2, [r0, #24]
 800a9aa:	2a01      	cmp	r2, #1
 800a9ac:	dcfa      	bgt.n	800a9a4 <GUI_DEVICE_Link+0x4>
 800a9ae:	4b1b      	ldr	r3, [pc, #108]	; (800aa1c <GUI_DEVICE_Link+0x7c>)
 800a9b0:	7819      	ldrb	r1, [r3, #0]
 800a9b2:	428a      	cmp	r2, r1
 800a9b4:	bfa4      	itt	ge
 800a9b6:	1c51      	addge	r1, r2, #1
 800a9b8:	7019      	strbge	r1, [r3, #0]
 800a9ba:	4919      	ldr	r1, [pc, #100]	; (800aa20 <GUI_DEVICE_Link+0x80>)
 800a9bc:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800a9c0:	460d      	mov	r5, r1
 800a9c2:	b913      	cbnz	r3, 800a9ca <GUI_DEVICE_Link+0x2a>
 800a9c4:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800a9c8:	e01a      	b.n	800aa00 <GUI_DEVICE_Link+0x60>
 800a9ca:	6859      	ldr	r1, [r3, #4]
 800a9cc:	b109      	cbz	r1, 800a9d2 <GUI_DEVICE_Link+0x32>
 800a9ce:	460b      	mov	r3, r1
 800a9d0:	e7fb      	b.n	800a9ca <GUI_DEVICE_Link+0x2a>
 800a9d2:	68c1      	ldr	r1, [r0, #12]
 800a9d4:	680e      	ldr	r6, [r1, #0]
 800a9d6:	68d9      	ldr	r1, [r3, #12]
 800a9d8:	680c      	ldr	r4, [r1, #0]
 800a9da:	42b4      	cmp	r4, r6
 800a9dc:	dd03      	ble.n	800a9e6 <GUI_DEVICE_Link+0x46>
 800a9de:	681b      	ldr	r3, [r3, #0]
 800a9e0:	2b00      	cmp	r3, #0
 800a9e2:	d1f8      	bne.n	800a9d6 <GUI_DEVICE_Link+0x36>
 800a9e4:	e7de      	b.n	800a9a4 <GUI_DEVICE_Link+0x4>
 800a9e6:	d102      	bne.n	800a9ee <GUI_DEVICE_Link+0x4e>
 800a9e8:	8a81      	ldrh	r1, [r0, #20]
 800a9ea:	2901      	cmp	r1, #1
 800a9ec:	d00f      	beq.n	800aa0e <GUI_DEVICE_Link+0x6e>
 800a9ee:	6859      	ldr	r1, [r3, #4]
 800a9f0:	b189      	cbz	r1, 800aa16 <GUI_DEVICE_Link+0x76>
 800a9f2:	6008      	str	r0, [r1, #0]
 800a9f4:	6041      	str	r1, [r0, #4]
 800a9f6:	6058      	str	r0, [r3, #4]
 800a9f8:	4298      	cmp	r0, r3
 800a9fa:	bf08      	it	eq
 800a9fc:	2300      	moveq	r3, #0
 800a9fe:	6003      	str	r3, [r0, #0]
 800aa00:	2000      	movs	r0, #0
 800aa02:	bd70      	pop	{r4, r5, r6, pc}
 800aa04:	68cb      	ldr	r3, [r1, #12]
 800aa06:	681b      	ldr	r3, [r3, #0]
 800aa08:	42a3      	cmp	r3, r4
 800aa0a:	460b      	mov	r3, r1
 800aa0c:	dbef      	blt.n	800a9ee <GUI_DEVICE_Link+0x4e>
 800aa0e:	6819      	ldr	r1, [r3, #0]
 800aa10:	2900      	cmp	r1, #0
 800aa12:	d1f7      	bne.n	800aa04 <GUI_DEVICE_Link+0x64>
 800aa14:	e7eb      	b.n	800a9ee <GUI_DEVICE_Link+0x4e>
 800aa16:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 800aa1a:	e7ec      	b.n	800a9f6 <GUI_DEVICE_Link+0x56>
 800aa1c:	20002cda 	.word	0x20002cda
 800aa20:	20002d2c 	.word	0x20002d2c

0800aa24 <GUI_DEVICE_CreateAndLink>:
 800aa24:	b538      	push	{r3, r4, r5, lr}
 800aa26:	461d      	mov	r5, r3
 800aa28:	f7ff ff7a 	bl	800a920 <GUI_DEVICE_Create>
 800aa2c:	4604      	mov	r4, r0
 800aa2e:	b148      	cbz	r0, 800aa44 <GUI_DEVICE_CreateAndLink+0x20>
 800aa30:	f7ff ffb6 	bl	800a9a0 <GUI_DEVICE_Link>
 800aa34:	68e3      	ldr	r3, [r4, #12]
 800aa36:	681b      	ldr	r3, [r3, #0]
 800aa38:	b923      	cbnz	r3, 800aa44 <GUI_DEVICE_CreateAndLink+0x20>
 800aa3a:	4b03      	ldr	r3, [pc, #12]	; (800aa48 <GUI_DEVICE_CreateAndLink+0x24>)
 800aa3c:	3516      	adds	r5, #22
 800aa3e:	681b      	ldr	r3, [r3, #0]
 800aa40:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800aa44:	4620      	mov	r0, r4
 800aa46:	bd38      	pop	{r3, r4, r5, pc}
 800aa48:	200000b8 	.word	0x200000b8

0800aa4c <_OnExit>:
 800aa4c:	b570      	push	{r4, r5, r6, lr}
 800aa4e:	4b0b      	ldr	r3, [pc, #44]	; (800aa7c <_OnExit+0x30>)
 800aa50:	4e0b      	ldr	r6, [pc, #44]	; (800aa80 <_OnExit+0x34>)
 800aa52:	4d0c      	ldr	r5, [pc, #48]	; (800aa84 <_OnExit+0x38>)
 800aa54:	2400      	movs	r4, #0
 800aa56:	601c      	str	r4, [r3, #0]
 800aa58:	4621      	mov	r1, r4
 800aa5a:	6833      	ldr	r3, [r6, #0]
 800aa5c:	2270      	movs	r2, #112	; 0x70
 800aa5e:	4628      	mov	r0, r5
 800aa60:	4798      	blx	r3
 800aa62:	6833      	ldr	r3, [r6, #0]
 800aa64:	4808      	ldr	r0, [pc, #32]	; (800aa88 <_OnExit+0x3c>)
 800aa66:	4621      	mov	r1, r4
 800aa68:	2208      	movs	r2, #8
 800aa6a:	4798      	blx	r3
 800aa6c:	4b07      	ldr	r3, [pc, #28]	; (800aa8c <_OnExit+0x40>)
 800aa6e:	601d      	str	r5, [r3, #0]
 800aa70:	4b07      	ldr	r3, [pc, #28]	; (800aa90 <_OnExit+0x44>)
 800aa72:	701c      	strb	r4, [r3, #0]
 800aa74:	4b07      	ldr	r3, [pc, #28]	; (800aa94 <_OnExit+0x48>)
 800aa76:	601c      	str	r4, [r3, #0]
 800aa78:	bd70      	pop	{r4, r5, r6, pc}
 800aa7a:	bf00      	nop
 800aa7c:	20002c2c 	.word	0x20002c2c
 800aa80:	200000a4 	.word	0x200000a4
 800aa84:	20002bbc 	.word	0x20002bbc
 800aa88:	20002d2c 	.word	0x20002d2c
 800aa8c:	200000b8 	.word	0x200000b8
 800aa90:	20002d14 	.word	0x20002d14
 800aa94:	20002cec 	.word	0x20002cec

0800aa98 <_InitContext>:
 800aa98:	b538      	push	{r3, r4, r5, lr}
 800aa9a:	4d19      	ldr	r5, [pc, #100]	; (800ab00 <_InitContext+0x68>)
 800aa9c:	682b      	ldr	r3, [r5, #0]
 800aa9e:	1d1a      	adds	r2, r3, #4
 800aaa0:	63da      	str	r2, [r3, #60]	; 0x3c
 800aaa2:	f103 0208 	add.w	r2, r3, #8
 800aaa6:	639b      	str	r3, [r3, #56]	; 0x38
 800aaa8:	641b      	str	r3, [r3, #64]	; 0x40
 800aaaa:	6142      	str	r2, [r0, #20]
 800aaac:	7c5a      	ldrb	r2, [r3, #17]
 800aaae:	4b15      	ldr	r3, [pc, #84]	; (800ab04 <_InitContext+0x6c>)
 800aab0:	4604      	mov	r4, r0
 800aab2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800aab6:	68c3      	ldr	r3, [r0, #12]
 800aab8:	f104 0108 	add.w	r1, r4, #8
 800aabc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aabe:	4798      	blx	r3
 800aac0:	4b11      	ldr	r3, [pc, #68]	; (800ab08 <_InitContext+0x70>)
 800aac2:	6663      	str	r3, [r4, #100]	; 0x64
 800aac4:	4b11      	ldr	r3, [pc, #68]	; (800ab0c <_InitContext+0x74>)
 800aac6:	681b      	ldr	r3, [r3, #0]
 800aac8:	61e3      	str	r3, [r4, #28]
 800aaca:	682b      	ldr	r3, [r5, #0]
 800aacc:	3308      	adds	r3, #8
 800aace:	6163      	str	r3, [r4, #20]
 800aad0:	2301      	movs	r3, #1
 800aad2:	7623      	strb	r3, [r4, #24]
 800aad4:	f7fa f80a 	bl	8004aec <WM_GetDesktopWindow>
 800aad8:	2303      	movs	r3, #3
 800aada:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800aade:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800aae2:	6323      	str	r3, [r4, #48]	; 0x30
 800aae4:	6363      	str	r3, [r4, #52]	; 0x34
 800aae6:	4b0a      	ldr	r3, [pc, #40]	; (800ab10 <_InitContext+0x78>)
 800aae8:	64a0      	str	r0, [r4, #72]	; 0x48
 800aaea:	6818      	ldr	r0, [r3, #0]
 800aaec:	f7fe fb40 	bl	8009170 <LCD_SetBkColor>
 800aaf0:	4b08      	ldr	r3, [pc, #32]	; (800ab14 <_InitContext+0x7c>)
 800aaf2:	6818      	ldr	r0, [r3, #0]
 800aaf4:	f7fe fb44 	bl	8009180 <LCD_SetColor>
 800aaf8:	4b07      	ldr	r3, [pc, #28]	; (800ab18 <_InitContext+0x80>)
 800aafa:	4a08      	ldr	r2, [pc, #32]	; (800ab1c <_InitContext+0x84>)
 800aafc:	601a      	str	r2, [r3, #0]
 800aafe:	bd38      	pop	{r3, r4, r5, pc}
 800ab00:	200000b8 	.word	0x200000b8
 800ab04:	20002d2c 	.word	0x20002d2c
 800ab08:	08012438 	.word	0x08012438
 800ab0c:	200000bc 	.word	0x200000bc
 800ab10:	20002bb8 	.word	0x20002bb8
 800ab14:	200000c0 	.word	0x200000c0
 800ab18:	20002d24 	.word	0x20002d24
 800ab1c:	08012fa4 	.word	0x08012fa4

0800ab20 <GUI_SetDefaultFont>:
 800ab20:	4b01      	ldr	r3, [pc, #4]	; (800ab28 <GUI_SetDefaultFont+0x8>)
 800ab22:	6018      	str	r0, [r3, #0]
 800ab24:	4770      	bx	lr
 800ab26:	bf00      	nop
 800ab28:	200000bc 	.word	0x200000bc

0800ab2c <GUI_ClearRect>:
 800ab2c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ab30:	4607      	mov	r7, r0
 800ab32:	2004      	movs	r0, #4
 800ab34:	469a      	mov	sl, r3
 800ab36:	460e      	mov	r6, r1
 800ab38:	4691      	mov	r9, r2
 800ab3a:	f7fd ffc7 	bl	8008acc <LCD_SetDrawMode>
 800ab3e:	4b13      	ldr	r3, [pc, #76]	; (800ab8c <GUI_ClearRect+0x60>)
 800ab40:	681c      	ldr	r4, [r3, #0]
 800ab42:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800ab44:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800ab46:	442f      	add	r7, r5
 800ab48:	4426      	add	r6, r4
 800ab4a:	4680      	mov	r8, r0
 800ab4c:	444d      	add	r5, r9
 800ab4e:	4454      	add	r4, sl
 800ab50:	4668      	mov	r0, sp
 800ab52:	f8ad 7000 	strh.w	r7, [sp]
 800ab56:	f8ad 5004 	strh.w	r5, [sp, #4]
 800ab5a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ab5e:	f8ad 4006 	strh.w	r4, [sp, #6]
 800ab62:	f7fb fad9 	bl	8006118 <WM__InitIVRSearch>
 800ab66:	b928      	cbnz	r0, 800ab74 <GUI_ClearRect+0x48>
 800ab68:	4640      	mov	r0, r8
 800ab6a:	f7fd ffaf 	bl	8008acc <LCD_SetDrawMode>
 800ab6e:	b002      	add	sp, #8
 800ab70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab74:	4638      	mov	r0, r7
 800ab76:	4631      	mov	r1, r6
 800ab78:	462a      	mov	r2, r5
 800ab7a:	4623      	mov	r3, r4
 800ab7c:	f7fe f828 	bl	8008bd0 <LCD_FillRect>
 800ab80:	f7fb fa08 	bl	8005f94 <WM__GetNextIVR>
 800ab84:	2800      	cmp	r0, #0
 800ab86:	d1f5      	bne.n	800ab74 <GUI_ClearRect+0x48>
 800ab88:	e7ee      	b.n	800ab68 <GUI_ClearRect+0x3c>
 800ab8a:	bf00      	nop
 800ab8c:	200000b8 	.word	0x200000b8

0800ab90 <GUI_Clear>:
 800ab90:	b510      	push	{r4, lr}
 800ab92:	2000      	movs	r0, #0
 800ab94:	4601      	mov	r1, r0
 800ab96:	f000 f9c1 	bl	800af1c <GUI_GotoXY>
 800ab9a:	4804      	ldr	r0, [pc, #16]	; (800abac <GUI_Clear+0x1c>)
 800ab9c:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800aba0:	4601      	mov	r1, r0
 800aba2:	4613      	mov	r3, r2
 800aba4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aba8:	f7ff bfc0 	b.w	800ab2c <GUI_ClearRect>
 800abac:	ffffc001 	.word	0xffffc001

0800abb0 <GUI__RegisterExit>:
 800abb0:	b480      	push	{r7}
 800abb2:	b083      	sub	sp, #12
 800abb4:	af00      	add	r7, sp, #0
 800abb6:	6078      	str	r0, [r7, #4]
 800abb8:	4b05      	ldr	r3, [pc, #20]	; (800abd0 <GUI__RegisterExit+0x20>)
 800abba:	681a      	ldr	r2, [r3, #0]
 800abbc:	687b      	ldr	r3, [r7, #4]
 800abbe:	605a      	str	r2, [r3, #4]
 800abc0:	4b03      	ldr	r3, [pc, #12]	; (800abd0 <GUI__RegisterExit+0x20>)
 800abc2:	687a      	ldr	r2, [r7, #4]
 800abc4:	601a      	str	r2, [r3, #0]
 800abc6:	370c      	adds	r7, #12
 800abc8:	46bd      	mov	sp, r7
 800abca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abce:	4770      	bx	lr
 800abd0:	20002bac 	.word	0x20002bac

0800abd4 <GUI__Config>:
 800abd4:	b508      	push	{r3, lr}
 800abd6:	4b08      	ldr	r3, [pc, #32]	; (800abf8 <GUI__Config+0x24>)
 800abd8:	681a      	ldr	r2, [r3, #0]
 800abda:	b962      	cbnz	r2, 800abf6 <GUI__Config+0x22>
 800abdc:	2201      	movs	r2, #1
 800abde:	601a      	str	r2, [r3, #0]
 800abe0:	f7f5 fc7c 	bl	80004dc <GUI_X_Config>
 800abe4:	f7f5 fe5e 	bl	80008a4 <LCD_X_Config>
 800abe8:	4804      	ldr	r0, [pc, #16]	; (800abfc <GUI__Config+0x28>)
 800abea:	4b05      	ldr	r3, [pc, #20]	; (800ac00 <GUI__Config+0x2c>)
 800abec:	6003      	str	r3, [r0, #0]
 800abee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800abf2:	f7ff bfdd 	b.w	800abb0 <GUI__RegisterExit>
 800abf6:	bd08      	pop	{r3, pc}
 800abf8:	20002c2c 	.word	0x20002c2c
 800abfc:	20002bb0 	.word	0x20002bb0
 800ac00:	0800aa4d 	.word	0x0800aa4d

0800ac04 <GUI_Init>:
 800ac04:	b590      	push	{r4, r7, lr}
 800ac06:	b083      	sub	sp, #12
 800ac08:	af00      	add	r7, sp, #0
 800ac0a:	4b26      	ldr	r3, [pc, #152]	; (800aca4 <GUI_Init+0xa0>)
 800ac0c:	4a25      	ldr	r2, [pc, #148]	; (800aca4 <GUI_Init+0xa0>)
 800ac0e:	6812      	ldr	r2, [r2, #0]
 800ac10:	f022 0201 	bic.w	r2, r2, #1
 800ac14:	601a      	str	r2, [r3, #0]
 800ac16:	4b24      	ldr	r3, [pc, #144]	; (800aca8 <GUI_Init+0xa4>)
 800ac18:	2201      	movs	r2, #1
 800ac1a:	601a      	str	r2, [r3, #0]
 800ac1c:	bf00      	nop
 800ac1e:	4b22      	ldr	r3, [pc, #136]	; (800aca8 <GUI_Init+0xa4>)
 800ac20:	681b      	ldr	r3, [r3, #0]
 800ac22:	2b00      	cmp	r3, #0
 800ac24:	d1fb      	bne.n	800ac1e <GUI_Init+0x1a>
 800ac26:	4b21      	ldr	r3, [pc, #132]	; (800acac <GUI_Init+0xa8>)
 800ac28:	4a21      	ldr	r2, [pc, #132]	; (800acb0 <GUI_Init+0xac>)
 800ac2a:	601a      	str	r2, [r3, #0]
 800ac2c:	4b1f      	ldr	r3, [pc, #124]	; (800acac <GUI_Init+0xa8>)
 800ac2e:	681a      	ldr	r2, [r3, #0]
 800ac30:	4b20      	ldr	r3, [pc, #128]	; (800acb4 <GUI_Init+0xb0>)
 800ac32:	429a      	cmp	r2, r3
 800ac34:	d000      	beq.n	800ac38 <GUI_Init+0x34>
 800ac36:	e7fe      	b.n	800ac36 <GUI_Init+0x32>
 800ac38:	f7ff ffcc 	bl	800abd4 <GUI__Config>
 800ac3c:	4b1e      	ldr	r3, [pc, #120]	; (800acb8 <GUI_Init+0xb4>)
 800ac3e:	222e      	movs	r2, #46	; 0x2e
 800ac40:	701a      	strb	r2, [r3, #0]
 800ac42:	f7f5 fc67 	bl	8000514 <GUI_X_Init>
 800ac46:	481d      	ldr	r0, [pc, #116]	; (800acbc <GUI_Init+0xb8>)
 800ac48:	f7ff ff26 	bl	800aa98 <_InitContext>
 800ac4c:	f7fe f9e4 	bl	8009018 <emWin_LCD_Init>
 800ac50:	6078      	str	r0, [r7, #4]
 800ac52:	f7fd fec5 	bl	80089e0 <LCD_GetXSizeDisplay>
 800ac56:	4603      	mov	r3, r0
 800ac58:	2b00      	cmp	r3, #0
 800ac5a:	d004      	beq.n	800ac66 <GUI_Init+0x62>
 800ac5c:	f7fd fec6 	bl	80089ec <LCD_GetYSizeDisplay>
 800ac60:	4603      	mov	r3, r0
 800ac62:	2b00      	cmp	r3, #0
 800ac64:	d109      	bne.n	800ac7a <GUI_Init+0x76>
 800ac66:	f7fd fea7 	bl	80089b8 <LCD_GetXSizeMax>
 800ac6a:	4604      	mov	r4, r0
 800ac6c:	f7fd fea7 	bl	80089be <LCD_GetYSizeMax>
 800ac70:	4603      	mov	r3, r0
 800ac72:	4620      	mov	r0, r4
 800ac74:	4619      	mov	r1, r3
 800ac76:	f7fd fea9 	bl	80089cc <LCD_SetDisplaySize>
 800ac7a:	2000      	movs	r0, #0
 800ac7c:	2100      	movs	r1, #0
 800ac7e:	f000 f9b1 	bl	800afe4 <GUI_SetOrg>
 800ac82:	f7fb fc63 	bl	800654c <WM_Init>
 800ac86:	4b0e      	ldr	r3, [pc, #56]	; (800acc0 <GUI_Init+0xbc>)
 800ac88:	681b      	ldr	r3, [r3, #0]
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	d002      	beq.n	800ac94 <GUI_Init+0x90>
 800ac8e:	4b0c      	ldr	r3, [pc, #48]	; (800acc0 <GUI_Init+0xbc>)
 800ac90:	681b      	ldr	r3, [r3, #0]
 800ac92:	4798      	blx	r3
 800ac94:	4b0b      	ldr	r3, [pc, #44]	; (800acc4 <GUI_Init+0xc0>)
 800ac96:	2201      	movs	r2, #1
 800ac98:	701a      	strb	r2, [r3, #0]
 800ac9a:	687b      	ldr	r3, [r7, #4]
 800ac9c:	4618      	mov	r0, r3
 800ac9e:	370c      	adds	r7, #12
 800aca0:	46bd      	mov	sp, r7
 800aca2:	bd90      	pop	{r4, r7, pc}
 800aca4:	e0002000 	.word	0xe0002000
 800aca8:	40023008 	.word	0x40023008
 800acac:	40023000 	.word	0x40023000
 800acb0:	f407a5c2 	.word	0xf407a5c2
 800acb4:	b5e8b5cd 	.word	0xb5e8b5cd
 800acb8:	20002ce0 	.word	0x20002ce0
 800acbc:	20002bbc 	.word	0x20002bbc
 800acc0:	20002d04 	.word	0x20002d04
 800acc4:	20002d0c 	.word	0x20002d0c

0800acc8 <GUI__GetFontSizeY>:
 800acc8:	4b03      	ldr	r3, [pc, #12]	; (800acd8 <GUI__GetFontSizeY+0x10>)
 800acca:	681b      	ldr	r3, [r3, #0]
 800accc:	69db      	ldr	r3, [r3, #28]
 800acce:	7e18      	ldrb	r0, [r3, #24]
 800acd0:	7edb      	ldrb	r3, [r3, #27]
 800acd2:	4358      	muls	r0, r3
 800acd4:	4770      	bx	lr
 800acd6:	bf00      	nop
 800acd8:	200000b8 	.word	0x200000b8

0800acdc <GUI_Long2Len>:
 800acdc:	b510      	push	{r4, lr}
 800acde:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 800ace2:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 800ace6:	2200      	movs	r2, #0
 800ace8:	1c53      	adds	r3, r2, #1
 800acea:	2b0a      	cmp	r3, #10
 800acec:	d006      	beq.n	800acfc <GUI_Long2Len+0x20>
 800acee:	4c06      	ldr	r4, [pc, #24]	; (800ad08 <GUI_Long2Len+0x2c>)
 800acf0:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800acf4:	42a1      	cmp	r1, r4
 800acf6:	d301      	bcc.n	800acfc <GUI_Long2Len+0x20>
 800acf8:	461a      	mov	r2, r3
 800acfa:	e7f5      	b.n	800ace8 <GUI_Long2Len+0xc>
 800acfc:	2800      	cmp	r0, #0
 800acfe:	bfb8      	it	lt
 800ad00:	1c93      	addlt	r3, r2, #2
 800ad02:	4618      	mov	r0, r3
 800ad04:	bd10      	pop	{r4, pc}
 800ad06:	bf00      	nop
 800ad08:	08012440 	.word	0x08012440

0800ad0c <GUI_AddDecShift>:
 800ad0c:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 800ad10:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad12:	681c      	ldr	r4, [r3, #0]
 800ad14:	d109      	bne.n	800ad2a <GUI_AddDecShift+0x1e>
 800ad16:	1c60      	adds	r0, r4, #1
 800ad18:	6018      	str	r0, [r3, #0]
 800ad1a:	3901      	subs	r1, #1
 800ad1c:	202d      	movs	r0, #45	; 0x2d
 800ad1e:	7020      	strb	r0, [r4, #0]
 800ad20:	b2c9      	uxtb	r1, r1
 800ad22:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ad26:	2601      	movs	r6, #1
 800ad28:	e00c      	b.n	800ad44 <GUI_AddDecShift+0x38>
 800ad2a:	2800      	cmp	r0, #0
 800ad2c:	da06      	bge.n	800ad3c <GUI_AddDecShift+0x30>
 800ad2e:	1c65      	adds	r5, r4, #1
 800ad30:	601d      	str	r5, [r3, #0]
 800ad32:	252d      	movs	r5, #45	; 0x2d
 800ad34:	7025      	strb	r5, [r4, #0]
 800ad36:	4240      	negs	r0, r0
 800ad38:	2401      	movs	r4, #1
 800ad3a:	e000      	b.n	800ad3e <GUI_AddDecShift+0x32>
 800ad3c:	2400      	movs	r4, #0
 800ad3e:	1b09      	subs	r1, r1, r4
 800ad40:	b2c9      	uxtb	r1, r1
 800ad42:	2600      	movs	r6, #0
 800ad44:	b30a      	cbz	r2, 800ad8a <GUI_AddDecShift+0x7e>
 800ad46:	3901      	subs	r1, #1
 800ad48:	b2c9      	uxtb	r1, r1
 800ad4a:	e01e      	b.n	800ad8a <GUI_AddDecShift+0x7e>
 800ad4c:	1e4d      	subs	r5, r1, #1
 800ad4e:	4291      	cmp	r1, r2
 800ad50:	b2ed      	uxtb	r5, r5
 800ad52:	d105      	bne.n	800ad60 <GUI_AddDecShift+0x54>
 800ad54:	681c      	ldr	r4, [r3, #0]
 800ad56:	1c67      	adds	r7, r4, #1
 800ad58:	601f      	str	r7, [r3, #0]
 800ad5a:	4f11      	ldr	r7, [pc, #68]	; (800ada0 <GUI_AddDecShift+0x94>)
 800ad5c:	783f      	ldrb	r7, [r7, #0]
 800ad5e:	7027      	strb	r7, [r4, #0]
 800ad60:	4c10      	ldr	r4, [pc, #64]	; (800ada4 <GUI_AddDecShift+0x98>)
 800ad62:	f854 7025 	ldr.w	r7, [r4, r5, lsl #2]
 800ad66:	fb90 f4f7 	sdiv	r4, r0, r7
 800ad6a:	b2e4      	uxtb	r4, r4
 800ad6c:	2c0a      	cmp	r4, #10
 800ad6e:	d80e      	bhi.n	800ad8e <GUI_AddDecShift+0x82>
 800ad70:	fb07 0014 	mls	r0, r7, r4, r0
 800ad74:	b17d      	cbz	r5, 800ad96 <GUI_AddDecShift+0x8a>
 800ad76:	2c0a      	cmp	r4, #10
 800ad78:	bf18      	it	ne
 800ad7a:	4629      	movne	r1, r5
 800ad7c:	681d      	ldr	r5, [r3, #0]
 800ad7e:	bf08      	it	eq
 800ad80:	2401      	moveq	r4, #1
 800ad82:	1c6f      	adds	r7, r5, #1
 800ad84:	3430      	adds	r4, #48	; 0x30
 800ad86:	601f      	str	r7, [r3, #0]
 800ad88:	702c      	strb	r4, [r5, #0]
 800ad8a:	2900      	cmp	r1, #0
 800ad8c:	d1de      	bne.n	800ad4c <GUI_AddDecShift+0x40>
 800ad8e:	681b      	ldr	r3, [r3, #0]
 800ad90:	2200      	movs	r2, #0
 800ad92:	701a      	strb	r2, [r3, #0]
 800ad94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad96:	2e00      	cmp	r6, #0
 800ad98:	d0ed      	beq.n	800ad76 <GUI_AddDecShift+0x6a>
 800ad9a:	3401      	adds	r4, #1
 800ad9c:	b2e4      	uxtb	r4, r4
 800ad9e:	e7ea      	b.n	800ad76 <GUI_AddDecShift+0x6a>
 800ada0:	20002ce0 	.word	0x20002ce0
 800ada4:	08012440 	.word	0x08012440

0800ada8 <GUI_CalcColorDist>:
 800ada8:	b2cb      	uxtb	r3, r1
 800adaa:	b2c2      	uxtb	r2, r0
 800adac:	1ad2      	subs	r2, r2, r3
 800adae:	b292      	uxth	r2, r2
 800adb0:	b293      	uxth	r3, r2
 800adb2:	b530      	push	{r4, r5, lr}
 800adb4:	041c      	lsls	r4, r3, #16
 800adb6:	bf48      	it	mi
 800adb8:	4253      	negmi	r3, r2
 800adba:	f3c1 2507 	ubfx	r5, r1, #8, #8
 800adbe:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800adc2:	ebc5 0202 	rsb	r2, r5, r2
 800adc6:	bf48      	it	mi
 800adc8:	b29b      	uxthmi	r3, r3
 800adca:	b292      	uxth	r2, r2
 800adcc:	0c09      	lsrs	r1, r1, #16
 800adce:	fb13 f403 	smulbb	r4, r3, r3
 800add2:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 800add6:	b293      	uxth	r3, r2
 800add8:	041d      	lsls	r5, r3, #16
 800adda:	b289      	uxth	r1, r1
 800addc:	b288      	uxth	r0, r1
 800adde:	bf44      	itt	mi
 800ade0:	4253      	negmi	r3, r2
 800ade2:	b29b      	uxthmi	r3, r3
 800ade4:	0402      	lsls	r2, r0, #16
 800ade6:	bf48      	it	mi
 800ade8:	4248      	negmi	r0, r1
 800adea:	fb13 4303 	smlabb	r3, r3, r3, r4
 800adee:	bf48      	it	mi
 800adf0:	b280      	uxthmi	r0, r0
 800adf2:	fb00 3000 	mla	r0, r0, r0, r3
 800adf6:	bd30      	pop	{r4, r5, pc}

0800adf8 <GUI_GetClientRect>:
 800adf8:	b108      	cbz	r0, 800adfe <GUI_GetClientRect+0x6>
 800adfa:	f7f9 be5b 	b.w	8004ab4 <WM_GetClientRect>
 800adfe:	4770      	bx	lr

0800ae00 <GUI_GetBkColor>:
 800ae00:	b508      	push	{r3, lr}
 800ae02:	f003 fe69 	bl	800ead8 <LCD_GetBkColorIndex>
 800ae06:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ae0a:	f7fe b969 	b.w	80090e0 <LCD_Index2Color>

0800ae0e <GUI_GetColor>:
 800ae0e:	b508      	push	{r3, lr}
 800ae10:	f003 fe6a 	bl	800eae8 <LCD_GetColorIndex>
 800ae14:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ae18:	f7fe b962 	b.w	80090e0 <LCD_Index2Color>

0800ae1c <GUI_GetFontSizeY>:
 800ae1c:	f7ff bf54 	b.w	800acc8 <GUI__GetFontSizeY>

0800ae20 <GUI_GetLineStyle>:
 800ae20:	4b01      	ldr	r3, [pc, #4]	; (800ae28 <GUI_GetLineStyle+0x8>)
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	7e98      	ldrb	r0, [r3, #26]
 800ae26:	4770      	bx	lr
 800ae28:	200000b8 	.word	0x200000b8

0800ae2c <GUI_GetOrg>:
 800ae2c:	4b04      	ldr	r3, [pc, #16]	; (800ae40 <GUI_GetOrg+0x14>)
 800ae2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ae32:	6003      	str	r3, [r0, #0]
 800ae34:	4b03      	ldr	r3, [pc, #12]	; (800ae44 <GUI_GetOrg+0x18>)
 800ae36:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ae3a:	600b      	str	r3, [r1, #0]
 800ae3c:	4770      	bx	lr
 800ae3e:	bf00      	nop
 800ae40:	20002d00 	.word	0x20002d00
 800ae44:	20002cf0 	.word	0x20002cf0

0800ae48 <GUI_GetYSizeOfFont>:
 800ae48:	7e02      	ldrb	r2, [r0, #24]
 800ae4a:	7ec0      	ldrb	r0, [r0, #27]
 800ae4c:	4350      	muls	r0, r2
 800ae4e:	4770      	bx	lr

0800ae50 <GUI_MergeRect>:
 800ae50:	b510      	push	{r4, lr}
 800ae52:	b338      	cbz	r0, 800aea4 <GUI_MergeRect+0x54>
 800ae54:	b309      	cbz	r1, 800ae9a <GUI_MergeRect+0x4a>
 800ae56:	b30a      	cbz	r2, 800ae9c <GUI_MergeRect+0x4c>
 800ae58:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ae5c:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ae60:	429c      	cmp	r4, r3
 800ae62:	bfb8      	it	lt
 800ae64:	4623      	movlt	r3, r4
 800ae66:	8003      	strh	r3, [r0, #0]
 800ae68:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ae6c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ae70:	429c      	cmp	r4, r3
 800ae72:	bfb8      	it	lt
 800ae74:	4623      	movlt	r3, r4
 800ae76:	8043      	strh	r3, [r0, #2]
 800ae78:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800ae7c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800ae80:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800ae84:	429c      	cmp	r4, r3
 800ae86:	bfa8      	it	ge
 800ae88:	4623      	movge	r3, r4
 800ae8a:	8083      	strh	r3, [r0, #4]
 800ae8c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800ae90:	4299      	cmp	r1, r3
 800ae92:	bfa8      	it	ge
 800ae94:	460b      	movge	r3, r1
 800ae96:	80c3      	strh	r3, [r0, #6]
 800ae98:	bd10      	pop	{r4, pc}
 800ae9a:	4611      	mov	r1, r2
 800ae9c:	680b      	ldr	r3, [r1, #0]
 800ae9e:	6003      	str	r3, [r0, #0]
 800aea0:	684b      	ldr	r3, [r1, #4]
 800aea2:	6043      	str	r3, [r0, #4]
 800aea4:	bd10      	pop	{r4, pc}

0800aea6 <GUI_MoveRect>:
 800aea6:	b168      	cbz	r0, 800aec4 <GUI_MoveRect+0x1e>
 800aea8:	8803      	ldrh	r3, [r0, #0]
 800aeaa:	b289      	uxth	r1, r1
 800aeac:	440b      	add	r3, r1
 800aeae:	8003      	strh	r3, [r0, #0]
 800aeb0:	8883      	ldrh	r3, [r0, #4]
 800aeb2:	4419      	add	r1, r3
 800aeb4:	8843      	ldrh	r3, [r0, #2]
 800aeb6:	8081      	strh	r1, [r0, #4]
 800aeb8:	b292      	uxth	r2, r2
 800aeba:	4413      	add	r3, r2
 800aebc:	8043      	strh	r3, [r0, #2]
 800aebe:	88c3      	ldrh	r3, [r0, #6]
 800aec0:	441a      	add	r2, r3
 800aec2:	80c2      	strh	r2, [r0, #6]
 800aec4:	4770      	bx	lr
	...

0800aec8 <GUI_Exec1>:
 800aec8:	4b0c      	ldr	r3, [pc, #48]	; (800aefc <GUI_Exec1+0x34>)
 800aeca:	b510      	push	{r4, lr}
 800aecc:	681c      	ldr	r4, [r3, #0]
 800aece:	b11c      	cbz	r4, 800aed8 <GUI_Exec1+0x10>
 800aed0:	47a0      	blx	r4
 800aed2:	1c04      	adds	r4, r0, #0
 800aed4:	bf18      	it	ne
 800aed6:	2401      	movne	r4, #1
 800aed8:	f7fb fa92 	bl	8006400 <WM_Exec>
 800aedc:	4b08      	ldr	r3, [pc, #32]	; (800af00 <GUI_Exec1+0x38>)
 800aede:	681b      	ldr	r3, [r3, #0]
 800aee0:	2800      	cmp	r0, #0
 800aee2:	bf18      	it	ne
 800aee4:	2401      	movne	r4, #1
 800aee6:	b11b      	cbz	r3, 800aef0 <GUI_Exec1+0x28>
 800aee8:	4798      	blx	r3
 800aeea:	2800      	cmp	r0, #0
 800aeec:	bf18      	it	ne
 800aeee:	2401      	movne	r4, #1
 800aef0:	4b04      	ldr	r3, [pc, #16]	; (800af04 <GUI_Exec1+0x3c>)
 800aef2:	681b      	ldr	r3, [r3, #0]
 800aef4:	b103      	cbz	r3, 800aef8 <GUI_Exec1+0x30>
 800aef6:	4798      	blx	r3
 800aef8:	4620      	mov	r0, r4
 800aefa:	bd10      	pop	{r4, pc}
 800aefc:	20002cfc 	.word	0x20002cfc
 800af00:	20002d28 	.word	0x20002d28
 800af04:	20002d20 	.word	0x20002d20

0800af08 <GUI_Exec>:
 800af08:	b510      	push	{r4, lr}
 800af0a:	2400      	movs	r4, #0
 800af0c:	f7ff ffdc 	bl	800aec8 <GUI_Exec1>
 800af10:	b108      	cbz	r0, 800af16 <GUI_Exec+0xe>
 800af12:	2401      	movs	r4, #1
 800af14:	e7fa      	b.n	800af0c <GUI_Exec+0x4>
 800af16:	4620      	mov	r0, r4
 800af18:	bd10      	pop	{r4, pc}
	...

0800af1c <GUI_GotoXY>:
 800af1c:	4b02      	ldr	r3, [pc, #8]	; (800af28 <GUI_GotoXY+0xc>)
 800af1e:	681b      	ldr	r3, [r3, #0]
 800af20:	8458      	strh	r0, [r3, #34]	; 0x22
 800af22:	8499      	strh	r1, [r3, #36]	; 0x24
 800af24:	2000      	movs	r0, #0
 800af26:	4770      	bx	lr
 800af28:	200000b8 	.word	0x200000b8

0800af2c <GUI_SetPenSize>:
 800af2c:	4b02      	ldr	r3, [pc, #8]	; (800af38 <GUI_SetPenSize+0xc>)
 800af2e:	681b      	ldr	r3, [r3, #0]
 800af30:	7e1a      	ldrb	r2, [r3, #24]
 800af32:	7618      	strb	r0, [r3, #24]
 800af34:	4610      	mov	r0, r2
 800af36:	4770      	bx	lr
 800af38:	200000b8 	.word	0x200000b8

0800af3c <GUI_RectsIntersect>:
 800af3c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800af40:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800af44:	429a      	cmp	r2, r3
 800af46:	dc14      	bgt.n	800af72 <GUI_RectsIntersect+0x36>
 800af48:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800af4c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800af50:	429a      	cmp	r2, r3
 800af52:	dc0e      	bgt.n	800af72 <GUI_RectsIntersect+0x36>
 800af54:	f9b0 2000 	ldrsh.w	r2, [r0]
 800af58:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800af5c:	429a      	cmp	r2, r3
 800af5e:	dc08      	bgt.n	800af72 <GUI_RectsIntersect+0x36>
 800af60:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800af64:	f9b1 2000 	ldrsh.w	r2, [r1]
 800af68:	429a      	cmp	r2, r3
 800af6a:	bfcc      	ite	gt
 800af6c:	2000      	movgt	r0, #0
 800af6e:	2001      	movle	r0, #1
 800af70:	4770      	bx	lr
 800af72:	2000      	movs	r0, #0
 800af74:	4770      	bx	lr
	...

0800af78 <GUI_SaveContext_W>:
 800af78:	b508      	push	{r3, lr}
 800af7a:	4b03      	ldr	r3, [pc, #12]	; (800af88 <GUI_SaveContext_W+0x10>)
 800af7c:	2270      	movs	r2, #112	; 0x70
 800af7e:	6819      	ldr	r1, [r3, #0]
 800af80:	f005 f890 	bl	80100a4 <memcpy>
 800af84:	bd08      	pop	{r3, pc}
 800af86:	bf00      	nop
 800af88:	200000b8 	.word	0x200000b8

0800af8c <GUI_RestoreContext>:
 800af8c:	b508      	push	{r3, lr}
 800af8e:	4b03      	ldr	r3, [pc, #12]	; (800af9c <GUI_RestoreContext+0x10>)
 800af90:	4601      	mov	r1, r0
 800af92:	2270      	movs	r2, #112	; 0x70
 800af94:	6818      	ldr	r0, [r3, #0]
 800af96:	f005 f885 	bl	80100a4 <memcpy>
 800af9a:	bd08      	pop	{r3, pc}
 800af9c:	200000b8 	.word	0x200000b8

0800afa0 <GUI_SelectLCD>:
 800afa0:	b508      	push	{r3, lr}
 800afa2:	f003 fc55 	bl	800e850 <LCD_SelectLCD>
 800afa6:	f7fd fc1d 	bl	80087e4 <LCD_UpdateColorIndices>
 800afaa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800afae:	f7fb ba63 	b.w	8006478 <WM_Activate>

0800afb2 <GUI_SetBkColor>:
 800afb2:	f7fe b8dd 	b.w	8009170 <LCD_SetBkColor>

0800afb6 <GUI_SetColor>:
 800afb6:	f7fe b8e3 	b.w	8009180 <LCD_SetColor>

0800afba <GUI_SetDrawMode>:
 800afba:	f7fd bd87 	b.w	8008acc <LCD_SetDrawMode>
	...

0800afc0 <GUI_SetFont>:
 800afc0:	4b03      	ldr	r3, [pc, #12]	; (800afd0 <GUI_SetFont+0x10>)
 800afc2:	681b      	ldr	r3, [r3, #0]
 800afc4:	69d9      	ldr	r1, [r3, #28]
 800afc6:	b100      	cbz	r0, 800afca <GUI_SetFont+0xa>
 800afc8:	61d8      	str	r0, [r3, #28]
 800afca:	4608      	mov	r0, r1
 800afcc:	4770      	bx	lr
 800afce:	bf00      	nop
 800afd0:	200000b8 	.word	0x200000b8

0800afd4 <GUI_SetLineStyle>:
 800afd4:	4b02      	ldr	r3, [pc, #8]	; (800afe0 <GUI_SetLineStyle+0xc>)
 800afd6:	681b      	ldr	r3, [r3, #0]
 800afd8:	7e9a      	ldrb	r2, [r3, #26]
 800afda:	7698      	strb	r0, [r3, #26]
 800afdc:	4610      	mov	r0, r2
 800afde:	4770      	bx	lr
 800afe0:	200000b8 	.word	0x200000b8

0800afe4 <GUI_SetOrg>:
 800afe4:	460a      	mov	r2, r1
 800afe6:	4908      	ldr	r1, [pc, #32]	; (800b008 <GUI_SetOrg+0x24>)
 800afe8:	b510      	push	{r4, lr}
 800afea:	8008      	strh	r0, [r1, #0]
 800afec:	4907      	ldr	r1, [pc, #28]	; (800b00c <GUI_SetOrg+0x28>)
 800afee:	800a      	strh	r2, [r1, #0]
 800aff0:	4907      	ldr	r1, [pc, #28]	; (800b010 <GUI_SetOrg+0x2c>)
 800aff2:	6809      	ldr	r1, [r1, #0]
 800aff4:	4603      	mov	r3, r0
 800aff6:	7c48      	ldrb	r0, [r1, #17]
 800aff8:	4906      	ldr	r1, [pc, #24]	; (800b014 <GUI_SetOrg+0x30>)
 800affa:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800affe:	68c1      	ldr	r1, [r0, #12]
 800b000:	6a0c      	ldr	r4, [r1, #32]
 800b002:	4619      	mov	r1, r3
 800b004:	47a0      	blx	r4
 800b006:	bd10      	pop	{r4, pc}
 800b008:	20002d00 	.word	0x20002d00
 800b00c:	20002cf0 	.word	0x20002cf0
 800b010:	200000b8 	.word	0x200000b8
 800b014:	20002d2c 	.word	0x20002d2c

0800b018 <GUI_SetTextAlign>:
 800b018:	4b03      	ldr	r3, [pc, #12]	; (800b028 <GUI_SetTextAlign+0x10>)
 800b01a:	681b      	ldr	r3, [r3, #0]
 800b01c:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 800b020:	8598      	strh	r0, [r3, #44]	; 0x2c
 800b022:	4610      	mov	r0, r2
 800b024:	4770      	bx	lr
 800b026:	bf00      	nop
 800b028:	200000b8 	.word	0x200000b8

0800b02c <GUI_SetTextMode>:
 800b02c:	4b03      	ldr	r3, [pc, #12]	; (800b03c <GUI_SetTextMode+0x10>)
 800b02e:	681b      	ldr	r3, [r3, #0]
 800b030:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800b034:	8558      	strh	r0, [r3, #42]	; 0x2a
 800b036:	4610      	mov	r0, r2
 800b038:	4770      	bx	lr
 800b03a:	bf00      	nop
 800b03c:	200000b8 	.word	0x200000b8

0800b040 <GL_SetDefault>:
 800b040:	b508      	push	{r3, lr}
 800b042:	4b0e      	ldr	r3, [pc, #56]	; (800b07c <GL_SetDefault+0x3c>)
 800b044:	6818      	ldr	r0, [r3, #0]
 800b046:	f7fe f893 	bl	8009170 <LCD_SetBkColor>
 800b04a:	4b0d      	ldr	r3, [pc, #52]	; (800b080 <GL_SetDefault+0x40>)
 800b04c:	6818      	ldr	r0, [r3, #0]
 800b04e:	f7fe f897 	bl	8009180 <LCD_SetColor>
 800b052:	2001      	movs	r0, #1
 800b054:	f7ff ff6a 	bl	800af2c <GUI_SetPenSize>
 800b058:	2000      	movs	r0, #0
 800b05a:	f7ff ffdd 	bl	800b018 <GUI_SetTextAlign>
 800b05e:	2000      	movs	r0, #0
 800b060:	f7ff ffe4 	bl	800b02c <GUI_SetTextMode>
 800b064:	2000      	movs	r0, #0
 800b066:	f7ff ffa8 	bl	800afba <GUI_SetDrawMode>
 800b06a:	4b06      	ldr	r3, [pc, #24]	; (800b084 <GL_SetDefault+0x44>)
 800b06c:	6818      	ldr	r0, [r3, #0]
 800b06e:	f7ff ffa7 	bl	800afc0 <GUI_SetFont>
 800b072:	2000      	movs	r0, #0
 800b074:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b078:	f7ff bfac 	b.w	800afd4 <GUI_SetLineStyle>
 800b07c:	20002bb8 	.word	0x20002bb8
 800b080:	200000c0 	.word	0x200000c0
 800b084:	200000bc 	.word	0x200000bc

0800b088 <GL_FillCircle>:
 800b088:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b08c:	f240 29c3 	movw	r9, #707	; 0x2c3
 800b090:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 800b148 <GL_FillCircle+0xc0>
 800b094:	fb09 f902 	mul.w	r9, r9, r2
 800b098:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b09c:	fb99 f9f3 	sdiv	r9, r9, r3
 800b0a0:	f8d8 3000 	ldr.w	r3, [r8]
 800b0a4:	f04f 0b02 	mov.w	fp, #2
 800b0a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b0aa:	4606      	mov	r6, r0
 800b0ac:	fb92 fbfb 	sdiv	fp, r2, fp
 800b0b0:	1a80      	subs	r0, r0, r2
 800b0b2:	4614      	mov	r4, r2
 800b0b4:	fb02 bb02 	mla	fp, r2, r2, fp
 800b0b8:	681b      	ldr	r3, [r3, #0]
 800b0ba:	18b2      	adds	r2, r6, r2
 800b0bc:	460f      	mov	r7, r1
 800b0be:	4798      	blx	r3
 800b0c0:	f109 0901 	add.w	r9, r9, #1
 800b0c4:	2501      	movs	r5, #1
 800b0c6:	454d      	cmp	r5, r9
 800b0c8:	dc3a      	bgt.n	800b140 <GL_FillCircle+0xb8>
 800b0ca:	fb04 f304 	mul.w	r3, r4, r4
 800b0ce:	fb05 3305 	mla	r3, r5, r5, r3
 800b0d2:	455b      	cmp	r3, fp
 800b0d4:	dd1b      	ble.n	800b10e <GL_FillCircle+0x86>
 800b0d6:	454c      	cmp	r4, r9
 800b0d8:	dd18      	ble.n	800b10c <GL_FillCircle+0x84>
 800b0da:	f8d8 2000 	ldr.w	r2, [r8]
 800b0de:	1c73      	adds	r3, r6, #1
 800b0e0:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b0e2:	f106 3aff 	add.w	sl, r6, #4294967295
 800b0e6:	1b5b      	subs	r3, r3, r5
 800b0e8:	44aa      	add	sl, r5
 800b0ea:	f8d2 c000 	ldr.w	ip, [r2]
 800b0ee:	9301      	str	r3, [sp, #4]
 800b0f0:	4618      	mov	r0, r3
 800b0f2:	1939      	adds	r1, r7, r4
 800b0f4:	4652      	mov	r2, sl
 800b0f6:	47e0      	blx	ip
 800b0f8:	f8d8 2000 	ldr.w	r2, [r8]
 800b0fc:	9b01      	ldr	r3, [sp, #4]
 800b0fe:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b100:	4618      	mov	r0, r3
 800b102:	f8d2 c000 	ldr.w	ip, [r2]
 800b106:	1b39      	subs	r1, r7, r4
 800b108:	4652      	mov	r2, sl
 800b10a:	47e0      	blx	ip
 800b10c:	3c01      	subs	r4, #1
 800b10e:	f8d8 2000 	ldr.w	r2, [r8]
 800b112:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b114:	1b33      	subs	r3, r6, r4
 800b116:	eb06 0a04 	add.w	sl, r6, r4
 800b11a:	f8d2 c000 	ldr.w	ip, [r2]
 800b11e:	9301      	str	r3, [sp, #4]
 800b120:	4618      	mov	r0, r3
 800b122:	19e9      	adds	r1, r5, r7
 800b124:	4652      	mov	r2, sl
 800b126:	47e0      	blx	ip
 800b128:	f8d8 2000 	ldr.w	r2, [r8]
 800b12c:	9b01      	ldr	r3, [sp, #4]
 800b12e:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b130:	1b79      	subs	r1, r7, r5
 800b132:	f8d2 c000 	ldr.w	ip, [r2]
 800b136:	4618      	mov	r0, r3
 800b138:	4652      	mov	r2, sl
 800b13a:	47e0      	blx	ip
 800b13c:	3501      	adds	r5, #1
 800b13e:	e7c2      	b.n	800b0c6 <GL_FillCircle+0x3e>
 800b140:	b003      	add	sp, #12
 800b142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b146:	bf00      	nop
 800b148:	200000b8 	.word	0x200000b8

0800b14c <GUIPROP__FindChar>:
 800b14c:	b138      	cbz	r0, 800b15e <GUIPROP__FindChar+0x12>
 800b14e:	8803      	ldrh	r3, [r0, #0]
 800b150:	428b      	cmp	r3, r1
 800b152:	d802      	bhi.n	800b15a <GUIPROP__FindChar+0xe>
 800b154:	8843      	ldrh	r3, [r0, #2]
 800b156:	428b      	cmp	r3, r1
 800b158:	d201      	bcs.n	800b15e <GUIPROP__FindChar+0x12>
 800b15a:	6880      	ldr	r0, [r0, #8]
 800b15c:	e7f6      	b.n	800b14c <GUIPROP__FindChar>
 800b15e:	4770      	bx	lr

0800b160 <GUIPROP_DispChar>:
 800b160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b164:	4c38      	ldr	r4, [pc, #224]	; (800b248 <GUIPROP_DispChar+0xe8>)
 800b166:	6823      	ldr	r3, [r4, #0]
 800b168:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800b16c:	69db      	ldr	r3, [r3, #28]
 800b16e:	4605      	mov	r5, r0
 800b170:	b089      	sub	sp, #36	; 0x24
 800b172:	69d8      	ldr	r0, [r3, #28]
 800b174:	4629      	mov	r1, r5
 800b176:	f7ff ffe9 	bl	800b14c <GUIPROP__FindChar>
 800b17a:	2800      	cmp	r0, #0
 800b17c:	d061      	beq.n	800b242 <GUIPROP_DispChar+0xe2>
 800b17e:	f8b0 8000 	ldrh.w	r8, [r0]
 800b182:	6847      	ldr	r7, [r0, #4]
 800b184:	ebc8 0805 	rsb	r8, r8, r5
 800b188:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800b18c:	4648      	mov	r0, r9
 800b18e:	f896 b002 	ldrb.w	fp, [r6, #2]
 800b192:	f7fd fc9b 	bl	8008acc <LCD_SetDrawMode>
 800b196:	6825      	ldr	r5, [r4, #0]
 800b198:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800b19c:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800b1a0:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800b1a4:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800b1a8:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800b1ac:	9306      	str	r3, [sp, #24]
 800b1ae:	4682      	mov	sl, r0
 800b1b0:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800b1b4:	f8cd c000 	str.w	ip, [sp]
 800b1b8:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800b1bc:	f8cd e004 	str.w	lr, [sp, #4]
 800b1c0:	f04f 0e01 	mov.w	lr, #1
 800b1c4:	f8cd b00c 	str.w	fp, [sp, #12]
 800b1c8:	f8cd e008 	str.w	lr, [sp, #8]
 800b1cc:	6873      	ldr	r3, [r6, #4]
 800b1ce:	9304      	str	r3, [sp, #16]
 800b1d0:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800b1d2:	9b06      	ldr	r3, [sp, #24]
 800b1d4:	9505      	str	r5, [sp, #20]
 800b1d6:	f7fd fe03 	bl	8008de0 <LCD_DrawBitmap>
 800b1da:	6823      	ldr	r3, [r4, #0]
 800b1dc:	69da      	ldr	r2, [r3, #28]
 800b1de:	f892 b019 	ldrb.w	fp, [r2, #25]
 800b1e2:	7e11      	ldrb	r1, [r2, #24]
 800b1e4:	458b      	cmp	fp, r1
 800b1e6:	d920      	bls.n	800b22a <GUIPROP_DispChar+0xca>
 800b1e8:	f1b9 0f02 	cmp.w	r9, #2
 800b1ec:	7ed5      	ldrb	r5, [r2, #27]
 800b1ee:	d01c      	beq.n	800b22a <GUIPROP_DispChar+0xca>
 800b1f0:	9107      	str	r1, [sp, #28]
 800b1f2:	f7ff fe0c 	bl	800ae0e <GUI_GetColor>
 800b1f6:	4681      	mov	r9, r0
 800b1f8:	f7ff fe02 	bl	800ae00 <GUI_GetBkColor>
 800b1fc:	f7ff fedb 	bl	800afb6 <GUI_SetColor>
 800b200:	6824      	ldr	r4, [r4, #0]
 800b202:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800b206:	69e2      	ldr	r2, [r4, #28]
 800b208:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800b20c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800b210:	7ed2      	ldrb	r2, [r2, #27]
 800b212:	9907      	ldr	r1, [sp, #28]
 800b214:	fb07 0202 	mla	r2, r7, r2, r0
 800b218:	fb01 3105 	mla	r1, r1, r5, r3
 800b21c:	fb0b 3305 	mla	r3, fp, r5, r3
 800b220:	f7fd fcd6 	bl	8008bd0 <LCD_FillRect>
 800b224:	4648      	mov	r0, r9
 800b226:	f7ff fec6 	bl	800afb6 <GUI_SetColor>
 800b22a:	4650      	mov	r0, sl
 800b22c:	f7fd fc4e 	bl	8008acc <LCD_SetDrawMode>
 800b230:	4b05      	ldr	r3, [pc, #20]	; (800b248 <GUIPROP_DispChar+0xe8>)
 800b232:	681b      	ldr	r3, [r3, #0]
 800b234:	69da      	ldr	r2, [r3, #28]
 800b236:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800b238:	7e90      	ldrb	r0, [r2, #26]
 800b23a:	7872      	ldrb	r2, [r6, #1]
 800b23c:	fb00 1202 	mla	r2, r0, r2, r1
 800b240:	845a      	strh	r2, [r3, #34]	; 0x22
 800b242:	b009      	add	sp, #36	; 0x24
 800b244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b248:	200000b8 	.word	0x200000b8

0800b24c <GUIPROP_GetCharDistX>:
 800b24c:	4b0d      	ldr	r3, [pc, #52]	; (800b284 <GUIPROP_GetCharDistX+0x38>)
 800b24e:	b570      	push	{r4, r5, r6, lr}
 800b250:	681b      	ldr	r3, [r3, #0]
 800b252:	69dd      	ldr	r5, [r3, #28]
 800b254:	4606      	mov	r6, r0
 800b256:	460c      	mov	r4, r1
 800b258:	69e8      	ldr	r0, [r5, #28]
 800b25a:	4631      	mov	r1, r6
 800b25c:	f7ff ff76 	bl	800b14c <GUIPROP__FindChar>
 800b260:	b170      	cbz	r0, 800b280 <GUIPROP_GetCharDistX+0x34>
 800b262:	8803      	ldrh	r3, [r0, #0]
 800b264:	6842      	ldr	r2, [r0, #4]
 800b266:	1af6      	subs	r6, r6, r3
 800b268:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800b26c:	7858      	ldrb	r0, [r3, #1]
 800b26e:	7eab      	ldrb	r3, [r5, #26]
 800b270:	fb10 f003 	smulbb	r0, r0, r3
 800b274:	b124      	cbz	r4, 800b280 <GUIPROP_GetCharDistX+0x34>
 800b276:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800b27a:	fb12 f303 	smulbb	r3, r2, r3
 800b27e:	6023      	str	r3, [r4, #0]
 800b280:	bd70      	pop	{r4, r5, r6, pc}
 800b282:	bf00      	nop
 800b284:	200000b8 	.word	0x200000b8

0800b288 <GUIPROP_GetFontInfo>:
 800b288:	2301      	movs	r3, #1
 800b28a:	800b      	strh	r3, [r1, #0]
 800b28c:	4770      	bx	lr

0800b28e <GUIPROP_IsInFont>:
 800b28e:	b508      	push	{r3, lr}
 800b290:	69c0      	ldr	r0, [r0, #28]
 800b292:	f7ff ff5b 	bl	800b14c <GUIPROP__FindChar>
 800b296:	3000      	adds	r0, #0
 800b298:	bf18      	it	ne
 800b29a:	2001      	movne	r0, #1
 800b29c:	bd08      	pop	{r3, pc}
	...

0800b2a0 <GUIMONO_DispChar>:
 800b2a0:	4b52      	ldr	r3, [pc, #328]	; (800b3ec <GUIMONO_DispChar+0x14c>)
 800b2a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2a6:	681b      	ldr	r3, [r3, #0]
 800b2a8:	69d9      	ldr	r1, [r3, #28]
 800b2aa:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800b2ac:	69cc      	ldr	r4, [r1, #28]
 800b2ae:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800b2b0:	89a2      	ldrh	r2, [r4, #12]
 800b2b2:	4290      	cmp	r0, r2
 800b2b4:	b08b      	sub	sp, #44	; 0x2c
 800b2b6:	d308      	bcc.n	800b2ca <GUIMONO_DispChar+0x2a>
 800b2b8:	89e6      	ldrh	r6, [r4, #14]
 800b2ba:	4286      	cmp	r6, r0
 800b2bc:	d305      	bcc.n	800b2ca <GUIMONO_DispChar+0x2a>
 800b2be:	f8d4 9000 	ldr.w	r9, [r4]
 800b2c2:	1a82      	subs	r2, r0, r2
 800b2c4:	f04f 3bff 	mov.w	fp, #4294967295
 800b2c8:	e015      	b.n	800b2f6 <GUIMONO_DispChar+0x56>
 800b2ca:	68a2      	ldr	r2, [r4, #8]
 800b2cc:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800b2d0:	2a00      	cmp	r2, #0
 800b2d2:	f000 8081 	beq.w	800b3d8 <GUIMONO_DispChar+0x138>
 800b2d6:	8816      	ldrh	r6, [r2, #0]
 800b2d8:	42b0      	cmp	r0, r6
 800b2da:	d37d      	bcc.n	800b3d8 <GUIMONO_DispChar+0x138>
 800b2dc:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800b2e0:	4584      	cmp	ip, r0
 800b2e2:	d379      	bcc.n	800b3d8 <GUIMONO_DispChar+0x138>
 800b2e4:	6852      	ldr	r2, [r2, #4]
 800b2e6:	1b80      	subs	r0, r0, r6
 800b2e8:	b280      	uxth	r0, r0
 800b2ea:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800b2ee:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800b2f2:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800b2f6:	1c50      	adds	r0, r2, #1
 800b2f8:	d06e      	beq.n	800b3d8 <GUIMONO_DispChar+0x138>
 800b2fa:	f891 8018 	ldrb.w	r8, [r1, #24]
 800b2fe:	7ca1      	ldrb	r1, [r4, #18]
 800b300:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800b304:	7c26      	ldrb	r6, [r4, #16]
 800b306:	9206      	str	r2, [sp, #24]
 800b308:	fb18 f101 	smulbb	r1, r8, r1
 800b30c:	9107      	str	r1, [sp, #28]
 800b30e:	fa0f f18a 	sxth.w	r1, sl
 800b312:	4608      	mov	r0, r1
 800b314:	9108      	str	r1, [sp, #32]
 800b316:	f7fd fbd9 	bl	8008acc <LCD_SetDrawMode>
 800b31a:	4934      	ldr	r1, [pc, #208]	; (800b3ec <GUIMONO_DispChar+0x14c>)
 800b31c:	9009      	str	r0, [sp, #36]	; 0x24
 800b31e:	680b      	ldr	r3, [r1, #0]
 800b320:	9a06      	ldr	r2, [sp, #24]
 800b322:	69d9      	ldr	r1, [r3, #28]
 800b324:	7e88      	ldrb	r0, [r1, #26]
 800b326:	9000      	str	r0, [sp, #0]
 800b328:	7ec9      	ldrb	r1, [r1, #27]
 800b32a:	9101      	str	r1, [sp, #4]
 800b32c:	2101      	movs	r1, #1
 800b32e:	9102      	str	r1, [sp, #8]
 800b330:	7ca1      	ldrb	r1, [r4, #18]
 800b332:	9103      	str	r1, [sp, #12]
 800b334:	9907      	ldr	r1, [sp, #28]
 800b336:	fb01 9202 	mla	r2, r1, r2, r9
 800b33a:	9204      	str	r2, [sp, #16]
 800b33c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b33e:	9305      	str	r3, [sp, #20]
 800b340:	b23f      	sxth	r7, r7
 800b342:	b22d      	sxth	r5, r5
 800b344:	4638      	mov	r0, r7
 800b346:	4629      	mov	r1, r5
 800b348:	4632      	mov	r2, r6
 800b34a:	4643      	mov	r3, r8
 800b34c:	f7fd fd48 	bl	8008de0 <LCD_DrawBitmap>
 800b350:	f1bb 3fff 	cmp.w	fp, #4294967295
 800b354:	d01b      	beq.n	800b38e <GUIMONO_DispChar+0xee>
 800b356:	f04a 0002 	orr.w	r0, sl, #2
 800b35a:	b200      	sxth	r0, r0
 800b35c:	f7fd fbb6 	bl	8008acc <LCD_SetDrawMode>
 800b360:	4a22      	ldr	r2, [pc, #136]	; (800b3ec <GUIMONO_DispChar+0x14c>)
 800b362:	6813      	ldr	r3, [r2, #0]
 800b364:	69da      	ldr	r2, [r3, #28]
 800b366:	7e91      	ldrb	r1, [r2, #26]
 800b368:	9100      	str	r1, [sp, #0]
 800b36a:	7ed2      	ldrb	r2, [r2, #27]
 800b36c:	9201      	str	r2, [sp, #4]
 800b36e:	2101      	movs	r1, #1
 800b370:	9102      	str	r1, [sp, #8]
 800b372:	9907      	ldr	r1, [sp, #28]
 800b374:	7ca2      	ldrb	r2, [r4, #18]
 800b376:	9203      	str	r2, [sp, #12]
 800b378:	fb01 920b 	mla	r2, r1, fp, r9
 800b37c:	9204      	str	r2, [sp, #16]
 800b37e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b380:	9305      	str	r3, [sp, #20]
 800b382:	4638      	mov	r0, r7
 800b384:	4629      	mov	r1, r5
 800b386:	4632      	mov	r2, r6
 800b388:	4643      	mov	r3, r8
 800b38a:	f7fd fd29 	bl	8008de0 <LCD_DrawBitmap>
 800b38e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800b3ec <GUIMONO_DispChar+0x14c>
 800b392:	f8d8 3000 	ldr.w	r3, [r8]
 800b396:	69db      	ldr	r3, [r3, #28]
 800b398:	7e5a      	ldrb	r2, [r3, #25]
 800b39a:	7e1b      	ldrb	r3, [r3, #24]
 800b39c:	429a      	cmp	r2, r3
 800b39e:	d917      	bls.n	800b3d0 <GUIMONO_DispChar+0x130>
 800b3a0:	9a08      	ldr	r2, [sp, #32]
 800b3a2:	2a02      	cmp	r2, #2
 800b3a4:	d014      	beq.n	800b3d0 <GUIMONO_DispChar+0x130>
 800b3a6:	f08a 0004 	eor.w	r0, sl, #4
 800b3aa:	b200      	sxth	r0, r0
 800b3ac:	f7fd fb8e 	bl	8008acc <LCD_SetDrawMode>
 800b3b0:	f8d8 3000 	ldr.w	r3, [r8]
 800b3b4:	69db      	ldr	r3, [r3, #28]
 800b3b6:	f893 e018 	ldrb.w	lr, [r3, #24]
 800b3ba:	7ed9      	ldrb	r1, [r3, #27]
 800b3bc:	7e9a      	ldrb	r2, [r3, #26]
 800b3be:	7e5b      	ldrb	r3, [r3, #25]
 800b3c0:	4638      	mov	r0, r7
 800b3c2:	fb0e 5101 	mla	r1, lr, r1, r5
 800b3c6:	fb06 7202 	mla	r2, r6, r2, r7
 800b3ca:	442b      	add	r3, r5
 800b3cc:	f7fd fc00 	bl	8008bd0 <LCD_FillRect>
 800b3d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b3d2:	b2d8      	uxtb	r0, r3
 800b3d4:	f7fd fb7a 	bl	8008acc <LCD_SetDrawMode>
 800b3d8:	4b04      	ldr	r3, [pc, #16]	; (800b3ec <GUIMONO_DispChar+0x14c>)
 800b3da:	7c61      	ldrb	r1, [r4, #17]
 800b3dc:	681b      	ldr	r3, [r3, #0]
 800b3de:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800b3e0:	440a      	add	r2, r1
 800b3e2:	845a      	strh	r2, [r3, #34]	; 0x22
 800b3e4:	b00b      	add	sp, #44	; 0x2c
 800b3e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3ea:	bf00      	nop
 800b3ec:	200000b8 	.word	0x200000b8

0800b3f0 <GUIMONO_GetCharDistX>:
 800b3f0:	4b04      	ldr	r3, [pc, #16]	; (800b404 <GUIMONO_GetCharDistX+0x14>)
 800b3f2:	681b      	ldr	r3, [r3, #0]
 800b3f4:	69db      	ldr	r3, [r3, #28]
 800b3f6:	69db      	ldr	r3, [r3, #28]
 800b3f8:	b109      	cbz	r1, 800b3fe <GUIMONO_GetCharDistX+0xe>
 800b3fa:	7c1a      	ldrb	r2, [r3, #16]
 800b3fc:	600a      	str	r2, [r1, #0]
 800b3fe:	7c58      	ldrb	r0, [r3, #17]
 800b400:	4770      	bx	lr
 800b402:	bf00      	nop
 800b404:	200000b8 	.word	0x200000b8

0800b408 <GUIMONO_GetFontInfo>:
 800b408:	2302      	movs	r3, #2
 800b40a:	800b      	strh	r3, [r1, #0]
 800b40c:	4770      	bx	lr

0800b40e <GUIMONO_IsInFont>:
 800b40e:	69c3      	ldr	r3, [r0, #28]
 800b410:	899a      	ldrh	r2, [r3, #12]
 800b412:	428a      	cmp	r2, r1
 800b414:	d802      	bhi.n	800b41c <GUIMONO_IsInFont+0xe>
 800b416:	89da      	ldrh	r2, [r3, #14]
 800b418:	428a      	cmp	r2, r1
 800b41a:	d20f      	bcs.n	800b43c <GUIMONO_IsInFont+0x2e>
 800b41c:	6898      	ldr	r0, [r3, #8]
 800b41e:	b180      	cbz	r0, 800b442 <GUIMONO_IsInFont+0x34>
 800b420:	8803      	ldrh	r3, [r0, #0]
 800b422:	4299      	cmp	r1, r3
 800b424:	d30c      	bcc.n	800b440 <GUIMONO_IsInFont+0x32>
 800b426:	8842      	ldrh	r2, [r0, #2]
 800b428:	428a      	cmp	r2, r1
 800b42a:	d309      	bcc.n	800b440 <GUIMONO_IsInFont+0x32>
 800b42c:	1ac9      	subs	r1, r1, r3
 800b42e:	6842      	ldr	r2, [r0, #4]
 800b430:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 800b434:	43c0      	mvns	r0, r0
 800b436:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800b43a:	4770      	bx	lr
 800b43c:	2001      	movs	r0, #1
 800b43e:	4770      	bx	lr
 800b440:	2000      	movs	r0, #0
 800b442:	4770      	bx	lr

0800b444 <_Log2VisBuffered>:
 800b444:	4770      	bx	lr
	...

0800b448 <_DispLine>:
 800b448:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b44a:	4615      	mov	r5, r2
 800b44c:	ab02      	add	r3, sp, #8
 800b44e:	4a21      	ldr	r2, [pc, #132]	; (800b4d4 <_DispLine+0x8c>)
 800b450:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b454:	9001      	str	r0, [sp, #4]
 800b456:	6812      	ldr	r2, [r2, #0]
 800b458:	4c1f      	ldr	r4, [pc, #124]	; (800b4d8 <_DispLine+0x90>)
 800b45a:	4669      	mov	r1, sp
 800b45c:	4790      	blx	r2
 800b45e:	6823      	ldr	r3, [r4, #0]
 800b460:	9001      	str	r0, [sp, #4]
 800b462:	6958      	ldr	r0, [r3, #20]
 800b464:	b938      	cbnz	r0, 800b476 <_DispLine+0x2e>
 800b466:	2001      	movs	r0, #1
 800b468:	f7fe f838 	bl	80094dc <GUI__ManageCache>
 800b46c:	6822      	ldr	r2, [r4, #0]
 800b46e:	69d3      	ldr	r3, [r2, #28]
 800b470:	695b      	ldr	r3, [r3, #20]
 800b472:	b933      	cbnz	r3, 800b482 <_DispLine+0x3a>
 800b474:	e023      	b.n	800b4be <_DispLine+0x76>
 800b476:	4629      	mov	r1, r5
 800b478:	f7ff fd60 	bl	800af3c <GUI_RectsIntersect>
 800b47c:	2800      	cmp	r0, #0
 800b47e:	d1f2      	bne.n	800b466 <_DispLine+0x1e>
 800b480:	e025      	b.n	800b4ce <_DispLine+0x86>
 800b482:	4c16      	ldr	r4, [pc, #88]	; (800b4dc <_DispLine+0x94>)
 800b484:	689b      	ldr	r3, [r3, #8]
 800b486:	6821      	ldr	r1, [r4, #0]
 800b488:	b141      	cbz	r1, 800b49c <_DispLine+0x54>
 800b48a:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 800b48e:	9801      	ldr	r0, [sp, #4]
 800b490:	9900      	ldr	r1, [sp, #0]
 800b492:	4798      	blx	r3
 800b494:	6823      	ldr	r3, [r4, #0]
 800b496:	4628      	mov	r0, r5
 800b498:	4798      	blx	r3
 800b49a:	e015      	b.n	800b4c8 <_DispLine+0x80>
 800b49c:	9801      	ldr	r0, [sp, #4]
 800b49e:	9900      	ldr	r1, [sp, #0]
 800b4a0:	4798      	blx	r3
 800b4a2:	e011      	b.n	800b4c8 <_DispLine+0x80>
 800b4a4:	a801      	add	r0, sp, #4
 800b4a6:	f7fe f9e1 	bl	800986c <GUI_UC__GetCharCodeInc>
 800b4aa:	6823      	ldr	r3, [r4, #0]
 800b4ac:	69db      	ldr	r3, [r3, #28]
 800b4ae:	681b      	ldr	r3, [r3, #0]
 800b4b0:	4605      	mov	r5, r0
 800b4b2:	4798      	blx	r3
 800b4b4:	4b0a      	ldr	r3, [pc, #40]	; (800b4e0 <_DispLine+0x98>)
 800b4b6:	681b      	ldr	r3, [r3, #0]
 800b4b8:	b10b      	cbz	r3, 800b4be <_DispLine+0x76>
 800b4ba:	4628      	mov	r0, r5
 800b4bc:	4798      	blx	r3
 800b4be:	9b00      	ldr	r3, [sp, #0]
 800b4c0:	3b01      	subs	r3, #1
 800b4c2:	2b00      	cmp	r3, #0
 800b4c4:	9300      	str	r3, [sp, #0]
 800b4c6:	daed      	bge.n	800b4a4 <_DispLine+0x5c>
 800b4c8:	2000      	movs	r0, #0
 800b4ca:	f7fe f807 	bl	80094dc <GUI__ManageCache>
 800b4ce:	b003      	add	sp, #12
 800b4d0:	bd30      	pop	{r4, r5, pc}
 800b4d2:	bf00      	nop
 800b4d4:	200000c4 	.word	0x200000c4
 800b4d8:	200000b8 	.word	0x200000b8
 800b4dc:	20002cf8 	.word	0x20002cf8
 800b4e0:	20002d08 	.word	0x20002d08

0800b4e4 <GUI__GetLineNumChars>:
 800b4e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b4e6:	460d      	mov	r5, r1
 800b4e8:	9001      	str	r0, [sp, #4]
 800b4ea:	4604      	mov	r4, r0
 800b4ec:	b198      	cbz	r0, 800b516 <GUI__GetLineNumChars+0x32>
 800b4ee:	4b0b      	ldr	r3, [pc, #44]	; (800b51c <GUI__GetLineNumChars+0x38>)
 800b4f0:	681b      	ldr	r3, [r3, #0]
 800b4f2:	69db      	ldr	r3, [r3, #28]
 800b4f4:	695b      	ldr	r3, [r3, #20]
 800b4f6:	b10b      	cbz	r3, 800b4fc <GUI__GetLineNumChars+0x18>
 800b4f8:	685b      	ldr	r3, [r3, #4]
 800b4fa:	b90b      	cbnz	r3, 800b500 <GUI__GetLineNumChars+0x1c>
 800b4fc:	2400      	movs	r4, #0
 800b4fe:	e008      	b.n	800b512 <GUI__GetLineNumChars+0x2e>
 800b500:	4798      	blx	r3
 800b502:	e009      	b.n	800b518 <GUI__GetLineNumChars+0x34>
 800b504:	a801      	add	r0, sp, #4
 800b506:	f7fe f9b1 	bl	800986c <GUI_UC__GetCharCodeInc>
 800b50a:	b120      	cbz	r0, 800b516 <GUI__GetLineNumChars+0x32>
 800b50c:	280a      	cmp	r0, #10
 800b50e:	d002      	beq.n	800b516 <GUI__GetLineNumChars+0x32>
 800b510:	3401      	adds	r4, #1
 800b512:	42ac      	cmp	r4, r5
 800b514:	dbf6      	blt.n	800b504 <GUI__GetLineNumChars+0x20>
 800b516:	4620      	mov	r0, r4
 800b518:	b003      	add	sp, #12
 800b51a:	bd30      	pop	{r4, r5, pc}
 800b51c:	200000b8 	.word	0x200000b8

0800b520 <GUI__GetOverlap>:
 800b520:	b513      	push	{r0, r1, r4, lr}
 800b522:	a902      	add	r1, sp, #8
 800b524:	2400      	movs	r4, #0
 800b526:	f841 4d04 	str.w	r4, [r1, #-4]!
 800b52a:	f000 f8b7 	bl	800b69c <GUI_GetCharDistXEx>
 800b52e:	9b01      	ldr	r3, [sp, #4]
 800b530:	4283      	cmp	r3, r0
 800b532:	bfcc      	ite	gt
 800b534:	ebc0 0003 	rsbgt	r0, r0, r3
 800b538:	4620      	movle	r0, r4
 800b53a:	b002      	add	sp, #8
 800b53c:	bd10      	pop	{r4, pc}
	...

0800b540 <GUI__GetLineDistX>:
 800b540:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b542:	4a15      	ldr	r2, [pc, #84]	; (800b598 <GUI__GetLineDistX+0x58>)
 800b544:	9001      	str	r0, [sp, #4]
 800b546:	ab02      	add	r3, sp, #8
 800b548:	6812      	ldr	r2, [r2, #0]
 800b54a:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b54e:	4669      	mov	r1, sp
 800b550:	4790      	blx	r2
 800b552:	9001      	str	r0, [sp, #4]
 800b554:	b1f0      	cbz	r0, 800b594 <GUI__GetLineDistX+0x54>
 800b556:	4b11      	ldr	r3, [pc, #68]	; (800b59c <GUI__GetLineDistX+0x5c>)
 800b558:	681b      	ldr	r3, [r3, #0]
 800b55a:	69db      	ldr	r3, [r3, #28]
 800b55c:	695b      	ldr	r3, [r3, #20]
 800b55e:	b10b      	cbz	r3, 800b564 <GUI__GetLineDistX+0x24>
 800b560:	681b      	ldr	r3, [r3, #0]
 800b562:	b913      	cbnz	r3, 800b56a <GUI__GetLineDistX+0x2a>
 800b564:	2500      	movs	r5, #0
 800b566:	462c      	mov	r4, r5
 800b568:	e002      	b.n	800b570 <GUI__GetLineDistX+0x30>
 800b56a:	9900      	ldr	r1, [sp, #0]
 800b56c:	4798      	blx	r3
 800b56e:	e011      	b.n	800b594 <GUI__GetLineDistX+0x54>
 800b570:	9b00      	ldr	r3, [sp, #0]
 800b572:	3b01      	subs	r3, #1
 800b574:	2b00      	cmp	r3, #0
 800b576:	9300      	str	r3, [sp, #0]
 800b578:	db07      	blt.n	800b58a <GUI__GetLineDistX+0x4a>
 800b57a:	a801      	add	r0, sp, #4
 800b57c:	f7fe f976 	bl	800986c <GUI_UC__GetCharCodeInc>
 800b580:	4605      	mov	r5, r0
 800b582:	f000 f881 	bl	800b688 <GUI_GetCharDistX>
 800b586:	4404      	add	r4, r0
 800b588:	e7f2      	b.n	800b570 <GUI__GetLineDistX+0x30>
 800b58a:	4628      	mov	r0, r5
 800b58c:	f7ff ffc8 	bl	800b520 <GUI__GetOverlap>
 800b590:	4420      	add	r0, r4
 800b592:	e7ff      	b.n	800b594 <GUI__GetLineDistX+0x54>
 800b594:	b003      	add	sp, #12
 800b596:	bd30      	pop	{r4, r5, pc}
 800b598:	200000c4 	.word	0x200000c4
 800b59c:	200000b8 	.word	0x200000b8

0800b5a0 <GUI__DispLine>:
 800b5a0:	4b27      	ldr	r3, [pc, #156]	; (800b640 <GUI__DispLine+0xa0>)
 800b5a2:	681b      	ldr	r3, [r3, #0]
 800b5a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b5a6:	4605      	mov	r5, r0
 800b5a8:	460c      	mov	r4, r1
 800b5aa:	b163      	cbz	r3, 800b5c6 <GUI__DispLine+0x26>
 800b5ac:	2000      	movs	r0, #0
 800b5ae:	f7fa fdb3 	bl	8006118 <WM__InitIVRSearch>
 800b5b2:	2800      	cmp	r0, #0
 800b5b4:	d041      	beq.n	800b63a <GUI__DispLine+0x9a>
 800b5b6:	4628      	mov	r0, r5
 800b5b8:	4621      	mov	r1, r4
 800b5ba:	466a      	mov	r2, sp
 800b5bc:	f7ff ff44 	bl	800b448 <_DispLine>
 800b5c0:	f7fa fce8 	bl	8005f94 <WM__GetNextIVR>
 800b5c4:	e7f5      	b.n	800b5b2 <GUI__DispLine+0x12>
 800b5c6:	6810      	ldr	r0, [r2, #0]
 800b5c8:	6851      	ldr	r1, [r2, #4]
 800b5ca:	4e1e      	ldr	r6, [pc, #120]	; (800b644 <GUI__DispLine+0xa4>)
 800b5cc:	466b      	mov	r3, sp
 800b5ce:	c303      	stmia	r3!, {r0, r1}
 800b5d0:	6833      	ldr	r3, [r6, #0]
 800b5d2:	f8bd 1000 	ldrh.w	r1, [sp]
 800b5d6:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800b5da:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800b5de:	4411      	add	r1, r2
 800b5e0:	f8ad 1000 	strh.w	r1, [sp]
 800b5e4:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800b5e8:	4419      	add	r1, r3
 800b5ea:	f8ad 1002 	strh.w	r1, [sp, #2]
 800b5ee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800b5f2:	440a      	add	r2, r1
 800b5f4:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b5f8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b5fc:	4668      	mov	r0, sp
 800b5fe:	4413      	add	r3, r2
 800b600:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b604:	f7fa fd88 	bl	8006118 <WM__InitIVRSearch>
 800b608:	6833      	ldr	r3, [r6, #0]
 800b60a:	b940      	cbnz	r0, 800b61e <GUI__DispLine+0x7e>
 800b60c:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800b60e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b610:	1a8a      	subs	r2, r1, r2
 800b612:	845a      	strh	r2, [r3, #34]	; 0x22
 800b614:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800b616:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b618:	1a8a      	subs	r2, r1, r2
 800b61a:	849a      	strh	r2, [r3, #36]	; 0x24
 800b61c:	e00d      	b.n	800b63a <GUI__DispLine+0x9a>
 800b61e:	f8bd 2000 	ldrh.w	r2, [sp]
 800b622:	845a      	strh	r2, [r3, #34]	; 0x22
 800b624:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b628:	849a      	strh	r2, [r3, #36]	; 0x24
 800b62a:	4628      	mov	r0, r5
 800b62c:	4621      	mov	r1, r4
 800b62e:	466a      	mov	r2, sp
 800b630:	f7ff ff0a 	bl	800b448 <_DispLine>
 800b634:	f7fa fcae 	bl	8005f94 <WM__GetNextIVR>
 800b638:	e7e6      	b.n	800b608 <GUI__DispLine+0x68>
 800b63a:	b002      	add	sp, #8
 800b63c:	bd70      	pop	{r4, r5, r6, pc}
 800b63e:	bf00      	nop
 800b640:	20002ce4 	.word	0x20002ce4
 800b644:	200000b8 	.word	0x200000b8

0800b648 <GUI_GetYAdjust>:
 800b648:	4b0a      	ldr	r3, [pc, #40]	; (800b674 <GUI_GetYAdjust+0x2c>)
 800b64a:	681b      	ldr	r3, [r3, #0]
 800b64c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b64e:	f002 020c 	and.w	r2, r2, #12
 800b652:	2a08      	cmp	r2, #8
 800b654:	d007      	beq.n	800b666 <GUI_GetYAdjust+0x1e>
 800b656:	2a0c      	cmp	r2, #12
 800b658:	d005      	beq.n	800b666 <GUI_GetYAdjust+0x1e>
 800b65a:	2a04      	cmp	r2, #4
 800b65c:	d107      	bne.n	800b66e <GUI_GetYAdjust+0x26>
 800b65e:	69db      	ldr	r3, [r3, #28]
 800b660:	7e18      	ldrb	r0, [r3, #24]
 800b662:	3801      	subs	r0, #1
 800b664:	4770      	bx	lr
 800b666:	69db      	ldr	r3, [r3, #28]
 800b668:	7e18      	ldrb	r0, [r3, #24]
 800b66a:	0840      	lsrs	r0, r0, #1
 800b66c:	4770      	bx	lr
 800b66e:	2000      	movs	r0, #0
 800b670:	4770      	bx	lr
 800b672:	bf00      	nop
 800b674:	200000b8 	.word	0x200000b8

0800b678 <GUI_GetFontDistY>:
 800b678:	4b02      	ldr	r3, [pc, #8]	; (800b684 <GUI_GetFontDistY+0xc>)
 800b67a:	681b      	ldr	r3, [r3, #0]
 800b67c:	69db      	ldr	r3, [r3, #28]
 800b67e:	7e58      	ldrb	r0, [r3, #25]
 800b680:	4770      	bx	lr
 800b682:	bf00      	nop
 800b684:	200000b8 	.word	0x200000b8

0800b688 <GUI_GetCharDistX>:
 800b688:	b508      	push	{r3, lr}
 800b68a:	4b03      	ldr	r3, [pc, #12]	; (800b698 <GUI_GetCharDistX+0x10>)
 800b68c:	681b      	ldr	r3, [r3, #0]
 800b68e:	69db      	ldr	r3, [r3, #28]
 800b690:	2100      	movs	r1, #0
 800b692:	685b      	ldr	r3, [r3, #4]
 800b694:	4798      	blx	r3
 800b696:	bd08      	pop	{r3, pc}
 800b698:	200000b8 	.word	0x200000b8

0800b69c <GUI_GetCharDistXEx>:
 800b69c:	b508      	push	{r3, lr}
 800b69e:	4b03      	ldr	r3, [pc, #12]	; (800b6ac <GUI_GetCharDistXEx+0x10>)
 800b6a0:	681b      	ldr	r3, [r3, #0]
 800b6a2:	69db      	ldr	r3, [r3, #28]
 800b6a4:	685b      	ldr	r3, [r3, #4]
 800b6a6:	4798      	blx	r3
 800b6a8:	bd08      	pop	{r3, pc}
 800b6aa:	bf00      	nop
 800b6ac:	200000b8 	.word	0x200000b8

0800b6b0 <_PushFreeBlock>:
 800b6b0:	4b07      	ldr	r3, [pc, #28]	; (800b6d0 <_PushFreeBlock+0x20>)
 800b6b2:	685a      	ldr	r2, [r3, #4]
 800b6b4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800b6b6:	3201      	adds	r2, #1
 800b6b8:	b510      	push	{r4, lr}
 800b6ba:	605a      	str	r2, [r3, #4]
 800b6bc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b6be:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800b6c2:	6061      	str	r1, [r4, #4]
 800b6c4:	2100      	movs	r1, #0
 800b6c6:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800b6ca:	6258      	str	r0, [r3, #36]	; 0x24
 800b6cc:	bd10      	pop	{r4, pc}
 800b6ce:	bf00      	nop
 800b6d0:	20002d3c 	.word	0x20002d3c

0800b6d4 <_RemoveFreeBlock>:
 800b6d4:	b510      	push	{r4, lr}
 800b6d6:	6842      	ldr	r2, [r0, #4]
 800b6d8:	230f      	movs	r3, #15
 800b6da:	490d      	ldr	r1, [pc, #52]	; (800b710 <_RemoveFreeBlock+0x3c>)
 800b6dc:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 800b6e0:	6c24      	ldr	r4, [r4, #64]	; 0x40
 800b6e2:	42a2      	cmp	r2, r4
 800b6e4:	d203      	bcs.n	800b6ee <_RemoveFreeBlock+0x1a>
 800b6e6:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b6ea:	d2f6      	bcs.n	800b6da <_RemoveFreeBlock+0x6>
 800b6ec:	bd10      	pop	{r4, pc}
 800b6ee:	2b0f      	cmp	r3, #15
 800b6f0:	d80c      	bhi.n	800b70c <_RemoveFreeBlock+0x38>
 800b6f2:	680c      	ldr	r4, [r1, #0]
 800b6f4:	1aa2      	subs	r2, r4, r2
 800b6f6:	600a      	str	r2, [r1, #0]
 800b6f8:	6882      	ldr	r2, [r0, #8]
 800b6fa:	68c0      	ldr	r0, [r0, #12]
 800b6fc:	b102      	cbz	r2, 800b700 <_RemoveFreeBlock+0x2c>
 800b6fe:	6050      	str	r0, [r2, #4]
 800b700:	b108      	cbz	r0, 800b706 <_RemoveFreeBlock+0x32>
 800b702:	6002      	str	r2, [r0, #0]
 800b704:	bd10      	pop	{r4, pc}
 800b706:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800b70a:	645a      	str	r2, [r3, #68]	; 0x44
 800b70c:	bd10      	pop	{r4, pc}
 800b70e:	bf00      	nop
 800b710:	20002d3c 	.word	0x20002d3c

0800b714 <_AddFreeMemory>:
 800b714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b716:	4e26      	ldr	r6, [pc, #152]	; (800b7b0 <_AddFreeMemory+0x9c>)
 800b718:	68f3      	ldr	r3, [r6, #12]
 800b71a:	1e5a      	subs	r2, r3, #1
 800b71c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b71e:	4605      	mov	r5, r0
 800b720:	4413      	add	r3, r2
 800b722:	1808      	adds	r0, r1, r0
 800b724:	4298      	cmp	r0, r3
 800b726:	460c      	mov	r4, r1
 800b728:	d805      	bhi.n	800b736 <_AddFreeMemory+0x22>
 800b72a:	594b      	ldr	r3, [r1, r5]
 800b72c:	b91b      	cbnz	r3, 800b736 <_AddFreeMemory+0x22>
 800b72e:	6843      	ldr	r3, [r0, #4]
 800b730:	441d      	add	r5, r3
 800b732:	f7ff ffcf 	bl	800b6d4 <_RemoveFreeBlock>
 800b736:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b738:	429c      	cmp	r4, r3
 800b73a:	d90a      	bls.n	800b752 <_AddFreeMemory+0x3e>
 800b73c:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800b740:	1be7      	subs	r7, r4, r7
 800b742:	683b      	ldr	r3, [r7, #0]
 800b744:	b92b      	cbnz	r3, 800b752 <_AddFreeMemory+0x3e>
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	4638      	mov	r0, r7
 800b74a:	441d      	add	r5, r3
 800b74c:	f7ff ffc2 	bl	800b6d4 <_RemoveFreeBlock>
 800b750:	463c      	mov	r4, r7
 800b752:	230f      	movs	r3, #15
 800b754:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b758:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800b75a:	4295      	cmp	r5, r2
 800b75c:	d203      	bcs.n	800b766 <_AddFreeMemory+0x52>
 800b75e:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b762:	d2f7      	bcs.n	800b754 <_AddFreeMemory+0x40>
 800b764:	e022      	b.n	800b7ac <_AddFreeMemory+0x98>
 800b766:	2b0f      	cmp	r3, #15
 800b768:	d820      	bhi.n	800b7ac <_AddFreeMemory+0x98>
 800b76a:	3308      	adds	r3, #8
 800b76c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b770:	1961      	adds	r1, r4, r5
 800b772:	6852      	ldr	r2, [r2, #4]
 800b774:	60a2      	str	r2, [r4, #8]
 800b776:	2000      	movs	r0, #0
 800b778:	e884 0021 	stmia.w	r4, {r0, r5}
 800b77c:	6124      	str	r4, [r4, #16]
 800b77e:	f841 5c04 	str.w	r5, [r1, #-4]
 800b782:	f104 0108 	add.w	r1, r4, #8
 800b786:	b102      	cbz	r2, 800b78a <_AddFreeMemory+0x76>
 800b788:	6051      	str	r1, [r2, #4]
 800b78a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b78e:	60e0      	str	r0, [r4, #12]
 800b790:	6059      	str	r1, [r3, #4]
 800b792:	6833      	ldr	r3, [r6, #0]
 800b794:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 800b798:	4a05      	ldr	r2, [pc, #20]	; (800b7b0 <_AddFreeMemory+0x9c>)
 800b79a:	442b      	add	r3, r5
 800b79c:	6033      	str	r3, [r6, #0]
 800b79e:	b929      	cbnz	r1, 800b7ac <_AddFreeMemory+0x98>
 800b7a0:	68d1      	ldr	r1, [r2, #12]
 800b7a2:	1acb      	subs	r3, r1, r3
 800b7a4:	6891      	ldr	r1, [r2, #8]
 800b7a6:	4299      	cmp	r1, r3
 800b7a8:	bf38      	it	cc
 800b7aa:	6093      	strcc	r3, [r2, #8]
 800b7ac:	4628      	mov	r0, r5
 800b7ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b7b0:	20002d3c 	.word	0x20002d3c

0800b7b4 <_RemoveHoles>:
 800b7b4:	4b25      	ldr	r3, [pc, #148]	; (800b84c <_RemoveHoles+0x98>)
 800b7b6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7ba:	68da      	ldr	r2, [r3, #12]
 800b7bc:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800b7be:	3a01      	subs	r2, #1
 800b7c0:	4682      	mov	sl, r0
 800b7c2:	eb02 0904 	add.w	r9, r2, r4
 800b7c6:	469b      	mov	fp, r3
 800b7c8:	e894 0028 	ldmia.w	r4, {r3, r5}
 800b7cc:	2b00      	cmp	r3, #0
 800b7ce:	d133      	bne.n	800b838 <_RemoveHoles+0x84>
 800b7d0:	eb04 0805 	add.w	r8, r4, r5
 800b7d4:	45c8      	cmp	r8, r9
 800b7d6:	d22f      	bcs.n	800b838 <_RemoveHoles+0x84>
 800b7d8:	f854 c005 	ldr.w	ip, [r4, r5]
 800b7dc:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800b7e0:	f1bc 0f00 	cmp.w	ip, #0
 800b7e4:	d028      	beq.n	800b838 <_RemoveHoles+0x84>
 800b7e6:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 800b7ea:	4f18      	ldr	r7, [pc, #96]	; (800b84c <_RemoveHoles+0x98>)
 800b7ec:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 800b7f0:	2b01      	cmp	r3, #1
 800b7f2:	d121      	bne.n	800b838 <_RemoveHoles+0x84>
 800b7f4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b7f6:	4620      	mov	r0, r4
 800b7f8:	e88d 1008 	stmia.w	sp, {r3, ip}
 800b7fc:	f7ff ff6a 	bl	800b6d4 <_RemoveFreeBlock>
 800b800:	f8d8 1000 	ldr.w	r1, [r8]
 800b804:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b806:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800b80a:	4620      	mov	r0, r4
 800b80c:	6054      	str	r4, [r2, #4]
 800b80e:	4641      	mov	r1, r8
 800b810:	4632      	mov	r2, r6
 800b812:	f004 fc55 	bl	80100c0 <memmove>
 800b816:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800b81a:	459c      	cmp	ip, r3
 800b81c:	d102      	bne.n	800b824 <_RemoveHoles+0x70>
 800b81e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b820:	1b5b      	subs	r3, r3, r5
 800b822:	637b      	str	r3, [r7, #52]	; 0x34
 800b824:	4628      	mov	r0, r5
 800b826:	19a1      	adds	r1, r4, r6
 800b828:	f7ff ff74 	bl	800b714 <_AddFreeMemory>
 800b82c:	f1ba 0f00 	cmp.w	sl, #0
 800b830:	d001      	beq.n	800b836 <_RemoveHoles+0x82>
 800b832:	4582      	cmp	sl, r0
 800b834:	d905      	bls.n	800b842 <_RemoveHoles+0x8e>
 800b836:	4635      	mov	r5, r6
 800b838:	442c      	add	r4, r5
 800b83a:	454c      	cmp	r4, r9
 800b83c:	d3c4      	bcc.n	800b7c8 <_RemoveHoles+0x14>
 800b83e:	2001      	movs	r0, #1
 800b840:	e000      	b.n	800b844 <_RemoveHoles+0x90>
 800b842:	2000      	movs	r0, #0
 800b844:	b003      	add	sp, #12
 800b846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b84a:	bf00      	nop
 800b84c:	20002d3c 	.word	0x20002d3c

0800b850 <GUI_ALLOC_FreeFixedBlock>:
 800b850:	b128      	cbz	r0, 800b85e <GUI_ALLOC_FreeFixedBlock+0xe>
 800b852:	4a03      	ldr	r2, [pc, #12]	; (800b860 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800b854:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800b856:	6003      	str	r3, [r0, #0]
 800b858:	b103      	cbz	r3, 800b85c <GUI_ALLOC_FreeFixedBlock+0xc>
 800b85a:	6058      	str	r0, [r3, #4]
 800b85c:	63d0      	str	r0, [r2, #60]	; 0x3c
 800b85e:	4770      	bx	lr
 800b860:	20002d3c 	.word	0x20002d3c

0800b864 <GUI_ALLOC_h2p>:
 800b864:	4b03      	ldr	r3, [pc, #12]	; (800b874 <GUI_ALLOC_h2p+0x10>)
 800b866:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b868:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b86c:	6840      	ldr	r0, [r0, #4]
 800b86e:	3008      	adds	r0, #8
 800b870:	4770      	bx	lr
 800b872:	bf00      	nop
 800b874:	20002d3c 	.word	0x20002d3c

0800b878 <GUI_ALLOC_LockH>:
 800b878:	4b05      	ldr	r3, [pc, #20]	; (800b890 <GUI_ALLOC_LockH+0x18>)
 800b87a:	69d9      	ldr	r1, [r3, #28]
 800b87c:	3101      	adds	r1, #1
 800b87e:	61d9      	str	r1, [r3, #28]
 800b880:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b882:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800b886:	3101      	adds	r1, #1
 800b888:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800b88c:	f7ff bfea 	b.w	800b864 <GUI_ALLOC_h2p>
 800b890:	20002d3c 	.word	0x20002d3c

0800b894 <GUI_ALLOC_UnlockH>:
 800b894:	b530      	push	{r4, r5, lr}
 800b896:	6802      	ldr	r2, [r0, #0]
 800b898:	4b09      	ldr	r3, [pc, #36]	; (800b8c0 <GUI_ALLOC_UnlockH+0x2c>)
 800b89a:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800b89e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b8a0:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800b8a4:	2c01      	cmp	r4, #1
 800b8a6:	d903      	bls.n	800b8b0 <GUI_ALLOC_UnlockH+0x1c>
 800b8a8:	69dd      	ldr	r5, [r3, #28]
 800b8aa:	b10d      	cbz	r5, 800b8b0 <GUI_ALLOC_UnlockH+0x1c>
 800b8ac:	3d01      	subs	r5, #1
 800b8ae:	61dd      	str	r5, [r3, #28]
 800b8b0:	3c01      	subs	r4, #1
 800b8b2:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800b8b6:	2300      	movs	r3, #0
 800b8b8:	6003      	str	r3, [r0, #0]
 800b8ba:	4618      	mov	r0, r3
 800b8bc:	bd30      	pop	{r4, r5, pc}
 800b8be:	bf00      	nop
 800b8c0:	20002d3c 	.word	0x20002d3c

0800b8c4 <GUI_ALLOC_AssignMemory>:
 800b8c4:	4b02      	ldr	r3, [pc, #8]	; (800b8d0 <GUI_ALLOC_AssignMemory+0xc>)
 800b8c6:	f021 0103 	bic.w	r1, r1, #3
 800b8ca:	6018      	str	r0, [r3, #0]
 800b8cc:	6059      	str	r1, [r3, #4]
 800b8ce:	4770      	bx	lr
 800b8d0:	20002c30 	.word	0x20002c30

0800b8d4 <GUI_ALLOC_GetSize>:
 800b8d4:	b130      	cbz	r0, 800b8e4 <GUI_ALLOC_GetSize+0x10>
 800b8d6:	4b04      	ldr	r3, [pc, #16]	; (800b8e8 <GUI_ALLOC_GetSize+0x14>)
 800b8d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b8da:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b8de:	6843      	ldr	r3, [r0, #4]
 800b8e0:	6858      	ldr	r0, [r3, #4]
 800b8e2:	380c      	subs	r0, #12
 800b8e4:	4770      	bx	lr
 800b8e6:	bf00      	nop
 800b8e8:	20002d3c 	.word	0x20002d3c

0800b8ec <GUI_ALLOC_Free>:
 800b8ec:	b510      	push	{r4, lr}
 800b8ee:	4604      	mov	r4, r0
 800b8f0:	b160      	cbz	r0, 800b90c <GUI_ALLOC_Free+0x20>
 800b8f2:	4b07      	ldr	r3, [pc, #28]	; (800b910 <GUI_ALLOC_Free+0x24>)
 800b8f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b8f6:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800b8fa:	6859      	ldr	r1, [r3, #4]
 800b8fc:	6848      	ldr	r0, [r1, #4]
 800b8fe:	f7ff ff09 	bl	800b714 <_AddFreeMemory>
 800b902:	4620      	mov	r0, r4
 800b904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b908:	f7ff bed2 	b.w	800b6b0 <_PushFreeBlock>
 800b90c:	bd10      	pop	{r4, pc}
 800b90e:	bf00      	nop
 800b910:	20002d3c 	.word	0x20002d3c

0800b914 <_EnlargeBlocks>:
 800b914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b918:	4c23      	ldr	r4, [pc, #140]	; (800b9a8 <_EnlargeBlocks+0x94>)
 800b91a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b91c:	b93b      	cbnz	r3, 800b92e <_EnlargeBlocks+0x1a>
 800b91e:	4b23      	ldr	r3, [pc, #140]	; (800b9ac <_EnlargeBlocks+0x98>)
 800b920:	689d      	ldr	r5, [r3, #8]
 800b922:	685b      	ldr	r3, [r3, #4]
 800b924:	3508      	adds	r5, #8
 800b926:	fbb3 f5f5 	udiv	r5, r3, r5
 800b92a:	3502      	adds	r5, #2
 800b92c:	e003      	b.n	800b936 <_EnlargeBlocks+0x22>
 800b92e:	6923      	ldr	r3, [r4, #16]
 800b930:	1d1d      	adds	r5, r3, #4
 800b932:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800b936:	00e8      	lsls	r0, r5, #3
 800b938:	f000 f8f4 	bl	800bb24 <_Alloc>
 800b93c:	4680      	mov	r8, r0
 800b93e:	b368      	cbz	r0, 800b99c <_EnlargeBlocks+0x88>
 800b940:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b942:	6922      	ldr	r2, [r4, #16]
 800b944:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800b946:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 800b94a:	00d2      	lsls	r2, r2, #3
 800b94c:	685e      	ldr	r6, [r3, #4]
 800b94e:	4b18      	ldr	r3, [pc, #96]	; (800b9b0 <_EnlargeBlocks+0x9c>)
 800b950:	3608      	adds	r6, #8
 800b952:	681b      	ldr	r3, [r3, #0]
 800b954:	4630      	mov	r0, r6
 800b956:	4798      	blx	r3
 800b958:	6922      	ldr	r2, [r4, #16]
 800b95a:	6366      	str	r6, [r4, #52]	; 0x34
 800b95c:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 800b960:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 800b964:	3104      	adds	r1, #4
 800b966:	4613      	mov	r3, r2
 800b968:	1e68      	subs	r0, r5, #1
 800b96a:	4283      	cmp	r3, r0
 800b96c:	f101 0108 	add.w	r1, r1, #8
 800b970:	d203      	bcs.n	800b97a <_EnlargeBlocks+0x66>
 800b972:	3301      	adds	r3, #1
 800b974:	f841 3c08 	str.w	r3, [r1, #-8]
 800b978:	e7f6      	b.n	800b968 <_EnlargeBlocks+0x54>
 800b97a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b97e:	2600      	movs	r6, #0
 800b980:	605e      	str	r6, [r3, #4]
 800b982:	6863      	ldr	r3, [r4, #4]
 800b984:	6262      	str	r2, [r4, #36]	; 0x24
 800b986:	1a9b      	subs	r3, r3, r2
 800b988:	442b      	add	r3, r5
 800b98a:	6063      	str	r3, [r4, #4]
 800b98c:	6125      	str	r5, [r4, #16]
 800b98e:	4638      	mov	r0, r7
 800b990:	b13f      	cbz	r7, 800b9a2 <_EnlargeBlocks+0x8e>
 800b992:	f7ff ffab 	bl	800b8ec <GUI_ALLOC_Free>
 800b996:	4630      	mov	r0, r6
 800b998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b99c:	2001      	movs	r0, #1
 800b99e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9a6:	bf00      	nop
 800b9a8:	20002d3c 	.word	0x20002d3c
 800b9ac:	20002c30 	.word	0x20002c30
 800b9b0:	200000a8 	.word	0x200000a8

0800b9b4 <_InitOnce>:
 800b9b4:	b538      	push	{r3, r4, r5, lr}
 800b9b6:	4916      	ldr	r1, [pc, #88]	; (800ba10 <_InitOnce+0x5c>)
 800b9b8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b9bc:	bb3b      	cbnz	r3, 800ba0e <_InitOnce+0x5a>
 800b9be:	4a15      	ldr	r2, [pc, #84]	; (800ba14 <_InitOnce+0x60>)
 800b9c0:	2301      	movs	r3, #1
 800b9c2:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 800b9c6:	6893      	ldr	r3, [r2, #8]
 800b9c8:	b913      	cbnz	r3, 800b9d0 <_InitOnce+0x1c>
 800b9ca:	6853      	ldr	r3, [r2, #4]
 800b9cc:	089b      	lsrs	r3, r3, #2
 800b9ce:	6093      	str	r3, [r2, #8]
 800b9d0:	235a      	movs	r3, #90	; 0x5a
 800b9d2:	620b      	str	r3, [r1, #32]
 800b9d4:	2300      	movs	r3, #0
 800b9d6:	2510      	movs	r5, #16
 800b9d8:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
 800b9dc:	409d      	lsls	r5, r3
 800b9de:	3301      	adds	r3, #1
 800b9e0:	2b10      	cmp	r3, #16
 800b9e2:	4c0b      	ldr	r4, [pc, #44]	; (800ba10 <_InitOnce+0x5c>)
 800b9e4:	6405      	str	r5, [r0, #64]	; 0x40
 800b9e6:	d1f6      	bne.n	800b9d6 <_InitOnce+0x22>
 800b9e8:	6850      	ldr	r0, [r2, #4]
 800b9ea:	6811      	ldr	r1, [r2, #0]
 800b9ec:	63a1      	str	r1, [r4, #56]	; 0x38
 800b9ee:	2302      	movs	r3, #2
 800b9f0:	6123      	str	r3, [r4, #16]
 800b9f2:	f1a0 0314 	sub.w	r3, r0, #20
 800b9f6:	440b      	add	r3, r1
 800b9f8:	2501      	movs	r5, #1
 800b9fa:	6363      	str	r3, [r4, #52]	; 0x34
 800b9fc:	60e0      	str	r0, [r4, #12]
 800b9fe:	605d      	str	r5, [r3, #4]
 800ba00:	6265      	str	r5, [r4, #36]	; 0x24
 800ba02:	6065      	str	r5, [r4, #4]
 800ba04:	f7ff fe86 	bl	800b714 <_AddFreeMemory>
 800ba08:	f7ff ff84 	bl	800b914 <_EnlargeBlocks>
 800ba0c:	6325      	str	r5, [r4, #48]	; 0x30
 800ba0e:	bd38      	pop	{r3, r4, r5, pc}
 800ba10:	20002d3c 	.word	0x20002d3c
 800ba14:	20002c30 	.word	0x20002c30

0800ba18 <GUI_ALLOC_GetFixedBlock>:
 800ba18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba1c:	4605      	mov	r5, r0
 800ba1e:	4e26      	ldr	r6, [pc, #152]	; (800bab8 <GUI_ALLOC_GetFixedBlock+0xa0>)
 800ba20:	3503      	adds	r5, #3
 800ba22:	f7ff ffc7 	bl	800b9b4 <_InitOnce>
 800ba26:	f025 0503 	bic.w	r5, r5, #3
 800ba2a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800ba2c:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ba2e:	3504      	adds	r5, #4
 800ba30:	429d      	cmp	r5, r3
 800ba32:	bf38      	it	cc
 800ba34:	461d      	movcc	r5, r3
 800ba36:	4614      	mov	r4, r2
 800ba38:	b12c      	cbz	r4, 800ba46 <GUI_ALLOC_GetFixedBlock+0x2e>
 800ba3a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ba3e:	42ab      	cmp	r3, r5
 800ba40:	d02c      	beq.n	800ba9c <GUI_ALLOC_GetFixedBlock+0x84>
 800ba42:	6824      	ldr	r4, [r4, #0]
 800ba44:	e7f8      	b.n	800ba38 <GUI_ALLOC_GetFixedBlock+0x20>
 800ba46:	68f3      	ldr	r3, [r6, #12]
 800ba48:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800ba4a:	eb02 0803 	add.w	r8, r2, r3
 800ba4e:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800ba52:	ebc7 0708 	rsb	r7, r7, r8
 800ba56:	683b      	ldr	r3, [r7, #0]
 800ba58:	b133      	cbz	r3, 800ba68 <GUI_ALLOC_GetFixedBlock+0x50>
 800ba5a:	4620      	mov	r0, r4
 800ba5c:	f7ff feaa 	bl	800b7b4 <_RemoveHoles>
 800ba60:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800ba64:	ebc7 0708 	rsb	r7, r7, r8
 800ba68:	683b      	ldr	r3, [r7, #0]
 800ba6a:	bb13      	cbnz	r3, 800bab2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	42ab      	cmp	r3, r5
 800ba70:	db1f      	blt.n	800bab2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800ba72:	4638      	mov	r0, r7
 800ba74:	1d1c      	adds	r4, r3, #4
 800ba76:	f7ff fe2d 	bl	800b6d4 <_RemoveFreeBlock>
 800ba7a:	68f3      	ldr	r3, [r6, #12]
 800ba7c:	6878      	ldr	r0, [r7, #4]
 800ba7e:	1b5b      	subs	r3, r3, r5
 800ba80:	60f3      	str	r3, [r6, #12]
 800ba82:	6973      	ldr	r3, [r6, #20]
 800ba84:	1b64      	subs	r4, r4, r5
 800ba86:	442b      	add	r3, r5
 800ba88:	1b40      	subs	r0, r0, r5
 800ba8a:	443c      	add	r4, r7
 800ba8c:	6173      	str	r3, [r6, #20]
 800ba8e:	d002      	beq.n	800ba96 <GUI_ALLOC_GetFixedBlock+0x7e>
 800ba90:	4639      	mov	r1, r7
 800ba92:	f7ff fe3f 	bl	800b714 <_AddFreeMemory>
 800ba96:	f844 5c04 	str.w	r5, [r4, #-4]
 800ba9a:	e00a      	b.n	800bab2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800ba9c:	6823      	ldr	r3, [r4, #0]
 800ba9e:	b10b      	cbz	r3, 800baa4 <GUI_ALLOC_GetFixedBlock+0x8c>
 800baa0:	6861      	ldr	r1, [r4, #4]
 800baa2:	6059      	str	r1, [r3, #4]
 800baa4:	6861      	ldr	r1, [r4, #4]
 800baa6:	b101      	cbz	r1, 800baaa <GUI_ALLOC_GetFixedBlock+0x92>
 800baa8:	600b      	str	r3, [r1, #0]
 800baaa:	42a2      	cmp	r2, r4
 800baac:	d101      	bne.n	800bab2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800baae:	6823      	ldr	r3, [r4, #0]
 800bab0:	63f3      	str	r3, [r6, #60]	; 0x3c
 800bab2:	4620      	mov	r0, r4
 800bab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bab8:	20002d3c 	.word	0x20002d3c

0800babc <GUI_ALLOC_GetMaxSize>:
 800babc:	b508      	push	{r3, lr}
 800babe:	f7ff ff79 	bl	800b9b4 <_InitOnce>
 800bac2:	2200      	movs	r2, #0
 800bac4:	4b0b      	ldr	r3, [pc, #44]	; (800baf4 <GUI_ALLOC_GetMaxSize+0x38>)
 800bac6:	4413      	add	r3, r2
 800bac8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bacc:	b113      	cbz	r3, 800bad4 <GUI_ALLOC_GetMaxSize+0x18>
 800bace:	689b      	ldr	r3, [r3, #8]
 800bad0:	2000      	movs	r0, #0
 800bad2:	e00b      	b.n	800baec <GUI_ALLOC_GetMaxSize+0x30>
 800bad4:	3a08      	subs	r2, #8
 800bad6:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800bada:	d1f3      	bne.n	800bac4 <GUI_ALLOC_GetMaxSize+0x8>
 800badc:	e7f8      	b.n	800bad0 <GUI_ALLOC_GetMaxSize+0x14>
 800bade:	685a      	ldr	r2, [r3, #4]
 800bae0:	689b      	ldr	r3, [r3, #8]
 800bae2:	4290      	cmp	r0, r2
 800bae4:	bf38      	it	cc
 800bae6:	4610      	movcc	r0, r2
 800bae8:	b113      	cbz	r3, 800baf0 <GUI_ALLOC_GetMaxSize+0x34>
 800baea:	689b      	ldr	r3, [r3, #8]
 800baec:	2b00      	cmp	r3, #0
 800baee:	d1f6      	bne.n	800bade <GUI_ALLOC_GetMaxSize+0x22>
 800baf0:	380c      	subs	r0, #12
 800baf2:	bd08      	pop	{r3, pc}
 800baf4:	20002d3c 	.word	0x20002d3c

0800baf8 <GUI_ALLOC_RequestSize>:
 800baf8:	b508      	push	{r3, lr}
 800bafa:	f7ff ffdf 	bl	800babc <GUI_ALLOC_GetMaxSize>
 800bafe:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800bb02:	f04f 0364 	mov.w	r3, #100	; 0x64
 800bb06:	4a06      	ldr	r2, [pc, #24]	; (800bb20 <GUI_ALLOC_RequestSize+0x28>)
 800bb08:	d904      	bls.n	800bb14 <GUI_ALLOC_RequestSize+0x1c>
 800bb0a:	fb90 f0f3 	sdiv	r0, r0, r3
 800bb0e:	6a13      	ldr	r3, [r2, #32]
 800bb10:	4358      	muls	r0, r3
 800bb12:	bd08      	pop	{r3, pc}
 800bb14:	6a12      	ldr	r2, [r2, #32]
 800bb16:	4350      	muls	r0, r2
 800bb18:	fbb0 f0f3 	udiv	r0, r0, r3
 800bb1c:	bd08      	pop	{r3, pc}
 800bb1e:	bf00      	nop
 800bb20:	20002d3c 	.word	0x20002d3c

0800bb24 <_Alloc>:
 800bb24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bb28:	4d38      	ldr	r5, [pc, #224]	; (800bc0c <_Alloc+0xe8>)
 800bb2a:	4604      	mov	r4, r0
 800bb2c:	f7ff ff42 	bl	800b9b4 <_InitOnce>
 800bb30:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 800bb32:	682b      	ldr	r3, [r5, #0]
 800bb34:	42bc      	cmp	r4, r7
 800bb36:	bf24      	itt	cs
 800bb38:	1ce7      	addcs	r7, r4, #3
 800bb3a:	f027 0703 	biccs.w	r7, r7, #3
 800bb3e:	370c      	adds	r7, #12
 800bb40:	429f      	cmp	r7, r3
 800bb42:	4c32      	ldr	r4, [pc, #200]	; (800bc0c <_Alloc+0xe8>)
 800bb44:	d83e      	bhi.n	800bbc4 <_Alloc+0xa0>
 800bb46:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bb48:	6862      	ldr	r2, [r4, #4]
 800bb4a:	429a      	cmp	r2, r3
 800bb4c:	d90f      	bls.n	800bb6e <_Alloc+0x4a>
 800bb4e:	686b      	ldr	r3, [r5, #4]
 800bb50:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800bb52:	3b01      	subs	r3, #1
 800bb54:	606b      	str	r3, [r5, #4]
 800bb56:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800bb58:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 800bb5c:	eb03 0209 	add.w	r2, r3, r9
 800bb60:	6852      	ldr	r2, [r2, #4]
 800bb62:	626a      	str	r2, [r5, #36]	; 0x24
 800bb64:	2201      	movs	r2, #1
 800bb66:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 800bb6a:	b956      	cbnz	r6, 800bb82 <_Alloc+0x5e>
 800bb6c:	e02a      	b.n	800bbc4 <_Alloc+0xa0>
 800bb6e:	3b01      	subs	r3, #1
 800bb70:	6323      	str	r3, [r4, #48]	; 0x30
 800bb72:	f7ff fecf 	bl	800b914 <_EnlargeBlocks>
 800bb76:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bb78:	3301      	adds	r3, #1
 800bb7a:	6323      	str	r3, [r4, #48]	; 0x30
 800bb7c:	2800      	cmp	r0, #0
 800bb7e:	d0e6      	beq.n	800bb4e <_Alloc+0x2a>
 800bb80:	e020      	b.n	800bbc4 <_Alloc+0xa0>
 800bb82:	230f      	movs	r3, #15
 800bb84:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800bb88:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800bb8a:	4297      	cmp	r7, r2
 800bb8c:	d20c      	bcs.n	800bba8 <_Alloc+0x84>
 800bb8e:	f113 33ff 	adds.w	r3, r3, #4294967295
 800bb92:	d2f7      	bcs.n	800bb84 <_Alloc+0x60>
 800bb94:	e008      	b.n	800bba8 <_Alloc+0x84>
 800bb96:	6894      	ldr	r4, [r2, #8]
 800bb98:	b12c      	cbz	r4, 800bba6 <_Alloc+0x82>
 800bb9a:	6862      	ldr	r2, [r4, #4]
 800bb9c:	4297      	cmp	r7, r2
 800bb9e:	d914      	bls.n	800bbca <_Alloc+0xa6>
 800bba0:	68a2      	ldr	r2, [r4, #8]
 800bba2:	2a00      	cmp	r2, #0
 800bba4:	d1f7      	bne.n	800bb96 <_Alloc+0x72>
 800bba6:	3301      	adds	r3, #1
 800bba8:	2b0f      	cmp	r3, #15
 800bbaa:	d803      	bhi.n	800bbb4 <_Alloc+0x90>
 800bbac:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800bbb0:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800bbb2:	e7f6      	b.n	800bba2 <_Alloc+0x7e>
 800bbb4:	4638      	mov	r0, r7
 800bbb6:	f7ff fdfd 	bl	800b7b4 <_RemoveHoles>
 800bbba:	2800      	cmp	r0, #0
 800bbbc:	d0e1      	beq.n	800bb82 <_Alloc+0x5e>
 800bbbe:	4630      	mov	r0, r6
 800bbc0:	f7ff fd76 	bl	800b6b0 <_PushFreeBlock>
 800bbc4:	2000      	movs	r0, #0
 800bbc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bbca:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800bbce:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800bbd0:	ebc7 0208 	rsb	r2, r7, r8
 800bbd4:	330c      	adds	r3, #12
 800bbd6:	4620      	mov	r0, r4
 800bbd8:	429a      	cmp	r2, r3
 800bbda:	bf38      	it	cc
 800bbdc:	4647      	movcc	r7, r8
 800bbde:	f7ff fd79 	bl	800b6d4 <_RemoveFreeBlock>
 800bbe2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800bbe4:	444b      	add	r3, r9
 800bbe6:	19e1      	adds	r1, r4, r7
 800bbe8:	605c      	str	r4, [r3, #4]
 800bbea:	45b8      	cmp	r8, r7
 800bbec:	f04f 0300 	mov.w	r3, #0
 800bbf0:	e884 00c0 	stmia.w	r4, {r6, r7}
 800bbf4:	60a3      	str	r3, [r4, #8]
 800bbf6:	6124      	str	r4, [r4, #16]
 800bbf8:	f841 7c04 	str.w	r7, [r1, #-4]
 800bbfc:	dd03      	ble.n	800bc06 <_Alloc+0xe2>
 800bbfe:	ebc7 0008 	rsb	r0, r7, r8
 800bc02:	f7ff fd87 	bl	800b714 <_AddFreeMemory>
 800bc06:	4630      	mov	r0, r6
 800bc08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bc0c:	20002d3c 	.word	0x20002d3c

0800bc10 <GUI_ALLOC_AllocNoInit>:
 800bc10:	b108      	cbz	r0, 800bc16 <GUI_ALLOC_AllocNoInit+0x6>
 800bc12:	f7ff bf87 	b.w	800bb24 <_Alloc>
 800bc16:	4770      	bx	lr

0800bc18 <GUI_ALLOC_FreePtr>:
 800bc18:	b510      	push	{r4, lr}
 800bc1a:	4604      	mov	r4, r0
 800bc1c:	6800      	ldr	r0, [r0, #0]
 800bc1e:	f7ff fe65 	bl	800b8ec <GUI_ALLOC_Free>
 800bc22:	2300      	movs	r3, #0
 800bc24:	6023      	str	r3, [r4, #0]
 800bc26:	bd10      	pop	{r4, pc}

0800bc28 <GUI_ALLOC_AllocInit>:
 800bc28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bc2a:	4605      	mov	r5, r0
 800bc2c:	460c      	mov	r4, r1
 800bc2e:	b909      	cbnz	r1, 800bc34 <GUI_ALLOC_AllocInit+0xc>
 800bc30:	2000      	movs	r0, #0
 800bc32:	e014      	b.n	800bc5e <GUI_ALLOC_AllocInit+0x36>
 800bc34:	4608      	mov	r0, r1
 800bc36:	f7ff ffeb 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 800bc3a:	4606      	mov	r6, r0
 800bc3c:	2800      	cmp	r0, #0
 800bc3e:	d0f7      	beq.n	800bc30 <GUI_ALLOC_AllocInit+0x8>
 800bc40:	f7ff fe1a 	bl	800b878 <GUI_ALLOC_LockH>
 800bc44:	9001      	str	r0, [sp, #4]
 800bc46:	b10d      	cbz	r5, 800bc4c <GUI_ALLOC_AllocInit+0x24>
 800bc48:	4b06      	ldr	r3, [pc, #24]	; (800bc64 <GUI_ALLOC_AllocInit+0x3c>)
 800bc4a:	e000      	b.n	800bc4e <GUI_ALLOC_AllocInit+0x26>
 800bc4c:	4b06      	ldr	r3, [pc, #24]	; (800bc68 <GUI_ALLOC_AllocInit+0x40>)
 800bc4e:	681b      	ldr	r3, [r3, #0]
 800bc50:	4629      	mov	r1, r5
 800bc52:	4622      	mov	r2, r4
 800bc54:	4798      	blx	r3
 800bc56:	a801      	add	r0, sp, #4
 800bc58:	f7ff fe1c 	bl	800b894 <GUI_ALLOC_UnlockH>
 800bc5c:	4630      	mov	r0, r6
 800bc5e:	b002      	add	sp, #8
 800bc60:	bd70      	pop	{r4, r5, r6, pc}
 800bc62:	bf00      	nop
 800bc64:	200000a8 	.word	0x200000a8
 800bc68:	200000a4 	.word	0x200000a4

0800bc6c <GUI_ALLOC_AllocZero>:
 800bc6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bc6e:	4605      	mov	r5, r0
 800bc70:	f7ff ffce 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 800bc74:	4606      	mov	r6, r0
 800bc76:	b160      	cbz	r0, 800bc92 <GUI_ALLOC_AllocZero+0x26>
 800bc78:	f7ff fdfe 	bl	800b878 <GUI_ALLOC_LockH>
 800bc7c:	ac02      	add	r4, sp, #8
 800bc7e:	4b06      	ldr	r3, [pc, #24]	; (800bc98 <GUI_ALLOC_AllocZero+0x2c>)
 800bc80:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bc84:	681b      	ldr	r3, [r3, #0]
 800bc86:	2100      	movs	r1, #0
 800bc88:	462a      	mov	r2, r5
 800bc8a:	4798      	blx	r3
 800bc8c:	4620      	mov	r0, r4
 800bc8e:	f7ff fe01 	bl	800b894 <GUI_ALLOC_UnlockH>
 800bc92:	4630      	mov	r0, r6
 800bc94:	b002      	add	sp, #8
 800bc96:	bd70      	pop	{r4, r5, r6, pc}
 800bc98:	200000a4 	.word	0x200000a4

0800bc9c <GUI_ALLOC_Realloc>:
 800bc9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bc9e:	4604      	mov	r4, r0
 800bca0:	4608      	mov	r0, r1
 800bca2:	460e      	mov	r6, r1
 800bca4:	f7ff ffb4 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 800bca8:	4605      	mov	r5, r0
 800bcaa:	b300      	cbz	r0, 800bcee <GUI_ALLOC_Realloc+0x52>
 800bcac:	b1fc      	cbz	r4, 800bcee <GUI_ALLOC_Realloc+0x52>
 800bcae:	4620      	mov	r0, r4
 800bcb0:	f7ff fe10 	bl	800b8d4 <GUI_ALLOC_GetSize>
 800bcb4:	42b0      	cmp	r0, r6
 800bcb6:	bfb4      	ite	lt
 800bcb8:	4607      	movlt	r7, r0
 800bcba:	4637      	movge	r7, r6
 800bcbc:	4628      	mov	r0, r5
 800bcbe:	f7ff fddb 	bl	800b878 <GUI_ALLOC_LockH>
 800bcc2:	9000      	str	r0, [sp, #0]
 800bcc4:	4620      	mov	r0, r4
 800bcc6:	f7ff fdd7 	bl	800b878 <GUI_ALLOC_LockH>
 800bcca:	ae02      	add	r6, sp, #8
 800bccc:	4b09      	ldr	r3, [pc, #36]	; (800bcf4 <GUI_ALLOC_Realloc+0x58>)
 800bcce:	9001      	str	r0, [sp, #4]
 800bcd0:	4601      	mov	r1, r0
 800bcd2:	681b      	ldr	r3, [r3, #0]
 800bcd4:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 800bcd8:	463a      	mov	r2, r7
 800bcda:	4798      	blx	r3
 800bcdc:	4668      	mov	r0, sp
 800bcde:	f7ff fdd9 	bl	800b894 <GUI_ALLOC_UnlockH>
 800bce2:	a801      	add	r0, sp, #4
 800bce4:	f7ff fdd6 	bl	800b894 <GUI_ALLOC_UnlockH>
 800bce8:	4620      	mov	r0, r4
 800bcea:	f7ff fdff 	bl	800b8ec <GUI_ALLOC_Free>
 800bcee:	4628      	mov	r0, r5
 800bcf0:	b003      	add	sp, #12
 800bcf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcf4:	200000a8 	.word	0x200000a8

0800bcf8 <GUI_DrawRect>:
 800bcf8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800bcfc:	4c1e      	ldr	r4, [pc, #120]	; (800bd78 <GUI_DrawRect+0x80>)
 800bcfe:	f8d4 e000 	ldr.w	lr, [r4]
 800bd02:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800bd06:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800bd0a:	1905      	adds	r5, r0, r4
 800bd0c:	4414      	add	r4, r2
 800bd0e:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800bd12:	3a01      	subs	r2, #1
 800bd14:	b292      	uxth	r2, r2
 800bd16:	198f      	adds	r7, r1, r6
 800bd18:	441e      	add	r6, r3
 800bd1a:	1aab      	subs	r3, r5, r2
 800bd1c:	f8ad 3000 	strh.w	r3, [sp]
 800bd20:	1913      	adds	r3, r2, r4
 800bd22:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bd26:	4668      	mov	r0, sp
 800bd28:	1abb      	subs	r3, r7, r2
 800bd2a:	4432      	add	r2, r6
 800bd2c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bd30:	f8ad 2006 	strh.w	r2, [sp, #6]
 800bd34:	f7fa f9f0 	bl	8006118 <WM__InitIVRSearch>
 800bd38:	b1d0      	cbz	r0, 800bd70 <GUI_DrawRect+0x78>
 800bd3a:	4628      	mov	r0, r5
 800bd3c:	4639      	mov	r1, r7
 800bd3e:	4622      	mov	r2, r4
 800bd40:	f7fc fefa 	bl	8008b38 <LCD_DrawHLine>
 800bd44:	f107 0901 	add.w	r9, r7, #1
 800bd48:	4628      	mov	r0, r5
 800bd4a:	4631      	mov	r1, r6
 800bd4c:	4622      	mov	r2, r4
 800bd4e:	f106 38ff 	add.w	r8, r6, #4294967295
 800bd52:	f7fc fef1 	bl	8008b38 <LCD_DrawHLine>
 800bd56:	4628      	mov	r0, r5
 800bd58:	4649      	mov	r1, r9
 800bd5a:	4642      	mov	r2, r8
 800bd5c:	f7fc ff12 	bl	8008b84 <LCD_DrawVLine>
 800bd60:	4620      	mov	r0, r4
 800bd62:	4649      	mov	r1, r9
 800bd64:	4642      	mov	r2, r8
 800bd66:	f7fc ff0d 	bl	8008b84 <LCD_DrawVLine>
 800bd6a:	f7fa f913 	bl	8005f94 <WM__GetNextIVR>
 800bd6e:	e7e3      	b.n	800bd38 <GUI_DrawRect+0x40>
 800bd70:	b003      	add	sp, #12
 800bd72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd76:	bf00      	nop
 800bd78:	200000b8 	.word	0x200000b8

0800bd7c <LCD_Index2Color_M565>:
 800bd7c:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 800bd80:	4b06      	ldr	r3, [pc, #24]	; (800bd9c <LCD_Index2Color_M565+0x20>)
 800bd82:	f000 021f 	and.w	r2, r0, #31
 800bd86:	f3c0 1045 	ubfx	r0, r0, #5, #6
 800bd8a:	5c9a      	ldrb	r2, [r3, r2]
 800bd8c:	5c5b      	ldrb	r3, [r3, r1]
 800bd8e:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 800bd92:	4a03      	ldr	r2, [pc, #12]	; (800bda0 <LCD_Index2Color_M565+0x24>)
 800bd94:	5c10      	ldrb	r0, [r2, r0]
 800bd96:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800bd9a:	4770      	bx	lr
 800bd9c:	08012e42 	.word	0x08012e42
 800bda0:	08012e62 	.word	0x08012e62

0800bda4 <_Color2Index_M565>:
 800bda4:	f3c0 4107 	ubfx	r1, r0, #16, #8
 800bda8:	4b06      	ldr	r3, [pc, #24]	; (800bdc4 <_Color2Index_M565+0x20>)
 800bdaa:	b2c2      	uxtb	r2, r0
 800bdac:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800bdb0:	5c9a      	ldrb	r2, [r3, r2]
 800bdb2:	5c5b      	ldrb	r3, [r3, r1]
 800bdb4:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 800bdb8:	4a03      	ldr	r2, [pc, #12]	; (800bdc8 <_Color2Index_M565+0x24>)
 800bdba:	5c10      	ldrb	r0, [r2, r0]
 800bdbc:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 800bdc0:	4770      	bx	lr
 800bdc2:	bf00      	nop
 800bdc4:	08012d42 	.word	0x08012d42
 800bdc8:	08012ea2 	.word	0x08012ea2

0800bdcc <_GetIndexMask_M565>:
 800bdcc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800bdd0:	4770      	bx	lr
	...

0800bdd4 <_Color2IndexBulk>:
 800bdd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bdd6:	4f0f      	ldr	r7, [pc, #60]	; (800be14 <_Color2IndexBulk+0x40>)
 800bdd8:	683f      	ldr	r7, [r7, #0]
 800bdda:	4606      	mov	r6, r0
 800bddc:	460d      	mov	r5, r1
 800bdde:	4614      	mov	r4, r2
 800bde0:	469c      	mov	ip, r3
 800bde2:	b10f      	cbz	r7, 800bde8 <_Color2IndexBulk+0x14>
 800bde4:	47b8      	blx	r7
 800bde6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bde8:	f856 2b04 	ldr.w	r2, [r6], #4
 800bdec:	490a      	ldr	r1, [pc, #40]	; (800be18 <_Color2IndexBulk+0x44>)
 800bdee:	b2d3      	uxtb	r3, r2
 800bdf0:	3c01      	subs	r4, #1
 800bdf2:	5cc8      	ldrb	r0, [r1, r3]
 800bdf4:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bdf8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800bdfc:	5ccb      	ldrb	r3, [r1, r3]
 800bdfe:	4907      	ldr	r1, [pc, #28]	; (800be1c <_Color2IndexBulk+0x48>)
 800be00:	5c8a      	ldrb	r2, [r1, r2]
 800be02:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 800be06:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800be0a:	802b      	strh	r3, [r5, #0]
 800be0c:	4465      	add	r5, ip
 800be0e:	d1eb      	bne.n	800bde8 <_Color2IndexBulk+0x14>
 800be10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be12:	bf00      	nop
 800be14:	20002c40 	.word	0x20002c40
 800be18:	08012d42 	.word	0x08012d42
 800be1c:	08012ea2 	.word	0x08012ea2

0800be20 <_Index2ColorBulk>:
 800be20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be22:	4e13      	ldr	r6, [pc, #76]	; (800be70 <_Index2ColorBulk+0x50>)
 800be24:	6836      	ldr	r6, [r6, #0]
 800be26:	4684      	mov	ip, r0
 800be28:	4614      	mov	r4, r2
 800be2a:	461d      	mov	r5, r3
 800be2c:	b10e      	cbz	r6, 800be32 <_Index2ColorBulk+0x12>
 800be2e:	47b0      	blx	r6
 800be30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be32:	1e50      	subs	r0, r2, #1
 800be34:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800be38:	3a01      	subs	r2, #1
 800be3a:	fb03 c000 	mla	r0, r3, r0, ip
 800be3e:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800be42:	8802      	ldrh	r2, [r0, #0]
 800be44:	4b0b      	ldr	r3, [pc, #44]	; (800be74 <_Index2ColorBulk+0x54>)
 800be46:	f002 061f 	and.w	r6, r2, #31
 800be4a:	0ad7      	lsrs	r7, r2, #11
 800be4c:	5d9e      	ldrb	r6, [r3, r6]
 800be4e:	5ddb      	ldrb	r3, [r3, r7]
 800be50:	f3c2 1245 	ubfx	r2, r2, #5, #6
 800be54:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 800be58:	4e07      	ldr	r6, [pc, #28]	; (800be78 <_Index2ColorBulk+0x58>)
 800be5a:	5cb2      	ldrb	r2, [r6, r2]
 800be5c:	3c01      	subs	r4, #1
 800be5e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800be62:	f841 3904 	str.w	r3, [r1], #-4
 800be66:	ebc5 0000 	rsb	r0, r5, r0
 800be6a:	d1ea      	bne.n	800be42 <_Index2ColorBulk+0x22>
 800be6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be6e:	bf00      	nop
 800be70:	20002c3c 	.word	0x20002c3c
 800be74:	08012e42 	.word	0x08012e42
 800be78:	08012e62 	.word	0x08012e62

0800be7c <LCD_Index2Color_888>:
 800be7c:	4770      	bx	lr

0800be7e <LCD_Index2Color_8888>:
 800be7e:	4770      	bx	lr

0800be80 <_Color2Index_8888>:
 800be80:	4770      	bx	lr

0800be82 <_GetIndexMask_8888>:
 800be82:	f04f 30ff 	mov.w	r0, #4294967295
 800be86:	4770      	bx	lr

0800be88 <_Color2IndexBulk>:
 800be88:	b510      	push	{r4, lr}
 800be8a:	f850 4b04 	ldr.w	r4, [r0], #4
 800be8e:	600c      	str	r4, [r1, #0]
 800be90:	3a01      	subs	r2, #1
 800be92:	4419      	add	r1, r3
 800be94:	d1f9      	bne.n	800be8a <_Color2IndexBulk+0x2>
 800be96:	bd10      	pop	{r4, pc}

0800be98 <_Index2ColorBulk>:
 800be98:	b510      	push	{r4, lr}
 800be9a:	6804      	ldr	r4, [r0, #0]
 800be9c:	f841 4b04 	str.w	r4, [r1], #4
 800bea0:	3a01      	subs	r2, #1
 800bea2:	4418      	add	r0, r3
 800bea4:	d1f9      	bne.n	800be9a <_Index2ColorBulk+0x2>
 800bea6:	bd10      	pop	{r4, pc}

0800bea8 <_DrawDown>:
 800bea8:	4770      	bx	lr

0800beaa <_DrawUp>:
 800beaa:	4770      	bx	lr

0800beac <_DrawDownRect>:
 800beac:	4770      	bx	lr

0800beae <_DrawUpRect>:
 800beae:	4770      	bx	lr

0800beb0 <_DrawFlat>:
 800beb0:	4770      	bx	lr

0800beb2 <_EffectRequiresRedraw>:
 800beb2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800beb4:	460d      	mov	r5, r1
 800beb6:	f100 0108 	add.w	r1, r0, #8
 800beba:	4602      	mov	r2, r0
 800bebc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bebe:	c903      	ldmia	r1, {r0, r1}
 800bec0:	681c      	ldr	r4, [r3, #0]
 800bec2:	e88d 0003 	stmia.w	sp, {r0, r1}
 800bec6:	4610      	mov	r0, r2
 800bec8:	4669      	mov	r1, sp
 800beca:	f7f8 fb3b 	bl	8004544 <WM__Screen2Client>
 800bece:	f9b5 2000 	ldrsh.w	r2, [r5]
 800bed2:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bed6:	4422      	add	r2, r4
 800bed8:	429a      	cmp	r2, r3
 800beda:	dc17      	bgt.n	800bf0c <_EffectRequiresRedraw+0x5a>
 800bedc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bee0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bee4:	1b12      	subs	r2, r2, r4
 800bee6:	429a      	cmp	r2, r3
 800bee8:	db10      	blt.n	800bf0c <_EffectRequiresRedraw+0x5a>
 800beea:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800beee:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bef2:	4422      	add	r2, r4
 800bef4:	429a      	cmp	r2, r3
 800bef6:	dc09      	bgt.n	800bf0c <_EffectRequiresRedraw+0x5a>
 800bef8:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800befc:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bf00:	1b04      	subs	r4, r0, r4
 800bf02:	429c      	cmp	r4, r3
 800bf04:	bfac      	ite	ge
 800bf06:	2000      	movge	r0, #0
 800bf08:	2001      	movlt	r0, #1
 800bf0a:	e000      	b.n	800bf0e <_EffectRequiresRedraw+0x5c>
 800bf0c:	2001      	movs	r0, #1
 800bf0e:	b003      	add	sp, #12
 800bf10:	bd30      	pop	{r4, r5, pc}

0800bf12 <WIDGET__RotateRect90>:
 800bf12:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bf16:	b570      	push	{r4, r5, r6, lr}
 800bf18:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800bf1c:	8815      	ldrh	r5, [r2, #0]
 800bf1e:	88d0      	ldrh	r0, [r2, #6]
 800bf20:	8894      	ldrh	r4, [r2, #4]
 800bf22:	8852      	ldrh	r2, [r2, #2]
 800bf24:	804d      	strh	r5, [r1, #2]
 800bf26:	1af3      	subs	r3, r6, r3
 800bf28:	b29b      	uxth	r3, r3
 800bf2a:	1a18      	subs	r0, r3, r0
 800bf2c:	1a9b      	subs	r3, r3, r2
 800bf2e:	8008      	strh	r0, [r1, #0]
 800bf30:	808b      	strh	r3, [r1, #4]
 800bf32:	80cc      	strh	r4, [r1, #6]
 800bf34:	bd70      	pop	{r4, r5, r6, pc}

0800bf36 <WIDGET__GetClientRect>:
 800bf36:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bf38:	071b      	lsls	r3, r3, #28
 800bf3a:	b513      	push	{r0, r1, r4, lr}
 800bf3c:	460c      	mov	r4, r1
 800bf3e:	d50f      	bpl.n	800bf60 <WIDGET__GetClientRect+0x2a>
 800bf40:	4668      	mov	r0, sp
 800bf42:	f7f8 fdb7 	bl	8004ab4 <WM_GetClientRect>
 800bf46:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf4a:	8023      	strh	r3, [r4, #0]
 800bf4c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bf50:	80a3      	strh	r3, [r4, #4]
 800bf52:	f8bd 3000 	ldrh.w	r3, [sp]
 800bf56:	8063      	strh	r3, [r4, #2]
 800bf58:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bf5c:	80e3      	strh	r3, [r4, #6]
 800bf5e:	e002      	b.n	800bf66 <WIDGET__GetClientRect+0x30>
 800bf60:	4608      	mov	r0, r1
 800bf62:	f7f8 fda7 	bl	8004ab4 <WM_GetClientRect>
 800bf66:	b002      	add	sp, #8
 800bf68:	bd10      	pop	{r4, pc}

0800bf6a <WIDGET__GetInsideRect>:
 800bf6a:	b538      	push	{r3, r4, r5, lr}
 800bf6c:	4604      	mov	r4, r0
 800bf6e:	460d      	mov	r5, r1
 800bf70:	f7f9 fd1c 	bl	80059ac <WM__GetClientRectWin>
 800bf74:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bf76:	4628      	mov	r0, r5
 800bf78:	4629      	mov	r1, r5
 800bf7a:	681a      	ldr	r2, [r3, #0]
 800bf7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf80:	f7fd b9a5 	b.w	80092ce <GUI__ReduceRect>

0800bf84 <WIDGET__Init>:
 800bf84:	4b02      	ldr	r3, [pc, #8]	; (800bf90 <WIDGET__Init+0xc>)
 800bf86:	8642      	strh	r2, [r0, #50]	; 0x32
 800bf88:	681b      	ldr	r3, [r3, #0]
 800bf8a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800bf8c:	8601      	strh	r1, [r0, #48]	; 0x30
 800bf8e:	4770      	bx	lr
 800bf90:	200000c8 	.word	0x200000c8

0800bf94 <WIDGET_SetState>:
 800bf94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf96:	460c      	mov	r4, r1
 800bf98:	4605      	mov	r5, r0
 800bf9a:	f7ff fc6d 	bl	800b878 <GUI_ALLOC_LockH>
 800bf9e:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bfa0:	9001      	str	r0, [sp, #4]
 800bfa2:	4294      	cmp	r4, r2
 800bfa4:	d003      	beq.n	800bfae <WIDGET_SetState+0x1a>
 800bfa6:	8644      	strh	r4, [r0, #50]	; 0x32
 800bfa8:	4628      	mov	r0, r5
 800bfaa:	f7f9 fe49 	bl	8005c40 <WM_InvalidateWindow>
 800bfae:	a801      	add	r0, sp, #4
 800bfb0:	f7ff fc70 	bl	800b894 <GUI_ALLOC_UnlockH>
 800bfb4:	b003      	add	sp, #12
 800bfb6:	bd30      	pop	{r4, r5, pc}

0800bfb8 <WIDGET_OrState>:
 800bfb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfba:	460c      	mov	r4, r1
 800bfbc:	4605      	mov	r5, r0
 800bfbe:	b178      	cbz	r0, 800bfe0 <WIDGET_OrState+0x28>
 800bfc0:	f7ff fc5a 	bl	800b878 <GUI_ALLOC_LockH>
 800bfc4:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bfc6:	9001      	str	r0, [sp, #4]
 800bfc8:	ea04 0102 	and.w	r1, r4, r2
 800bfcc:	428c      	cmp	r4, r1
 800bfce:	d004      	beq.n	800bfda <WIDGET_OrState+0x22>
 800bfd0:	4314      	orrs	r4, r2
 800bfd2:	8644      	strh	r4, [r0, #50]	; 0x32
 800bfd4:	4628      	mov	r0, r5
 800bfd6:	f7f9 fe33 	bl	8005c40 <WM_InvalidateWindow>
 800bfda:	a801      	add	r0, sp, #4
 800bfdc:	f7ff fc5a 	bl	800b894 <GUI_ALLOC_UnlockH>
 800bfe0:	b003      	add	sp, #12
 800bfe2:	bd30      	pop	{r4, r5, pc}

0800bfe4 <WIDGET_AndState>:
 800bfe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfe6:	460d      	mov	r5, r1
 800bfe8:	4604      	mov	r4, r0
 800bfea:	b170      	cbz	r0, 800c00a <WIDGET_AndState+0x26>
 800bfec:	f7ff fc44 	bl	800b878 <GUI_ALLOC_LockH>
 800bff0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bff2:	9001      	str	r0, [sp, #4]
 800bff4:	ea22 0105 	bic.w	r1, r2, r5
 800bff8:	428a      	cmp	r2, r1
 800bffa:	d003      	beq.n	800c004 <WIDGET_AndState+0x20>
 800bffc:	8641      	strh	r1, [r0, #50]	; 0x32
 800bffe:	4620      	mov	r0, r4
 800c000:	f7f9 fe1e 	bl	8005c40 <WM_InvalidateWindow>
 800c004:	a801      	add	r0, sp, #4
 800c006:	f7ff fc45 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c00a:	b003      	add	sp, #12
 800c00c:	bd30      	pop	{r4, r5, pc}

0800c00e <WIDGET_HandleActive>:
 800c00e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c010:	460d      	mov	r5, r1
 800c012:	b085      	sub	sp, #20
 800c014:	4606      	mov	r6, r0
 800c016:	2800      	cmp	r0, #0
 800c018:	f000 8095 	beq.w	800c146 <WIDGET_HandleActive+0x138>
 800c01c:	f7ff fc2c 	bl	800b878 <GUI_ALLOC_LockH>
 800c020:	682b      	ldr	r3, [r5, #0]
 800c022:	9002      	str	r0, [sp, #8]
 800c024:	2b16      	cmp	r3, #22
 800c026:	d054      	beq.n	800c0d2 <WIDGET_HandleActive+0xc4>
 800c028:	dc0c      	bgt.n	800c044 <WIDGET_HandleActive+0x36>
 800c02a:	2b11      	cmp	r3, #17
 800c02c:	d033      	beq.n	800c096 <WIDGET_HandleActive+0x88>
 800c02e:	dc02      	bgt.n	800c036 <WIDGET_HandleActive+0x28>
 800c030:	2b0d      	cmp	r3, #13
 800c032:	d040      	beq.n	800c0b6 <WIDGET_HandleActive+0xa8>
 800c034:	e080      	b.n	800c138 <WIDGET_HandleActive+0x12a>
 800c036:	2b14      	cmp	r3, #20
 800c038:	d079      	beq.n	800c12e <WIDGET_HandleActive+0x120>
 800c03a:	2b15      	cmp	r3, #21
 800c03c:	d17c      	bne.n	800c138 <WIDGET_HandleActive+0x12a>
 800c03e:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 800c042:	e072      	b.n	800c12a <WIDGET_HandleActive+0x11c>
 800c044:	2b1f      	cmp	r3, #31
 800c046:	d06d      	beq.n	800c124 <WIDGET_HandleActive+0x116>
 800c048:	dc02      	bgt.n	800c050 <WIDGET_HandleActive+0x42>
 800c04a:	2b1e      	cmp	r3, #30
 800c04c:	d044      	beq.n	800c0d8 <WIDGET_HandleActive+0xca>
 800c04e:	e073      	b.n	800c138 <WIDGET_HandleActive+0x12a>
 800c050:	2b31      	cmp	r3, #49	; 0x31
 800c052:	d01e      	beq.n	800c092 <WIDGET_HandleActive+0x84>
 800c054:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c058:	d16e      	bne.n	800c138 <WIDGET_HandleActive+0x12a>
 800c05a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800c05c:	6819      	ldr	r1, [r3, #0]
 800c05e:	68eb      	ldr	r3, [r5, #12]
 800c060:	62c3      	str	r3, [r0, #44]	; 0x2c
 800c062:	681b      	ldr	r3, [r3, #0]
 800c064:	a802      	add	r0, sp, #8
 800c066:	1acd      	subs	r5, r1, r3
 800c068:	f7ff fc14 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c06c:	4630      	mov	r0, r6
 800c06e:	f7ff fc03 	bl	800b878 <GUI_ALLOC_LockH>
 800c072:	ac04      	add	r4, sp, #16
 800c074:	4269      	negs	r1, r5
 800c076:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c07a:	460a      	mov	r2, r1
 800c07c:	462b      	mov	r3, r5
 800c07e:	9500      	str	r5, [sp, #0]
 800c080:	f7f8 fa9c 	bl	80045bc <WM__UpdateChildPositions>
 800c084:	4620      	mov	r0, r4
 800c086:	f7ff fc05 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c08a:	4630      	mov	r0, r6
 800c08c:	f7f9 fdd8 	bl	8005c40 <WM_InvalidateWindow>
 800c090:	e050      	b.n	800c134 <WIDGET_HandleActive+0x126>
 800c092:	2400      	movs	r4, #0
 800c094:	e041      	b.n	800c11a <WIDGET_HandleActive+0x10c>
 800c096:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c098:	06d9      	lsls	r1, r3, #27
 800c09a:	d54d      	bpl.n	800c138 <WIDGET_HandleActive+0x12a>
 800c09c:	68eb      	ldr	r3, [r5, #12]
 800c09e:	2b00      	cmp	r3, #0
 800c0a0:	d04a      	beq.n	800c138 <WIDGET_HandleActive+0x12a>
 800c0a2:	7a1b      	ldrb	r3, [r3, #8]
 800c0a4:	2b00      	cmp	r3, #0
 800c0a6:	d047      	beq.n	800c138 <WIDGET_HandleActive+0x12a>
 800c0a8:	a802      	add	r0, sp, #8
 800c0aa:	f7ff fbf3 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c0ae:	4630      	mov	r0, r6
 800c0b0:	f7f8 ff88 	bl	8004fc4 <WM_SetFocus>
 800c0b4:	e040      	b.n	800c138 <WIDGET_HandleActive+0x12a>
 800c0b6:	68eb      	ldr	r3, [r5, #12]
 800c0b8:	68db      	ldr	r3, [r3, #12]
 800c0ba:	2b00      	cmp	r3, #0
 800c0bc:	d03c      	beq.n	800c138 <WIDGET_HandleActive+0x12a>
 800c0be:	7a1b      	ldrb	r3, [r3, #8]
 800c0c0:	2b00      	cmp	r3, #0
 800c0c2:	d039      	beq.n	800c138 <WIDGET_HandleActive+0x12a>
 800c0c4:	a802      	add	r0, sp, #8
 800c0c6:	f7ff fbe5 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c0ca:	4630      	mov	r0, r6
 800c0cc:	f7f9 f894 	bl	80051f8 <WM_BringToTop>
 800c0d0:	e030      	b.n	800c134 <WIDGET_HandleActive+0x126>
 800c0d2:	68eb      	ldr	r3, [r5, #12]
 800c0d4:	8603      	strh	r3, [r0, #48]	; 0x30
 800c0d6:	e02d      	b.n	800c134 <WIDGET_HandleActive+0x126>
 800c0d8:	68eb      	ldr	r3, [r5, #12]
 800c0da:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800c0dc:	2b01      	cmp	r3, #1
 800c0de:	d108      	bne.n	800c0f2 <WIDGET_HandleActive+0xe4>
 800c0e0:	06ca      	lsls	r2, r1, #27
 800c0e2:	d50d      	bpl.n	800c100 <WIDGET_HandleActive+0xf2>
 800c0e4:	4630      	mov	r0, r6
 800c0e6:	f041 0101 	orr.w	r1, r1, #1
 800c0ea:	f7ff ff53 	bl	800bf94 <WIDGET_SetState>
 800c0ee:	2708      	movs	r7, #8
 800c0f0:	e008      	b.n	800c104 <WIDGET_HandleActive+0xf6>
 800c0f2:	f021 0101 	bic.w	r1, r1, #1
 800c0f6:	4630      	mov	r0, r6
 800c0f8:	f7ff ff4c 	bl	800bf94 <WIDGET_SetState>
 800c0fc:	2709      	movs	r7, #9
 800c0fe:	e001      	b.n	800c104 <WIDGET_HandleActive+0xf6>
 800c100:	f04f 37ff 	mov.w	r7, #4294967295
 800c104:	a802      	add	r0, sp, #8
 800c106:	f7ff fbc5 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c10a:	1c7b      	adds	r3, r7, #1
 800c10c:	f04f 0400 	mov.w	r4, #0
 800c110:	d005      	beq.n	800c11e <WIDGET_HandleActive+0x110>
 800c112:	4630      	mov	r0, r6
 800c114:	4639      	mov	r1, r7
 800c116:	f7f8 ff4a 	bl	8004fae <WM_NotifyParent>
 800c11a:	60ec      	str	r4, [r5, #12]
 800c11c:	e00d      	b.n	800c13a <WIDGET_HandleActive+0x12c>
 800c11e:	2301      	movs	r3, #1
 800c120:	60eb      	str	r3, [r5, #12]
 800c122:	e00a      	b.n	800c13a <WIDGET_HandleActive+0x12c>
 800c124:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c126:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800c12a:	60eb      	str	r3, [r5, #12]
 800c12c:	e002      	b.n	800c134 <WIDGET_HandleActive+0x126>
 800c12e:	68e9      	ldr	r1, [r5, #12]
 800c130:	f7ff ff1b 	bl	800bf6a <WIDGET__GetInsideRect>
 800c134:	2400      	movs	r4, #0
 800c136:	e000      	b.n	800c13a <WIDGET_HandleActive+0x12c>
 800c138:	2401      	movs	r4, #1
 800c13a:	9b02      	ldr	r3, [sp, #8]
 800c13c:	b123      	cbz	r3, 800c148 <WIDGET_HandleActive+0x13a>
 800c13e:	a802      	add	r0, sp, #8
 800c140:	f7ff fba8 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c144:	e000      	b.n	800c148 <WIDGET_HandleActive+0x13a>
 800c146:	2401      	movs	r4, #1
 800c148:	4620      	mov	r0, r4
 800c14a:	b005      	add	sp, #20
 800c14c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c14e <WIDGET__SetScrollState>:
 800c14e:	b570      	push	{r4, r5, r6, lr}
 800c150:	460d      	mov	r5, r1
 800c152:	21fe      	movs	r1, #254	; 0xfe
 800c154:	4616      	mov	r6, r2
 800c156:	4604      	mov	r4, r0
 800c158:	f7f8 fd2e 	bl	8004bb8 <WM_GetDialogItem>
 800c15c:	4629      	mov	r1, r5
 800c15e:	f7f8 ff7f 	bl	8005060 <WM_SetScrollState>
 800c162:	4620      	mov	r0, r4
 800c164:	21ff      	movs	r1, #255	; 0xff
 800c166:	f7f8 fd27 	bl	8004bb8 <WM_GetDialogItem>
 800c16a:	4631      	mov	r1, r6
 800c16c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c170:	f7f8 bf76 	b.w	8005060 <WM_SetScrollState>

0800c174 <WIDGET__DrawTriangle>:
 800c174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c176:	461c      	mov	r4, r3
 800c178:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c17a:	9f06      	ldr	r7, [sp, #24]
 800c17c:	071b      	lsls	r3, r3, #28
 800c17e:	460d      	mov	r5, r1
 800c180:	4616      	mov	r6, r2
 800c182:	d50a      	bpl.n	800c19a <WIDGET__DrawTriangle+0x26>
 800c184:	2c00      	cmp	r4, #0
 800c186:	db07      	blt.n	800c198 <WIDGET__DrawTriangle+0x24>
 800c188:	4628      	mov	r0, r5
 800c18a:	1b31      	subs	r1, r6, r4
 800c18c:	19a2      	adds	r2, r4, r6
 800c18e:	f7fd fff1 	bl	800a174 <GUI_DrawHLine>
 800c192:	3c01      	subs	r4, #1
 800c194:	443d      	add	r5, r7
 800c196:	e7f5      	b.n	800c184 <WIDGET__DrawTriangle+0x10>
 800c198:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c19a:	2c00      	cmp	r4, #0
 800c19c:	db07      	blt.n	800c1ae <WIDGET__DrawTriangle+0x3a>
 800c19e:	4628      	mov	r0, r5
 800c1a0:	1b31      	subs	r1, r6, r4
 800c1a2:	19a2      	adds	r2, r4, r6
 800c1a4:	f7fe f840 	bl	800a228 <GUI_DrawVLine>
 800c1a8:	3c01      	subs	r4, #1
 800c1aa:	443d      	add	r5, r7
 800c1ac:	e7f5      	b.n	800c19a <WIDGET__DrawTriangle+0x26>
 800c1ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c1b0 <WIDGET__EFFECT_DrawDownRect>:
 800c1b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1b2:	4605      	mov	r5, r0
 800c1b4:	460c      	mov	r4, r1
 800c1b6:	b919      	cbnz	r1, 800c1c0 <WIDGET__EFFECT_DrawDownRect+0x10>
 800c1b8:	4668      	mov	r0, sp
 800c1ba:	f7f8 fc7b 	bl	8004ab4 <WM_GetClientRect>
 800c1be:	466c      	mov	r4, sp
 800c1c0:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800c1c2:	071b      	lsls	r3, r3, #28
 800c1c4:	d505      	bpl.n	800c1d2 <WIDGET__EFFECT_DrawDownRect+0x22>
 800c1c6:	4622      	mov	r2, r4
 800c1c8:	4628      	mov	r0, r5
 800c1ca:	4669      	mov	r1, sp
 800c1cc:	f7ff fea1 	bl	800bf12 <WIDGET__RotateRect90>
 800c1d0:	466c      	mov	r4, sp
 800c1d2:	4628      	mov	r0, r5
 800c1d4:	4621      	mov	r1, r4
 800c1d6:	f7ff fe6c 	bl	800beb2 <_EffectRequiresRedraw>
 800c1da:	b118      	cbz	r0, 800c1e4 <WIDGET__EFFECT_DrawDownRect+0x34>
 800c1dc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c1de:	4620      	mov	r0, r4
 800c1e0:	691b      	ldr	r3, [r3, #16]
 800c1e2:	4798      	blx	r3
 800c1e4:	b003      	add	sp, #12
 800c1e6:	bd30      	pop	{r4, r5, pc}

0800c1e8 <WIDGET_SetEffect>:
 800c1e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c1ea:	2300      	movs	r3, #0
 800c1ec:	9302      	str	r3, [sp, #8]
 800c1ee:	9103      	str	r1, [sp, #12]
 800c1f0:	f44f 7340 	mov.w	r3, #768	; 0x300
 800c1f4:	4669      	mov	r1, sp
 800c1f6:	9300      	str	r3, [sp, #0]
 800c1f8:	f7f9 fbc9 	bl	800598e <WM_SendMessage>
 800c1fc:	b005      	add	sp, #20
 800c1fe:	f85d fb04 	ldr.w	pc, [sp], #4

0800c202 <_DeleteTimer>:
 800c202:	b507      	push	{r0, r1, r2, lr}
 800c204:	f7ff fb38 	bl	800b878 <GUI_ALLOC_LockH>
 800c208:	9001      	str	r0, [sp, #4]
 800c20a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800c20c:	f000 ff93 	bl	800d136 <WM_DeleteTimer>
 800c210:	a802      	add	r0, sp, #8
 800c212:	2200      	movs	r2, #0
 800c214:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800c218:	665a      	str	r2, [r3, #100]	; 0x64
 800c21a:	65da      	str	r2, [r3, #92]	; 0x5c
 800c21c:	f7ff fb3a 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c220:	b003      	add	sp, #12
 800c222:	f85d fb04 	ldr.w	pc, [sp], #4

0800c226 <SCROLLBAR__Rect2VRect>:
 800c226:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c228:	071b      	lsls	r3, r3, #28
 800c22a:	b510      	push	{r4, lr}
 800c22c:	d512      	bpl.n	800c254 <SCROLLBAR__Rect2VRect+0x2e>
 800c22e:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c232:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c236:	8808      	ldrh	r0, [r1, #0]
 800c238:	884c      	ldrh	r4, [r1, #2]
 800c23a:	800c      	strh	r4, [r1, #0]
 800c23c:	1ad3      	subs	r3, r2, r3
 800c23e:	888a      	ldrh	r2, [r1, #4]
 800c240:	88cc      	ldrh	r4, [r1, #6]
 800c242:	808c      	strh	r4, [r1, #4]
 800c244:	3301      	adds	r3, #1
 800c246:	b29b      	uxth	r3, r3
 800c248:	43c0      	mvns	r0, r0
 800c24a:	43d2      	mvns	r2, r2
 800c24c:	4418      	add	r0, r3
 800c24e:	4413      	add	r3, r2
 800c250:	80c8      	strh	r0, [r1, #6]
 800c252:	804b      	strh	r3, [r1, #2]
 800c254:	bd10      	pop	{r4, pc}

0800c256 <SCROLLBAR__InvalidatePartner>:
 800c256:	b510      	push	{r4, lr}
 800c258:	4604      	mov	r4, r0
 800c25a:	f7f8 fd58 	bl	8004d0e <WM_GetScrollPartner>
 800c25e:	f7f9 fcef 	bl	8005c40 <WM_InvalidateWindow>
 800c262:	4620      	mov	r0, r4
 800c264:	f7f8 fcfe 	bl	8004c64 <WM_GetParent>
 800c268:	2125      	movs	r1, #37	; 0x25
 800c26a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c26e:	f7f8 be8e 	b.w	8004f8e <WM_SendMessageNoPara>
	...

0800c274 <SCROLLBAR_CreateUser>:
 800c274:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c276:	b089      	sub	sp, #36	; 0x24
 800c278:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c27a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800c27c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800c27e:	b9fa      	cbnz	r2, 800c2c0 <SCROLLBAR_CreateUser+0x4c>
 800c280:	b9f3      	cbnz	r3, 800c2c0 <SCROLLBAR_CreateUser+0x4c>
 800c282:	4630      	mov	r0, r6
 800c284:	a906      	add	r1, sp, #24
 800c286:	f7f8 fcb8 	bl	8004bfa <WM_GetInsideRectEx>
 800c28a:	f014 0f08 	tst.w	r4, #8
 800c28e:	4b2c      	ldr	r3, [pc, #176]	; (800c340 <SCROLLBAR_CreateUser+0xcc>)
 800c290:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 800c294:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 800c298:	d009      	beq.n	800c2ae <SCROLLBAR_CreateUser+0x3a>
 800c29a:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800c29e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c2a2:	1c78      	adds	r0, r7, #1
 800c2a4:	ebc1 030e 	rsb	r3, r1, lr
 800c2a8:	1a80      	subs	r0, r0, r2
 800c2aa:	3301      	adds	r3, #1
 800c2ac:	e008      	b.n	800c2c0 <SCROLLBAR_CreateUser+0x4c>
 800c2ae:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800c2b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c2b6:	f10e 0101 	add.w	r1, lr, #1
 800c2ba:	1a3a      	subs	r2, r7, r0
 800c2bc:	1ac9      	subs	r1, r1, r3
 800c2be:	3201      	adds	r2, #1
 800c2c0:	9600      	str	r6, [sp, #0]
 800c2c2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800c2c4:	9601      	str	r6, [sp, #4]
 800c2c6:	4e1f      	ldr	r6, [pc, #124]	; (800c344 <SCROLLBAR_CreateUser+0xd0>)
 800c2c8:	9602      	str	r6, [sp, #8]
 800c2ca:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800c2cc:	363c      	adds	r6, #60	; 0x3c
 800c2ce:	9603      	str	r6, [sp, #12]
 800c2d0:	f7f9 fce4 	bl	8005c9c <WM_CreateWindowAsChild>
 800c2d4:	4606      	mov	r6, r0
 800c2d6:	2800      	cmp	r0, #0
 800c2d8:	d02f      	beq.n	800c33a <SCROLLBAR_CreateUser+0xc6>
 800c2da:	f7ff facd 	bl	800b878 <GUI_ALLOC_LockH>
 800c2de:	f004 0208 	and.w	r2, r4, #8
 800c2e2:	06e3      	lsls	r3, r4, #27
 800c2e4:	bf48      	it	mi
 800c2e6:	f042 0210 	orrmi.w	r2, r2, #16
 800c2ea:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 800c2ee:	bf48      	it	mi
 800c2f0:	b292      	uxthmi	r2, r2
 800c2f2:	2b01      	cmp	r3, #1
 800c2f4:	bf88      	it	hi
 800c2f6:	f042 0210 	orrhi.w	r2, r2, #16
 800c2fa:	4629      	mov	r1, r5
 800c2fc:	9005      	str	r0, [sp, #20]
 800c2fe:	f7ff fe41 	bl	800bf84 <WIDGET__Init>
 800c302:	4b11      	ldr	r3, [pc, #68]	; (800c348 <SCROLLBAR_CreateUser+0xd4>)
 800c304:	af08      	add	r7, sp, #32
 800c306:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800c308:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 800c30c:	f104 0534 	add.w	r5, r4, #52	; 0x34
 800c310:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800c314:	2364      	movs	r3, #100	; 0x64
 800c316:	64e3      	str	r3, [r4, #76]	; 0x4c
 800c318:	4d0c      	ldr	r5, [pc, #48]	; (800c34c <SCROLLBAR_CreateUser+0xd8>)
 800c31a:	230a      	movs	r3, #10
 800c31c:	6563      	str	r3, [r4, #84]	; 0x54
 800c31e:	2300      	movs	r3, #0
 800c320:	6523      	str	r3, [r4, #80]	; 0x50
 800c322:	682b      	ldr	r3, [r5, #0]
 800c324:	6463      	str	r3, [r4, #68]	; 0x44
 800c326:	4638      	mov	r0, r7
 800c328:	f7ff fab4 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c32c:	682b      	ldr	r3, [r5, #0]
 800c32e:	4630      	mov	r0, r6
 800c330:	685b      	ldr	r3, [r3, #4]
 800c332:	4798      	blx	r3
 800c334:	4630      	mov	r0, r6
 800c336:	f7ff ff8e 	bl	800c256 <SCROLLBAR__InvalidatePartner>
 800c33a:	4630      	mov	r0, r6
 800c33c:	b009      	add	sp, #36	; 0x24
 800c33e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c340:	200000e0 	.word	0x200000e0
 800c344:	0800c42f 	.word	0x0800c42f
 800c348:	200000cc 	.word	0x200000cc
 800c34c:	200000dc 	.word	0x200000dc

0800c350 <SCROLLBAR_CreateEx>:
 800c350:	b510      	push	{r4, lr}
 800c352:	b086      	sub	sp, #24
 800c354:	9c08      	ldr	r4, [sp, #32]
 800c356:	9400      	str	r4, [sp, #0]
 800c358:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800c35a:	9401      	str	r4, [sp, #4]
 800c35c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800c35e:	9402      	str	r4, [sp, #8]
 800c360:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c362:	9403      	str	r4, [sp, #12]
 800c364:	2400      	movs	r4, #0
 800c366:	9404      	str	r4, [sp, #16]
 800c368:	f7ff ff84 	bl	800c274 <SCROLLBAR_CreateUser>
 800c36c:	b006      	add	sp, #24
 800c36e:	bd10      	pop	{r4, pc}

0800c370 <SCROLLBAR_CreateAttached>:
 800c370:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c372:	f001 0308 	and.w	r3, r1, #8
 800c376:	2b00      	cmp	r3, #0
 800c378:	f240 348a 	movw	r4, #906	; 0x38a
 800c37c:	f240 528a 	movw	r2, #1418	; 0x58a
 800c380:	bf08      	it	eq
 800c382:	4622      	moveq	r2, r4
 800c384:	bf0c      	ite	eq
 800c386:	23ff      	moveq	r3, #255	; 0xff
 800c388:	23fe      	movne	r3, #254	; 0xfe
 800c38a:	e88d 0005 	stmia.w	sp, {r0, r2}
 800c38e:	2000      	movs	r0, #0
 800c390:	9102      	str	r1, [sp, #8]
 800c392:	9303      	str	r3, [sp, #12]
 800c394:	4602      	mov	r2, r0
 800c396:	4603      	mov	r3, r0
 800c398:	4601      	mov	r1, r0
 800c39a:	f7ff ffd9 	bl	800c350 <SCROLLBAR_CreateEx>
 800c39e:	2106      	movs	r1, #6
 800c3a0:	4604      	mov	r4, r0
 800c3a2:	f7f8 fe04 	bl	8004fae <WM_NotifyParent>
 800c3a6:	4620      	mov	r0, r4
 800c3a8:	b004      	add	sp, #16
 800c3aa:	bd10      	pop	{r4, pc}

0800c3ac <SCROLLBAR_SetValue>:
 800c3ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c3ae:	460c      	mov	r4, r1
 800c3b0:	4605      	mov	r5, r0
 800c3b2:	b300      	cbz	r0, 800c3f6 <SCROLLBAR_SetValue+0x4a>
 800c3b4:	f7ff fa60 	bl	800b878 <GUI_ALLOC_LockH>
 800c3b8:	2c00      	cmp	r4, #0
 800c3ba:	9001      	str	r0, [sp, #4]
 800c3bc:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800c3be:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800c3c0:	db05      	blt.n	800c3ce <SCROLLBAR_SetValue+0x22>
 800c3c2:	1a8a      	subs	r2, r1, r2
 800c3c4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c3c8:	4294      	cmp	r4, r2
 800c3ca:	dc02      	bgt.n	800c3d2 <SCROLLBAR_SetValue+0x26>
 800c3cc:	e000      	b.n	800c3d0 <SCROLLBAR_SetValue+0x24>
 800c3ce:	2400      	movs	r4, #0
 800c3d0:	4622      	mov	r2, r4
 800c3d2:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c3d4:	4291      	cmp	r1, r2
 800c3d6:	d00b      	beq.n	800c3f0 <SCROLLBAR_SetValue+0x44>
 800c3d8:	6502      	str	r2, [r0, #80]	; 0x50
 800c3da:	4628      	mov	r0, r5
 800c3dc:	f7f9 fc30 	bl	8005c40 <WM_InvalidateWindow>
 800c3e0:	a801      	add	r0, sp, #4
 800c3e2:	f7ff fa57 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c3e6:	4628      	mov	r0, r5
 800c3e8:	2105      	movs	r1, #5
 800c3ea:	f7f8 fde0 	bl	8004fae <WM_NotifyParent>
 800c3ee:	e002      	b.n	800c3f6 <SCROLLBAR_SetValue+0x4a>
 800c3f0:	a801      	add	r0, sp, #4
 800c3f2:	f7ff fa4f 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c3f6:	b003      	add	sp, #12
 800c3f8:	bd30      	pop	{r4, r5, pc}

0800c3fa <SCROLLBAR_AddValue>:
 800c3fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c3fc:	460d      	mov	r5, r1
 800c3fe:	4606      	mov	r6, r0
 800c400:	b160      	cbz	r0, 800c41c <SCROLLBAR_AddValue+0x22>
 800c402:	f7ff fa39 	bl	800b878 <GUI_ALLOC_LockH>
 800c406:	4602      	mov	r2, r0
 800c408:	a802      	add	r0, sp, #8
 800c40a:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800c40c:	f840 2d04 	str.w	r2, [r0, #-4]!
 800c410:	f7ff fa40 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c414:	4630      	mov	r0, r6
 800c416:	1961      	adds	r1, r4, r5
 800c418:	f7ff ffc8 	bl	800c3ac <SCROLLBAR_SetValue>
 800c41c:	b002      	add	sp, #8
 800c41e:	bd70      	pop	{r4, r5, r6, pc}

0800c420 <SCROLLBAR_Dec>:
 800c420:	f04f 31ff 	mov.w	r1, #4294967295
 800c424:	f7ff bfe9 	b.w	800c3fa <SCROLLBAR_AddValue>

0800c428 <SCROLLBAR_Inc>:
 800c428:	2101      	movs	r1, #1
 800c42a:	f7ff bfe6 	b.w	800c3fa <SCROLLBAR_AddValue>

0800c42e <SCROLLBAR_Callback>:
 800c42e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c432:	6844      	ldr	r4, [r0, #4]
 800c434:	4680      	mov	r8, r0
 800c436:	b08f      	sub	sp, #60	; 0x3c
 800c438:	4620      	mov	r0, r4
 800c43a:	4641      	mov	r1, r8
 800c43c:	f7ff fde7 	bl	800c00e <WIDGET_HandleActive>
 800c440:	2800      	cmp	r0, #0
 800c442:	f000 81c0 	beq.w	800c7c6 <SCROLLBAR_Callback+0x398>
 800c446:	f8d8 3000 	ldr.w	r3, [r8]
 800c44a:	2b23      	cmp	r3, #35	; 0x23
 800c44c:	f000 8182 	beq.w	800c754 <SCROLLBAR_Callback+0x326>
 800c450:	dc0b      	bgt.n	800c46a <SCROLLBAR_Callback+0x3c>
 800c452:	2b0e      	cmp	r3, #14
 800c454:	f000 812a 	beq.w	800c6ac <SCROLLBAR_Callback+0x27e>
 800c458:	2b0f      	cmp	r3, #15
 800c45a:	d012      	beq.n	800c482 <SCROLLBAR_Callback+0x54>
 800c45c:	2b0b      	cmp	r3, #11
 800c45e:	f040 81af 	bne.w	800c7c0 <SCROLLBAR_Callback+0x392>
 800c462:	4620      	mov	r0, r4
 800c464:	f7ff fef7 	bl	800c256 <SCROLLBAR__InvalidatePartner>
 800c468:	e1aa      	b.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c46a:	f240 1213 	movw	r2, #275	; 0x113
 800c46e:	4293      	cmp	r3, r2
 800c470:	f000 817f 	beq.w	800c772 <SCROLLBAR_Callback+0x344>
 800c474:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800c478:	d012      	beq.n	800c4a0 <SCROLLBAR_Callback+0x72>
 800c47a:	2b24      	cmp	r3, #36	; 0x24
 800c47c:	f040 81a0 	bne.w	800c7c0 <SCROLLBAR_Callback+0x392>
 800c480:	e143      	b.n	800c70a <SCROLLBAR_Callback+0x2dc>
 800c482:	4620      	mov	r0, r4
 800c484:	f7ff f9f8 	bl	800b878 <GUI_ALLOC_LockH>
 800c488:	9005      	str	r0, [sp, #20]
 800c48a:	2800      	cmp	r0, #0
 800c48c:	f000 819b 	beq.w	800c7c6 <SCROLLBAR_Callback+0x398>
 800c490:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800c492:	a805      	add	r0, sp, #20
 800c494:	681d      	ldr	r5, [r3, #0]
 800c496:	f7ff f9fd 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c49a:	4620      	mov	r0, r4
 800c49c:	47a8      	blx	r5
 800c49e:	e192      	b.n	800c7c6 <SCROLLBAR_Callback+0x398>
 800c4a0:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800c4a4:	2f00      	cmp	r7, #0
 800c4a6:	f000 818b 	beq.w	800c7c0 <SCROLLBAR_Callback+0x392>
 800c4aa:	7a3b      	ldrb	r3, [r7, #8]
 800c4ac:	4620      	mov	r0, r4
 800c4ae:	2b00      	cmp	r3, #0
 800c4b0:	f000 80d6 	beq.w	800c660 <SCROLLBAR_Callback+0x232>
 800c4b4:	f7ff f9e0 	bl	800b878 <GUI_ALLOC_LockH>
 800c4b8:	a905      	add	r1, sp, #20
 800c4ba:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800c4bc:	9003      	str	r0, [sp, #12]
 800c4be:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800c4c0:	4620      	mov	r0, r4
 800c4c2:	4798      	blx	r3
 800c4c4:	9b03      	ldr	r3, [sp, #12]
 800c4c6:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 800c4ca:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800c4cc:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c4ce:	f01a 0f08 	tst.w	sl, #8
 800c4d2:	ebc5 0902 	rsb	r9, r5, r2
 800c4d6:	d003      	beq.n	800c4e0 <SCROLLBAR_Callback+0xb2>
 800c4d8:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c4dc:	603a      	str	r2, [r7, #0]
 800c4de:	6079      	str	r1, [r7, #4]
 800c4e0:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800c4e2:	683f      	ldr	r7, [r7, #0]
 800c4e4:	2a03      	cmp	r2, #3
 800c4e6:	d114      	bne.n	800c512 <SCROLLBAR_Callback+0xe4>
 800c4e8:	4620      	mov	r0, r4
 800c4ea:	f7ff fe8a 	bl	800c202 <_DeleteTimer>
 800c4ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c4f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c4f2:	2002      	movs	r0, #2
 800c4f4:	fb93 f3f0 	sdiv	r3, r3, r0
 800c4f8:	1aff      	subs	r7, r7, r3
 800c4fa:	9b06      	ldr	r3, [sp, #24]
 800c4fc:	1afb      	subs	r3, r7, r3
 800c4fe:	1e58      	subs	r0, r3, #1
 800c500:	fb00 f009 	mul.w	r0, r0, r9
 800c504:	f7fc fe44 	bl	8009190 <GUI__DivideRound32>
 800c508:	9b03      	ldr	r3, [sp, #12]
 800c50a:	4606      	mov	r6, r0
 800c50c:	6618      	str	r0, [r3, #96]	; 0x60
 800c50e:	a803      	add	r0, sp, #12
 800c510:	e07e      	b.n	800c610 <SCROLLBAR_Callback+0x1e2>
 800c512:	9806      	ldr	r0, [sp, #24]
 800c514:	4287      	cmp	r7, r0
 800c516:	dc0b      	bgt.n	800c530 <SCROLLBAR_Callback+0x102>
 800c518:	2a02      	cmp	r2, #2
 800c51a:	d039      	beq.n	800c590 <SCROLLBAR_Callback+0x162>
 800c51c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c51e:	b113      	cbz	r3, 800c526 <SCROLLBAR_Callback+0xf8>
 800c520:	4620      	mov	r0, r4
 800c522:	f7ff fe6e 	bl	800c202 <_DeleteTimer>
 800c526:	9b03      	ldr	r3, [sp, #12]
 800c528:	2202      	movs	r2, #2
 800c52a:	3e01      	subs	r6, #1
 800c52c:	659a      	str	r2, [r3, #88]	; 0x58
 800c52e:	e02f      	b.n	800c590 <SCROLLBAR_Callback+0x162>
 800c530:	9907      	ldr	r1, [sp, #28]
 800c532:	428f      	cmp	r7, r1
 800c534:	da02      	bge.n	800c53c <SCROLLBAR_Callback+0x10e>
 800c536:	1b76      	subs	r6, r6, r5
 800c538:	426d      	negs	r5, r5
 800c53a:	e02f      	b.n	800c59c <SCROLLBAR_Callback+0x16e>
 800c53c:	9908      	ldr	r1, [sp, #32]
 800c53e:	428f      	cmp	r7, r1
 800c540:	dc12      	bgt.n	800c568 <SCROLLBAR_Callback+0x13a>
 800c542:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c544:	2900      	cmp	r1, #0
 800c546:	dd0b      	ble.n	800c560 <SCROLLBAR_Callback+0x132>
 800c548:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c54a:	2202      	movs	r2, #2
 800c54c:	fb93 f3f2 	sdiv	r3, r3, r2
 800c550:	1aff      	subs	r7, r7, r3
 800c552:	1a3f      	subs	r7, r7, r0
 800c554:	3f01      	subs	r7, #1
 800c556:	fb07 f009 	mul.w	r0, r7, r9
 800c55a:	f7fc fe19 	bl	8009190 <GUI__DivideRound32>
 800c55e:	4606      	mov	r6, r0
 800c560:	9b03      	ldr	r3, [sp, #12]
 800c562:	2203      	movs	r2, #3
 800c564:	659a      	str	r2, [r3, #88]	; 0x58
 800c566:	e016      	b.n	800c596 <SCROLLBAR_Callback+0x168>
 800c568:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c56a:	428f      	cmp	r7, r1
 800c56c:	da01      	bge.n	800c572 <SCROLLBAR_Callback+0x144>
 800c56e:	442e      	add	r6, r5
 800c570:	e014      	b.n	800c59c <SCROLLBAR_Callback+0x16e>
 800c572:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c574:	428f      	cmp	r7, r1
 800c576:	dc0e      	bgt.n	800c596 <SCROLLBAR_Callback+0x168>
 800c578:	2a01      	cmp	r2, #1
 800c57a:	d00e      	beq.n	800c59a <SCROLLBAR_Callback+0x16c>
 800c57c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c57e:	b113      	cbz	r3, 800c586 <SCROLLBAR_Callback+0x158>
 800c580:	4620      	mov	r0, r4
 800c582:	f7ff fe3e 	bl	800c202 <_DeleteTimer>
 800c586:	9b03      	ldr	r3, [sp, #12]
 800c588:	2501      	movs	r5, #1
 800c58a:	3601      	adds	r6, #1
 800c58c:	659d      	str	r5, [r3, #88]	; 0x58
 800c58e:	e005      	b.n	800c59c <SCROLLBAR_Callback+0x16e>
 800c590:	f04f 35ff 	mov.w	r5, #4294967295
 800c594:	e002      	b.n	800c59c <SCROLLBAR_Callback+0x16e>
 800c596:	2500      	movs	r5, #0
 800c598:	e000      	b.n	800c59c <SCROLLBAR_Callback+0x16e>
 800c59a:	4615      	mov	r5, r2
 800c59c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800c5a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c5a2:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 800c5a6:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800c5aa:	9a06      	ldr	r2, [sp, #24]
 800c5ac:	b171      	cbz	r1, 800c5cc <SCROLLBAR_Callback+0x19e>
 800c5ae:	2002      	movs	r0, #2
 800c5b0:	fb9e f0f0 	sdiv	r0, lr, r0
 800c5b4:	1a38      	subs	r0, r7, r0
 800c5b6:	1a80      	subs	r0, r0, r2
 800c5b8:	3801      	subs	r0, #1
 800c5ba:	fb00 f009 	mul.w	r0, r0, r9
 800c5be:	9301      	str	r3, [sp, #4]
 800c5c0:	f7fc fde6 	bl	8009190 <GUI__DivideRound32>
 800c5c4:	9b01      	ldr	r3, [sp, #4]
 800c5c6:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 800c5ca:	e009      	b.n	800c5e0 <SCROLLBAR_Callback+0x1b2>
 800c5cc:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 800c5d0:	2a01      	cmp	r2, #1
 800c5d2:	bf04      	itt	eq
 800c5d4:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 800c5d8:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800c5dc:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 800c5e0:	a803      	add	r0, sp, #12
 800c5e2:	9301      	str	r3, [sp, #4]
 800c5e4:	f7ff f956 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c5e8:	9b01      	ldr	r3, [sp, #4]
 800c5ea:	b1a5      	cbz	r5, 800c616 <SCROLLBAR_Callback+0x1e8>
 800c5ec:	b9bb      	cbnz	r3, 800c61e <SCROLLBAR_Callback+0x1f0>
 800c5ee:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800c5f2:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800c5f6:	4620      	mov	r0, r4
 800c5f8:	f000 fdd6 	bl	800d1a8 <WM_CreateTimer>
 800c5fc:	4607      	mov	r7, r0
 800c5fe:	4620      	mov	r0, r4
 800c600:	f7ff f93a 	bl	800b878 <GUI_ALLOC_LockH>
 800c604:	4602      	mov	r2, r0
 800c606:	a80e      	add	r0, sp, #56	; 0x38
 800c608:	f840 2d28 	str.w	r2, [r0, #-40]!
 800c60c:	6657      	str	r7, [r2, #100]	; 0x64
 800c60e:	65d5      	str	r5, [r2, #92]	; 0x5c
 800c610:	f7ff f940 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c614:	e003      	b.n	800c61e <SCROLLBAR_Callback+0x1f0>
 800c616:	b113      	cbz	r3, 800c61e <SCROLLBAR_Callback+0x1f0>
 800c618:	4620      	mov	r0, r4
 800c61a:	f7ff fdf2 	bl	800c202 <_DeleteTimer>
 800c61e:	4620      	mov	r0, r4
 800c620:	2101      	movs	r1, #1
 800c622:	f7f8 f991 	bl	8004948 <WM_SetCapture>
 800c626:	4620      	mov	r0, r4
 800c628:	4631      	mov	r1, r6
 800c62a:	f7ff febf 	bl	800c3ac <SCROLLBAR_SetValue>
 800c62e:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800c632:	f040 80c5 	bne.w	800c7c0 <SCROLLBAR_Callback+0x392>
 800c636:	4620      	mov	r0, r4
 800c638:	f7ff f91e 	bl	800b878 <GUI_ALLOC_LockH>
 800c63c:	ab0e      	add	r3, sp, #56	; 0x38
 800c63e:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800c640:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c644:	4618      	mov	r0, r3
 800c646:	f7ff f925 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c64a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c64e:	4620      	mov	r0, r4
 800c650:	f7ff fcb2 	bl	800bfb8 <WIDGET_OrState>
 800c654:	07a9      	lsls	r1, r5, #30
 800c656:	f140 80b3 	bpl.w	800c7c0 <SCROLLBAR_Callback+0x392>
 800c65a:	4620      	mov	r0, r4
 800c65c:	2101      	movs	r1, #1
 800c65e:	e074      	b.n	800c74a <SCROLLBAR_Callback+0x31c>
 800c660:	f7ff f90a 	bl	800b878 <GUI_ALLOC_LockH>
 800c664:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 800c666:	9003      	str	r0, [sp, #12]
 800c668:	a803      	add	r0, sp, #12
 800c66a:	f7ff f913 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c66e:	05ea      	lsls	r2, r5, #23
 800c670:	f140 80a6 	bpl.w	800c7c0 <SCROLLBAR_Callback+0x392>
 800c674:	4620      	mov	r0, r4
 800c676:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c67a:	f7ff fcb3 	bl	800bfe4 <WIDGET_AndState>
 800c67e:	4620      	mov	r0, r4
 800c680:	f7ff f8fa 	bl	800b878 <GUI_ALLOC_LockH>
 800c684:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800c686:	9005      	str	r0, [sp, #20]
 800c688:	b113      	cbz	r3, 800c690 <SCROLLBAR_Callback+0x262>
 800c68a:	4620      	mov	r0, r4
 800c68c:	f7ff fdb9 	bl	800c202 <_DeleteTimer>
 800c690:	a80e      	add	r0, sp, #56	; 0x38
 800c692:	2200      	movs	r2, #0
 800c694:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 800c698:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c69a:	659a      	str	r2, [r3, #88]	; 0x58
 800c69c:	f7ff f8fa 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c6a0:	07ab      	lsls	r3, r5, #30
 800c6a2:	f140 808d 	bpl.w	800c7c0 <SCROLLBAR_Callback+0x392>
 800c6a6:	4620      	mov	r0, r4
 800c6a8:	2102      	movs	r1, #2
 800c6aa:	e04e      	b.n	800c74a <SCROLLBAR_Callback+0x31c>
 800c6ac:	4620      	mov	r0, r4
 800c6ae:	f7ff f8e3 	bl	800b878 <GUI_ALLOC_LockH>
 800c6b2:	ab0e      	add	r3, sp, #56	; 0x38
 800c6b4:	6d45      	ldr	r5, [r0, #84]	; 0x54
 800c6b6:	f843 0d24 	str.w	r0, [r3, #-36]!
 800c6ba:	4618      	mov	r0, r3
 800c6bc:	f7ff f8ea 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c6c0:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800c6c4:	6813      	ldr	r3, [r2, #0]
 800c6c6:	6852      	ldr	r2, [r2, #4]
 800c6c8:	2a00      	cmp	r2, #0
 800c6ca:	dd79      	ble.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c6cc:	3b10      	subs	r3, #16
 800c6ce:	2b12      	cmp	r3, #18
 800c6d0:	d876      	bhi.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c6d2:	e8df f003 	tbb	[pc, r3]
 800c6d6:	1616      	.short	0x1616
 800c6d8:	75751212 	.word	0x75751212
 800c6dc:	75757575 	.word	0x75757575
 800c6e0:	75757575 	.word	0x75757575
 800c6e4:	0a757575 	.word	0x0a757575
 800c6e8:	0d          	.byte	0x0d
 800c6e9:	00          	.byte	0x00
 800c6ea:	4620      	mov	r0, r4
 800c6ec:	4629      	mov	r1, r5
 800c6ee:	e001      	b.n	800c6f4 <SCROLLBAR_Callback+0x2c6>
 800c6f0:	4620      	mov	r0, r4
 800c6f2:	4269      	negs	r1, r5
 800c6f4:	f7ff fe81 	bl	800c3fa <SCROLLBAR_AddValue>
 800c6f8:	e062      	b.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c6fa:	4620      	mov	r0, r4
 800c6fc:	f7ff fe94 	bl	800c428 <SCROLLBAR_Inc>
 800c700:	e05e      	b.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c702:	4620      	mov	r0, r4
 800c704:	f7ff fe8c 	bl	800c420 <SCROLLBAR_Dec>
 800c708:	e05a      	b.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c70a:	4620      	mov	r0, r4
 800c70c:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800c710:	f7ff f8b2 	bl	800b878 <GUI_ALLOC_LockH>
 800c714:	ad0e      	add	r5, sp, #56	; 0x38
 800c716:	4603      	mov	r3, r0
 800c718:	f845 0d24 	str.w	r0, [r5, #-36]!
 800c71c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c71e:	6830      	ldr	r0, [r6, #0]
 800c720:	68b1      	ldr	r1, [r6, #8]
 800c722:	4290      	cmp	r0, r2
 800c724:	6872      	ldr	r2, [r6, #4]
 800c726:	d105      	bne.n	800c734 <SCROLLBAR_Callback+0x306>
 800c728:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 800c72a:	428e      	cmp	r6, r1
 800c72c:	d102      	bne.n	800c734 <SCROLLBAR_Callback+0x306>
 800c72e:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 800c730:	4296      	cmp	r6, r2
 800c732:	d00d      	beq.n	800c750 <SCROLLBAR_Callback+0x322>
 800c734:	64d8      	str	r0, [r3, #76]	; 0x4c
 800c736:	6559      	str	r1, [r3, #84]	; 0x54
 800c738:	651a      	str	r2, [r3, #80]	; 0x50
 800c73a:	4620      	mov	r0, r4
 800c73c:	f7f9 fa80 	bl	8005c40 <WM_InvalidateWindow>
 800c740:	4628      	mov	r0, r5
 800c742:	f7ff f8a7 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c746:	4620      	mov	r0, r4
 800c748:	2105      	movs	r1, #5
 800c74a:	f7f8 fc30 	bl	8004fae <WM_NotifyParent>
 800c74e:	e037      	b.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c750:	4628      	mov	r0, r5
 800c752:	e033      	b.n	800c7bc <SCROLLBAR_Callback+0x38e>
 800c754:	4620      	mov	r0, r4
 800c756:	f7ff f88f 	bl	800b878 <GUI_ALLOC_LockH>
 800c75a:	9005      	str	r0, [sp, #20]
 800c75c:	2800      	cmp	r0, #0
 800c75e:	d02f      	beq.n	800c7c0 <SCROLLBAR_Callback+0x392>
 800c760:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800c764:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800c766:	601a      	str	r2, [r3, #0]
 800c768:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800c76a:	609a      	str	r2, [r3, #8]
 800c76c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c76e:	605a      	str	r2, [r3, #4]
 800c770:	e023      	b.n	800c7ba <SCROLLBAR_Callback+0x38c>
 800c772:	4620      	mov	r0, r4
 800c774:	f7ff f880 	bl	800b878 <GUI_ALLOC_LockH>
 800c778:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800c77a:	9005      	str	r0, [sp, #20]
 800c77c:	b111      	cbz	r1, 800c784 <SCROLLBAR_Callback+0x356>
 800c77e:	4620      	mov	r0, r4
 800c780:	f7ff fe3b 	bl	800c3fa <SCROLLBAR_AddValue>
 800c784:	9b05      	ldr	r3, [sp, #20]
 800c786:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800c788:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c78a:	2a00      	cmp	r2, #0
 800c78c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800c78e:	dd05      	ble.n	800c79c <SCROLLBAR_Callback+0x36e>
 800c790:	4291      	cmp	r1, r2
 800c792:	bfb4      	ite	lt
 800c794:	2100      	movlt	r1, #0
 800c796:	2101      	movge	r1, #1
 800c798:	dd06      	ble.n	800c7a8 <SCROLLBAR_Callback+0x37a>
 800c79a:	e004      	b.n	800c7a6 <SCROLLBAR_Callback+0x378>
 800c79c:	4291      	cmp	r1, r2
 800c79e:	bfcc      	ite	gt
 800c7a0:	2100      	movgt	r1, #0
 800c7a2:	2101      	movle	r1, #1
 800c7a4:	da00      	bge.n	800c7a8 <SCROLLBAR_Callback+0x37a>
 800c7a6:	651a      	str	r2, [r3, #80]	; 0x50
 800c7a8:	b119      	cbz	r1, 800c7b2 <SCROLLBAR_Callback+0x384>
 800c7aa:	4620      	mov	r0, r4
 800c7ac:	f7ff fd29 	bl	800c202 <_DeleteTimer>
 800c7b0:	e003      	b.n	800c7ba <SCROLLBAR_Callback+0x38c>
 800c7b2:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800c7b4:	2132      	movs	r1, #50	; 0x32
 800c7b6:	f000 fd27 	bl	800d208 <WM_RestartTimer>
 800c7ba:	a805      	add	r0, sp, #20
 800c7bc:	f7ff f86a 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c7c0:	4640      	mov	r0, r8
 800c7c2:	f7f9 fe6b 	bl	800649c <WM_DefaultProc>
 800c7c6:	b00f      	add	sp, #60	; 0x3c
 800c7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c7cc <SCROLLBAR_GetValue>:
 800c7cc:	b513      	push	{r0, r1, r4, lr}
 800c7ce:	4604      	mov	r4, r0
 800c7d0:	b140      	cbz	r0, 800c7e4 <SCROLLBAR_GetValue+0x18>
 800c7d2:	f7ff f851 	bl	800b878 <GUI_ALLOC_LockH>
 800c7d6:	ab02      	add	r3, sp, #8
 800c7d8:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800c7da:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c7de:	4618      	mov	r0, r3
 800c7e0:	f7ff f858 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c7e4:	4620      	mov	r0, r4
 800c7e6:	b002      	add	sp, #8
 800c7e8:	bd10      	pop	{r4, pc}
	...

0800c7ec <PROGBAR_DrawSkinFlex>:
 800c7ec:	6843      	ldr	r3, [r0, #4]
 800c7ee:	2b0b      	cmp	r3, #11
 800c7f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c7f4:	4604      	mov	r4, r0
 800c7f6:	6a06      	ldr	r6, [r0, #32]
 800c7f8:	d006      	beq.n	800c808 <PROGBAR_DrawSkinFlex+0x1c>
 800c7fa:	2b12      	cmp	r3, #18
 800c7fc:	f000 8094 	beq.w	800c928 <PROGBAR_DrawSkinFlex+0x13c>
 800c800:	2b05      	cmp	r3, #5
 800c802:	f040 80a0 	bne.w	800c946 <PROGBAR_DrawSkinFlex+0x15a>
 800c806:	e01c      	b.n	800c842 <PROGBAR_DrawSkinFlex+0x56>
 800c808:	4b51      	ldr	r3, [pc, #324]	; (800c950 <PROGBAR_DrawSkinFlex+0x164>)
 800c80a:	6a18      	ldr	r0, [r3, #32]
 800c80c:	f7fe fbd3 	bl	800afb6 <GUI_SetColor>
 800c810:	6960      	ldr	r0, [r4, #20]
 800c812:	6921      	ldr	r1, [r4, #16]
 800c814:	69a2      	ldr	r2, [r4, #24]
 800c816:	f7fd fcad 	bl	800a174 <GUI_DrawHLine>
 800c81a:	69e0      	ldr	r0, [r4, #28]
 800c81c:	6921      	ldr	r1, [r4, #16]
 800c81e:	69a2      	ldr	r2, [r4, #24]
 800c820:	f7fd fca8 	bl	800a174 <GUI_DrawHLine>
 800c824:	6961      	ldr	r1, [r4, #20]
 800c826:	69e2      	ldr	r2, [r4, #28]
 800c828:	6920      	ldr	r0, [r4, #16]
 800c82a:	3101      	adds	r1, #1
 800c82c:	3a01      	subs	r2, #1
 800c82e:	f7fd fcfb 	bl	800a228 <GUI_DrawVLine>
 800c832:	6961      	ldr	r1, [r4, #20]
 800c834:	69e2      	ldr	r2, [r4, #28]
 800c836:	69a0      	ldr	r0, [r4, #24]
 800c838:	3101      	adds	r1, #1
 800c83a:	3a01      	subs	r2, #1
 800c83c:	f7fd fcf4 	bl	800a228 <GUI_DrawVLine>
 800c840:	e081      	b.n	800c946 <PROGBAR_DrawSkinFlex+0x15a>
 800c842:	6830      	ldr	r0, [r6, #0]
 800c844:	4d42      	ldr	r5, [pc, #264]	; (800c950 <PROGBAR_DrawSkinFlex+0x164>)
 800c846:	6967      	ldr	r7, [r4, #20]
 800c848:	69e3      	ldr	r3, [r4, #28]
 800c84a:	6922      	ldr	r2, [r4, #16]
 800c84c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 800c850:	6871      	ldr	r1, [r6, #4]
 800c852:	2800      	cmp	r0, #0
 800c854:	d034      	beq.n	800c8c0 <PROGBAR_DrawSkinFlex+0xd4>
 800c856:	ebc2 0909 	rsb	r9, r2, r9
 800c85a:	f109 0901 	add.w	r9, r9, #1
 800c85e:	ea4f 0969 	mov.w	r9, r9, asr #1
 800c862:	b929      	cbnz	r1, 800c870 <PROGBAR_DrawSkinFlex+0x84>
 800c864:	468e      	mov	lr, r1
 800c866:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c86a:	6968      	ldr	r0, [r5, #20]
 800c86c:	2101      	movs	r1, #1
 800c86e:	e005      	b.n	800c87c <PROGBAR_DrawSkinFlex+0x90>
 800c870:	f8d5 c000 	ldr.w	ip, [r5]
 800c874:	6868      	ldr	r0, [r5, #4]
 800c876:	f04f 0e01 	mov.w	lr, #1
 800c87a:	2100      	movs	r1, #0
 800c87c:	9001      	str	r0, [sp, #4]
 800c87e:	ebce 0303 	rsb	r3, lr, r3
 800c882:	1c50      	adds	r0, r2, #1
 800c884:	f8cd c000 	str.w	ip, [sp]
 800c888:	4439      	add	r1, r7
 800c88a:	444a      	add	r2, r9
 800c88c:	f002 ff9c 	bl	800f7c8 <GUI_DrawGradientH>
 800c890:	6873      	ldr	r3, [r6, #4]
 800c892:	b91b      	cbnz	r3, 800c89c <PROGBAR_DrawSkinFlex+0xb0>
 800c894:	69ae      	ldr	r6, [r5, #24]
 800c896:	69ed      	ldr	r5, [r5, #28]
 800c898:	2101      	movs	r1, #1
 800c89a:	e003      	b.n	800c8a4 <PROGBAR_DrawSkinFlex+0xb8>
 800c89c:	68ae      	ldr	r6, [r5, #8]
 800c89e:	68ed      	ldr	r5, [r5, #12]
 800c8a0:	2301      	movs	r3, #1
 800c8a2:	2100      	movs	r1, #0
 800c8a4:	6920      	ldr	r0, [r4, #16]
 800c8a6:	6967      	ldr	r7, [r4, #20]
 800c8a8:	69a2      	ldr	r2, [r4, #24]
 800c8aa:	69e4      	ldr	r4, [r4, #28]
 800c8ac:	9600      	str	r6, [sp, #0]
 800c8ae:	4448      	add	r0, r9
 800c8b0:	9501      	str	r5, [sp, #4]
 800c8b2:	3001      	adds	r0, #1
 800c8b4:	4439      	add	r1, r7
 800c8b6:	3a01      	subs	r2, #1
 800c8b8:	1ae3      	subs	r3, r4, r3
 800c8ba:	f002 ff85 	bl	800f7c8 <GUI_DrawGradientH>
 800c8be:	e042      	b.n	800c946 <PROGBAR_DrawSkinFlex+0x15a>
 800c8c0:	ebc7 0803 	rsb	r8, r7, r3
 800c8c4:	f108 0801 	add.w	r8, r8, #1
 800c8c8:	ea4f 0868 	mov.w	r8, r8, asr #1
 800c8cc:	b921      	cbnz	r1, 800c8d8 <PROGBAR_DrawSkinFlex+0xec>
 800c8ce:	e895 5000 	ldmia.w	r5, {ip, lr}
 800c8d2:	460b      	mov	r3, r1
 800c8d4:	2001      	movs	r0, #1
 800c8d6:	e004      	b.n	800c8e2 <PROGBAR_DrawSkinFlex+0xf6>
 800c8d8:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c8dc:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800c8e0:	2301      	movs	r3, #1
 800c8e2:	4410      	add	r0, r2
 800c8e4:	e88d 5000 	stmia.w	sp, {ip, lr}
 800c8e8:	ebc3 0209 	rsb	r2, r3, r9
 800c8ec:	1c79      	adds	r1, r7, #1
 800c8ee:	eb07 0308 	add.w	r3, r7, r8
 800c8f2:	f002 ff37 	bl	800f764 <GUI_DrawGradientV>
 800c8f6:	6872      	ldr	r2, [r6, #4]
 800c8f8:	b91a      	cbnz	r2, 800c902 <PROGBAR_DrawSkinFlex+0x116>
 800c8fa:	68ae      	ldr	r6, [r5, #8]
 800c8fc:	68ed      	ldr	r5, [r5, #12]
 800c8fe:	2001      	movs	r0, #1
 800c900:	e003      	b.n	800c90a <PROGBAR_DrawSkinFlex+0x11e>
 800c902:	69ae      	ldr	r6, [r5, #24]
 800c904:	69ed      	ldr	r5, [r5, #28]
 800c906:	2201      	movs	r2, #1
 800c908:	2000      	movs	r0, #0
 800c90a:	6961      	ldr	r1, [r4, #20]
 800c90c:	f8d4 e010 	ldr.w	lr, [r4, #16]
 800c910:	69a7      	ldr	r7, [r4, #24]
 800c912:	69e3      	ldr	r3, [r4, #28]
 800c914:	9600      	str	r6, [sp, #0]
 800c916:	4441      	add	r1, r8
 800c918:	9501      	str	r5, [sp, #4]
 800c91a:	4470      	add	r0, lr
 800c91c:	3101      	adds	r1, #1
 800c91e:	1aba      	subs	r2, r7, r2
 800c920:	3b01      	subs	r3, #1
 800c922:	f002 ff1f 	bl	800f764 <GUI_DrawGradientV>
 800c926:	e00e      	b.n	800c946 <PROGBAR_DrawSkinFlex+0x15a>
 800c928:	6833      	ldr	r3, [r6, #0]
 800c92a:	b963      	cbnz	r3, 800c946 <PROGBAR_DrawSkinFlex+0x15a>
 800c92c:	4b08      	ldr	r3, [pc, #32]	; (800c950 <PROGBAR_DrawSkinFlex+0x164>)
 800c92e:	68b5      	ldr	r5, [r6, #8]
 800c930:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800c932:	f7fe fb40 	bl	800afb6 <GUI_SetColor>
 800c936:	2002      	movs	r0, #2
 800c938:	f7fe fb78 	bl	800b02c <GUI_SetTextMode>
 800c93c:	4628      	mov	r0, r5
 800c93e:	6921      	ldr	r1, [r4, #16]
 800c940:	6962      	ldr	r2, [r4, #20]
 800c942:	f7fd fe4d 	bl	800a5e0 <GUI_DispStringAt>
 800c946:	2000      	movs	r0, #0
 800c948:	b003      	add	sp, #12
 800c94a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c94e:	bf00      	nop
 800c950:	200000e4 	.word	0x200000e4

0800c954 <_Create>:
 800c954:	b530      	push	{r4, r5, lr}
 800c956:	b08b      	sub	sp, #44	; 0x2c
 800c958:	4605      	mov	r5, r0
 800c95a:	f7fe ff8d 	bl	800b878 <GUI_ALLOC_LockH>
 800c95e:	ab0a      	add	r3, sp, #40	; 0x28
 800c960:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800c962:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c966:	4668      	mov	r0, sp
 800c968:	6894      	ldr	r4, [r2, #8]
 800c96a:	f7fe ff93 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c96e:	a80a      	add	r0, sp, #40	; 0x28
 800c970:	2300      	movs	r3, #0
 800c972:	9302      	str	r3, [sp, #8]
 800c974:	f840 5d24 	str.w	r5, [r0, #-36]!
 800c978:	6823      	ldr	r3, [r4, #0]
 800c97a:	4798      	blx	r3
 800c97c:	b00b      	add	sp, #44	; 0x2c
 800c97e:	bd30      	pop	{r4, r5, pc}

0800c980 <_Paint>:
 800c980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c984:	b093      	sub	sp, #76	; 0x4c
 800c986:	4604      	mov	r4, r0
 800c988:	f7fe ff76 	bl	800b878 <GUI_ALLOC_LockH>
 800c98c:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 800c990:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800c992:	6e06      	ldr	r6, [r0, #96]	; 0x60
 800c994:	9000      	str	r0, [sp, #0]
 800c996:	f002 0201 	and.w	r2, r2, #1
 800c99a:	9206      	str	r2, [sp, #24]
 800c99c:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 800c9a0:	f7f6 faf7 	bl	8002f92 <PROGBAR__Value2Pos>
 800c9a4:	af02      	add	r7, sp, #8
 800c9a6:	4680      	mov	r8, r0
 800c9a8:	4668      	mov	r0, sp
 800c9aa:	f7fe ff73 	bl	800b894 <GUI_ALLOC_UnlockH>
 800c9ae:	ab06      	add	r3, sp, #24
 800c9b0:	4639      	mov	r1, r7
 800c9b2:	4620      	mov	r0, r4
 800c9b4:	9311      	str	r3, [sp, #68]	; 0x44
 800c9b6:	f7f8 f87a 	bl	8004aae <WM_GetClientRectEx>
 800c9ba:	230b      	movs	r3, #11
 800c9bc:	930a      	str	r3, [sp, #40]	; 0x28
 800c9be:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c9c2:	930d      	str	r3, [sp, #52]	; 0x34
 800c9c4:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c9c8:	930e      	str	r3, [sp, #56]	; 0x38
 800c9ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c9ce:	930f      	str	r3, [sp, #60]	; 0x3c
 800c9d0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c9d4:	9310      	str	r3, [sp, #64]	; 0x40
 800c9d6:	9409      	str	r4, [sp, #36]	; 0x24
 800c9d8:	a809      	add	r0, sp, #36	; 0x24
 800c9da:	47b0      	blx	r6
 800c9dc:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c9e0:	ad04      	add	r5, sp, #16
 800c9e2:	e885 0003 	stmia.w	r5, {r0, r1}
 800c9e6:	2201      	movs	r2, #1
 800c9e8:	4629      	mov	r1, r5
 800c9ea:	4628      	mov	r0, r5
 800c9ec:	f7fc fc6f 	bl	80092ce <GUI__ReduceRect>
 800c9f0:	4628      	mov	r0, r5
 800c9f2:	f7f8 fb65 	bl	80050c0 <WM_SetUserClipRect>
 800c9f6:	2305      	movs	r3, #5
 800c9f8:	9906      	ldr	r1, [sp, #24]
 800c9fa:	930a      	str	r3, [sp, #40]	; 0x28
 800c9fc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800ca00:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800ca04:	9409      	str	r4, [sp, #36]	; 0x24
 800ca06:	930d      	str	r3, [sp, #52]	; 0x34
 800ca08:	920e      	str	r2, [sp, #56]	; 0x38
 800ca0a:	b129      	cbz	r1, 800ca18 <_Paint+0x98>
 800ca0c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ca10:	930f      	str	r3, [sp, #60]	; 0x3c
 800ca12:	4442      	add	r2, r8
 800ca14:	9210      	str	r2, [sp, #64]	; 0x40
 800ca16:	e004      	b.n	800ca22 <_Paint+0xa2>
 800ca18:	4443      	add	r3, r8
 800ca1a:	930f      	str	r3, [sp, #60]	; 0x3c
 800ca1c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ca20:	9310      	str	r3, [sp, #64]	; 0x40
 800ca22:	2300      	movs	r3, #0
 800ca24:	9307      	str	r3, [sp, #28]
 800ca26:	a809      	add	r0, sp, #36	; 0x24
 800ca28:	47b0      	blx	r6
 800ca2a:	9906      	ldr	r1, [sp, #24]
 800ca2c:	f9bd 5008 	ldrsh.w	r5, [sp, #8]
 800ca30:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800ca34:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ca38:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ca3c:	b119      	cbz	r1, 800ca46 <_Paint+0xc6>
 800ca3e:	4440      	add	r0, r8
 800ca40:	950d      	str	r5, [sp, #52]	; 0x34
 800ca42:	3001      	adds	r0, #1
 800ca44:	e002      	b.n	800ca4c <_Paint+0xcc>
 800ca46:	4445      	add	r5, r8
 800ca48:	3501      	adds	r5, #1
 800ca4a:	950d      	str	r5, [sp, #52]	; 0x34
 800ca4c:	9310      	str	r3, [sp, #64]	; 0x40
 800ca4e:	2301      	movs	r3, #1
 800ca50:	920f      	str	r2, [sp, #60]	; 0x3c
 800ca52:	9307      	str	r3, [sp, #28]
 800ca54:	900e      	str	r0, [sp, #56]	; 0x38
 800ca56:	a809      	add	r0, sp, #36	; 0x24
 800ca58:	47b0      	blx	r6
 800ca5a:	4620      	mov	r0, r4
 800ca5c:	f7fe ff0c 	bl	800b878 <GUI_ALLOC_LockH>
 800ca60:	9000      	str	r0, [sp, #0]
 800ca62:	f7f6 fa4f 	bl	8002f04 <PROGBAR__GetTextLocked>
 800ca66:	9001      	str	r0, [sp, #4]
 800ca68:	b1f8      	cbz	r0, 800caaa <_Paint+0x12a>
 800ca6a:	4648      	mov	r0, r9
 800ca6c:	f7fe faa8 	bl	800afc0 <GUI_SetFont>
 800ca70:	4639      	mov	r1, r7
 800ca72:	9a01      	ldr	r2, [sp, #4]
 800ca74:	9800      	ldr	r0, [sp, #0]
 800ca76:	f7f6 fa48 	bl	8002f0a <PROGBAR__GetTextRect>
 800ca7a:	4668      	mov	r0, sp
 800ca7c:	f7fe ff0a 	bl	800b894 <GUI_ALLOC_UnlockH>
 800ca80:	9b01      	ldr	r3, [sp, #4]
 800ca82:	9308      	str	r3, [sp, #32]
 800ca84:	2312      	movs	r3, #18
 800ca86:	930a      	str	r3, [sp, #40]	; 0x28
 800ca88:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800ca8c:	930d      	str	r3, [sp, #52]	; 0x34
 800ca8e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800ca92:	930e      	str	r3, [sp, #56]	; 0x38
 800ca94:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ca98:	930f      	str	r3, [sp, #60]	; 0x3c
 800ca9a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ca9e:	9409      	str	r4, [sp, #36]	; 0x24
 800caa0:	9310      	str	r3, [sp, #64]	; 0x40
 800caa2:	a809      	add	r0, sp, #36	; 0x24
 800caa4:	47b0      	blx	r6
 800caa6:	a801      	add	r0, sp, #4
 800caa8:	e000      	b.n	800caac <_Paint+0x12c>
 800caaa:	4668      	mov	r0, sp
 800caac:	f7fe fef2 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cab0:	2000      	movs	r0, #0
 800cab2:	f7f8 fb05 	bl	80050c0 <WM_SetUserClipRect>
 800cab6:	b013      	add	sp, #76	; 0x4c
 800cab8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800cabc <GUI_ARRAY__GethItem>:
 800cabc:	8803      	ldrh	r3, [r0, #0]
 800cabe:	4299      	cmp	r1, r3
 800cac0:	b513      	push	{r0, r1, r4, lr}
 800cac2:	460c      	mov	r4, r1
 800cac4:	d20e      	bcs.n	800cae4 <GUI_ARRAY__GethItem+0x28>
 800cac6:	6840      	ldr	r0, [r0, #4]
 800cac8:	b150      	cbz	r0, 800cae0 <GUI_ARRAY__GethItem+0x24>
 800caca:	f7fe fed5 	bl	800b878 <GUI_ALLOC_LockH>
 800cace:	ab02      	add	r3, sp, #8
 800cad0:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800cad4:	f843 0d04 	str.w	r0, [r3, #-4]!
 800cad8:	4618      	mov	r0, r3
 800cada:	f7fe fedb 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cade:	e002      	b.n	800cae6 <GUI_ARRAY__GethItem+0x2a>
 800cae0:	4604      	mov	r4, r0
 800cae2:	e000      	b.n	800cae6 <GUI_ARRAY__GethItem+0x2a>
 800cae4:	2400      	movs	r4, #0
 800cae6:	4620      	mov	r0, r4
 800cae8:	b002      	add	sp, #8
 800caea:	bd10      	pop	{r4, pc}

0800caec <GUI_ARRAY_GetNumItems>:
 800caec:	b513      	push	{r0, r1, r4, lr}
 800caee:	4604      	mov	r4, r0
 800caf0:	b140      	cbz	r0, 800cb04 <GUI_ARRAY_GetNumItems+0x18>
 800caf2:	f7fe fec1 	bl	800b878 <GUI_ALLOC_LockH>
 800caf6:	ab02      	add	r3, sp, #8
 800caf8:	8804      	ldrh	r4, [r0, #0]
 800cafa:	f843 0d04 	str.w	r0, [r3, #-4]!
 800cafe:	4618      	mov	r0, r3
 800cb00:	f7fe fec8 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cb04:	4620      	mov	r0, r4
 800cb06:	b002      	add	sp, #8
 800cb08:	bd10      	pop	{r4, pc}

0800cb0a <GUI_ARRAY_AddItem>:
 800cb0a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800cb0e:	4605      	mov	r5, r0
 800cb10:	2800      	cmp	r0, #0
 800cb12:	d03d      	beq.n	800cb90 <GUI_ARRAY_AddItem+0x86>
 800cb14:	b14a      	cbz	r2, 800cb2a <GUI_ARRAY_AddItem+0x20>
 800cb16:	4608      	mov	r0, r1
 800cb18:	4611      	mov	r1, r2
 800cb1a:	f7ff f885 	bl	800bc28 <GUI_ALLOC_AllocInit>
 800cb1e:	f1d0 0401 	rsbs	r4, r0, #1
 800cb22:	4607      	mov	r7, r0
 800cb24:	bf38      	it	cc
 800cb26:	2400      	movcc	r4, #0
 800cb28:	e001      	b.n	800cb2e <GUI_ARRAY_AddItem+0x24>
 800cb2a:	4614      	mov	r4, r2
 800cb2c:	4617      	mov	r7, r2
 800cb2e:	4628      	mov	r0, r5
 800cb30:	f7fe fea2 	bl	800b878 <GUI_ALLOC_LockH>
 800cb34:	ae02      	add	r6, sp, #8
 800cb36:	f8b0 8000 	ldrh.w	r8, [r0]
 800cb3a:	f846 0d08 	str.w	r0, [r6, #-8]!
 800cb3e:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800cb42:	4668      	mov	r0, sp
 800cb44:	f7fe fea6 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cb48:	bb24      	cbnz	r4, 800cb94 <GUI_ARRAY_AddItem+0x8a>
 800cb4a:	f108 0101 	add.w	r1, r8, #1
 800cb4e:	4648      	mov	r0, r9
 800cb50:	0089      	lsls	r1, r1, #2
 800cb52:	f7ff f8a3 	bl	800bc9c <GUI_ALLOC_Realloc>
 800cb56:	4681      	mov	r9, r0
 800cb58:	b918      	cbnz	r0, 800cb62 <GUI_ARRAY_AddItem+0x58>
 800cb5a:	4638      	mov	r0, r7
 800cb5c:	f7fe fec6 	bl	800b8ec <GUI_ALLOC_Free>
 800cb60:	e018      	b.n	800cb94 <GUI_ARRAY_AddItem+0x8a>
 800cb62:	f7fe fe89 	bl	800b878 <GUI_ALLOC_LockH>
 800cb66:	ab02      	add	r3, sp, #8
 800cb68:	f843 0d04 	str.w	r0, [r3, #-4]!
 800cb6c:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800cb70:	4618      	mov	r0, r3
 800cb72:	f7fe fe8f 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cb76:	4628      	mov	r0, r5
 800cb78:	f7fe fe7e 	bl	800b878 <GUI_ALLOC_LockH>
 800cb7c:	8803      	ldrh	r3, [r0, #0]
 800cb7e:	9000      	str	r0, [sp, #0]
 800cb80:	3301      	adds	r3, #1
 800cb82:	f8c0 9004 	str.w	r9, [r0, #4]
 800cb86:	8003      	strh	r3, [r0, #0]
 800cb88:	4668      	mov	r0, sp
 800cb8a:	f7fe fe83 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cb8e:	e002      	b.n	800cb96 <GUI_ARRAY_AddItem+0x8c>
 800cb90:	4604      	mov	r4, r0
 800cb92:	e000      	b.n	800cb96 <GUI_ARRAY_AddItem+0x8c>
 800cb94:	2401      	movs	r4, #1
 800cb96:	4620      	mov	r0, r4
 800cb98:	b003      	add	sp, #12
 800cb9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800cb9e <GUI_ARRAY_Delete>:
 800cb9e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cba0:	4605      	mov	r5, r0
 800cba2:	b318      	cbz	r0, 800cbec <GUI_ARRAY_Delete+0x4e>
 800cba4:	f7fe fe68 	bl	800b878 <GUI_ALLOC_LockH>
 800cba8:	9000      	str	r0, [sp, #0]
 800cbaa:	6840      	ldr	r0, [r0, #4]
 800cbac:	b1c0      	cbz	r0, 800cbe0 <GUI_ARRAY_Delete+0x42>
 800cbae:	f7fe fe63 	bl	800b878 <GUI_ALLOC_LockH>
 800cbb2:	2400      	movs	r4, #0
 800cbb4:	9001      	str	r0, [sp, #4]
 800cbb6:	9b00      	ldr	r3, [sp, #0]
 800cbb8:	881b      	ldrh	r3, [r3, #0]
 800cbba:	429c      	cmp	r4, r3
 800cbbc:	da06      	bge.n	800cbcc <GUI_ARRAY_Delete+0x2e>
 800cbbe:	9801      	ldr	r0, [sp, #4]
 800cbc0:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800cbc4:	f7ff f828 	bl	800bc18 <GUI_ALLOC_FreePtr>
 800cbc8:	3401      	adds	r4, #1
 800cbca:	e7f4      	b.n	800cbb6 <GUI_ARRAY_Delete+0x18>
 800cbcc:	a801      	add	r0, sp, #4
 800cbce:	f7fe fe61 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cbd2:	9800      	ldr	r0, [sp, #0]
 800cbd4:	3004      	adds	r0, #4
 800cbd6:	f7ff f81f 	bl	800bc18 <GUI_ALLOC_FreePtr>
 800cbda:	9b00      	ldr	r3, [sp, #0]
 800cbdc:	2200      	movs	r2, #0
 800cbde:	801a      	strh	r2, [r3, #0]
 800cbe0:	4668      	mov	r0, sp
 800cbe2:	f7fe fe57 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cbe6:	4628      	mov	r0, r5
 800cbe8:	f7fe fe80 	bl	800b8ec <GUI_ALLOC_Free>
 800cbec:	b003      	add	sp, #12
 800cbee:	bd30      	pop	{r4, r5, pc}

0800cbf0 <GUI_ARRAY_GethItem>:
 800cbf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cbf2:	460e      	mov	r6, r1
 800cbf4:	4605      	mov	r5, r0
 800cbf6:	b158      	cbz	r0, 800cc10 <GUI_ARRAY_GethItem+0x20>
 800cbf8:	f7fe fe3e 	bl	800b878 <GUI_ALLOC_LockH>
 800cbfc:	ac02      	add	r4, sp, #8
 800cbfe:	4631      	mov	r1, r6
 800cc00:	f844 0d04 	str.w	r0, [r4, #-4]!
 800cc04:	f7ff ff5a 	bl	800cabc <GUI_ARRAY__GethItem>
 800cc08:	4605      	mov	r5, r0
 800cc0a:	4620      	mov	r0, r4
 800cc0c:	f7fe fe42 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cc10:	4628      	mov	r0, r5
 800cc12:	b002      	add	sp, #8
 800cc14:	bd70      	pop	{r4, r5, r6, pc}

0800cc16 <GUI_ARRAY_Create>:
 800cc16:	2008      	movs	r0, #8
 800cc18:	f7ff b828 	b.w	800bc6c <GUI_ALLOC_AllocZero>

0800cc1c <FRAMEWIN_DrawSkinFlex>:
 800cc1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc20:	4604      	mov	r4, r0
 800cc22:	b090      	sub	sp, #64	; 0x40
 800cc24:	6800      	ldr	r0, [r0, #0]
 800cc26:	4d9b      	ldr	r5, [pc, #620]	; (800ce94 <FRAMEWIN_DrawSkinFlex+0x278>)
 800cc28:	f7f7 fbae 	bl	8004388 <FRAMEWIN_GetActive>
 800cc2c:	4b9a      	ldr	r3, [pc, #616]	; (800ce98 <FRAMEWIN_DrawSkinFlex+0x27c>)
 800cc2e:	6866      	ldr	r6, [r4, #4]
 800cc30:	2800      	cmp	r0, #0
 800cc32:	bf18      	it	ne
 800cc34:	461d      	movne	r5, r3
 800cc36:	2e1c      	cmp	r6, #28
 800cc38:	f200 81a6 	bhi.w	800cf88 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cc3c:	e8df f016 	tbh	[pc, r6, lsl #1]
 800cc40:	01a40191 	.word	0x01a40191
 800cc44:	01a401a4 	.word	0x01a401a4
 800cc48:	012e01a4 	.word	0x012e01a4
 800cc4c:	01a401a4 	.word	0x01a401a4
 800cc50:	01a401a4 	.word	0x01a401a4
 800cc54:	002701a4 	.word	0x002701a4
 800cc58:	01a401a4 	.word	0x01a401a4
 800cc5c:	01a4017e 	.word	0x01a4017e
 800cc60:	01a401a4 	.word	0x01a401a4
 800cc64:	01a40145 	.word	0x01a40145
 800cc68:	002301a4 	.word	0x002301a4
 800cc6c:	001f001d 	.word	0x001f001d
 800cc70:	01a40021 	.word	0x01a40021
 800cc74:	01a401a4 	.word	0x01a401a4
 800cc78:	0025      	.short	0x0025
 800cc7a:	69ee      	ldr	r6, [r5, #28]
 800cc7c:	e189      	b.n	800cf92 <FRAMEWIN_DrawSkinFlex+0x376>
 800cc7e:	6a2e      	ldr	r6, [r5, #32]
 800cc80:	e187      	b.n	800cf92 <FRAMEWIN_DrawSkinFlex+0x376>
 800cc82:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800cc84:	e185      	b.n	800cf92 <FRAMEWIN_DrawSkinFlex+0x376>
 800cc86:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800cc88:	e183      	b.n	800cf92 <FRAMEWIN_DrawSkinFlex+0x376>
 800cc8a:	696e      	ldr	r6, [r5, #20]
 800cc8c:	e181      	b.n	800cf92 <FRAMEWIN_DrawSkinFlex+0x376>
 800cc8e:	231c      	movs	r3, #28
 800cc90:	6820      	ldr	r0, [r4, #0]
 800cc92:	9308      	str	r3, [sp, #32]
 800cc94:	9007      	str	r0, [sp, #28]
 800cc96:	f7fe fdef 	bl	800b878 <GUI_ALLOC_LockH>
 800cc9a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cc9c:	9005      	str	r0, [sp, #20]
 800cc9e:	a807      	add	r0, sp, #28
 800cca0:	4798      	blx	r3
 800cca2:	4606      	mov	r6, r0
 800cca4:	a805      	add	r0, sp, #20
 800cca6:	f7fe fdf5 	bl	800b894 <GUI_ALLOC_UnlockH>
 800ccaa:	2e01      	cmp	r6, #1
 800ccac:	dd11      	ble.n	800ccd2 <FRAMEWIN_DrawSkinFlex+0xb6>
 800ccae:	682b      	ldr	r3, [r5, #0]
 800ccb0:	9300      	str	r3, [sp, #0]
 800ccb2:	686b      	ldr	r3, [r5, #4]
 800ccb4:	9301      	str	r3, [sp, #4]
 800ccb6:	68ab      	ldr	r3, [r5, #8]
 800ccb8:	9302      	str	r3, [sp, #8]
 800ccba:	6920      	ldr	r0, [r4, #16]
 800ccbc:	69a1      	ldr	r1, [r4, #24]
 800ccbe:	6962      	ldr	r2, [r4, #20]
 800ccc0:	4633      	mov	r3, r6
 800ccc2:	f002 f923 	bl	800ef0c <GUI__DrawTwinArc2>
 800ccc6:	6923      	ldr	r3, [r4, #16]
 800ccc8:	69a7      	ldr	r7, [r4, #24]
 800ccca:	eb06 0803 	add.w	r8, r6, r3
 800ccce:	1bbf      	subs	r7, r7, r6
 800ccd0:	e02c      	b.n	800cd2c <FRAMEWIN_DrawSkinFlex+0x110>
 800ccd2:	6828      	ldr	r0, [r5, #0]
 800ccd4:	f7fe f96f 	bl	800afb6 <GUI_SetColor>
 800ccd8:	6921      	ldr	r1, [r4, #16]
 800ccda:	69ea      	ldr	r2, [r5, #28]
 800ccdc:	6960      	ldr	r0, [r4, #20]
 800ccde:	440a      	add	r2, r1
 800cce0:	3a01      	subs	r2, #1
 800cce2:	f7fd fa47 	bl	800a174 <GUI_DrawHLine>
 800cce6:	69a2      	ldr	r2, [r4, #24]
 800cce8:	69e9      	ldr	r1, [r5, #28]
 800ccea:	6960      	ldr	r0, [r4, #20]
 800ccec:	1a51      	subs	r1, r2, r1
 800ccee:	3101      	adds	r1, #1
 800ccf0:	f7fd fa40 	bl	800a174 <GUI_DrawHLine>
 800ccf4:	6967      	ldr	r7, [r4, #20]
 800ccf6:	6920      	ldr	r0, [r4, #16]
 800ccf8:	3701      	adds	r7, #1
 800ccfa:	4639      	mov	r1, r7
 800ccfc:	f7fd fa5e 	bl	800a1bc <GUI_DrawPixel>
 800cd00:	4639      	mov	r1, r7
 800cd02:	69a0      	ldr	r0, [r4, #24]
 800cd04:	f7fd fa5a 	bl	800a1bc <GUI_DrawPixel>
 800cd08:	6868      	ldr	r0, [r5, #4]
 800cd0a:	f7fe f954 	bl	800afb6 <GUI_SetColor>
 800cd0e:	6920      	ldr	r0, [r4, #16]
 800cd10:	4639      	mov	r1, r7
 800cd12:	3001      	adds	r0, #1
 800cd14:	f7fd fa52 	bl	800a1bc <GUI_DrawPixel>
 800cd18:	69a0      	ldr	r0, [r4, #24]
 800cd1a:	4639      	mov	r1, r7
 800cd1c:	3801      	subs	r0, #1
 800cd1e:	f7fd fa4d 	bl	800a1bc <GUI_DrawPixel>
 800cd22:	6923      	ldr	r3, [r4, #16]
 800cd24:	69a7      	ldr	r7, [r4, #24]
 800cd26:	f103 0802 	add.w	r8, r3, #2
 800cd2a:	3f02      	subs	r7, #2
 800cd2c:	6828      	ldr	r0, [r5, #0]
 800cd2e:	f7fe f942 	bl	800afb6 <GUI_SetColor>
 800cd32:	4641      	mov	r1, r8
 800cd34:	463a      	mov	r2, r7
 800cd36:	6960      	ldr	r0, [r4, #20]
 800cd38:	f7fd fa1c 	bl	800a174 <GUI_DrawHLine>
 800cd3c:	6868      	ldr	r0, [r5, #4]
 800cd3e:	f7fe f93a 	bl	800afb6 <GUI_SetColor>
 800cd42:	6960      	ldr	r0, [r4, #20]
 800cd44:	4641      	mov	r1, r8
 800cd46:	3001      	adds	r0, #1
 800cd48:	463a      	mov	r2, r7
 800cd4a:	f7fd fa13 	bl	800a174 <GUI_DrawHLine>
 800cd4e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cd50:	2b02      	cmp	r3, #2
 800cd52:	dd0a      	ble.n	800cd6a <FRAMEWIN_DrawSkinFlex+0x14e>
 800cd54:	68a8      	ldr	r0, [r5, #8]
 800cd56:	f7fe f92e 	bl	800afb6 <GUI_SetColor>
 800cd5a:	6961      	ldr	r1, [r4, #20]
 800cd5c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cd5e:	440b      	add	r3, r1
 800cd60:	4640      	mov	r0, r8
 800cd62:	3102      	adds	r1, #2
 800cd64:	463a      	mov	r2, r7
 800cd66:	3b01      	subs	r3, #1
 800cd68:	e01d      	b.n	800cda6 <FRAMEWIN_DrawSkinFlex+0x18a>
 800cd6a:	6a2a      	ldr	r2, [r5, #32]
 800cd6c:	42b2      	cmp	r2, r6
 800cd6e:	dd1c      	ble.n	800cdaa <FRAMEWIN_DrawSkinFlex+0x18e>
 800cd70:	6967      	ldr	r7, [r4, #20]
 800cd72:	6923      	ldr	r3, [r4, #16]
 800cd74:	2e01      	cmp	r6, #1
 800cd76:	f107 0802 	add.w	r8, r7, #2
 800cd7a:	f340 8107 	ble.w	800cf8c <FRAMEWIN_DrawSkinFlex+0x370>
 800cd7e:	4437      	add	r7, r6
 800cd80:	18f0      	adds	r0, r6, r3
 800cd82:	441a      	add	r2, r3
 800cd84:	3a01      	subs	r2, #1
 800cd86:	4641      	mov	r1, r8
 800cd88:	463b      	mov	r3, r7
 800cd8a:	f7fd fa6f 	bl	800a26c <GUI_FillRect>
 800cd8e:	69a3      	ldr	r3, [r4, #24]
 800cd90:	69e8      	ldr	r0, [r5, #28]
 800cd92:	2e01      	cmp	r6, #1
 800cd94:	ebc0 0003 	rsb	r0, r0, r3
 800cd98:	bfcc      	ite	gt
 800cd9a:	ebc6 0203 	rsbgt	r2, r6, r3
 800cd9e:	1e9a      	suble	r2, r3, #2
 800cda0:	3001      	adds	r0, #1
 800cda2:	4641      	mov	r1, r8
 800cda4:	463b      	mov	r3, r7
 800cda6:	f7fd fa61 	bl	800a26c <GUI_FillRect>
 800cdaa:	6963      	ldr	r3, [r4, #20]
 800cdac:	69e7      	ldr	r7, [r4, #28]
 800cdae:	6828      	ldr	r0, [r5, #0]
 800cdb0:	2e01      	cmp	r6, #1
 800cdb2:	bfcc      	ite	gt
 800cdb4:	18f6      	addgt	r6, r6, r3
 800cdb6:	1c9e      	addle	r6, r3, #2
 800cdb8:	3f01      	subs	r7, #1
 800cdba:	f7fe f8fc 	bl	800afb6 <GUI_SetColor>
 800cdbe:	463a      	mov	r2, r7
 800cdc0:	6920      	ldr	r0, [r4, #16]
 800cdc2:	4631      	mov	r1, r6
 800cdc4:	f7fd fa30 	bl	800a228 <GUI_DrawVLine>
 800cdc8:	463a      	mov	r2, r7
 800cdca:	4631      	mov	r1, r6
 800cdcc:	69a0      	ldr	r0, [r4, #24]
 800cdce:	f7fd fa2b 	bl	800a228 <GUI_DrawVLine>
 800cdd2:	69e7      	ldr	r7, [r4, #28]
 800cdd4:	6868      	ldr	r0, [r5, #4]
 800cdd6:	f7fe f8ee 	bl	800afb6 <GUI_SetColor>
 800cdda:	6920      	ldr	r0, [r4, #16]
 800cddc:	3f02      	subs	r7, #2
 800cdde:	3001      	adds	r0, #1
 800cde0:	4631      	mov	r1, r6
 800cde2:	463a      	mov	r2, r7
 800cde4:	f7fd fa20 	bl	800a228 <GUI_DrawVLine>
 800cde8:	69a0      	ldr	r0, [r4, #24]
 800cdea:	4631      	mov	r1, r6
 800cdec:	3801      	subs	r0, #1
 800cdee:	463a      	mov	r2, r7
 800cdf0:	f7fd fa1a 	bl	800a228 <GUI_DrawVLine>
 800cdf4:	69eb      	ldr	r3, [r5, #28]
 800cdf6:	2b02      	cmp	r3, #2
 800cdf8:	dc02      	bgt.n	800ce00 <FRAMEWIN_DrawSkinFlex+0x1e4>
 800cdfa:	6a2b      	ldr	r3, [r5, #32]
 800cdfc:	2b02      	cmp	r3, #2
 800cdfe:	dd20      	ble.n	800ce42 <FRAMEWIN_DrawSkinFlex+0x226>
 800ce00:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800ce02:	69e7      	ldr	r7, [r4, #28]
 800ce04:	68a8      	ldr	r0, [r5, #8]
 800ce06:	2b02      	cmp	r3, #2
 800ce08:	bfcc      	ite	gt
 800ce0a:	ebc3 0707 	rsbgt	r7, r3, r7
 800ce0e:	3f02      	suble	r7, #2
 800ce10:	f7fe f8d1 	bl	800afb6 <GUI_SetColor>
 800ce14:	69ea      	ldr	r2, [r5, #28]
 800ce16:	2a02      	cmp	r2, #2
 800ce18:	dd07      	ble.n	800ce2a <FRAMEWIN_DrawSkinFlex+0x20e>
 800ce1a:	6920      	ldr	r0, [r4, #16]
 800ce1c:	4402      	add	r2, r0
 800ce1e:	4631      	mov	r1, r6
 800ce20:	3002      	adds	r0, #2
 800ce22:	3a01      	subs	r2, #1
 800ce24:	463b      	mov	r3, r7
 800ce26:	f7fd fa21 	bl	800a26c <GUI_FillRect>
 800ce2a:	6a2b      	ldr	r3, [r5, #32]
 800ce2c:	2b02      	cmp	r3, #2
 800ce2e:	dd08      	ble.n	800ce42 <FRAMEWIN_DrawSkinFlex+0x226>
 800ce30:	69a2      	ldr	r2, [r4, #24]
 800ce32:	69e8      	ldr	r0, [r5, #28]
 800ce34:	1a10      	subs	r0, r2, r0
 800ce36:	3001      	adds	r0, #1
 800ce38:	4631      	mov	r1, r6
 800ce3a:	3a02      	subs	r2, #2
 800ce3c:	463b      	mov	r3, r7
 800ce3e:	f7fd fa15 	bl	800a26c <GUI_FillRect>
 800ce42:	6828      	ldr	r0, [r5, #0]
 800ce44:	f7fe f8b7 	bl	800afb6 <GUI_SetColor>
 800ce48:	6921      	ldr	r1, [r4, #16]
 800ce4a:	69a2      	ldr	r2, [r4, #24]
 800ce4c:	69e0      	ldr	r0, [r4, #28]
 800ce4e:	f7fd f991 	bl	800a174 <GUI_DrawHLine>
 800ce52:	6868      	ldr	r0, [r5, #4]
 800ce54:	f7fe f8af 	bl	800afb6 <GUI_SetColor>
 800ce58:	69e0      	ldr	r0, [r4, #28]
 800ce5a:	6921      	ldr	r1, [r4, #16]
 800ce5c:	69a2      	ldr	r2, [r4, #24]
 800ce5e:	3801      	subs	r0, #1
 800ce60:	3101      	adds	r1, #1
 800ce62:	3a01      	subs	r2, #1
 800ce64:	f7fd f986 	bl	800a174 <GUI_DrawHLine>
 800ce68:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800ce6a:	2e02      	cmp	r6, #2
 800ce6c:	f340 808c 	ble.w	800cf88 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ce70:	6920      	ldr	r0, [r4, #16]
 800ce72:	69a2      	ldr	r2, [r4, #24]
 800ce74:	69e4      	ldr	r4, [r4, #28]
 800ce76:	f100 0802 	add.w	r8, r0, #2
 800ce7a:	68a8      	ldr	r0, [r5, #8]
 800ce7c:	1e97      	subs	r7, r2, #2
 800ce7e:	f7fe f89a 	bl	800afb6 <GUI_SetColor>
 800ce82:	1ba1      	subs	r1, r4, r6
 800ce84:	4640      	mov	r0, r8
 800ce86:	3101      	adds	r1, #1
 800ce88:	463a      	mov	r2, r7
 800ce8a:	1ea3      	subs	r3, r4, #2
 800ce8c:	f7fd f9ee 	bl	800a26c <GUI_FillRect>
 800ce90:	e07a      	b.n	800cf88 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ce92:	bf00      	nop
 800ce94:	20000144 	.word	0x20000144
 800ce98:	20000118 	.word	0x20000118
 800ce9c:	8a20      	ldrh	r0, [r4, #16]
 800ce9e:	8aa1      	ldrh	r1, [r4, #20]
 800cea0:	8b22      	ldrh	r2, [r4, #24]
 800cea2:	8ba3      	ldrh	r3, [r4, #28]
 800cea4:	68ec      	ldr	r4, [r5, #12]
 800cea6:	9400      	str	r4, [sp, #0]
 800cea8:	692c      	ldr	r4, [r5, #16]
 800ceaa:	f8ad 001c 	strh.w	r0, [sp, #28]
 800ceae:	f8ad 101e 	strh.w	r1, [sp, #30]
 800ceb2:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ceb6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ceba:	9401      	str	r4, [sp, #4]
 800cebc:	b200      	sxth	r0, r0
 800cebe:	b209      	sxth	r1, r1
 800cec0:	b212      	sxth	r2, r2
 800cec2:	b21b      	sxth	r3, r3
 800cec4:	f002 fc4e 	bl	800f764 <GUI_DrawGradientV>
 800cec8:	e05e      	b.n	800cf88 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ceca:	8b2b      	ldrh	r3, [r5, #24]
 800cecc:	6922      	ldr	r2, [r4, #16]
 800cece:	6820      	ldr	r0, [r4, #0]
 800ced0:	441a      	add	r2, r3
 800ced2:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ced6:	6962      	ldr	r2, [r4, #20]
 800ced8:	f8ad 201e 	strh.w	r2, [sp, #30]
 800cedc:	69a2      	ldr	r2, [r4, #24]
 800cede:	1ad3      	subs	r3, r2, r3
 800cee0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cee4:	69e3      	ldr	r3, [r4, #28]
 800cee6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ceea:	f7fe fcc5 	bl	800b878 <GUI_ALLOC_LockH>
 800ceee:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800cef0:	9005      	str	r0, [sp, #20]
 800cef2:	b1fb      	cbz	r3, 800cf34 <FRAMEWIN_DrawSkinFlex+0x318>
 800cef4:	2002      	movs	r0, #2
 800cef6:	f7fe f899 	bl	800b02c <GUI_SetTextMode>
 800cefa:	9b05      	ldr	r3, [sp, #20]
 800cefc:	f8b3 207c 	ldrh.w	r2, [r3, #124]	; 0x7c
 800cf00:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800cf04:	320e      	adds	r2, #14
 800cf06:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800cf0a:	6898      	ldr	r0, [r3, #8]
 800cf0c:	f7fe f853 	bl	800afb6 <GUI_SetColor>
 800cf10:	9b05      	ldr	r3, [sp, #20]
 800cf12:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800cf14:	f7fe f854 	bl	800afc0 <GUI_SetFont>
 800cf18:	9b05      	ldr	r3, [sp, #20]
 800cf1a:	6f18      	ldr	r0, [r3, #112]	; 0x70
 800cf1c:	f7fe fcac 	bl	800b878 <GUI_ALLOC_LockH>
 800cf20:	9b05      	ldr	r3, [sp, #20]
 800cf22:	9006      	str	r0, [sp, #24]
 800cf24:	a907      	add	r1, sp, #28
 800cf26:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 800cf2a:	f7fd fc2a 	bl	800a782 <GUI_DispStringInRect>
 800cf2e:	a806      	add	r0, sp, #24
 800cf30:	f7fe fcb0 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cf34:	a805      	add	r0, sp, #20
 800cf36:	f7fe fcad 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cf3a:	e025      	b.n	800cf88 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cf3c:	6923      	ldr	r3, [r4, #16]
 800cf3e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cf42:	6963      	ldr	r3, [r4, #20]
 800cf44:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cf48:	69a3      	ldr	r3, [r4, #24]
 800cf4a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cf4e:	68a8      	ldr	r0, [r5, #8]
 800cf50:	69e3      	ldr	r3, [r4, #28]
 800cf52:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cf56:	f7fe f82e 	bl	800afb6 <GUI_SetColor>
 800cf5a:	a807      	add	r0, sp, #28
 800cf5c:	f7fd f9a8 	bl	800a2b0 <GUI_FillRectEx>
 800cf60:	e012      	b.n	800cf88 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cf62:	6820      	ldr	r0, [r4, #0]
 800cf64:	f7fe fc88 	bl	800b878 <GUI_ALLOC_LockH>
 800cf68:	ab10      	add	r3, sp, #64	; 0x40
 800cf6a:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 800cf6e:	f843 0d2c 	str.w	r0, [r3, #-44]!
 800cf72:	f042 020c 	orr.w	r2, r2, #12
 800cf76:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a
 800cf7a:	4618      	mov	r0, r3
 800cf7c:	f7fe fc8a 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cf80:	6820      	ldr	r0, [r4, #0]
 800cf82:	f7f7 fbaf 	bl	80046e4 <WM_SetHasTrans>
 800cf86:	e004      	b.n	800cf92 <FRAMEWIN_DrawSkinFlex+0x376>
 800cf88:	2600      	movs	r6, #0
 800cf8a:	e002      	b.n	800cf92 <FRAMEWIN_DrawSkinFlex+0x376>
 800cf8c:	1c98      	adds	r0, r3, #2
 800cf8e:	4647      	mov	r7, r8
 800cf90:	e6f7      	b.n	800cd82 <FRAMEWIN_DrawSkinFlex+0x166>
 800cf92:	4630      	mov	r0, r6
 800cf94:	b010      	add	sp, #64	; 0x40
 800cf96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf9a:	bf00      	nop

0800cf9c <_GetBorderSize>:
 800cf9c:	b570      	push	{r4, r5, r6, lr}
 800cf9e:	b08a      	sub	sp, #40	; 0x28
 800cfa0:	4605      	mov	r5, r0
 800cfa2:	460c      	mov	r4, r1
 800cfa4:	f7fe fc68 	bl	800b878 <GUI_ALLOC_LockH>
 800cfa8:	ab0a      	add	r3, sp, #40	; 0x28
 800cfaa:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800cfac:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cfb0:	4668      	mov	r0, sp
 800cfb2:	f7fe fc6f 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cfb6:	9501      	str	r5, [sp, #4]
 800cfb8:	2c03      	cmp	r4, #3
 800cfba:	d80b      	bhi.n	800cfd4 <_GetBorderSize+0x38>
 800cfbc:	e8df f004 	tbb	[pc, r4]
 800cfc0:	08060402 	.word	0x08060402
 800cfc4:	2318      	movs	r3, #24
 800cfc6:	e004      	b.n	800cfd2 <_GetBorderSize+0x36>
 800cfc8:	2316      	movs	r3, #22
 800cfca:	e002      	b.n	800cfd2 <_GetBorderSize+0x36>
 800cfcc:	2315      	movs	r3, #21
 800cfce:	e000      	b.n	800cfd2 <_GetBorderSize+0x36>
 800cfd0:	2317      	movs	r3, #23
 800cfd2:	9302      	str	r3, [sp, #8]
 800cfd4:	a801      	add	r0, sp, #4
 800cfd6:	47b0      	blx	r6
 800cfd8:	b00a      	add	sp, #40	; 0x28
 800cfda:	bd70      	pop	{r4, r5, r6, pc}

0800cfdc <_Create>:
 800cfdc:	b530      	push	{r4, r5, lr}
 800cfde:	b08b      	sub	sp, #44	; 0x2c
 800cfe0:	4605      	mov	r5, r0
 800cfe2:	f7fe fc49 	bl	800b878 <GUI_ALLOC_LockH>
 800cfe6:	ab0a      	add	r3, sp, #40	; 0x28
 800cfe8:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800cfea:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cfee:	4668      	mov	r0, sp
 800cff0:	6894      	ldr	r4, [r2, #8]
 800cff2:	f7fe fc4f 	bl	800b894 <GUI_ALLOC_UnlockH>
 800cff6:	a80a      	add	r0, sp, #40	; 0x28
 800cff8:	2300      	movs	r3, #0
 800cffa:	9302      	str	r3, [sp, #8]
 800cffc:	f840 5d24 	str.w	r5, [r0, #-36]!
 800d000:	6863      	ldr	r3, [r4, #4]
 800d002:	4798      	blx	r3
 800d004:	b00b      	add	sp, #44	; 0x2c
 800d006:	bd30      	pop	{r4, r5, pc}

0800d008 <_Paint>:
 800d008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d00c:	b091      	sub	sp, #68	; 0x44
 800d00e:	4604      	mov	r4, r0
 800d010:	f7fe fc32 	bl	800b878 <GUI_ALLOC_LockH>
 800d014:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800d016:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800d018:	9603      	str	r6, [sp, #12]
 800d01a:	9006      	str	r0, [sp, #24]
 800d01c:	689e      	ldr	r6, [r3, #8]
 800d01e:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800d020:	f7f6 fee9 	bl	8003df6 <FRAMEWIN__CalcTitleHeight>
 800d024:	4683      	mov	fp, r0
 800d026:	a810      	add	r0, sp, #64	; 0x40
 800d028:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 800d02c:	f8b2 2058 	ldrh.w	r2, [r2, #88]	; 0x58
 800d030:	9204      	str	r2, [sp, #16]
 800d032:	f7fe fc2f 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d036:	4620      	mov	r0, r4
 800d038:	f7f8 f8b2 	bl	80051a0 <WM_GetWindowSizeX>
 800d03c:	4681      	mov	r9, r0
 800d03e:	4620      	mov	r0, r4
 800d040:	f7f8 f8c3 	bl	80051ca <WM_GetWindowSizeY>
 800d044:	6832      	ldr	r2, [r6, #0]
 800d046:	2101      	movs	r1, #1
 800d048:	4680      	mov	r8, r0
 800d04a:	4620      	mov	r0, r4
 800d04c:	4790      	blx	r2
 800d04e:	6832      	ldr	r2, [r6, #0]
 800d050:	2103      	movs	r1, #3
 800d052:	4607      	mov	r7, r0
 800d054:	4620      	mov	r0, r4
 800d056:	4790      	blx	r2
 800d058:	6832      	ldr	r2, [r6, #0]
 800d05a:	2100      	movs	r1, #0
 800d05c:	4682      	mov	sl, r0
 800d05e:	4620      	mov	r0, r4
 800d060:	4790      	blx	r2
 800d062:	6833      	ldr	r3, [r6, #0]
 800d064:	9002      	str	r0, [sp, #8]
 800d066:	2102      	movs	r1, #2
 800d068:	4620      	mov	r0, r4
 800d06a:	4798      	blx	r3
 800d06c:	9005      	str	r0, [sp, #20]
 800d06e:	2000      	movs	r0, #0
 800d070:	9407      	str	r4, [sp, #28]
 800d072:	f7f9 f851 	bl	8006118 <WM__InitIVRSearch>
 800d076:	2800      	cmp	r0, #0
 800d078:	d044      	beq.n	800d104 <_Paint+0xfc>
 800d07a:	2300      	movs	r3, #0
 800d07c:	930c      	str	r3, [sp, #48]	; 0x30
 800d07e:	930b      	str	r3, [sp, #44]	; 0x2c
 800d080:	f109 33ff 	add.w	r3, r9, #4294967295
 800d084:	930d      	str	r3, [sp, #52]	; 0x34
 800d086:	f108 33ff 	add.w	r3, r8, #4294967295
 800d08a:	930e      	str	r3, [sp, #56]	; 0x38
 800d08c:	230b      	movs	r3, #11
 800d08e:	9308      	str	r3, [sp, #32]
 800d090:	a807      	add	r0, sp, #28
 800d092:	47a8      	blx	r5
 800d094:	9b02      	ldr	r3, [sp, #8]
 800d096:	9e04      	ldr	r6, [sp, #16]
 800d098:	970b      	str	r7, [sp, #44]	; 0x2c
 800d09a:	445b      	add	r3, fp
 800d09c:	fa03 f086 	sxtah	r0, r3, r6
 800d0a0:	9e05      	ldr	r6, [sp, #20]
 800d0a2:	930c      	str	r3, [sp, #48]	; 0x30
 800d0a4:	ebc6 0108 	rsb	r1, r6, r8
 800d0a8:	ebca 0209 	rsb	r2, sl, r9
 800d0ac:	3801      	subs	r0, #1
 800d0ae:	3901      	subs	r1, #1
 800d0b0:	3a01      	subs	r2, #1
 800d0b2:	4288      	cmp	r0, r1
 800d0b4:	bfd4      	ite	le
 800d0b6:	900e      	strle	r0, [sp, #56]	; 0x38
 800d0b8:	910e      	strgt	r1, [sp, #56]	; 0x38
 800d0ba:	210e      	movs	r1, #14
 800d0bc:	9108      	str	r1, [sp, #32]
 800d0be:	e88d 000c 	stmia.w	sp, {r2, r3}
 800d0c2:	920d      	str	r2, [sp, #52]	; 0x34
 800d0c4:	a807      	add	r0, sp, #28
 800d0c6:	47a8      	blx	r5
 800d0c8:	9b01      	ldr	r3, [sp, #4]
 800d0ca:	9a00      	ldr	r2, [sp, #0]
 800d0cc:	9e02      	ldr	r6, [sp, #8]
 800d0ce:	920d      	str	r2, [sp, #52]	; 0x34
 800d0d0:	3b01      	subs	r3, #1
 800d0d2:	930e      	str	r3, [sp, #56]	; 0x38
 800d0d4:	2305      	movs	r3, #5
 800d0d6:	9308      	str	r3, [sp, #32]
 800d0d8:	970b      	str	r7, [sp, #44]	; 0x2c
 800d0da:	960c      	str	r6, [sp, #48]	; 0x30
 800d0dc:	a807      	add	r0, sp, #28
 800d0de:	47a8      	blx	r5
 800d0e0:	a90b      	add	r1, sp, #44	; 0x2c
 800d0e2:	aa0d      	add	r2, sp, #52	; 0x34
 800d0e4:	4620      	mov	r0, r4
 800d0e6:	f7f6 fe95 	bl	8003e14 <FRAMEWIN__GetTitleLimits>
 800d0ea:	2002      	movs	r0, #2
 800d0ec:	f7fd ff9e 	bl	800b02c <GUI_SetTextMode>
 800d0f0:	9803      	ldr	r0, [sp, #12]
 800d0f2:	f7fd ff65 	bl	800afc0 <GUI_SetFont>
 800d0f6:	2312      	movs	r3, #18
 800d0f8:	9308      	str	r3, [sp, #32]
 800d0fa:	a807      	add	r0, sp, #28
 800d0fc:	47a8      	blx	r5
 800d0fe:	f7f8 ff49 	bl	8005f94 <WM__GetNextIVR>
 800d102:	e7b8      	b.n	800d076 <_Paint+0x6e>
 800d104:	b011      	add	sp, #68	; 0x44
 800d106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d10a <_cbTimer>:
 800d10a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d10c:	4604      	mov	r4, r0
 800d10e:	2100      	movs	r1, #0
 800d110:	4668      	mov	r0, sp
 800d112:	2210      	movs	r2, #16
 800d114:	f002 ffee 	bl	80100f4 <memset>
 800d118:	6860      	ldr	r0, [r4, #4]
 800d11a:	b150      	cbz	r0, 800d132 <_cbTimer+0x28>
 800d11c:	f7fe fba2 	bl	800b864 <GUI_ALLOC_h2p>
 800d120:	f240 1313 	movw	r3, #275	; 0x113
 800d124:	6840      	ldr	r0, [r0, #4]
 800d126:	9300      	str	r3, [sp, #0]
 800d128:	4669      	mov	r1, sp
 800d12a:	6863      	ldr	r3, [r4, #4]
 800d12c:	9303      	str	r3, [sp, #12]
 800d12e:	f7f8 fc2e 	bl	800598e <WM_SendMessage>
 800d132:	b004      	add	sp, #16
 800d134:	bd10      	pop	{r4, pc}

0800d136 <WM_DeleteTimer>:
 800d136:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d138:	4605      	mov	r5, r0
 800d13a:	b168      	cbz	r0, 800d158 <WM_DeleteTimer+0x22>
 800d13c:	f7fe fb9c 	bl	800b878 <GUI_ALLOC_LockH>
 800d140:	ac02      	add	r4, sp, #8
 800d142:	f844 0d04 	str.w	r0, [r4, #-4]!
 800d146:	6800      	ldr	r0, [r0, #0]
 800d148:	f7fc fd00 	bl	8009b4c <GUI_TIMER_Delete>
 800d14c:	4620      	mov	r0, r4
 800d14e:	f7fe fba1 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d152:	4628      	mov	r0, r5
 800d154:	f7fe fbca 	bl	800b8ec <GUI_ALLOC_Free>
 800d158:	b003      	add	sp, #12
 800d15a:	bd30      	pop	{r4, r5, pc}

0800d15c <WM__DeleteAssocTimer>:
 800d15c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d15e:	4605      	mov	r5, r0
 800d160:	a801      	add	r0, sp, #4
 800d162:	f7fc fc71 	bl	8009a48 <GUI_TIMER__GetFirstTimer>
 800d166:	4604      	mov	r4, r0
 800d168:	b1dc      	cbz	r4, 800d1a2 <WM__DeleteAssocTimer+0x46>
 800d16a:	4620      	mov	r0, r4
 800d16c:	2101      	movs	r1, #1
 800d16e:	f7fc fd48 	bl	8009c02 <GUI_TIMER_GetFlag>
 800d172:	9b01      	ldr	r3, [sp, #4]
 800d174:	b183      	cbz	r3, 800d198 <WM__DeleteAssocTimer+0x3c>
 800d176:	b178      	cbz	r0, 800d198 <WM__DeleteAssocTimer+0x3c>
 800d178:	4618      	mov	r0, r3
 800d17a:	f7fe fb73 	bl	800b864 <GUI_ALLOC_h2p>
 800d17e:	6843      	ldr	r3, [r0, #4]
 800d180:	42ab      	cmp	r3, r5
 800d182:	d109      	bne.n	800d198 <WM__DeleteAssocTimer+0x3c>
 800d184:	4620      	mov	r0, r4
 800d186:	a901      	add	r1, sp, #4
 800d188:	9e01      	ldr	r6, [sp, #4]
 800d18a:	f7fc fc75 	bl	8009a78 <GUI_TIMER__GetNextTimerLin>
 800d18e:	4604      	mov	r4, r0
 800d190:	4630      	mov	r0, r6
 800d192:	f7ff ffd0 	bl	800d136 <WM_DeleteTimer>
 800d196:	e7e7      	b.n	800d168 <WM__DeleteAssocTimer+0xc>
 800d198:	4620      	mov	r0, r4
 800d19a:	a901      	add	r1, sp, #4
 800d19c:	f7fc fc6c 	bl	8009a78 <GUI_TIMER__GetNextTimerLin>
 800d1a0:	e7e1      	b.n	800d166 <WM__DeleteAssocTimer+0xa>
 800d1a2:	b002      	add	sp, #8
 800d1a4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d1a8 <WM_CreateTimer>:
 800d1a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d1ac:	4680      	mov	r8, r0
 800d1ae:	200c      	movs	r0, #12
 800d1b0:	460f      	mov	r7, r1
 800d1b2:	4616      	mov	r6, r2
 800d1b4:	f7fe fd5a 	bl	800bc6c <GUI_ALLOC_AllocZero>
 800d1b8:	4604      	mov	r4, r0
 800d1ba:	b1f0      	cbz	r0, 800d1fa <WM_CreateTimer+0x52>
 800d1bc:	f7fc fd36 	bl	8009c2c <GUI_GetTime>
 800d1c0:	4622      	mov	r2, r4
 800d1c2:	1981      	adds	r1, r0, r6
 800d1c4:	2301      	movs	r3, #1
 800d1c6:	480f      	ldr	r0, [pc, #60]	; (800d204 <WM_CreateTimer+0x5c>)
 800d1c8:	f7fc fc72 	bl	8009ab0 <GUI_TIMER_Create>
 800d1cc:	4605      	mov	r5, r0
 800d1ce:	4620      	mov	r0, r4
 800d1d0:	b185      	cbz	r5, 800d1f4 <WM_CreateTimer+0x4c>
 800d1d2:	f7fe fb51 	bl	800b878 <GUI_ALLOC_LockH>
 800d1d6:	4603      	mov	r3, r0
 800d1d8:	a802      	add	r0, sp, #8
 800d1da:	f8c3 8004 	str.w	r8, [r3, #4]
 800d1de:	f840 3d04 	str.w	r3, [r0, #-4]!
 800d1e2:	609f      	str	r7, [r3, #8]
 800d1e4:	601d      	str	r5, [r3, #0]
 800d1e6:	f7fe fb55 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d1ea:	4628      	mov	r0, r5
 800d1ec:	4631      	mov	r1, r6
 800d1ee:	f7fc fce1 	bl	8009bb4 <GUI_TIMER_SetPeriod>
 800d1f2:	e002      	b.n	800d1fa <WM_CreateTimer+0x52>
 800d1f4:	f7fe fb7a 	bl	800b8ec <GUI_ALLOC_Free>
 800d1f8:	462c      	mov	r4, r5
 800d1fa:	4620      	mov	r0, r4
 800d1fc:	b002      	add	sp, #8
 800d1fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d202:	bf00      	nop
 800d204:	0800d10b 	.word	0x0800d10b

0800d208 <WM_RestartTimer>:
 800d208:	b513      	push	{r0, r1, r4, lr}
 800d20a:	460c      	mov	r4, r1
 800d20c:	b180      	cbz	r0, 800d230 <WM_RestartTimer+0x28>
 800d20e:	f7fe fb33 	bl	800b878 <GUI_ALLOC_LockH>
 800d212:	9001      	str	r0, [sp, #4]
 800d214:	b11c      	cbz	r4, 800d21e <WM_RestartTimer+0x16>
 800d216:	6800      	ldr	r0, [r0, #0]
 800d218:	4621      	mov	r1, r4
 800d21a:	f7fc fccb 	bl	8009bb4 <GUI_TIMER_SetPeriod>
 800d21e:	ac02      	add	r4, sp, #8
 800d220:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800d224:	6818      	ldr	r0, [r3, #0]
 800d226:	f7fc fcd3 	bl	8009bd0 <GUI_TIMER_Restart>
 800d22a:	4620      	mov	r0, r4
 800d22c:	f7fe fb32 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d230:	b002      	add	sp, #8
 800d232:	bd10      	pop	{r4, pc}

0800d234 <_Convert16>:
 800d234:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d238:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800d23c:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800d240:	4605      	mov	r5, r0
 800d242:	460e      	mov	r6, r1
 800d244:	4690      	mov	r8, r2
 800d246:	461f      	mov	r7, r3
 800d248:	4614      	mov	r4, r2
 800d24a:	4689      	mov	r9, r1
 800d24c:	f835 0b02 	ldrh.w	r0, [r5], #2
 800d250:	47d8      	blx	fp
 800d252:	47d0      	blx	sl
 800d254:	3c01      	subs	r4, #1
 800d256:	f849 0b04 	str.w	r0, [r9], #4
 800d25a:	d1f7      	bne.n	800d24c <_Convert16+0x18>
 800d25c:	2f1f      	cmp	r7, #31
 800d25e:	d806      	bhi.n	800d26e <_Convert16+0x3a>
 800d260:	4630      	mov	r0, r6
 800d262:	4641      	mov	r1, r8
 800d264:	463a      	mov	r2, r7
 800d266:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d26a:	f001 bf03 	b.w	800f074 <GUI__CompactPixelIndices>
 800d26e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d272 <_Convert8>:
 800d272:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d276:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800d27a:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800d27e:	4605      	mov	r5, r0
 800d280:	460e      	mov	r6, r1
 800d282:	4690      	mov	r8, r2
 800d284:	461f      	mov	r7, r3
 800d286:	4689      	mov	r9, r1
 800d288:	4604      	mov	r4, r0
 800d28a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800d28e:	47d8      	blx	fp
 800d290:	47d0      	blx	sl
 800d292:	1b2b      	subs	r3, r5, r4
 800d294:	4443      	add	r3, r8
 800d296:	f849 0b04 	str.w	r0, [r9], #4
 800d29a:	2b00      	cmp	r3, #0
 800d29c:	d1f5      	bne.n	800d28a <_Convert8+0x18>
 800d29e:	2f1f      	cmp	r7, #31
 800d2a0:	d806      	bhi.n	800d2b0 <_Convert8+0x3e>
 800d2a2:	4630      	mov	r0, r6
 800d2a4:	4641      	mov	r1, r8
 800d2a6:	463a      	mov	r2, r7
 800d2a8:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2ac:	f001 bee2 	b.w	800f074 <GUI__CompactPixelIndices>
 800d2b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d2b4 <GUI_MEMDEV__WriteToActiveOpaque>:
 800d2b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2b8:	b09d      	sub	sp, #116	; 0x74
 800d2ba:	4606      	mov	r6, r0
 800d2bc:	910f      	str	r1, [sp, #60]	; 0x3c
 800d2be:	920d      	str	r2, [sp, #52]	; 0x34
 800d2c0:	2800      	cmp	r0, #0
 800d2c2:	f000 8386 	beq.w	800d9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d2c6:	f7fe fad7 	bl	800b878 <GUI_ALLOC_LockH>
 800d2ca:	ab1c      	add	r3, sp, #112	; 0x70
 800d2cc:	6944      	ldr	r4, [r0, #20]
 800d2ce:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800d2d2:	4618      	mov	r0, r3
 800d2d4:	f7fe fade 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d2d8:	4630      	mov	r0, r6
 800d2da:	f7fa f921 	bl	8007520 <GUI_MEMDEV_GetBitsPerPixel>
 800d2de:	2808      	cmp	r0, #8
 800d2e0:	4601      	mov	r1, r0
 800d2e2:	dd02      	ble.n	800d2ea <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 800d2e4:	2c00      	cmp	r4, #0
 800d2e6:	f000 81c3 	beq.w	800d670 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 800d2ea:	2201      	movs	r2, #1
 800d2ec:	f04f 0800 	mov.w	r8, #0
 800d2f0:	4630      	mov	r0, r6
 800d2f2:	921b      	str	r2, [sp, #108]	; 0x6c
 800d2f4:	920b      	str	r2, [sp, #44]	; 0x2c
 800d2f6:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 800d2fa:	f7fe fabd 	bl	800b878 <GUI_ALLOC_LockH>
 800d2fe:	6803      	ldr	r3, [r0, #0]
 800d300:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 800d910 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 800d304:	691b      	ldr	r3, [r3, #16]
 800d306:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 800d30a:	685b      	ldr	r3, [r3, #4]
 800d30c:	930e      	str	r3, [sp, #56]	; 0x38
 800d30e:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 800d312:	f8da 3000 	ldr.w	r3, [sl]
 800d316:	f84b 0d14 	str.w	r0, [fp, #-20]!
 800d31a:	6904      	ldr	r4, [r0, #16]
 800d31c:	6945      	ldr	r5, [r0, #20]
 800d31e:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800d322:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 800d326:	7c58      	ldrb	r0, [r3, #17]
 800d328:	9112      	str	r1, [sp, #72]	; 0x48
 800d32a:	f7fb fb17 	bl	800895c <GUI_GetBitsPerPixelEx>
 800d32e:	f8da 3000 	ldr.w	r3, [sl]
 800d332:	9010      	str	r0, [sp, #64]	; 0x40
 800d334:	7c58      	ldrb	r0, [r3, #17]
 800d336:	f7fb fb2f 	bl	8008998 <GUI_GetpfIndex2ColorEx>
 800d33a:	4603      	mov	r3, r0
 800d33c:	4658      	mov	r0, fp
 800d33e:	9309      	str	r3, [sp, #36]	; 0x24
 800d340:	f7fe faa8 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d344:	2c08      	cmp	r4, #8
 800d346:	4651      	mov	r1, sl
 800d348:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d34a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d34c:	d904      	bls.n	800d358 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800d34e:	2c10      	cmp	r4, #16
 800d350:	bf8c      	ite	hi
 800d352:	2204      	movhi	r2, #4
 800d354:	2202      	movls	r2, #2
 800d356:	e005      	b.n	800d364 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800d358:	2c01      	cmp	r4, #1
 800d35a:	d103      	bne.n	800d364 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800d35c:	9411      	str	r4, [sp, #68]	; 0x44
 800d35e:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800d362:	e000      	b.n	800d366 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 800d364:	9211      	str	r2, [sp, #68]	; 0x44
 800d366:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d368:	4298      	cmp	r0, r3
 800d36a:	f000 80e2 	beq.w	800d532 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 800d36e:	680b      	ldr	r3, [r1, #0]
 800d370:	7c58      	ldrb	r0, [r3, #17]
 800d372:	f7fb fb19 	bl	80089a8 <GUI_GetpfColor2IndexEx>
 800d376:	9013      	str	r0, [sp, #76]	; 0x4c
 800d378:	00b8      	lsls	r0, r7, #2
 800d37a:	f7fe fc49 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 800d37e:	900c      	str	r0, [sp, #48]	; 0x30
 800d380:	2800      	cmp	r0, #0
 800d382:	f000 8326 	beq.w	800d9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d386:	4630      	mov	r0, r6
 800d388:	f7f9 fa62 	bl	8006850 <GUI_MEMDEV_GetDataPtr>
 800d38c:	4606      	mov	r6, r0
 800d38e:	2d00      	cmp	r5, #0
 800d390:	f000 80be 	beq.w	800d510 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 800d394:	4628      	mov	r0, r5
 800d396:	f7fe fa6f 	bl	800b878 <GUI_ALLOC_LockH>
 800d39a:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800d39e:	9018      	str	r0, [sp, #96]	; 0x60
 800d3a0:	f04f 0a00 	mov.w	sl, #0
 800d3a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800d3a6:	4592      	cmp	sl, r2
 800d3a8:	f280 80ae 	bge.w	800d508 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 800d3ac:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d3ae:	2300      	movs	r3, #0
 800d3b0:	9319      	str	r3, [sp, #100]	; 0x64
 800d3b2:	6883      	ldr	r3, [r0, #8]
 800d3b4:	a919      	add	r1, sp, #100	; 0x64
 800d3b6:	695b      	ldr	r3, [r3, #20]
 800d3b8:	4652      	mov	r2, sl
 800d3ba:	4798      	blx	r3
 800d3bc:	42b8      	cmp	r0, r7
 800d3be:	4605      	mov	r5, r0
 800d3c0:	d12f      	bne.n	800d422 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 800d3c2:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d3c4:	f7fe fa58 	bl	800b878 <GUI_ALLOC_LockH>
 800d3c8:	2c08      	cmp	r4, #8
 800d3ca:	4601      	mov	r1, r0
 800d3cc:	9016      	str	r0, [sp, #88]	; 0x58
 800d3ce:	d909      	bls.n	800d3e4 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 800d3d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d3d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d3d4:	9200      	str	r2, [sp, #0]
 800d3d6:	9301      	str	r3, [sp, #4]
 800d3d8:	4630      	mov	r0, r6
 800d3da:	463a      	mov	r2, r7
 800d3dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3de:	f7ff ff29 	bl	800d234 <_Convert16>
 800d3e2:	e008      	b.n	800d3f6 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 800d3e4:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d3e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d3e8:	9000      	str	r0, [sp, #0]
 800d3ea:	9201      	str	r2, [sp, #4]
 800d3ec:	4630      	mov	r0, r6
 800d3ee:	463a      	mov	r2, r7
 800d3f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3f2:	f7ff ff3e 	bl	800d272 <_Convert8>
 800d3f6:	2301      	movs	r3, #1
 800d3f8:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d3fa:	9002      	str	r0, [sp, #8]
 800d3fc:	ad1c      	add	r5, sp, #112	; 0x70
 800d3fe:	2200      	movs	r2, #0
 800d400:	9300      	str	r3, [sp, #0]
 800d402:	9301      	str	r3, [sp, #4]
 800d404:	9203      	str	r2, [sp, #12]
 800d406:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 800d40a:	9204      	str	r2, [sp, #16]
 800d40c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d40e:	f8cd 8014 	str.w	r8, [sp, #20]
 800d412:	4659      	mov	r1, fp
 800d414:	463a      	mov	r2, r7
 800d416:	f7fb fce3 	bl	8008de0 <LCD_DrawBitmap>
 800d41a:	4628      	mov	r0, r5
 800d41c:	f7fe fa3a 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d420:	e060      	b.n	800d4e4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d422:	2c01      	cmp	r4, #1
 800d424:	d15c      	bne.n	800d4e0 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800d426:	2d00      	cmp	r5, #0
 800d428:	d05c      	beq.n	800d4e4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d42a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d42c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d42e:	f8cd 900c 	str.w	r9, [sp, #12]
 800d432:	2208      	movs	r2, #8
 800d434:	fb90 f2f2 	sdiv	r2, r0, r2
 800d438:	4432      	add	r2, r6
 800d43a:	2301      	movs	r3, #1
 800d43c:	9204      	str	r2, [sp, #16]
 800d43e:	f000 0207 	and.w	r2, r0, #7
 800d442:	9300      	str	r3, [sp, #0]
 800d444:	4408      	add	r0, r1
 800d446:	9301      	str	r3, [sp, #4]
 800d448:	9302      	str	r3, [sp, #8]
 800d44a:	9206      	str	r2, [sp, #24]
 800d44c:	4659      	mov	r1, fp
 800d44e:	462a      	mov	r2, r5
 800d450:	f8cd 8014 	str.w	r8, [sp, #20]
 800d454:	f7fb fbe8 	bl	8008c28 <LCD__DrawBitmap_1bpp>
 800d458:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d45a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d45c:	441d      	add	r5, r3
 800d45e:	6883      	ldr	r3, [r0, #8]
 800d460:	9519      	str	r5, [sp, #100]	; 0x64
 800d462:	695b      	ldr	r3, [r3, #20]
 800d464:	a919      	add	r1, sp, #100	; 0x64
 800d466:	4652      	mov	r2, sl
 800d468:	4798      	blx	r3
 800d46a:	4605      	mov	r5, r0
 800d46c:	e7db      	b.n	800d426 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 800d46e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d470:	f7fe fa02 	bl	800b878 <GUI_ALLOC_LockH>
 800d474:	2c08      	cmp	r4, #8
 800d476:	4601      	mov	r1, r0
 800d478:	9016      	str	r0, [sp, #88]	; 0x58
 800d47a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d47c:	d938      	bls.n	800d4f0 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 800d47e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d480:	9200      	str	r2, [sp, #0]
 800d482:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d484:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d486:	9301      	str	r3, [sp, #4]
 800d488:	fb00 6002 	mla	r0, r0, r2, r6
 800d48c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d48e:	462a      	mov	r2, r5
 800d490:	f7ff fed0 	bl	800d234 <_Convert16>
 800d494:	2301      	movs	r3, #1
 800d496:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 800d49a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d49c:	9300      	str	r3, [sp, #0]
 800d49e:	2200      	movs	r2, #0
 800d4a0:	9301      	str	r3, [sp, #4]
 800d4a2:	9002      	str	r0, [sp, #8]
 800d4a4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d4a6:	9203      	str	r2, [sp, #12]
 800d4a8:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d4aa:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 800d4ae:	9204      	str	r2, [sp, #16]
 800d4b0:	4408      	add	r0, r1
 800d4b2:	462a      	mov	r2, r5
 800d4b4:	4659      	mov	r1, fp
 800d4b6:	f8cd 8014 	str.w	r8, [sp, #20]
 800d4ba:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800d4be:	f7fb fc8f 	bl	8008de0 <LCD_DrawBitmap>
 800d4c2:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800d4c6:	4660      	mov	r0, ip
 800d4c8:	f7fe f9e4 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d4cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d4ce:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d4d0:	441d      	add	r5, r3
 800d4d2:	6883      	ldr	r3, [r0, #8]
 800d4d4:	9519      	str	r5, [sp, #100]	; 0x64
 800d4d6:	695b      	ldr	r3, [r3, #20]
 800d4d8:	a919      	add	r1, sp, #100	; 0x64
 800d4da:	4652      	mov	r2, sl
 800d4dc:	4798      	blx	r3
 800d4de:	4605      	mov	r5, r0
 800d4e0:	2d00      	cmp	r5, #0
 800d4e2:	d1c4      	bne.n	800d46e <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 800d4e4:	444e      	add	r6, r9
 800d4e6:	f10a 0a01 	add.w	sl, sl, #1
 800d4ea:	f10b 0b01 	add.w	fp, fp, #1
 800d4ee:	e759      	b.n	800d3a4 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 800d4f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d4f2:	9300      	str	r3, [sp, #0]
 800d4f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d4f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d4f8:	9201      	str	r2, [sp, #4]
 800d4fa:	fb00 6003 	mla	r0, r0, r3, r6
 800d4fe:	462a      	mov	r2, r5
 800d500:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d502:	f7ff feb6 	bl	800d272 <_Convert8>
 800d506:	e7c5      	b.n	800d494 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 800d508:	a818      	add	r0, sp, #96	; 0x60
 800d50a:	f7fe f9c3 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d50e:	e00e      	b.n	800d52e <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 800d510:	2301      	movs	r3, #1
 800d512:	9300      	str	r3, [sp, #0]
 800d514:	9301      	str	r3, [sp, #4]
 800d516:	9004      	str	r0, [sp, #16]
 800d518:	9402      	str	r4, [sp, #8]
 800d51a:	f8cd 900c 	str.w	r9, [sp, #12]
 800d51e:	f8cd 8014 	str.w	r8, [sp, #20]
 800d522:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d524:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d526:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d528:	463a      	mov	r2, r7
 800d52a:	f7fb fc59 	bl	8008de0 <LCD_DrawBitmap>
 800d52e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d530:	e24d      	b.n	800d9ce <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d532:	4630      	mov	r0, r6
 800d534:	f7f9 f98c 	bl	8006850 <GUI_MEMDEV_GetDataPtr>
 800d538:	4606      	mov	r6, r0
 800d53a:	2d00      	cmp	r5, #0
 800d53c:	f000 808a 	beq.w	800d654 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 800d540:	4628      	mov	r0, r5
 800d542:	f7fe f999 	bl	800b878 <GUI_ALLOC_LockH>
 800d546:	2500      	movs	r5, #0
 800d548:	9018      	str	r0, [sp, #96]	; 0x60
 800d54a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d54c:	429d      	cmp	r5, r3
 800d54e:	da7d      	bge.n	800d64c <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 800d550:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d552:	2300      	movs	r3, #0
 800d554:	9319      	str	r3, [sp, #100]	; 0x64
 800d556:	6883      	ldr	r3, [r0, #8]
 800d558:	a919      	add	r1, sp, #100	; 0x64
 800d55a:	695b      	ldr	r3, [r3, #20]
 800d55c:	462a      	mov	r2, r5
 800d55e:	4798      	blx	r3
 800d560:	42b8      	cmp	r0, r7
 800d562:	4682      	mov	sl, r0
 800d564:	d124      	bne.n	800d5b0 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800d566:	46aa      	mov	sl, r5
 800d568:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d56a:	6883      	ldr	r3, [r0, #8]
 800d56c:	f10a 0b01 	add.w	fp, sl, #1
 800d570:	695b      	ldr	r3, [r3, #20]
 800d572:	a919      	add	r1, sp, #100	; 0x64
 800d574:	465a      	mov	r2, fp
 800d576:	4798      	blx	r3
 800d578:	42b8      	cmp	r0, r7
 800d57a:	d101      	bne.n	800d580 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 800d57c:	46da      	mov	sl, fp
 800d57e:	e7f3      	b.n	800d568 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 800d580:	ebc5 0b0a 	rsb	fp, r5, sl
 800d584:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d586:	9604      	str	r6, [sp, #16]
 800d588:	2301      	movs	r3, #1
 800d58a:	f10b 0b01 	add.w	fp, fp, #1
 800d58e:	9300      	str	r3, [sp, #0]
 800d590:	9301      	str	r3, [sp, #4]
 800d592:	4429      	add	r1, r5
 800d594:	9402      	str	r4, [sp, #8]
 800d596:	f8cd 900c 	str.w	r9, [sp, #12]
 800d59a:	f8cd 8014 	str.w	r8, [sp, #20]
 800d59e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d5a0:	463a      	mov	r2, r7
 800d5a2:	465b      	mov	r3, fp
 800d5a4:	f7fb fc1c 	bl	8008de0 <LCD_DrawBitmap>
 800d5a8:	fb09 660b 	mla	r6, r9, fp, r6
 800d5ac:	4655      	mov	r5, sl
 800d5ae:	e04b      	b.n	800d648 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d5b0:	2c01      	cmp	r4, #1
 800d5b2:	d127      	bne.n	800d604 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d5b4:	f1ba 0f00 	cmp.w	sl, #0
 800d5b8:	d022      	beq.n	800d600 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d5ba:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d5bc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d5be:	f8cd 900c 	str.w	r9, [sp, #12]
 800d5c2:	2208      	movs	r2, #8
 800d5c4:	fb90 f2f2 	sdiv	r2, r0, r2
 800d5c8:	4432      	add	r2, r6
 800d5ca:	9204      	str	r2, [sp, #16]
 800d5cc:	f000 0207 	and.w	r2, r0, #7
 800d5d0:	4408      	add	r0, r1
 800d5d2:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d5d4:	9206      	str	r2, [sp, #24]
 800d5d6:	2301      	movs	r3, #1
 800d5d8:	4652      	mov	r2, sl
 800d5da:	9300      	str	r3, [sp, #0]
 800d5dc:	9301      	str	r3, [sp, #4]
 800d5de:	9302      	str	r3, [sp, #8]
 800d5e0:	4429      	add	r1, r5
 800d5e2:	f8cd 8014 	str.w	r8, [sp, #20]
 800d5e6:	f7fb fb1f 	bl	8008c28 <LCD__DrawBitmap_1bpp>
 800d5ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d5ec:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d5ee:	4453      	add	r3, sl
 800d5f0:	9319      	str	r3, [sp, #100]	; 0x64
 800d5f2:	6883      	ldr	r3, [r0, #8]
 800d5f4:	a919      	add	r1, sp, #100	; 0x64
 800d5f6:	695b      	ldr	r3, [r3, #20]
 800d5f8:	462a      	mov	r2, r5
 800d5fa:	4798      	blx	r3
 800d5fc:	4682      	mov	sl, r0
 800d5fe:	e7d9      	b.n	800d5b4 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 800d600:	444e      	add	r6, r9
 800d602:	e021      	b.n	800d648 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d604:	f1ba 0f00 	cmp.w	sl, #0
 800d608:	d0fa      	beq.n	800d600 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d60a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d60c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d60e:	9402      	str	r4, [sp, #8]
 800d610:	fb00 6201 	mla	r2, r0, r1, r6
 800d614:	9204      	str	r2, [sp, #16]
 800d616:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d618:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800d61a:	f8cd 900c 	str.w	r9, [sp, #12]
 800d61e:	2301      	movs	r3, #1
 800d620:	4410      	add	r0, r2
 800d622:	9300      	str	r3, [sp, #0]
 800d624:	4652      	mov	r2, sl
 800d626:	9301      	str	r3, [sp, #4]
 800d628:	4429      	add	r1, r5
 800d62a:	f8cd 8014 	str.w	r8, [sp, #20]
 800d62e:	f7fb fbd7 	bl	8008de0 <LCD_DrawBitmap>
 800d632:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d634:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d636:	4453      	add	r3, sl
 800d638:	9319      	str	r3, [sp, #100]	; 0x64
 800d63a:	6883      	ldr	r3, [r0, #8]
 800d63c:	a919      	add	r1, sp, #100	; 0x64
 800d63e:	695b      	ldr	r3, [r3, #20]
 800d640:	462a      	mov	r2, r5
 800d642:	4798      	blx	r3
 800d644:	4682      	mov	sl, r0
 800d646:	e7dd      	b.n	800d604 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d648:	3501      	adds	r5, #1
 800d64a:	e77e      	b.n	800d54a <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 800d64c:	a818      	add	r0, sp, #96	; 0x60
 800d64e:	f7fe f921 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d652:	e1be      	b.n	800d9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d654:	2301      	movs	r3, #1
 800d656:	9300      	str	r3, [sp, #0]
 800d658:	9301      	str	r3, [sp, #4]
 800d65a:	9004      	str	r0, [sp, #16]
 800d65c:	9402      	str	r4, [sp, #8]
 800d65e:	f8cd 900c 	str.w	r9, [sp, #12]
 800d662:	f8cd 8014 	str.w	r8, [sp, #20]
 800d666:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d668:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d66a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d66c:	463a      	mov	r2, r7
 800d66e:	e041      	b.n	800d6f4 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 800d670:	4630      	mov	r0, r6
 800d672:	910a      	str	r1, [sp, #40]	; 0x28
 800d674:	f7fe f900 	bl	800b878 <GUI_ALLOC_LockH>
 800d678:	4682      	mov	sl, r0
 800d67a:	a81c      	add	r0, sp, #112	; 0x70
 800d67c:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 800d680:	f840 ad10 	str.w	sl, [r0, #-16]!
 800d684:	f8da 4000 	ldr.w	r4, [sl]
 800d688:	9210      	str	r2, [sp, #64]	; 0x40
 800d68a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800d68e:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 800d692:	4c9e      	ldr	r4, [pc, #632]	; (800d90c <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 800d694:	b213      	sxth	r3, r2
 800d696:	f8da 200c 	ldr.w	r2, [sl, #12]
 800d69a:	920b      	str	r2, [sp, #44]	; 0x2c
 800d69c:	9309      	str	r3, [sp, #36]	; 0x24
 800d69e:	f7fe f8f9 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d6a2:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800d6a6:	900e      	str	r0, [sp, #56]	; 0x38
 800d6a8:	4899      	ldr	r0, [pc, #612]	; (800d910 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 800d6aa:	6800      	ldr	r0, [r0, #0]
 800d6ac:	7c40      	ldrb	r0, [r0, #17]
 800d6ae:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800d6b2:	6925      	ldr	r5, [r4, #16]
 800d6b4:	f8d5 8000 	ldr.w	r8, [r5]
 800d6b8:	f7fb f950 	bl	800895c <GUI_GetBitsPerPixelEx>
 800d6bc:	2808      	cmp	r0, #8
 800d6be:	fa0f fb87 	sxth.w	fp, r7
 800d6c2:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d6c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d6c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d6c8:	d904      	bls.n	800d6d4 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 800d6ca:	2810      	cmp	r0, #16
 800d6cc:	bf8c      	ite	hi
 800d6ce:	2404      	movhi	r4, #4
 800d6d0:	2402      	movls	r4, #2
 800d6d2:	e000      	b.n	800d6d6 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 800d6d4:	2401      	movs	r4, #1
 800d6d6:	45a9      	cmp	r9, r5
 800d6d8:	d10f      	bne.n	800d6fa <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 800d6da:	2001      	movs	r0, #1
 800d6dc:	9203      	str	r2, [sp, #12]
 800d6de:	f10a 0218 	add.w	r2, sl, #24
 800d6e2:	9000      	str	r0, [sp, #0]
 800d6e4:	9001      	str	r0, [sp, #4]
 800d6e6:	9102      	str	r1, [sp, #8]
 800d6e8:	9204      	str	r2, [sp, #16]
 800d6ea:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d6ec:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d6ee:	2200      	movs	r2, #0
 800d6f0:	9205      	str	r2, [sp, #20]
 800d6f2:	465a      	mov	r2, fp
 800d6f4:	f7fb fb74 	bl	8008de0 <LCD_DrawBitmap>
 800d6f8:	e16b      	b.n	800d9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d6fa:	2920      	cmp	r1, #32
 800d6fc:	f040 808e 	bne.w	800d81c <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 800d700:	fb0b f004 	mul.w	r0, fp, r4
 800d704:	f7fe fa84 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 800d708:	900e      	str	r0, [sp, #56]	; 0x38
 800d70a:	2800      	cmp	r0, #0
 800d70c:	f000 8161 	beq.w	800d9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d710:	f7fe f8b2 	bl	800b878 <GUI_ALLOC_LockH>
 800d714:	901a      	str	r0, [sp, #104]	; 0x68
 800d716:	4630      	mov	r0, r6
 800d718:	f7fe f8ae 	bl	800b878 <GUI_ALLOC_LockH>
 800d71c:	9018      	str	r0, [sp, #96]	; 0x60
 800d71e:	692b      	ldr	r3, [r5, #16]
 800d720:	f100 0a18 	add.w	sl, r0, #24
 800d724:	ea4f 068b 	mov.w	r6, fp, lsl #2
 800d728:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 800d72c:	2b00      	cmp	r3, #0
 800d72e:	d02f      	beq.n	800d790 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 800d730:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800d734:	2c02      	cmp	r4, #2
 800d736:	d003      	beq.n	800d740 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d738:	2c04      	cmp	r4, #4
 800d73a:	d001      	beq.n	800d740 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d73c:	2c01      	cmp	r4, #1
 800d73e:	d106      	bne.n	800d74e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800d740:	4650      	mov	r0, sl
 800d742:	692f      	ldr	r7, [r5, #16]
 800d744:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d746:	465a      	mov	r2, fp
 800d748:	4623      	mov	r3, r4
 800d74a:	47b8      	blx	r7
 800d74c:	44b2      	add	sl, r6
 800d74e:	2301      	movs	r3, #1
 800d750:	2200      	movs	r2, #0
 800d752:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d754:	9300      	str	r3, [sp, #0]
 800d756:	9301      	str	r3, [sp, #4]
 800d758:	9203      	str	r2, [sp, #12]
 800d75a:	9104      	str	r1, [sp, #16]
 800d75c:	9205      	str	r2, [sp, #20]
 800d75e:	4641      	mov	r1, r8
 800d760:	465a      	mov	r2, fp
 800d762:	f8cd 9008 	str.w	r9, [sp, #8]
 800d766:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d768:	f7fb fb3a 	bl	8008de0 <LCD_DrawBitmap>
 800d76c:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d76e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d770:	f108 0701 	add.w	r7, r8, #1
 800d774:	fa02 f381 	sxtah	r3, r2, r1
 800d778:	42bb      	cmp	r3, r7
 800d77a:	d107      	bne.n	800d78c <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 800d77c:	a818      	add	r0, sp, #96	; 0x60
 800d77e:	f7fe f889 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d782:	a81a      	add	r0, sp, #104	; 0x68
 800d784:	f7fe f886 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d788:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d78a:	e120      	b.n	800d9ce <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d78c:	46b8      	mov	r8, r7
 800d78e:	e7d1      	b.n	800d734 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 800d790:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d792:	2c02      	cmp	r4, #2
 800d794:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d796:	d00e      	beq.n	800d7b6 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 800d798:	2c04      	cmp	r4, #4
 800d79a:	d018      	beq.n	800d7ce <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 800d79c:	2c01      	cmp	r4, #1
 800d79e:	d125      	bne.n	800d7ec <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 800d7a0:	2300      	movs	r3, #0
 800d7a2:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d7a6:	9309      	str	r3, [sp, #36]	; 0x24
 800d7a8:	47c0      	blx	r8
 800d7aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7ac:	54f8      	strb	r0, [r7, r3]
 800d7ae:	3301      	adds	r3, #1
 800d7b0:	459b      	cmp	fp, r3
 800d7b2:	d1f6      	bne.n	800d7a2 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 800d7b4:	e019      	b.n	800d7ea <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d7b6:	2300      	movs	r3, #0
 800d7b8:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d7bc:	9309      	str	r3, [sp, #36]	; 0x24
 800d7be:	47c0      	blx	r8
 800d7c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7c2:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 800d7c6:	3301      	adds	r3, #1
 800d7c8:	459b      	cmp	fp, r3
 800d7ca:	d1f5      	bne.n	800d7b8 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 800d7cc:	e00d      	b.n	800d7ea <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d7ce:	465a      	mov	r2, fp
 800d7d0:	2300      	movs	r3, #0
 800d7d2:	f85a 0003 	ldr.w	r0, [sl, r3]
 800d7d6:	920b      	str	r2, [sp, #44]	; 0x2c
 800d7d8:	9309      	str	r3, [sp, #36]	; 0x24
 800d7da:	47c0      	blx	r8
 800d7dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d7de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7e0:	3a01      	subs	r2, #1
 800d7e2:	50f8      	str	r0, [r7, r3]
 800d7e4:	f103 0304 	add.w	r3, r3, #4
 800d7e8:	d1f3      	bne.n	800d7d2 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 800d7ea:	44b2      	add	sl, r6
 800d7ec:	2301      	movs	r3, #1
 800d7ee:	2200      	movs	r2, #0
 800d7f0:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d7f2:	9300      	str	r3, [sp, #0]
 800d7f4:	9301      	str	r3, [sp, #4]
 800d7f6:	9203      	str	r2, [sp, #12]
 800d7f8:	9104      	str	r1, [sp, #16]
 800d7fa:	9205      	str	r2, [sp, #20]
 800d7fc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d7fe:	f8cd 9008 	str.w	r9, [sp, #8]
 800d802:	4629      	mov	r1, r5
 800d804:	465a      	mov	r2, fp
 800d806:	f7fb faeb 	bl	8008de0 <LCD_DrawBitmap>
 800d80a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d80c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d80e:	1c6f      	adds	r7, r5, #1
 800d810:	fa01 f380 	sxtah	r3, r1, r0
 800d814:	42bb      	cmp	r3, r7
 800d816:	d0b1      	beq.n	800d77c <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 800d818:	463d      	mov	r5, r7
 800d81a:	e7ba      	b.n	800d792 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 800d81c:	2910      	cmp	r1, #16
 800d81e:	f040 80d8 	bne.w	800d9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d822:	fa0f fa87 	sxth.w	sl, r7
 800d826:	fb0a f004 	mul.w	r0, sl, r4
 800d82a:	f7fe f9f1 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 800d82e:	9012      	str	r0, [sp, #72]	; 0x48
 800d830:	2800      	cmp	r0, #0
 800d832:	f000 80ce 	beq.w	800d9d2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d836:	f7fe f81f 	bl	800b878 <GUI_ALLOC_LockH>
 800d83a:	901a      	str	r0, [sp, #104]	; 0x68
 800d83c:	4630      	mov	r0, r6
 800d83e:	f7fe f81b 	bl	800b878 <GUI_ALLOC_LockH>
 800d842:	9018      	str	r0, [sp, #96]	; 0x60
 800d844:	692b      	ldr	r3, [r5, #16]
 800d846:	f100 0618 	add.w	r6, r0, #24
 800d84a:	b113      	cbz	r3, 800d852 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 800d84c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800d850:	b92b      	cbnz	r3, 800d85e <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 800d852:	00e2      	lsls	r2, r4, #3
 800d854:	b23f      	sxth	r7, r7
 800d856:	9211      	str	r2, [sp, #68]	; 0x44
 800d858:	007f      	lsls	r7, r7, #1
 800d85a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d85c:	e088      	b.n	800d970 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 800d85e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800d862:	0080      	lsls	r0, r0, #2
 800d864:	f7fe f9d4 	bl	800bc10 <GUI_ALLOC_AllocNoInit>
 800d868:	9011      	str	r0, [sp, #68]	; 0x44
 800d86a:	b118      	cbz	r0, 800d874 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 800d86c:	f7fe f804 	bl	800b878 <GUI_ALLOC_LockH>
 800d870:	9019      	str	r0, [sp, #100]	; 0x64
 800d872:	e001      	b.n	800d878 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 800d874:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d876:	9319      	str	r3, [sp, #100]	; 0x64
 800d878:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d87a:	2b00      	cmp	r3, #0
 800d87c:	f000 80a0 	beq.w	800d9c0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d880:	b23f      	sxth	r7, r7
 800d882:	007f      	lsls	r7, r7, #1
 800d884:	970e      	str	r7, [sp, #56]	; 0x38
 800d886:	00e7      	lsls	r7, r4, #3
 800d888:	9713      	str	r7, [sp, #76]	; 0x4c
 800d88a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800d88c:	970c      	str	r7, [sp, #48]	; 0x30
 800d88e:	2c02      	cmp	r4, #2
 800d890:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800d894:	d004      	beq.n	800d8a0 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 800d896:	2c04      	cmp	r4, #4
 800d898:	d007      	beq.n	800d8aa <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d89a:	2c01      	cmp	r4, #1
 800d89c:	d114      	bne.n	800d8c8 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 800d89e:	e004      	b.n	800d8aa <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d8a0:	4630      	mov	r0, r6
 800d8a2:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d8a4:	4652      	mov	r2, sl
 800d8a6:	4623      	mov	r3, r4
 800d8a8:	e003      	b.n	800d8b2 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 800d8aa:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d8ac:	4630      	mov	r0, r6
 800d8ae:	4652      	mov	r2, sl
 800d8b0:	2302      	movs	r3, #2
 800d8b2:	f8d9 7014 	ldr.w	r7, [r9, #20]
 800d8b6:	47b8      	blx	r7
 800d8b8:	692f      	ldr	r7, [r5, #16]
 800d8ba:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d8bc:	4641      	mov	r1, r8
 800d8be:	4652      	mov	r2, sl
 800d8c0:	4623      	mov	r3, r4
 800d8c2:	47b8      	blx	r7
 800d8c4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d8c6:	443e      	add	r6, r7
 800d8c8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800d8ca:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d8cc:	9104      	str	r1, [sp, #16]
 800d8ce:	2301      	movs	r3, #1
 800d8d0:	2200      	movs	r2, #0
 800d8d2:	f107 0801 	add.w	r8, r7, #1
 800d8d6:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800d8d8:	9300      	str	r3, [sp, #0]
 800d8da:	9301      	str	r3, [sp, #4]
 800d8dc:	9702      	str	r7, [sp, #8]
 800d8de:	9203      	str	r2, [sp, #12]
 800d8e0:	9205      	str	r2, [sp, #20]
 800d8e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d8e4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d8e6:	465a      	mov	r2, fp
 800d8e8:	f7fb fa7a 	bl	8008de0 <LCD_DrawBitmap>
 800d8ec:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800d8ee:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d8f0:	fa00 f387 	sxtah	r3, r0, r7
 800d8f4:	4543      	cmp	r3, r8
 800d8f6:	d002      	beq.n	800d8fe <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 800d8f8:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800d8fc:	e7c7      	b.n	800d88e <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 800d8fe:	a819      	add	r0, sp, #100	; 0x64
 800d900:	f7fd ffc8 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d904:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d906:	f7fd fff1 	bl	800b8ec <GUI_ALLOC_Free>
 800d90a:	e059      	b.n	800d9c0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d90c:	20002d2c 	.word	0x20002d2c
 800d910:	200000b8 	.word	0x200000b8
 800d914:	2c04      	cmp	r4, #4
 800d916:	d041      	beq.n	800d99c <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 800d918:	2c01      	cmp	r4, #1
 800d91a:	d111      	bne.n	800d940 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 800d91c:	464a      	mov	r2, r9
 800d91e:	4631      	mov	r1, r6
 800d920:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d924:	910a      	str	r1, [sp, #40]	; 0x28
 800d926:	920b      	str	r2, [sp, #44]	; 0x2c
 800d928:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d92a:	4798      	blx	r3
 800d92c:	47c0      	blx	r8
 800d92e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d930:	f802 0b01 	strb.w	r0, [r2], #1
 800d934:	eb09 000a 	add.w	r0, r9, sl
 800d938:	4282      	cmp	r2, r0
 800d93a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d93c:	d1f0      	bne.n	800d920 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 800d93e:	443e      	add	r6, r7
 800d940:	2301      	movs	r3, #1
 800d942:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d944:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d946:	9300      	str	r3, [sp, #0]
 800d948:	2200      	movs	r2, #0
 800d94a:	9301      	str	r3, [sp, #4]
 800d94c:	9002      	str	r0, [sp, #8]
 800d94e:	9203      	str	r2, [sp, #12]
 800d950:	9104      	str	r1, [sp, #16]
 800d952:	9205      	str	r2, [sp, #20]
 800d954:	4629      	mov	r1, r5
 800d956:	465a      	mov	r2, fp
 800d958:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d95a:	f7fb fa41 	bl	8008de0 <LCD_DrawBitmap>
 800d95e:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d960:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d962:	f105 0901 	add.w	r9, r5, #1
 800d966:	fa02 f381 	sxtah	r3, r2, r1
 800d96a:	454b      	cmp	r3, r9
 800d96c:	d028      	beq.n	800d9c0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d96e:	464d      	mov	r5, r9
 800d970:	2c02      	cmp	r4, #2
 800d972:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 800d976:	d1cd      	bne.n	800d914 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 800d978:	464b      	mov	r3, r9
 800d97a:	4631      	mov	r1, r6
 800d97c:	46d9      	mov	r9, fp
 800d97e:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d982:	910a      	str	r1, [sp, #40]	; 0x28
 800d984:	9309      	str	r3, [sp, #36]	; 0x24
 800d986:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d988:	4790      	blx	r2
 800d98a:	47c0      	blx	r8
 800d98c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d98e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d990:	f823 0b02 	strh.w	r0, [r3], #2
 800d994:	f1b9 0901 	subs.w	r9, r9, #1
 800d998:	d1f1      	bne.n	800d97e <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800d99a:	e7d0      	b.n	800d93e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d99c:	464b      	mov	r3, r9
 800d99e:	4631      	mov	r1, r6
 800d9a0:	46d9      	mov	r9, fp
 800d9a2:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d9a6:	910a      	str	r1, [sp, #40]	; 0x28
 800d9a8:	9309      	str	r3, [sp, #36]	; 0x24
 800d9aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d9ac:	4790      	blx	r2
 800d9ae:	47c0      	blx	r8
 800d9b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d9b2:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d9b4:	f843 0b04 	str.w	r0, [r3], #4
 800d9b8:	f1b9 0901 	subs.w	r9, r9, #1
 800d9bc:	d1f1      	bne.n	800d9a2 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 800d9be:	e7be      	b.n	800d93e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d9c0:	a818      	add	r0, sp, #96	; 0x60
 800d9c2:	f7fd ff67 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d9c6:	a81a      	add	r0, sp, #104	; 0x68
 800d9c8:	f7fd ff64 	bl	800b894 <GUI_ALLOC_UnlockH>
 800d9cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 800d9ce:	f7fd ff8d 	bl	800b8ec <GUI_ALLOC_Free>
 800d9d2:	b01d      	add	sp, #116	; 0x74
 800d9d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d9d8 <GUI_MEMDEV__WriteToActiveAlpha>:
 800d9d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9dc:	4d5f      	ldr	r5, [pc, #380]	; (800db5c <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 800d9de:	4f60      	ldr	r7, [pc, #384]	; (800db60 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 800d9e0:	682b      	ldr	r3, [r5, #0]
 800d9e2:	7c5b      	ldrb	r3, [r3, #17]
 800d9e4:	b091      	sub	sp, #68	; 0x44
 800d9e6:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 800d9ea:	900d      	str	r0, [sp, #52]	; 0x34
 800d9ec:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800d9f0:	460e      	mov	r6, r1
 800d9f2:	4614      	mov	r4, r2
 800d9f4:	f7fd ff40 	bl	800b878 <GUI_ALLOC_LockH>
 800d9f8:	4602      	mov	r2, r0
 800d9fa:	a810      	add	r0, sp, #64	; 0x40
 800d9fc:	6813      	ldr	r3, [r2, #0]
 800d9fe:	f840 2d08 	str.w	r2, [r0, #-8]!
 800da02:	691b      	ldr	r3, [r3, #16]
 800da04:	f8b2 a008 	ldrh.w	sl, [r2, #8]
 800da08:	685b      	ldr	r3, [r3, #4]
 800da0a:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 800da0e:	9309      	str	r3, [sp, #36]	; 0x24
 800da10:	f7fd ff40 	bl	800b894 <GUI_ALLOC_UnlockH>
 800da14:	682b      	ldr	r3, [r5, #0]
 800da16:	7c5b      	ldrb	r3, [r3, #17]
 800da18:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800da1c:	68c3      	ldr	r3, [r0, #12]
 800da1e:	2108      	movs	r1, #8
 800da20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800da22:	4798      	blx	r3
 800da24:	2817      	cmp	r0, #23
 800da26:	bf88      	it	hi
 800da28:	2020      	movhi	r0, #32
 800da2a:	9008      	str	r0, [sp, #32]
 800da2c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800da30:	f8d8 2000 	ldr.w	r2, [r8]
 800da34:	910a      	str	r1, [sp, #40]	; 0x28
 800da36:	2000      	movs	r0, #0
 800da38:	920b      	str	r2, [sp, #44]	; 0x2c
 800da3a:	f7fb fef3 	bl	8009824 <GUI__AllocAlphaBuffer>
 800da3e:	2800      	cmp	r0, #0
 800da40:	f040 8089 	bne.w	800db56 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800da44:	682a      	ldr	r2, [r5, #0]
 800da46:	fa0f f78a 	sxth.w	r7, sl
 800da4a:	19f5      	adds	r5, r6, r7
 800da4c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 800da50:	3d01      	subs	r5, #1
 800da52:	1aed      	subs	r5, r5, r3
 800da54:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 800da58:	2d00      	cmp	r5, #0
 800da5a:	bfcc      	ite	gt
 800da5c:	ebc5 0507 	rsbgt	r5, r5, r7
 800da60:	463d      	movle	r5, r7
 800da62:	42b3      	cmp	r3, r6
 800da64:	bfc3      	ittte	gt
 800da66:	ebc6 0103 	rsbgt	r1, r6, r3
 800da6a:	ebc1 0505 	rsbgt	r5, r1, r5
 800da6e:	461e      	movgt	r6, r3
 800da70:	2100      	movle	r1, #0
 800da72:	2d00      	cmp	r5, #0
 800da74:	dd6f      	ble.n	800db56 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800da76:	fa0f f389 	sxth.w	r3, r9
 800da7a:	18e0      	adds	r0, r4, r3
 800da7c:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 800da80:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800da84:	3801      	subs	r0, #1
 800da86:	ebcc 0000 	rsb	r0, ip, r0
 800da8a:	2800      	cmp	r0, #0
 800da8c:	bfc8      	it	gt
 800da8e:	ebc0 0303 	rsbgt	r3, r0, r3
 800da92:	4294      	cmp	r4, r2
 800da94:	bfbd      	ittte	lt
 800da96:	ebc4 0b02 	rsblt	fp, r4, r2
 800da9a:	ebcb 0303 	rsblt	r3, fp, r3
 800da9e:	4614      	movlt	r4, r2
 800daa0:	f04f 0b00 	movge.w	fp, #0
 800daa4:	2b00      	cmp	r3, #0
 800daa6:	dd56      	ble.n	800db56 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800daa8:	fb07 1b0b 	mla	fp, r7, fp, r1
 800daac:	18e3      	adds	r3, r4, r3
 800daae:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800dab2:	930c      	str	r3, [sp, #48]	; 0x30
 800dab4:	980d      	ldr	r0, [sp, #52]	; 0x34
 800dab6:	f7f8 fecb 	bl	8006850 <GUI_MEMDEV_GetDataPtr>
 800daba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dabc:	9300      	str	r3, [sp, #0]
 800dabe:	ab0f      	add	r3, sp, #60	; 0x3c
 800dac0:	eb00 020b 	add.w	r2, r0, fp
 800dac4:	9301      	str	r3, [sp, #4]
 800dac6:	4630      	mov	r0, r6
 800dac8:	4621      	mov	r1, r4
 800daca:	462b      	mov	r3, r5
 800dacc:	f7fb fdc0 	bl	8009650 <GUI__DoAlphaBlending>
 800dad0:	4681      	mov	r9, r0
 800dad2:	2800      	cmp	r0, #0
 800dad4:	d03f      	beq.n	800db56 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800dad6:	4b23      	ldr	r3, [pc, #140]	; (800db64 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 800dad8:	990a      	ldr	r1, [sp, #40]	; 0x28
 800dada:	4299      	cmp	r1, r3
 800dadc:	d01e      	beq.n	800db1c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800dade:	4629      	mov	r1, r5
 800dae0:	9a08      	ldr	r2, [sp, #32]
 800dae2:	4643      	mov	r3, r8
 800dae4:	f001 fc50 	bl	800f388 <GUI__CompactPixelIndicesEx>
 800dae8:	b9c0      	cbnz	r0, 800db1c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800daea:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800daee:	f1bc 0f00 	cmp.w	ip, #0
 800daf2:	d006      	beq.n	800db02 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 800daf4:	4648      	mov	r0, r9
 800daf6:	4649      	mov	r1, r9
 800daf8:	fa0f f28a 	sxth.w	r2, sl
 800dafc:	2304      	movs	r3, #4
 800dafe:	47e0      	blx	ip
 800db00:	e00c      	b.n	800db1c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800db02:	464a      	mov	r2, r9
 800db04:	463b      	mov	r3, r7
 800db06:	6810      	ldr	r0, [r2, #0]
 800db08:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800db0a:	9206      	str	r2, [sp, #24]
 800db0c:	9307      	str	r3, [sp, #28]
 800db0e:	4788      	blx	r1
 800db10:	9b07      	ldr	r3, [sp, #28]
 800db12:	9a06      	ldr	r2, [sp, #24]
 800db14:	3b01      	subs	r3, #1
 800db16:	f842 0b04 	str.w	r0, [r2], #4
 800db1a:	d1f4      	bne.n	800db06 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 800db1c:	9a08      	ldr	r2, [sp, #32]
 800db1e:	9202      	str	r2, [sp, #8]
 800db20:	2301      	movs	r3, #1
 800db22:	2200      	movs	r2, #0
 800db24:	f104 0c01 	add.w	ip, r4, #1
 800db28:	9300      	str	r3, [sp, #0]
 800db2a:	9301      	str	r3, [sp, #4]
 800db2c:	9203      	str	r2, [sp, #12]
 800db2e:	9205      	str	r2, [sp, #20]
 800db30:	f8cd 9010 	str.w	r9, [sp, #16]
 800db34:	4630      	mov	r0, r6
 800db36:	4621      	mov	r1, r4
 800db38:	462a      	mov	r2, r5
 800db3a:	f8cd c01c 	str.w	ip, [sp, #28]
 800db3e:	f7fb f94f 	bl	8008de0 <LCD_DrawBitmap>
 800db42:	2304      	movs	r3, #4
 800db44:	fb1a bb03 	smlabb	fp, sl, r3, fp
 800db48:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800db4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800db4e:	459c      	cmp	ip, r3
 800db50:	d001      	beq.n	800db56 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800db52:	4664      	mov	r4, ip
 800db54:	e7ae      	b.n	800dab4 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 800db56:	b011      	add	sp, #68	; 0x44
 800db58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db5c:	200000b8 	.word	0x200000b8
 800db60:	20002d2c 	.word	0x20002d2c
 800db64:	0800be7f 	.word	0x0800be7f

0800db68 <GUI_MEMDEV_WriteAt>:
 800db68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800db6a:	460c      	mov	r4, r1
 800db6c:	4615      	mov	r5, r2
 800db6e:	4606      	mov	r6, r0
 800db70:	b330      	cbz	r0, 800dbc0 <GUI_MEMDEV_WriteAt+0x58>
 800db72:	f7fd fe81 	bl	800b878 <GUI_ALLOC_LockH>
 800db76:	4a13      	ldr	r2, [pc, #76]	; (800dbc4 <GUI_MEMDEV_WriteAt+0x5c>)
 800db78:	8943      	ldrh	r3, [r0, #10]
 800db7a:	9001      	str	r0, [sp, #4]
 800db7c:	4294      	cmp	r4, r2
 800db7e:	8902      	ldrh	r2, [r0, #8]
 800db80:	bf04      	itt	eq
 800db82:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 800db86:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 800db8a:	f8ad 4008 	strh.w	r4, [sp, #8]
 800db8e:	3a01      	subs	r2, #1
 800db90:	3b01      	subs	r3, #1
 800db92:	4422      	add	r2, r4
 800db94:	442b      	add	r3, r5
 800db96:	a801      	add	r0, sp, #4
 800db98:	f8ad 200c 	strh.w	r2, [sp, #12]
 800db9c:	f8ad 500a 	strh.w	r5, [sp, #10]
 800dba0:	f8ad 300e 	strh.w	r3, [sp, #14]
 800dba4:	f7fd fe76 	bl	800b894 <GUI_ALLOC_UnlockH>
 800dba8:	a802      	add	r0, sp, #8
 800dbaa:	f7f8 fab5 	bl	8006118 <WM__InitIVRSearch>
 800dbae:	b138      	cbz	r0, 800dbc0 <GUI_MEMDEV_WriteAt+0x58>
 800dbb0:	4630      	mov	r0, r6
 800dbb2:	4621      	mov	r1, r4
 800dbb4:	462a      	mov	r2, r5
 800dbb6:	f7f9 fc15 	bl	80073e4 <GUI_MEMDEV__WriteToActiveAt>
 800dbba:	f7f8 f9eb 	bl	8005f94 <WM__GetNextIVR>
 800dbbe:	e7f6      	b.n	800dbae <GUI_MEMDEV_WriteAt+0x46>
 800dbc0:	b004      	add	sp, #16
 800dbc2:	bd70      	pop	{r4, r5, r6, pc}
 800dbc4:	fffff001 	.word	0xfffff001

0800dbc8 <GUI_MEMDEV_Write>:
 800dbc8:	4901      	ldr	r1, [pc, #4]	; (800dbd0 <GUI_MEMDEV_Write+0x8>)
 800dbca:	460a      	mov	r2, r1
 800dbcc:	f7ff bfcc 	b.w	800db68 <GUI_MEMDEV_WriteAt>
 800dbd0:	fffff001 	.word	0xfffff001

0800dbd4 <GUI_USAGE_BM_AddPixel>:
 800dbd4:	4603      	mov	r3, r0
 800dbd6:	b510      	push	{r4, lr}
 800dbd8:	f933 4b14 	ldrsh.w	r4, [r3], #20
 800dbdc:	1b09      	subs	r1, r1, r4
 800dbde:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800dbe2:	6900      	ldr	r0, [r0, #16]
 800dbe4:	1b12      	subs	r2, r2, r4
 800dbe6:	fb00 3302 	mla	r3, r0, r2, r3
 800dbea:	10c8      	asrs	r0, r1, #3
 800dbec:	2280      	movs	r2, #128	; 0x80
 800dbee:	f001 0107 	and.w	r1, r1, #7
 800dbf2:	fa42 f101 	asr.w	r1, r2, r1
 800dbf6:	5c1a      	ldrb	r2, [r3, r0]
 800dbf8:	4311      	orrs	r1, r2
 800dbfa:	5419      	strb	r1, [r3, r0]
 800dbfc:	bd10      	pop	{r4, pc}

0800dbfe <GUI_USAGE_BM_GetNextDirty>:
 800dbfe:	b570      	push	{r4, r5, r6, lr}
 800dc00:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800dc04:	680b      	ldr	r3, [r1, #0]
 800dc06:	8886      	ldrh	r6, [r0, #4]
 800dc08:	42a2      	cmp	r2, r4
 800dc0a:	da41      	bge.n	800dc90 <GUI_USAGE_BM_GetNextDirty+0x92>
 800dc0c:	b236      	sxth	r6, r6
 800dc0e:	42b3      	cmp	r3, r6
 800dc10:	6904      	ldr	r4, [r0, #16]
 800dc12:	da3d      	bge.n	800dc90 <GUI_USAGE_BM_GetNextDirty+0x92>
 800dc14:	3014      	adds	r0, #20
 800dc16:	fb04 0202 	mla	r2, r4, r2, r0
 800dc1a:	10dd      	asrs	r5, r3, #3
 800dc1c:	1e70      	subs	r0, r6, #1
 800dc1e:	1954      	adds	r4, r2, r5
 800dc20:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 800dc24:	5d55      	ldrb	r5, [r2, r5]
 800dc26:	f003 0207 	and.w	r2, r3, #7
 800dc2a:	fa05 f202 	lsl.w	r2, r5, r2
 800dc2e:	3401      	adds	r4, #1
 800dc30:	b2d2      	uxtb	r2, r2
 800dc32:	b93a      	cbnz	r2, 800dc44 <GUI_USAGE_BM_GetNextDirty+0x46>
 800dc34:	b368      	cbz	r0, 800dc92 <GUI_USAGE_BM_GetNextDirty+0x94>
 800dc36:	3308      	adds	r3, #8
 800dc38:	f814 2b01 	ldrb.w	r2, [r4], #1
 800dc3c:	3801      	subs	r0, #1
 800dc3e:	f023 0307 	bic.w	r3, r3, #7
 800dc42:	e7f6      	b.n	800dc32 <GUI_USAGE_BM_GetNextDirty+0x34>
 800dc44:	0615      	lsls	r5, r2, #24
 800dc46:	d403      	bmi.n	800dc50 <GUI_USAGE_BM_GetNextDirty+0x52>
 800dc48:	0052      	lsls	r2, r2, #1
 800dc4a:	b2d2      	uxtb	r2, r2
 800dc4c:	3301      	adds	r3, #1
 800dc4e:	e7f9      	b.n	800dc44 <GUI_USAGE_BM_GetNextDirty+0x46>
 800dc50:	2aff      	cmp	r2, #255	; 0xff
 800dc52:	461d      	mov	r5, r3
 800dc54:	d005      	beq.n	800dc62 <GUI_USAGE_BM_GetNextDirty+0x64>
 800dc56:	0656      	lsls	r6, r2, #25
 800dc58:	d504      	bpl.n	800dc64 <GUI_USAGE_BM_GetNextDirty+0x66>
 800dc5a:	0052      	lsls	r2, r2, #1
 800dc5c:	b2d2      	uxtb	r2, r2
 800dc5e:	3301      	adds	r3, #1
 800dc60:	e7f9      	b.n	800dc56 <GUI_USAGE_BM_GetNextDirty+0x58>
 800dc62:	3307      	adds	r3, #7
 800dc64:	f003 0207 	and.w	r2, r3, #7
 800dc68:	2a07      	cmp	r2, #7
 800dc6a:	d10d      	bne.n	800dc88 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800dc6c:	3801      	subs	r0, #1
 800dc6e:	d40b      	bmi.n	800dc88 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800dc70:	f814 2b01 	ldrb.w	r2, [r4], #1
 800dc74:	2aff      	cmp	r2, #255	; 0xff
 800dc76:	d101      	bne.n	800dc7c <GUI_USAGE_BM_GetNextDirty+0x7e>
 800dc78:	3308      	adds	r3, #8
 800dc7a:	e7f7      	b.n	800dc6c <GUI_USAGE_BM_GetNextDirty+0x6e>
 800dc7c:	0610      	lsls	r0, r2, #24
 800dc7e:	d503      	bpl.n	800dc88 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800dc80:	0052      	lsls	r2, r2, #1
 800dc82:	b2d2      	uxtb	r2, r2
 800dc84:	3301      	adds	r3, #1
 800dc86:	e7f9      	b.n	800dc7c <GUI_USAGE_BM_GetNextDirty+0x7e>
 800dc88:	1b58      	subs	r0, r3, r5
 800dc8a:	600d      	str	r5, [r1, #0]
 800dc8c:	3001      	adds	r0, #1
 800dc8e:	bd70      	pop	{r4, r5, r6, pc}
 800dc90:	2000      	movs	r0, #0
 800dc92:	bd70      	pop	{r4, r5, r6, pc}

0800dc94 <_GUI_USAGE_BM_Delete>:
 800dc94:	f7fd be2a 	b.w	800b8ec <GUI_ALLOC_Free>

0800dc98 <GUI_USAGE_BM_Clear>:
 800dc98:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800dc9c:	6902      	ldr	r2, [r0, #16]
 800dc9e:	2100      	movs	r1, #0
 800dca0:	3014      	adds	r0, #20
 800dca2:	435a      	muls	r2, r3
 800dca4:	f002 ba26 	b.w	80100f4 <memset>

0800dca8 <GUI_USAGE_BM_AddHLine>:
 800dca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dcaa:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dcae:	1b09      	subs	r1, r1, r4
 800dcb0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800dcb4:	42a1      	cmp	r1, r4
 800dcb6:	da2f      	bge.n	800dd18 <GUI_USAGE_BM_AddHLine+0x70>
 800dcb8:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800dcbc:	440b      	add	r3, r1
 800dcbe:	f100 0414 	add.w	r4, r0, #20
 800dcc2:	3b01      	subs	r3, #1
 800dcc4:	6900      	ldr	r0, [r0, #16]
 800dcc6:	1b52      	subs	r2, r2, r5
 800dcc8:	43de      	mvns	r6, r3
 800dcca:	fb00 4202 	mla	r2, r0, r2, r4
 800dcce:	f001 0707 	and.w	r7, r1, #7
 800dcd2:	10cc      	asrs	r4, r1, #3
 800dcd4:	f006 0607 	and.w	r6, r6, #7
 800dcd8:	21ff      	movs	r1, #255	; 0xff
 800dcda:	fa41 f707 	asr.w	r7, r1, r7
 800dcde:	fa01 f606 	lsl.w	r6, r1, r6
 800dce2:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 800dce6:	eb02 0504 	add.w	r5, r2, r4
 800dcea:	b2ff      	uxtb	r7, r7
 800dcec:	b2f6      	uxtb	r6, r6
 800dcee:	5d10      	ldrb	r0, [r2, r4]
 800dcf0:	d103      	bne.n	800dcfa <GUI_USAGE_BM_AddHLine+0x52>
 800dcf2:	403e      	ands	r6, r7
 800dcf4:	4330      	orrs	r0, r6
 800dcf6:	5510      	strb	r0, [r2, r4]
 800dcf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dcfa:	4338      	orrs	r0, r7
 800dcfc:	5510      	strb	r0, [r2, r4]
 800dcfe:	1e5c      	subs	r4, r3, #1
 800dd00:	2c00      	cmp	r4, #0
 800dd02:	f105 0501 	add.w	r5, r5, #1
 800dd06:	dd04      	ble.n	800dd12 <GUI_USAGE_BM_AddHLine+0x6a>
 800dd08:	4628      	mov	r0, r5
 800dd0a:	4622      	mov	r2, r4
 800dd0c:	f002 f9f2 	bl	80100f4 <memset>
 800dd10:	4425      	add	r5, r4
 800dd12:	782b      	ldrb	r3, [r5, #0]
 800dd14:	431e      	orrs	r6, r3
 800dd16:	702e      	strb	r6, [r5, #0]
 800dd18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800dd1c <GUI_USAGE_BM_Create>:
 800dd1c:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 800dd20:	f102 060f 	add.w	r6, r2, #15
 800dd24:	1136      	asrs	r6, r6, #4
 800dd26:	0076      	lsls	r6, r6, #1
 800dd28:	4682      	mov	sl, r0
 800dd2a:	fb06 f003 	mul.w	r0, r6, r3
 800dd2e:	3014      	adds	r0, #20
 800dd30:	4689      	mov	r9, r1
 800dd32:	4690      	mov	r8, r2
 800dd34:	461f      	mov	r7, r3
 800dd36:	f7fd ff99 	bl	800bc6c <GUI_ALLOC_AllocZero>
 800dd3a:	4683      	mov	fp, r0
 800dd3c:	b198      	cbz	r0, 800dd66 <GUI_USAGE_BM_Create+0x4a>
 800dd3e:	f7fd fd9b 	bl	800b878 <GUI_ALLOC_LockH>
 800dd42:	4604      	mov	r4, r0
 800dd44:	4b0a      	ldr	r3, [pc, #40]	; (800dd70 <GUI_USAGE_BM_Create+0x54>)
 800dd46:	60a3      	str	r3, [r4, #8]
 800dd48:	a802      	add	r0, sp, #8
 800dd4a:	2301      	movs	r3, #1
 800dd4c:	f840 4d04 	str.w	r4, [r0, #-4]!
 800dd50:	f8a4 8004 	strh.w	r8, [r4, #4]
 800dd54:	f8a4 a000 	strh.w	sl, [r4]
 800dd58:	f8a4 9002 	strh.w	r9, [r4, #2]
 800dd5c:	80e7      	strh	r7, [r4, #6]
 800dd5e:	81a3      	strh	r3, [r4, #12]
 800dd60:	6126      	str	r6, [r4, #16]
 800dd62:	f7fd fd97 	bl	800b894 <GUI_ALLOC_UnlockH>
 800dd66:	4658      	mov	r0, fp
 800dd68:	b002      	add	sp, #8
 800dd6a:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 800dd6e:	bf00      	nop
 800dd70:	080124b4 	.word	0x080124b4

0800dd74 <GUI_USAGE_DecUseCnt>:
 800dd74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd76:	4605      	mov	r5, r0
 800dd78:	f7fd fd7e 	bl	800b878 <GUI_ALLOC_LockH>
 800dd7c:	4602      	mov	r2, r0
 800dd7e:	a802      	add	r0, sp, #8
 800dd80:	8994      	ldrh	r4, [r2, #12]
 800dd82:	f840 2d04 	str.w	r2, [r0, #-4]!
 800dd86:	3c01      	subs	r4, #1
 800dd88:	b2a4      	uxth	r4, r4
 800dd8a:	8194      	strh	r4, [r2, #12]
 800dd8c:	f7fd fd82 	bl	800b894 <GUI_ALLOC_UnlockH>
 800dd90:	b914      	cbnz	r4, 800dd98 <GUI_USAGE_DecUseCnt+0x24>
 800dd92:	4628      	mov	r0, r5
 800dd94:	f7fd fdaa 	bl	800b8ec <GUI_ALLOC_Free>
 800dd98:	b003      	add	sp, #12
 800dd9a:	bd30      	pop	{r4, r5, pc}

0800dd9c <GUI_USAGE_AddRect>:
 800dd9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dda0:	4605      	mov	r5, r0
 800dda2:	4688      	mov	r8, r1
 800dda4:	4617      	mov	r7, r2
 800dda6:	4699      	mov	r9, r3
 800dda8:	68a8      	ldr	r0, [r5, #8]
 800ddaa:	464b      	mov	r3, r9
 800ddac:	6846      	ldr	r6, [r0, #4]
 800ddae:	4641      	mov	r1, r8
 800ddb0:	4628      	mov	r0, r5
 800ddb2:	1c54      	adds	r4, r2, #1
 800ddb4:	47b0      	blx	r6
 800ddb6:	9b08      	ldr	r3, [sp, #32]
 800ddb8:	443b      	add	r3, r7
 800ddba:	42a3      	cmp	r3, r4
 800ddbc:	d001      	beq.n	800ddc2 <GUI_USAGE_AddRect+0x26>
 800ddbe:	4622      	mov	r2, r4
 800ddc0:	e7f2      	b.n	800dda8 <GUI_USAGE_AddRect+0xc>
 800ddc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800ddc8 <GUI_MEMDEV_ReduceYSize>:
 800ddc8:	b513      	push	{r0, r1, r4, lr}
 800ddca:	460c      	mov	r4, r1
 800ddcc:	b918      	cbnz	r0, 800ddd6 <GUI_MEMDEV_ReduceYSize+0xe>
 800ddce:	4b08      	ldr	r3, [pc, #32]	; (800ddf0 <GUI_MEMDEV_ReduceYSize+0x28>)
 800ddd0:	681b      	ldr	r3, [r3, #0]
 800ddd2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ddd4:	b150      	cbz	r0, 800ddec <GUI_MEMDEV_ReduceYSize+0x24>
 800ddd6:	f7fd fd4f 	bl	800b878 <GUI_ALLOC_LockH>
 800ddda:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ddde:	9001      	str	r0, [sp, #4]
 800dde0:	429c      	cmp	r4, r3
 800dde2:	bfb8      	it	lt
 800dde4:	8144      	strhlt	r4, [r0, #10]
 800dde6:	a801      	add	r0, sp, #4
 800dde8:	f7fd fd54 	bl	800b894 <GUI_ALLOC_UnlockH>
 800ddec:	b002      	add	sp, #8
 800ddee:	bd10      	pop	{r4, pc}
 800ddf0:	200000b8 	.word	0x200000b8

0800ddf4 <GUI_MEMDEV_Clear>:
 800ddf4:	b513      	push	{r0, r1, r4, lr}
 800ddf6:	b918      	cbnz	r0, 800de00 <GUI_MEMDEV_Clear+0xc>
 800ddf8:	4b0d      	ldr	r3, [pc, #52]	; (800de30 <GUI_MEMDEV_Clear+0x3c>)
 800ddfa:	681b      	ldr	r3, [r3, #0]
 800ddfc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ddfe:	b1a8      	cbz	r0, 800de2c <GUI_MEMDEV_Clear+0x38>
 800de00:	f7fd fd3a 	bl	800b878 <GUI_ALLOC_LockH>
 800de04:	ab02      	add	r3, sp, #8
 800de06:	6944      	ldr	r4, [r0, #20]
 800de08:	f843 0d08 	str.w	r0, [r3, #-8]!
 800de0c:	4668      	mov	r0, sp
 800de0e:	f7fd fd41 	bl	800b894 <GUI_ALLOC_UnlockH>
 800de12:	b15c      	cbz	r4, 800de2c <GUI_MEMDEV_Clear+0x38>
 800de14:	4620      	mov	r0, r4
 800de16:	f7fd fd2f 	bl	800b878 <GUI_ALLOC_LockH>
 800de1a:	ac02      	add	r4, sp, #8
 800de1c:	6883      	ldr	r3, [r0, #8]
 800de1e:	f844 0d04 	str.w	r0, [r4, #-4]!
 800de22:	689b      	ldr	r3, [r3, #8]
 800de24:	4798      	blx	r3
 800de26:	4620      	mov	r0, r4
 800de28:	f7fd fd34 	bl	800b894 <GUI_ALLOC_UnlockH>
 800de2c:	b002      	add	sp, #8
 800de2e:	bd10      	pop	{r4, pc}
 800de30:	200000b8 	.word	0x200000b8

0800de34 <_GetDevData>:
 800de34:	4802      	ldr	r0, [pc, #8]	; (800de40 <_GetDevData+0xc>)
 800de36:	2901      	cmp	r1, #1
 800de38:	bf18      	it	ne
 800de3a:	2000      	movne	r0, #0
 800de3c:	4770      	bx	lr
 800de3e:	bf00      	nop
 800de40:	0801250c 	.word	0x0801250c

0800de44 <_GetDevFunc>:
 800de44:	4802      	ldr	r0, [pc, #8]	; (800de50 <_GetDevFunc+0xc>)
 800de46:	2916      	cmp	r1, #22
 800de48:	bf18      	it	ne
 800de4a:	2000      	movne	r0, #0
 800de4c:	4770      	bx	lr
 800de4e:	bf00      	nop
 800de50:	0800d2b5 	.word	0x0800d2b5

0800de54 <_SetOrg>:
 800de54:	6800      	ldr	r0, [r0, #0]
 800de56:	b508      	push	{r3, lr}
 800de58:	b110      	cbz	r0, 800de60 <_SetOrg+0xc>
 800de5a:	68c3      	ldr	r3, [r0, #12]
 800de5c:	6a1b      	ldr	r3, [r3, #32]
 800de5e:	4798      	blx	r3
 800de60:	bd08      	pop	{r3, pc}

0800de62 <_GetRect>:
 800de62:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de64:	6880      	ldr	r0, [r0, #8]
 800de66:	460c      	mov	r4, r1
 800de68:	f7fd fd06 	bl	800b878 <GUI_ALLOC_LockH>
 800de6c:	4603      	mov	r3, r0
 800de6e:	a802      	add	r0, sp, #8
 800de70:	8899      	ldrh	r1, [r3, #4]
 800de72:	88da      	ldrh	r2, [r3, #6]
 800de74:	891d      	ldrh	r5, [r3, #8]
 800de76:	f840 3d04 	str.w	r3, [r0, #-4]!
 800de7a:	895b      	ldrh	r3, [r3, #10]
 800de7c:	8021      	strh	r1, [r4, #0]
 800de7e:	8062      	strh	r2, [r4, #2]
 800de80:	4429      	add	r1, r5
 800de82:	441a      	add	r2, r3
 800de84:	3901      	subs	r1, #1
 800de86:	3a01      	subs	r2, #1
 800de88:	80a1      	strh	r1, [r4, #4]
 800de8a:	80e2      	strh	r2, [r4, #6]
 800de8c:	f7fd fd02 	bl	800b894 <GUI_ALLOC_UnlockH>
 800de90:	b003      	add	sp, #12
 800de92:	bd30      	pop	{r4, r5, pc}

0800de94 <_XY2PTR>:
 800de94:	4b0e      	ldr	r3, [pc, #56]	; (800ded0 <_XY2PTR+0x3c>)
 800de96:	681b      	ldr	r3, [r3, #0]
 800de98:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800de9a:	4605      	mov	r5, r0
 800de9c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800de9e:	460e      	mov	r6, r1
 800dea0:	f7fd fcea 	bl	800b878 <GUI_ALLOC_LockH>
 800dea4:	4603      	mov	r3, r0
 800dea6:	a802      	add	r0, sp, #8
 800dea8:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800deac:	f840 3d04 	str.w	r3, [r0, #-4]!
 800deb0:	f103 0118 	add.w	r1, r3, #24
 800deb4:	1b36      	subs	r6, r6, r4
 800deb6:	68dc      	ldr	r4, [r3, #12]
 800deb8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800debc:	fb04 1406 	mla	r4, r4, r6, r1
 800dec0:	1aed      	subs	r5, r5, r3
 800dec2:	f7fd fce7 	bl	800b894 <GUI_ALLOC_UnlockH>
 800dec6:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800deca:	4620      	mov	r0, r4
 800decc:	b002      	add	sp, #8
 800dece:	bd70      	pop	{r4, r5, r6, pc}
 800ded0:	200000b8 	.word	0x200000b8

0800ded4 <_GetPixelIndex>:
 800ded4:	b508      	push	{r3, lr}
 800ded6:	4608      	mov	r0, r1
 800ded8:	4611      	mov	r1, r2
 800deda:	f7ff ffdb 	bl	800de94 <_XY2PTR>
 800dede:	8800      	ldrh	r0, [r0, #0]
 800dee0:	bd08      	pop	{r3, pc}
	...

0800dee4 <_XorPixel>:
 800dee4:	4b14      	ldr	r3, [pc, #80]	; (800df38 <_XorPixel+0x54>)
 800dee6:	681b      	ldr	r3, [r3, #0]
 800dee8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800deea:	4607      	mov	r7, r0
 800deec:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800deee:	4615      	mov	r5, r2
 800def0:	460e      	mov	r6, r1
 800def2:	f7fd fcc1 	bl	800b878 <GUI_ALLOC_LockH>
 800def6:	4629      	mov	r1, r5
 800def8:	9000      	str	r0, [sp, #0]
 800defa:	4630      	mov	r0, r6
 800defc:	f7ff ffca 	bl	800de94 <_XY2PTR>
 800df00:	693b      	ldr	r3, [r7, #16]
 800df02:	4604      	mov	r4, r0
 800df04:	689b      	ldr	r3, [r3, #8]
 800df06:	4798      	blx	r3
 800df08:	8823      	ldrh	r3, [r4, #0]
 800df0a:	4058      	eors	r0, r3
 800df0c:	9b00      	ldr	r3, [sp, #0]
 800df0e:	8020      	strh	r0, [r4, #0]
 800df10:	6958      	ldr	r0, [r3, #20]
 800df12:	b160      	cbz	r0, 800df2e <_XorPixel+0x4a>
 800df14:	f7fd fcb0 	bl	800b878 <GUI_ALLOC_LockH>
 800df18:	ac02      	add	r4, sp, #8
 800df1a:	6883      	ldr	r3, [r0, #8]
 800df1c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800df20:	681b      	ldr	r3, [r3, #0]
 800df22:	4631      	mov	r1, r6
 800df24:	462a      	mov	r2, r5
 800df26:	4798      	blx	r3
 800df28:	4620      	mov	r0, r4
 800df2a:	f7fd fcb3 	bl	800b894 <GUI_ALLOC_UnlockH>
 800df2e:	4668      	mov	r0, sp
 800df30:	f7fd fcb0 	bl	800b894 <GUI_ALLOC_UnlockH>
 800df34:	b003      	add	sp, #12
 800df36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df38:	200000b8 	.word	0x200000b8

0800df3c <_SetPixelIndex>:
 800df3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800df3e:	461c      	mov	r4, r3
 800df40:	4b10      	ldr	r3, [pc, #64]	; (800df84 <_SetPixelIndex+0x48>)
 800df42:	681b      	ldr	r3, [r3, #0]
 800df44:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800df46:	460e      	mov	r6, r1
 800df48:	4615      	mov	r5, r2
 800df4a:	f7fd fc95 	bl	800b878 <GUI_ALLOC_LockH>
 800df4e:	4629      	mov	r1, r5
 800df50:	9000      	str	r0, [sp, #0]
 800df52:	4630      	mov	r0, r6
 800df54:	f7ff ff9e 	bl	800de94 <_XY2PTR>
 800df58:	9b00      	ldr	r3, [sp, #0]
 800df5a:	8004      	strh	r4, [r0, #0]
 800df5c:	6958      	ldr	r0, [r3, #20]
 800df5e:	b160      	cbz	r0, 800df7a <_SetPixelIndex+0x3e>
 800df60:	f7fd fc8a 	bl	800b878 <GUI_ALLOC_LockH>
 800df64:	ac02      	add	r4, sp, #8
 800df66:	6883      	ldr	r3, [r0, #8]
 800df68:	f844 0d04 	str.w	r0, [r4, #-4]!
 800df6c:	681b      	ldr	r3, [r3, #0]
 800df6e:	4631      	mov	r1, r6
 800df70:	462a      	mov	r2, r5
 800df72:	4798      	blx	r3
 800df74:	4620      	mov	r0, r4
 800df76:	f7fd fc8d 	bl	800b894 <GUI_ALLOC_UnlockH>
 800df7a:	4668      	mov	r0, sp
 800df7c:	f7fd fc8a 	bl	800b894 <GUI_ALLOC_UnlockH>
 800df80:	b002      	add	sp, #8
 800df82:	bd70      	pop	{r4, r5, r6, pc}
 800df84:	200000b8 	.word	0x200000b8

0800df88 <_DrawVLine>:
 800df88:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800df8c:	4d2c      	ldr	r5, [pc, #176]	; (800e040 <_DrawVLine+0xb8>)
 800df8e:	461e      	mov	r6, r3
 800df90:	682b      	ldr	r3, [r5, #0]
 800df92:	4681      	mov	r9, r0
 800df94:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800df96:	460f      	mov	r7, r1
 800df98:	4614      	mov	r4, r2
 800df9a:	f7fd fc6d 	bl	800b878 <GUI_ALLOC_LockH>
 800df9e:	9000      	str	r0, [sp, #0]
 800dfa0:	6940      	ldr	r0, [r0, #20]
 800dfa2:	46aa      	mov	sl, r5
 800dfa4:	b108      	cbz	r0, 800dfaa <_DrawVLine+0x22>
 800dfa6:	f7fd fc67 	bl	800b878 <GUI_ALLOC_LockH>
 800dfaa:	9001      	str	r0, [sp, #4]
 800dfac:	4621      	mov	r1, r4
 800dfae:	4638      	mov	r0, r7
 800dfb0:	f7ff ff70 	bl	800de94 <_XY2PTR>
 800dfb4:	9b00      	ldr	r3, [sp, #0]
 800dfb6:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800dfba:	f8da 3000 	ldr.w	r3, [sl]
 800dfbe:	7c1a      	ldrb	r2, [r3, #16]
 800dfc0:	07d2      	lsls	r2, r2, #31
 800dfc2:	4605      	mov	r5, r0
 800dfc4:	d51f      	bpl.n	800e006 <_DrawVLine+0x7e>
 800dfc6:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800dfca:	689b      	ldr	r3, [r3, #8]
 800dfcc:	4798      	blx	r3
 800dfce:	fa1f f880 	uxth.w	r8, r0
 800dfd2:	9801      	ldr	r0, [sp, #4]
 800dfd4:	b120      	cbz	r0, 800dfe0 <_DrawVLine+0x58>
 800dfd6:	6883      	ldr	r3, [r0, #8]
 800dfd8:	4639      	mov	r1, r7
 800dfda:	681b      	ldr	r3, [r3, #0]
 800dfdc:	4622      	mov	r2, r4
 800dfde:	4798      	blx	r3
 800dfe0:	882b      	ldrh	r3, [r5, #0]
 800dfe2:	ea88 0303 	eor.w	r3, r8, r3
 800dfe6:	802b      	strh	r3, [r5, #0]
 800dfe8:	9b00      	ldr	r3, [sp, #0]
 800dfea:	3401      	adds	r4, #1
 800dfec:	68db      	ldr	r3, [r3, #12]
 800dfee:	42b4      	cmp	r4, r6
 800dff0:	441d      	add	r5, r3
 800dff2:	ddee      	ble.n	800dfd2 <_DrawVLine+0x4a>
 800dff4:	4668      	mov	r0, sp
 800dff6:	f7fd fc4d 	bl	800b894 <GUI_ALLOC_UnlockH>
 800dffa:	9b01      	ldr	r3, [sp, #4]
 800dffc:	b1eb      	cbz	r3, 800e03a <_DrawVLine+0xb2>
 800dffe:	a801      	add	r0, sp, #4
 800e000:	f7fd fc48 	bl	800b894 <GUI_ALLOC_UnlockH>
 800e004:	e019      	b.n	800e03a <_DrawVLine+0xb2>
 800e006:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e008:	f8d3 9000 	ldr.w	r9, [r3]
 800e00c:	9b01      	ldr	r3, [sp, #4]
 800e00e:	b163      	cbz	r3, 800e02a <_DrawVLine+0xa2>
 800e010:	9801      	ldr	r0, [sp, #4]
 800e012:	6883      	ldr	r3, [r0, #8]
 800e014:	4622      	mov	r2, r4
 800e016:	681b      	ldr	r3, [r3, #0]
 800e018:	4639      	mov	r1, r7
 800e01a:	3401      	adds	r4, #1
 800e01c:	4798      	blx	r3
 800e01e:	42b4      	cmp	r4, r6
 800e020:	f8a5 9000 	strh.w	r9, [r5]
 800e024:	4445      	add	r5, r8
 800e026:	ddf3      	ble.n	800e010 <_DrawVLine+0x88>
 800e028:	e7e4      	b.n	800dff4 <_DrawVLine+0x6c>
 800e02a:	1b34      	subs	r4, r6, r4
 800e02c:	3401      	adds	r4, #1
 800e02e:	3c01      	subs	r4, #1
 800e030:	f8a5 9000 	strh.w	r9, [r5]
 800e034:	4445      	add	r5, r8
 800e036:	d1fa      	bne.n	800e02e <_DrawVLine+0xa6>
 800e038:	e7dc      	b.n	800dff4 <_DrawVLine+0x6c>
 800e03a:	b002      	add	sp, #8
 800e03c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e040:	200000b8 	.word	0x200000b8

0800e044 <_FillRect>:
 800e044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e048:	4f2a      	ldr	r7, [pc, #168]	; (800e0f4 <_FillRect+0xb0>)
 800e04a:	4614      	mov	r4, r2
 800e04c:	683a      	ldr	r2, [r7, #0]
 800e04e:	4698      	mov	r8, r3
 800e050:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800e052:	b087      	sub	sp, #28
 800e054:	681b      	ldr	r3, [r3, #0]
 800e056:	9302      	str	r3, [sp, #8]
 800e058:	4682      	mov	sl, r0
 800e05a:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800e05c:	460e      	mov	r6, r1
 800e05e:	f7fd fc0b 	bl	800b878 <GUI_ALLOC_LockH>
 800e062:	4621      	mov	r1, r4
 800e064:	9004      	str	r0, [sp, #16]
 800e066:	4630      	mov	r0, r6
 800e068:	f7ff ff14 	bl	800de94 <_XY2PTR>
 800e06c:	9a04      	ldr	r2, [sp, #16]
 800e06e:	4605      	mov	r5, r0
 800e070:	6950      	ldr	r0, [r2, #20]
 800e072:	68d3      	ldr	r3, [r2, #12]
 800e074:	9303      	str	r3, [sp, #12]
 800e076:	ebc6 0908 	rsb	r9, r6, r8
 800e07a:	f109 0801 	add.w	r8, r9, #1
 800e07e:	46bb      	mov	fp, r7
 800e080:	b180      	cbz	r0, 800e0a4 <_FillRect+0x60>
 800e082:	f7fd fbf9 	bl	800b878 <GUI_ALLOC_LockH>
 800e086:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e088:	af06      	add	r7, sp, #24
 800e08a:	1b13      	subs	r3, r2, r4
 800e08c:	f847 0d04 	str.w	r0, [r7, #-4]!
 800e090:	3301      	adds	r3, #1
 800e092:	9300      	str	r3, [sp, #0]
 800e094:	4631      	mov	r1, r6
 800e096:	4622      	mov	r2, r4
 800e098:	4643      	mov	r3, r8
 800e09a:	f7ff fe7f 	bl	800dd9c <GUI_USAGE_AddRect>
 800e09e:	4638      	mov	r0, r7
 800e0a0:	f7fd fbf8 	bl	800b894 <GUI_ALLOC_UnlockH>
 800e0a4:	ea4f 0649 	mov.w	r6, r9, lsl #1
 800e0a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e0aa:	429c      	cmp	r4, r3
 800e0ac:	dc1c      	bgt.n	800e0e8 <_FillRect+0xa4>
 800e0ae:	f8db 3000 	ldr.w	r3, [fp]
 800e0b2:	7c1b      	ldrb	r3, [r3, #16]
 800e0b4:	07db      	lsls	r3, r3, #31
 800e0b6:	d50d      	bpl.n	800e0d4 <_FillRect+0x90>
 800e0b8:	f8da 3010 	ldr.w	r3, [sl, #16]
 800e0bc:	689b      	ldr	r3, [r3, #8]
 800e0be:	4798      	blx	r3
 800e0c0:	19aa      	adds	r2, r5, r6
 800e0c2:	b280      	uxth	r0, r0
 800e0c4:	1eab      	subs	r3, r5, #2
 800e0c6:	8859      	ldrh	r1, [r3, #2]
 800e0c8:	4041      	eors	r1, r0
 800e0ca:	f823 1f02 	strh.w	r1, [r3, #2]!
 800e0ce:	4293      	cmp	r3, r2
 800e0d0:	d1f9      	bne.n	800e0c6 <_FillRect+0x82>
 800e0d2:	e005      	b.n	800e0e0 <_FillRect+0x9c>
 800e0d4:	9b02      	ldr	r3, [sp, #8]
 800e0d6:	4628      	mov	r0, r5
 800e0d8:	b299      	uxth	r1, r3
 800e0da:	4642      	mov	r2, r8
 800e0dc:	f7fb f8c9 	bl	8009272 <GUI__memset16>
 800e0e0:	9a03      	ldr	r2, [sp, #12]
 800e0e2:	3401      	adds	r4, #1
 800e0e4:	4415      	add	r5, r2
 800e0e6:	e7df      	b.n	800e0a8 <_FillRect+0x64>
 800e0e8:	a804      	add	r0, sp, #16
 800e0ea:	f7fd fbd3 	bl	800b894 <GUI_ALLOC_UnlockH>
 800e0ee:	b007      	add	sp, #28
 800e0f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0f4:	200000b8 	.word	0x200000b8

0800e0f8 <_DrawHLine>:
 800e0f8:	b507      	push	{r0, r1, r2, lr}
 800e0fa:	9200      	str	r2, [sp, #0]
 800e0fc:	f7ff ffa2 	bl	800e044 <_FillRect>
 800e100:	b003      	add	sp, #12
 800e102:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800e108 <_DrawBitmap>:
 800e108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e10c:	4c8b      	ldr	r4, [pc, #556]	; (800e33c <_DrawBitmap+0x234>)
 800e10e:	b093      	sub	sp, #76	; 0x4c
 800e110:	469b      	mov	fp, r3
 800e112:	6823      	ldr	r3, [r4, #0]
 800e114:	900d      	str	r0, [sp, #52]	; 0x34
 800e116:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e118:	9207      	str	r2, [sp, #28]
 800e11a:	460d      	mov	r5, r1
 800e11c:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 800e120:	f7fd fbaa 	bl	800b878 <GUI_ALLOC_LockH>
 800e124:	9010      	str	r0, [sp, #64]	; 0x40
 800e126:	6940      	ldr	r0, [r0, #20]
 800e128:	b108      	cbz	r0, 800e12e <_DrawBitmap+0x26>
 800e12a:	f7fd fba5 	bl	800b878 <GUI_ALLOC_LockH>
 800e12e:	9011      	str	r0, [sp, #68]	; 0x44
 800e130:	a812      	add	r0, sp, #72	; 0x48
 800e132:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800e136:	68db      	ldr	r3, [r3, #12]
 800e138:	9308      	str	r3, [sp, #32]
 800e13a:	f7fd fbab 	bl	800b894 <GUI_ALLOC_UnlockH>
 800e13e:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e140:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e142:	442e      	add	r6, r5
 800e144:	9604      	str	r6, [sp, #16]
 800e146:	b150      	cbz	r0, 800e15e <_DrawBitmap+0x56>
 800e148:	6823      	ldr	r3, [r4, #0]
 800e14a:	7c1b      	ldrb	r3, [r3, #16]
 800e14c:	0799      	lsls	r1, r3, #30
 800e14e:	d106      	bne.n	800e15e <_DrawBitmap+0x56>
 800e150:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e152:	9700      	str	r7, [sp, #0]
 800e154:	4631      	mov	r1, r6
 800e156:	9a07      	ldr	r2, [sp, #28]
 800e158:	465b      	mov	r3, fp
 800e15a:	f7ff fe1f 	bl	800dd9c <GUI_USAGE_AddRect>
 800e15e:	9804      	ldr	r0, [sp, #16]
 800e160:	9907      	ldr	r1, [sp, #28]
 800e162:	f7ff fe97 	bl	800de94 <_XY2PTR>
 800e166:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e168:	2e10      	cmp	r6, #16
 800e16a:	4604      	mov	r4, r0
 800e16c:	d13a      	bne.n	800e1e4 <_DrawBitmap+0xdc>
 800e16e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e170:	b11b      	cbz	r3, 800e17a <_DrawBitmap+0x72>
 800e172:	ea4f 064b 	mov.w	r6, fp, lsl #1
 800e176:	2500      	movs	r5, #0
 800e178:	e014      	b.n	800e1a4 <_DrawBitmap+0x9c>
 800e17a:	4b71      	ldr	r3, [pc, #452]	; (800e340 <_DrawBitmap+0x238>)
 800e17c:	681d      	ldr	r5, [r3, #0]
 800e17e:	2d00      	cmp	r5, #0
 800e180:	d0f7      	beq.n	800e172 <_DrawBitmap+0x6a>
 800e182:	9e08      	ldr	r6, [sp, #32]
 800e184:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e186:	9600      	str	r6, [sp, #0]
 800e188:	9701      	str	r7, [sp, #4]
 800e18a:	4651      	mov	r1, sl
 800e18c:	465a      	mov	r2, fp
 800e18e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e190:	47a8      	blx	r5
 800e192:	e349      	b.n	800e828 <_DrawBitmap+0x720>
 800e194:	f1ba 0f00 	cmp.w	sl, #0
 800e198:	d10a      	bne.n	800e1b0 <_DrawBitmap+0xa8>
 800e19a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e19c:	44ba      	add	sl, r7
 800e19e:	9f08      	ldr	r7, [sp, #32]
 800e1a0:	3501      	adds	r5, #1
 800e1a2:	443c      	add	r4, r7
 800e1a4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e1a6:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 800e1aa:	42bd      	cmp	r5, r7
 800e1ac:	dbf2      	blt.n	800e194 <_DrawBitmap+0x8c>
 800e1ae:	e014      	b.n	800e1da <_DrawBitmap+0xd2>
 800e1b0:	2c00      	cmp	r4, #0
 800e1b2:	d0f2      	beq.n	800e19a <_DrawBitmap+0x92>
 800e1b4:	4b63      	ldr	r3, [pc, #396]	; (800e344 <_DrawBitmap+0x23c>)
 800e1b6:	4620      	mov	r0, r4
 800e1b8:	681b      	ldr	r3, [r3, #0]
 800e1ba:	4651      	mov	r1, sl
 800e1bc:	4632      	mov	r2, r6
 800e1be:	4798      	blx	r3
 800e1c0:	f1b8 0f00 	cmp.w	r8, #0
 800e1c4:	d0e9      	beq.n	800e19a <_DrawBitmap+0x92>
 800e1c6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e1ca:	9a07      	ldr	r2, [sp, #28]
 800e1cc:	685f      	ldr	r7, [r3, #4]
 800e1ce:	9904      	ldr	r1, [sp, #16]
 800e1d0:	4640      	mov	r0, r8
 800e1d2:	442a      	add	r2, r5
 800e1d4:	465b      	mov	r3, fp
 800e1d6:	47b8      	blx	r7
 800e1d8:	e7df      	b.n	800e19a <_DrawBitmap+0x92>
 800e1da:	f1b8 0f00 	cmp.w	r8, #0
 800e1de:	f040 8320 	bne.w	800e822 <_DrawBitmap+0x71a>
 800e1e2:	e321      	b.n	800e828 <_DrawBitmap+0x720>
 800e1e4:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e1e6:	2e17      	cmp	r6, #23
 800e1e8:	dd38      	ble.n	800e25c <_DrawBitmap+0x154>
 800e1ea:	2600      	movs	r6, #0
 800e1ec:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e1ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800e1f0:	42be      	cmp	r6, r7
 800e1f2:	f280 809e 	bge.w	800e332 <_DrawBitmap+0x22a>
 800e1f6:	9f07      	ldr	r7, [sp, #28]
 800e1f8:	4437      	add	r7, r6
 800e1fa:	f1ba 0f00 	cmp.w	sl, #0
 800e1fe:	d027      	beq.n	800e250 <_DrawBitmap+0x148>
 800e200:	b334      	cbz	r4, 800e250 <_DrawBitmap+0x148>
 800e202:	b13d      	cbz	r5, 800e214 <_DrawBitmap+0x10c>
 800e204:	68ab      	ldr	r3, [r5, #8]
 800e206:	9904      	ldr	r1, [sp, #16]
 800e208:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800e20c:	4628      	mov	r0, r5
 800e20e:	463a      	mov	r2, r7
 800e210:	465b      	mov	r3, fp
 800e212:	47e0      	blx	ip
 800e214:	1ea3      	subs	r3, r4, #2
 800e216:	f1aa 0904 	sub.w	r9, sl, #4
 800e21a:	9303      	str	r3, [sp, #12]
 800e21c:	46d8      	mov	r8, fp
 800e21e:	9b04      	ldr	r3, [sp, #16]
 800e220:	980d      	ldr	r0, [sp, #52]	; 0x34
 800e222:	445b      	add	r3, fp
 800e224:	ebc8 0103 	rsb	r1, r8, r3
 800e228:	6903      	ldr	r3, [r0, #16]
 800e22a:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800e22e:	681b      	ldr	r3, [r3, #0]
 800e230:	9102      	str	r1, [sp, #8]
 800e232:	4798      	blx	r3
 800e234:	9b03      	ldr	r3, [sp, #12]
 800e236:	9902      	ldr	r1, [sp, #8]
 800e238:	f823 0f02 	strh.w	r0, [r3, #2]!
 800e23c:	9303      	str	r3, [sp, #12]
 800e23e:	b125      	cbz	r5, 800e24a <_DrawBitmap+0x142>
 800e240:	68ab      	ldr	r3, [r5, #8]
 800e242:	4628      	mov	r0, r5
 800e244:	681b      	ldr	r3, [r3, #0]
 800e246:	463a      	mov	r2, r7
 800e248:	4798      	blx	r3
 800e24a:	f1b8 0801 	subs.w	r8, r8, #1
 800e24e:	d1e6      	bne.n	800e21e <_DrawBitmap+0x116>
 800e250:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e252:	44ba      	add	sl, r7
 800e254:	9f08      	ldr	r7, [sp, #32]
 800e256:	3601      	adds	r6, #1
 800e258:	443c      	add	r4, r7
 800e25a:	e7c7      	b.n	800e1ec <_DrawBitmap+0xe4>
 800e25c:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e25e:	2e08      	cmp	r6, #8
 800e260:	f100 0402 	add.w	r4, r0, #2
 800e264:	d170      	bne.n	800e348 <_DrawBitmap+0x240>
 800e266:	9e07      	ldr	r6, [sp, #28]
 800e268:	9f07      	ldr	r7, [sp, #28]
 800e26a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800e26c:	1bf3      	subs	r3, r6, r7
 800e26e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e270:	42bb      	cmp	r3, r7
 800e272:	f1a4 0002 	sub.w	r0, r4, #2
 800e276:	da5c      	bge.n	800e332 <_DrawBitmap+0x22a>
 800e278:	4b30      	ldr	r3, [pc, #192]	; (800e33c <_DrawBitmap+0x234>)
 800e27a:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e27c:	681b      	ldr	r3, [r3, #0]
 800e27e:	7c1b      	ldrb	r3, [r3, #16]
 800e280:	b367      	cbz	r7, 800e2dc <_DrawBitmap+0x1d4>
 800e282:	f013 0303 	ands.w	r3, r3, #3
 800e286:	d004      	beq.n	800e292 <_DrawBitmap+0x18a>
 800e288:	2b02      	cmp	r3, #2
 800e28a:	d14c      	bne.n	800e326 <_DrawBitmap+0x21e>
 800e28c:	46a0      	mov	r8, r4
 800e28e:	9f04      	ldr	r7, [sp, #16]
 800e290:	e01d      	b.n	800e2ce <_DrawBitmap+0x1c6>
 800e292:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800e296:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e298:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 800e29c:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800e2a0:	3301      	adds	r3, #1
 800e2a2:	455b      	cmp	r3, fp
 800e2a4:	d1f5      	bne.n	800e292 <_DrawBitmap+0x18a>
 800e2a6:	e03e      	b.n	800e326 <_DrawBitmap+0x21e>
 800e2a8:	9921      	ldr	r1, [sp, #132]	; 0x84
 800e2aa:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800e2ae:	f828 3c02 	strh.w	r3, [r8, #-2]
 800e2b2:	b12d      	cbz	r5, 800e2c0 <_DrawBitmap+0x1b8>
 800e2b4:	68ab      	ldr	r3, [r5, #8]
 800e2b6:	4628      	mov	r0, r5
 800e2b8:	681b      	ldr	r3, [r3, #0]
 800e2ba:	4639      	mov	r1, r7
 800e2bc:	4632      	mov	r2, r6
 800e2be:	4798      	blx	r3
 800e2c0:	9b04      	ldr	r3, [sp, #16]
 800e2c2:	3701      	adds	r7, #1
 800e2c4:	445b      	add	r3, fp
 800e2c6:	42bb      	cmp	r3, r7
 800e2c8:	f108 0802 	add.w	r8, r8, #2
 800e2cc:	d02b      	beq.n	800e326 <_DrawBitmap+0x21e>
 800e2ce:	9804      	ldr	r0, [sp, #16]
 800e2d0:	ebc0 030a 	rsb	r3, r0, sl
 800e2d4:	5ddb      	ldrb	r3, [r3, r7]
 800e2d6:	2b00      	cmp	r3, #0
 800e2d8:	d0f2      	beq.n	800e2c0 <_DrawBitmap+0x1b8>
 800e2da:	e7e5      	b.n	800e2a8 <_DrawBitmap+0x1a0>
 800e2dc:	f013 0303 	ands.w	r3, r3, #3
 800e2e0:	d004      	beq.n	800e2ec <_DrawBitmap+0x1e4>
 800e2e2:	2b02      	cmp	r3, #2
 800e2e4:	d11f      	bne.n	800e326 <_DrawBitmap+0x21e>
 800e2e6:	46a0      	mov	r8, r4
 800e2e8:	9f04      	ldr	r7, [sp, #16]
 800e2ea:	e015      	b.n	800e318 <_DrawBitmap+0x210>
 800e2ec:	4b15      	ldr	r3, [pc, #84]	; (800e344 <_DrawBitmap+0x23c>)
 800e2ee:	4651      	mov	r1, sl
 800e2f0:	681b      	ldr	r3, [r3, #0]
 800e2f2:	465a      	mov	r2, fp
 800e2f4:	4798      	blx	r3
 800e2f6:	e016      	b.n	800e326 <_DrawBitmap+0x21e>
 800e2f8:	f828 3c02 	strh.w	r3, [r8, #-2]
 800e2fc:	b12d      	cbz	r5, 800e30a <_DrawBitmap+0x202>
 800e2fe:	68ab      	ldr	r3, [r5, #8]
 800e300:	4628      	mov	r0, r5
 800e302:	681b      	ldr	r3, [r3, #0]
 800e304:	4639      	mov	r1, r7
 800e306:	4632      	mov	r2, r6
 800e308:	4798      	blx	r3
 800e30a:	9b04      	ldr	r3, [sp, #16]
 800e30c:	3701      	adds	r7, #1
 800e30e:	445b      	add	r3, fp
 800e310:	42bb      	cmp	r3, r7
 800e312:	f108 0802 	add.w	r8, r8, #2
 800e316:	d006      	beq.n	800e326 <_DrawBitmap+0x21e>
 800e318:	9a04      	ldr	r2, [sp, #16]
 800e31a:	ebc2 030a 	rsb	r3, r2, sl
 800e31e:	5ddb      	ldrb	r3, [r3, r7]
 800e320:	2b00      	cmp	r3, #0
 800e322:	d0f2      	beq.n	800e30a <_DrawBitmap+0x202>
 800e324:	e7e8      	b.n	800e2f8 <_DrawBitmap+0x1f0>
 800e326:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e328:	44ba      	add	sl, r7
 800e32a:	9f08      	ldr	r7, [sp, #32]
 800e32c:	3601      	adds	r6, #1
 800e32e:	443c      	add	r4, r7
 800e330:	e79a      	b.n	800e268 <_DrawBitmap+0x160>
 800e332:	2d00      	cmp	r5, #0
 800e334:	f040 8275 	bne.w	800e822 <_DrawBitmap+0x71a>
 800e338:	e276      	b.n	800e828 <_DrawBitmap+0x720>
 800e33a:	bf00      	nop
 800e33c:	200000b8 	.word	0x200000b8
 800e340:	20002c44 	.word	0x20002c44
 800e344:	200000a8 	.word	0x200000a8
 800e348:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800e34a:	4bab      	ldr	r3, [pc, #684]	; (800e5f8 <_DrawBitmap+0x4f0>)
 800e34c:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800e34e:	9409      	str	r4, [sp, #36]	; 0x24
 800e350:	2e00      	cmp	r6, #0
 800e352:	bf08      	it	eq
 800e354:	461e      	moveq	r6, r3
 800e356:	9621      	str	r6, [sp, #132]	; 0x84
 800e358:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e35a:	0076      	lsls	r6, r6, #1
 800e35c:	960e      	str	r6, [sp, #56]	; 0x38
 800e35e:	00bf      	lsls	r7, r7, #2
 800e360:	9e07      	ldr	r6, [sp, #28]
 800e362:	970f      	str	r7, [sp, #60]	; 0x3c
 800e364:	9605      	str	r6, [sp, #20]
 800e366:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e368:	9e05      	ldr	r6, [sp, #20]
 800e36a:	9f07      	ldr	r7, [sp, #28]
 800e36c:	1e9c      	subs	r4, r3, #2
 800e36e:	1bf3      	subs	r3, r6, r7
 800e370:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800e372:	42b3      	cmp	r3, r6
 800e374:	f280 8253 	bge.w	800e81e <_DrawBitmap+0x716>
 800e378:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800e37a:	2f02      	cmp	r7, #2
 800e37c:	f000 80d9 	beq.w	800e532 <_DrawBitmap+0x42a>
 800e380:	2f04      	cmp	r7, #4
 800e382:	f000 8178 	beq.w	800e676 <_DrawBitmap+0x56e>
 800e386:	2f01      	cmp	r7, #1
 800e388:	f040 823f 	bne.w	800e80a <_DrawBitmap+0x702>
 800e38c:	f8df 9270 	ldr.w	r9, [pc, #624]	; 800e600 <_DrawBitmap+0x4f8>
 800e390:	f8d9 3000 	ldr.w	r3, [r9]
 800e394:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e396:	f7fd fa6f 	bl	800b878 <GUI_ALLOC_LockH>
 800e39a:	f89a 3000 	ldrb.w	r3, [sl]
 800e39e:	4a97      	ldr	r2, [pc, #604]	; (800e5fc <_DrawBitmap+0x4f4>)
 800e3a0:	9010      	str	r0, [sp, #64]	; 0x40
 800e3a2:	5cd5      	ldrb	r5, [r2, r3]
 800e3a4:	f8d9 3000 	ldr.w	r3, [r9]
 800e3a8:	9820      	ldr	r0, [sp, #128]	; 0x80
 800e3aa:	7c1b      	ldrb	r3, [r3, #16]
 800e3ac:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800e3ae:	f003 0303 	and.w	r3, r3, #3
 800e3b2:	2b02      	cmp	r3, #2
 800e3b4:	465e      	mov	r6, fp
 800e3b6:	f1c0 0808 	rsb	r8, r0, #8
 800e3ba:	fa45 f500 	asr.w	r5, r5, r0
 800e3be:	d022      	beq.n	800e406 <_DrawBitmap+0x2fe>
 800e3c0:	2b03      	cmp	r3, #3
 800e3c2:	d062      	beq.n	800e48a <_DrawBitmap+0x382>
 800e3c4:	2b01      	cmp	r3, #1
 800e3c6:	d060      	beq.n	800e48a <_DrawBitmap+0x382>
 800e3c8:	4652      	mov	r2, sl
 800e3ca:	4546      	cmp	r6, r8
 800e3cc:	bf38      	it	cc
 800e3ce:	46b0      	movcc	r8, r6
 800e3d0:	ebc8 0606 	rsb	r6, r8, r6
 800e3d4:	4643      	mov	r3, r8
 800e3d6:	4621      	mov	r1, r4
 800e3d8:	f005 0001 	and.w	r0, r5, #1
 800e3dc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e3de:	3b01      	subs	r3, #1
 800e3e0:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800e3e4:	f821 0b02 	strh.w	r0, [r1], #2
 800e3e8:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e3ec:	d1f4      	bne.n	800e3d8 <_DrawBitmap+0x2d0>
 800e3ee:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e3f2:	2e00      	cmp	r6, #0
 800e3f4:	f000 8099 	beq.w	800e52a <_DrawBitmap+0x422>
 800e3f8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800e3fc:	497f      	ldr	r1, [pc, #508]	; (800e5fc <_DrawBitmap+0x4f4>)
 800e3fe:	f04f 0808 	mov.w	r8, #8
 800e402:	5ccd      	ldrb	r5, [r1, r3]
 800e404:	e7e1      	b.n	800e3ca <_DrawBitmap+0x2c2>
 800e406:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e408:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e40c:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 800e410:	f8cd a018 	str.w	sl, [sp, #24]
 800e414:	4546      	cmp	r6, r8
 800e416:	bf38      	it	cc
 800e418:	46b0      	movcc	r8, r6
 800e41a:	ebc8 0606 	rsb	r6, r8, r6
 800e41e:	b32f      	cbz	r7, 800e46c <_DrawBitmap+0x364>
 800e420:	b91d      	cbnz	r5, 800e42a <_DrawBitmap+0x322>
 800e422:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e426:	44c1      	add	r9, r8
 800e428:	e024      	b.n	800e474 <_DrawBitmap+0x36c>
 800e42a:	07ea      	lsls	r2, r5, #31
 800e42c:	d50b      	bpl.n	800e446 <_DrawBitmap+0x33e>
 800e42e:	68bb      	ldr	r3, [r7, #8]
 800e430:	9a05      	ldr	r2, [sp, #20]
 800e432:	681b      	ldr	r3, [r3, #0]
 800e434:	f8cd c008 	str.w	ip, [sp, #8]
 800e438:	4638      	mov	r0, r7
 800e43a:	4649      	mov	r1, r9
 800e43c:	4798      	blx	r3
 800e43e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e442:	f8a4 c000 	strh.w	ip, [r4]
 800e446:	f1b8 0801 	subs.w	r8, r8, #1
 800e44a:	f109 0901 	add.w	r9, r9, #1
 800e44e:	f104 0402 	add.w	r4, r4, #2
 800e452:	d00f      	beq.n	800e474 <_DrawBitmap+0x36c>
 800e454:	086d      	lsrs	r5, r5, #1
 800e456:	e7e3      	b.n	800e420 <_DrawBitmap+0x318>
 800e458:	07eb      	lsls	r3, r5, #31
 800e45a:	bf48      	it	mi
 800e45c:	f8a4 c000 	strhmi.w	ip, [r4]
 800e460:	f1b8 0801 	subs.w	r8, r8, #1
 800e464:	f104 0402 	add.w	r4, r4, #2
 800e468:	d004      	beq.n	800e474 <_DrawBitmap+0x36c>
 800e46a:	086d      	lsrs	r5, r5, #1
 800e46c:	2d00      	cmp	r5, #0
 800e46e:	d1f3      	bne.n	800e458 <_DrawBitmap+0x350>
 800e470:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e474:	2e00      	cmp	r6, #0
 800e476:	d058      	beq.n	800e52a <_DrawBitmap+0x422>
 800e478:	9906      	ldr	r1, [sp, #24]
 800e47a:	4a60      	ldr	r2, [pc, #384]	; (800e5fc <_DrawBitmap+0x4f4>)
 800e47c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800e480:	9106      	str	r1, [sp, #24]
 800e482:	5cd5      	ldrb	r5, [r2, r3]
 800e484:	f04f 0808 	mov.w	r8, #8
 800e488:	e7c4      	b.n	800e414 <_DrawBitmap+0x30c>
 800e48a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e48c:	6913      	ldr	r3, [r2, #16]
 800e48e:	689b      	ldr	r3, [r3, #8]
 800e490:	4798      	blx	r3
 800e492:	9b04      	ldr	r3, [sp, #16]
 800e494:	930b      	str	r3, [sp, #44]	; 0x2c
 800e496:	b280      	uxth	r0, r0
 800e498:	900a      	str	r0, [sp, #40]	; 0x28
 800e49a:	f10a 0901 	add.w	r9, sl, #1
 800e49e:	4546      	cmp	r6, r8
 800e4a0:	bf38      	it	cc
 800e4a2:	46b0      	movcc	r8, r6
 800e4a4:	ebc8 0606 	rsb	r6, r8, r6
 800e4a8:	1ca3      	adds	r3, r4, #2
 800e4aa:	b31f      	cbz	r7, 800e4f4 <_DrawBitmap+0x3ec>
 800e4ac:	f8cd 8018 	str.w	r8, [sp, #24]
 800e4b0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e4b2:	9a06      	ldr	r2, [sp, #24]
 800e4b4:	4440      	add	r0, r8
 800e4b6:	900c      	str	r0, [sp, #48]	; 0x30
 800e4b8:	1a81      	subs	r1, r0, r2
 800e4ba:	07e8      	lsls	r0, r5, #31
 800e4bc:	d50d      	bpl.n	800e4da <_DrawBitmap+0x3d2>
 800e4be:	68ba      	ldr	r2, [r7, #8]
 800e4c0:	4638      	mov	r0, r7
 800e4c2:	f8d2 c000 	ldr.w	ip, [r2]
 800e4c6:	9a05      	ldr	r2, [sp, #20]
 800e4c8:	9302      	str	r3, [sp, #8]
 800e4ca:	47e0      	blx	ip
 800e4cc:	9b02      	ldr	r3, [sp, #8]
 800e4ce:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e4d0:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 800e4d4:	4042      	eors	r2, r0
 800e4d6:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e4da:	9906      	ldr	r1, [sp, #24]
 800e4dc:	3901      	subs	r1, #1
 800e4de:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e4e2:	f103 0302 	add.w	r3, r3, #2
 800e4e6:	9106      	str	r1, [sp, #24]
 800e4e8:	d1e2      	bne.n	800e4b0 <_DrawBitmap+0x3a8>
 800e4ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e4ec:	930b      	str	r3, [sp, #44]	; 0x2c
 800e4ee:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e4f2:	e010      	b.n	800e516 <_DrawBitmap+0x40e>
 800e4f4:	4642      	mov	r2, r8
 800e4f6:	07e9      	lsls	r1, r5, #31
 800e4f8:	d505      	bpl.n	800e506 <_DrawBitmap+0x3fe>
 800e4fa:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 800e4fe:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e500:	4041      	eors	r1, r0
 800e502:	f823 1c02 	strh.w	r1, [r3, #-2]
 800e506:	3a01      	subs	r2, #1
 800e508:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e50c:	f103 0302 	add.w	r3, r3, #2
 800e510:	d1f1      	bne.n	800e4f6 <_DrawBitmap+0x3ee>
 800e512:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e516:	b146      	cbz	r6, 800e52a <_DrawBitmap+0x422>
 800e518:	f899 3000 	ldrb.w	r3, [r9]
 800e51c:	4a37      	ldr	r2, [pc, #220]	; (800e5fc <_DrawBitmap+0x4f4>)
 800e51e:	f109 0901 	add.w	r9, r9, #1
 800e522:	5cd5      	ldrb	r5, [r2, r3]
 800e524:	f04f 0808 	mov.w	r8, #8
 800e528:	e7b9      	b.n	800e49e <_DrawBitmap+0x396>
 800e52a:	a810      	add	r0, sp, #64	; 0x40
 800e52c:	f7fd f9b2 	bl	800b894 <GUI_ALLOC_UnlockH>
 800e530:	e16b      	b.n	800e80a <_DrawBitmap+0x702>
 800e532:	4b33      	ldr	r3, [pc, #204]	; (800e600 <_DrawBitmap+0x4f8>)
 800e534:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e536:	681b      	ldr	r3, [r3, #0]
 800e538:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800e53a:	7c1b      	ldrb	r3, [r3, #16]
 800e53c:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 800e540:	f1c6 0504 	rsb	r5, r6, #4
 800e544:	f89a 6000 	ldrb.w	r6, [sl]
 800e548:	f003 0303 	and.w	r3, r3, #3
 800e54c:	40be      	lsls	r6, r7
 800e54e:	2b01      	cmp	r3, #1
 800e550:	b2ed      	uxtb	r5, r5
 800e552:	b2f6      	uxtb	r6, r6
 800e554:	d06a      	beq.n	800e62c <_DrawBitmap+0x524>
 800e556:	d308      	bcc.n	800e56a <_DrawBitmap+0x462>
 800e558:	2b02      	cmp	r3, #2
 800e55a:	f040 8156 	bne.w	800e80a <_DrawBitmap+0x702>
 800e55e:	f8cd a018 	str.w	sl, [sp, #24]
 800e562:	465f      	mov	r7, fp
 800e564:	f8dd c010 	ldr.w	ip, [sp, #16]
 800e568:	e03e      	b.n	800e5e8 <_DrawBitmap+0x4e0>
 800e56a:	4652      	mov	r2, sl
 800e56c:	465b      	mov	r3, fp
 800e56e:	429d      	cmp	r5, r3
 800e570:	bfc8      	it	gt
 800e572:	b2dd      	uxtbgt	r5, r3
 800e574:	1b5b      	subs	r3, r3, r5
 800e576:	4629      	mov	r1, r5
 800e578:	4620      	mov	r0, r4
 800e57a:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 800e57e:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e580:	3901      	subs	r1, #1
 800e582:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 800e586:	f820 cb02 	strh.w	ip, [r0], #2
 800e58a:	00b6      	lsls	r6, r6, #2
 800e58c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800e590:	b2f6      	uxtb	r6, r6
 800e592:	d1f2      	bne.n	800e57a <_DrawBitmap+0x472>
 800e594:	3d01      	subs	r5, #1
 800e596:	b2ed      	uxtb	r5, r5
 800e598:	3501      	adds	r5, #1
 800e59a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e59e:	2b00      	cmp	r3, #0
 800e5a0:	f000 8133 	beq.w	800e80a <_DrawBitmap+0x702>
 800e5a4:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800e5a8:	2504      	movs	r5, #4
 800e5aa:	e7e0      	b.n	800e56e <_DrawBitmap+0x466>
 800e5ac:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e5b0:	eb08 010c 	add.w	r1, r8, ip
 800e5b4:	d126      	bne.n	800e604 <_DrawBitmap+0x4fc>
 800e5b6:	f108 0801 	add.w	r8, r8, #1
 800e5ba:	fa5f f388 	uxtb.w	r3, r8
 800e5be:	00b6      	lsls	r6, r6, #2
 800e5c0:	429d      	cmp	r5, r3
 800e5c2:	b2f6      	uxtb	r6, r6
 800e5c4:	d1f2      	bne.n	800e5ac <_DrawBitmap+0x4a4>
 800e5c6:	3d01      	subs	r5, #1
 800e5c8:	b2ed      	uxtb	r5, r5
 800e5ca:	1c6b      	adds	r3, r5, #1
 800e5cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e5d0:	f10c 0301 	add.w	r3, ip, #1
 800e5d4:	eb03 0c05 	add.w	ip, r3, r5
 800e5d8:	2f00      	cmp	r7, #0
 800e5da:	f000 8116 	beq.w	800e80a <_DrawBitmap+0x702>
 800e5de:	9b06      	ldr	r3, [sp, #24]
 800e5e0:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800e5e4:	9306      	str	r3, [sp, #24]
 800e5e6:	2504      	movs	r5, #4
 800e5e8:	42bd      	cmp	r5, r7
 800e5ea:	bfc8      	it	gt
 800e5ec:	b2fd      	uxtbgt	r5, r7
 800e5ee:	1b7f      	subs	r7, r7, r5
 800e5f0:	f04f 0800 	mov.w	r8, #0
 800e5f4:	e7da      	b.n	800e5ac <_DrawBitmap+0x4a4>
 800e5f6:	bf00      	nop
 800e5f8:	080124cc 	.word	0x080124cc
 800e5fc:	080122e8 	.word	0x080122e8
 800e600:	200000b8 	.word	0x200000b8
 800e604:	09b3      	lsrs	r3, r6, #6
 800e606:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e608:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e60c:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 800e610:	f1b9 0f00 	cmp.w	r9, #0
 800e614:	d0cf      	beq.n	800e5b6 <_DrawBitmap+0x4ae>
 800e616:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800e61a:	9a05      	ldr	r2, [sp, #20]
 800e61c:	681b      	ldr	r3, [r3, #0]
 800e61e:	f8cd c008 	str.w	ip, [sp, #8]
 800e622:	4648      	mov	r0, r9
 800e624:	4798      	blx	r3
 800e626:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e62a:	e7c4      	b.n	800e5b6 <_DrawBitmap+0x4ae>
 800e62c:	4651      	mov	r1, sl
 800e62e:	465b      	mov	r3, fp
 800e630:	429d      	cmp	r5, r3
 800e632:	bfc8      	it	gt
 800e634:	b2dd      	uxtbgt	r5, r3
 800e636:	1b5b      	subs	r3, r3, r5
 800e638:	1ca2      	adds	r2, r4, #2
 800e63a:	4628      	mov	r0, r5
 800e63c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e640:	d005      	beq.n	800e64e <_DrawBitmap+0x546>
 800e642:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 800e646:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e64a:	f822 7c02 	strh.w	r7, [r2, #-2]
 800e64e:	3801      	subs	r0, #1
 800e650:	00b6      	lsls	r6, r6, #2
 800e652:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 800e656:	b2f6      	uxtb	r6, r6
 800e658:	f102 0202 	add.w	r2, r2, #2
 800e65c:	d1ee      	bne.n	800e63c <_DrawBitmap+0x534>
 800e65e:	3d01      	subs	r5, #1
 800e660:	b2ed      	uxtb	r5, r5
 800e662:	3501      	adds	r5, #1
 800e664:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e668:	2b00      	cmp	r3, #0
 800e66a:	f000 80ce 	beq.w	800e80a <_DrawBitmap+0x702>
 800e66e:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800e672:	2504      	movs	r5, #4
 800e674:	e7dc      	b.n	800e630 <_DrawBitmap+0x528>
 800e676:	4a6e      	ldr	r2, [pc, #440]	; (800e830 <_DrawBitmap+0x728>)
 800e678:	f89a 3000 	ldrb.w	r3, [sl]
 800e67c:	6812      	ldr	r2, [r2, #0]
 800e67e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e680:	7c12      	ldrb	r2, [r2, #16]
 800e682:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e684:	f002 0203 	and.w	r2, r2, #3
 800e688:	40bb      	lsls	r3, r7
 800e68a:	2a01      	cmp	r2, #1
 800e68c:	b2dd      	uxtb	r5, r3
 800e68e:	f000 8095 	beq.w	800e7bc <_DrawBitmap+0x6b4>
 800e692:	d302      	bcc.n	800e69a <_DrawBitmap+0x592>
 800e694:	2a02      	cmp	r2, #2
 800e696:	d036      	beq.n	800e706 <_DrawBitmap+0x5fe>
 800e698:	e0b7      	b.n	800e80a <_DrawBitmap+0x702>
 800e69a:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e69c:	b166      	cbz	r6, 800e6b8 <_DrawBitmap+0x5b0>
 800e69e:	092d      	lsrs	r5, r5, #4
 800e6a0:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e6a2:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e6a6:	8023      	strh	r3, [r4, #0]
 800e6a8:	f10a 0201 	add.w	r2, sl, #1
 800e6ac:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e6ae:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e6b2:	f10b 33ff 	add.w	r3, fp, #4294967295
 800e6b6:	e001      	b.n	800e6bc <_DrawBitmap+0x5b4>
 800e6b8:	465b      	mov	r3, fp
 800e6ba:	4652      	mov	r2, sl
 800e6bc:	2b01      	cmp	r3, #1
 800e6be:	dd19      	ble.n	800e6f4 <_DrawBitmap+0x5ec>
 800e6c0:	1058      	asrs	r0, r3, #1
 800e6c2:	1d21      	adds	r1, r4, #4
 800e6c4:	f003 0301 	and.w	r3, r3, #1
 800e6c8:	eb02 0c00 	add.w	ip, r2, r0
 800e6cc:	092f      	lsrs	r7, r5, #4
 800e6ce:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800e6d0:	f005 050f 	and.w	r5, r5, #15
 800e6d4:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 800e6d8:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 800e6dc:	f821 7c04 	strh.w	r7, [r1, #-4]
 800e6e0:	f821 5c02 	strh.w	r5, [r1, #-2]
 800e6e4:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800e6e8:	4562      	cmp	r2, ip
 800e6ea:	f101 0104 	add.w	r1, r1, #4
 800e6ee:	d1ed      	bne.n	800e6cc <_DrawBitmap+0x5c4>
 800e6f0:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800e6f4:	2b00      	cmp	r3, #0
 800e6f6:	f000 8088 	beq.w	800e80a <_DrawBitmap+0x702>
 800e6fa:	092d      	lsrs	r5, r5, #4
 800e6fc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e6fe:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e702:	8023      	strh	r3, [r4, #0]
 800e704:	e081      	b.n	800e80a <_DrawBitmap+0x702>
 800e706:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800e708:	b1c7      	cbz	r7, 800e73c <_DrawBitmap+0x634>
 800e70a:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800e70e:	d00b      	beq.n	800e728 <_DrawBitmap+0x620>
 800e710:	092d      	lsrs	r5, r5, #4
 800e712:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e714:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e718:	8023      	strh	r3, [r4, #0]
 800e71a:	b12e      	cbz	r6, 800e728 <_DrawBitmap+0x620>
 800e71c:	68b3      	ldr	r3, [r6, #8]
 800e71e:	9904      	ldr	r1, [sp, #16]
 800e720:	681b      	ldr	r3, [r3, #0]
 800e722:	9a05      	ldr	r2, [sp, #20]
 800e724:	4630      	mov	r0, r6
 800e726:	4798      	blx	r3
 800e728:	9804      	ldr	r0, [sp, #16]
 800e72a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e72c:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e730:	1c47      	adds	r7, r0, #1
 800e732:	f10b 39ff 	add.w	r9, fp, #4294967295
 800e736:	f10a 0801 	add.w	r8, sl, #1
 800e73a:	e00f      	b.n	800e75c <_DrawBitmap+0x654>
 800e73c:	46d9      	mov	r9, fp
 800e73e:	46d0      	mov	r8, sl
 800e740:	9f04      	ldr	r7, [sp, #16]
 800e742:	e00b      	b.n	800e75c <_DrawBitmap+0x654>
 800e744:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 800e748:	d10c      	bne.n	800e764 <_DrawBitmap+0x65c>
 800e74a:	f015 050f 	ands.w	r5, r5, #15
 800e74e:	d117      	bne.n	800e780 <_DrawBitmap+0x678>
 800e750:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 800e754:	3404      	adds	r4, #4
 800e756:	3702      	adds	r7, #2
 800e758:	f1a9 0902 	sub.w	r9, r9, #2
 800e75c:	f1b9 0f01 	cmp.w	r9, #1
 800e760:	dcf0      	bgt.n	800e744 <_DrawBitmap+0x63c>
 800e762:	e01a      	b.n	800e79a <_DrawBitmap+0x692>
 800e764:	092b      	lsrs	r3, r5, #4
 800e766:	9921      	ldr	r1, [sp, #132]	; 0x84
 800e768:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800e76c:	8023      	strh	r3, [r4, #0]
 800e76e:	2e00      	cmp	r6, #0
 800e770:	d0eb      	beq.n	800e74a <_DrawBitmap+0x642>
 800e772:	68b3      	ldr	r3, [r6, #8]
 800e774:	9a05      	ldr	r2, [sp, #20]
 800e776:	681b      	ldr	r3, [r3, #0]
 800e778:	4630      	mov	r0, r6
 800e77a:	4639      	mov	r1, r7
 800e77c:	4798      	blx	r3
 800e77e:	e7e4      	b.n	800e74a <_DrawBitmap+0x642>
 800e780:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e782:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 800e786:	8063      	strh	r3, [r4, #2]
 800e788:	2e00      	cmp	r6, #0
 800e78a:	d0e1      	beq.n	800e750 <_DrawBitmap+0x648>
 800e78c:	68b3      	ldr	r3, [r6, #8]
 800e78e:	9a05      	ldr	r2, [sp, #20]
 800e790:	681b      	ldr	r3, [r3, #0]
 800e792:	4630      	mov	r0, r6
 800e794:	1c79      	adds	r1, r7, #1
 800e796:	4798      	blx	r3
 800e798:	e7da      	b.n	800e750 <_DrawBitmap+0x648>
 800e79a:	f1b9 0f00 	cmp.w	r9, #0
 800e79e:	d034      	beq.n	800e80a <_DrawBitmap+0x702>
 800e7a0:	092d      	lsrs	r5, r5, #4
 800e7a2:	d032      	beq.n	800e80a <_DrawBitmap+0x702>
 800e7a4:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e7a6:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 800e7aa:	8023      	strh	r3, [r4, #0]
 800e7ac:	b36e      	cbz	r6, 800e80a <_DrawBitmap+0x702>
 800e7ae:	68b3      	ldr	r3, [r6, #8]
 800e7b0:	9a05      	ldr	r2, [sp, #20]
 800e7b2:	681b      	ldr	r3, [r3, #0]
 800e7b4:	4630      	mov	r0, r6
 800e7b6:	4639      	mov	r1, r7
 800e7b8:	4798      	blx	r3
 800e7ba:	e026      	b.n	800e80a <_DrawBitmap+0x702>
 800e7bc:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e7be:	f1c6 0302 	rsb	r3, r6, #2
 800e7c2:	b2db      	uxtb	r3, r3
 800e7c4:	4650      	mov	r0, sl
 800e7c6:	465a      	mov	r2, fp
 800e7c8:	4293      	cmp	r3, r2
 800e7ca:	bfc8      	it	gt
 800e7cc:	b2d3      	uxtbgt	r3, r2
 800e7ce:	1ad2      	subs	r2, r2, r3
 800e7d0:	1ca1      	adds	r1, r4, #2
 800e7d2:	461e      	mov	r6, r3
 800e7d4:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 800e7d8:	d005      	beq.n	800e7e6 <_DrawBitmap+0x6de>
 800e7da:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 800e7de:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e7e2:	f821 7c02 	strh.w	r7, [r1, #-2]
 800e7e6:	3e01      	subs	r6, #1
 800e7e8:	012d      	lsls	r5, r5, #4
 800e7ea:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 800e7ee:	b2ed      	uxtb	r5, r5
 800e7f0:	f101 0102 	add.w	r1, r1, #2
 800e7f4:	d1ee      	bne.n	800e7d4 <_DrawBitmap+0x6cc>
 800e7f6:	3b01      	subs	r3, #1
 800e7f8:	b2db      	uxtb	r3, r3
 800e7fa:	3301      	adds	r3, #1
 800e7fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e800:	b11a      	cbz	r2, 800e80a <_DrawBitmap+0x702>
 800e802:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800e806:	2302      	movs	r3, #2
 800e808:	e7de      	b.n	800e7c8 <_DrawBitmap+0x6c0>
 800e80a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e80c:	9b05      	ldr	r3, [sp, #20]
 800e80e:	9e08      	ldr	r6, [sp, #32]
 800e810:	44ba      	add	sl, r7
 800e812:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e814:	3301      	adds	r3, #1
 800e816:	4437      	add	r7, r6
 800e818:	9305      	str	r3, [sp, #20]
 800e81a:	9709      	str	r7, [sp, #36]	; 0x24
 800e81c:	e5a3      	b.n	800e366 <_DrawBitmap+0x25e>
 800e81e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e820:	b113      	cbz	r3, 800e828 <_DrawBitmap+0x720>
 800e822:	a811      	add	r0, sp, #68	; 0x44
 800e824:	f7fd f836 	bl	800b894 <GUI_ALLOC_UnlockH>
 800e828:	b013      	add	sp, #76	; 0x4c
 800e82a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e82e:	bf00      	nop
 800e830:	200000b8 	.word	0x200000b8

0800e834 <_GetDevProp>:
 800e834:	2908      	cmp	r1, #8
 800e836:	b508      	push	{r3, lr}
 800e838:	d008      	beq.n	800e84c <_GetDevProp+0x18>
 800e83a:	6800      	ldr	r0, [r0, #0]
 800e83c:	b118      	cbz	r0, 800e846 <_GetDevProp+0x12>
 800e83e:	68c3      	ldr	r3, [r0, #12]
 800e840:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e842:	4798      	blx	r3
 800e844:	bd08      	pop	{r3, pc}
 800e846:	f04f 30ff 	mov.w	r0, #4294967295
 800e84a:	bd08      	pop	{r3, pc}
 800e84c:	2010      	movs	r0, #16
 800e84e:	bd08      	pop	{r3, pc}

0800e850 <LCD_SelectLCD>:
 800e850:	b510      	push	{r4, lr}
 800e852:	4b0d      	ldr	r3, [pc, #52]	; (800e888 <LCD_SelectLCD+0x38>)
 800e854:	681a      	ldr	r2, [r3, #0]
 800e856:	7c51      	ldrb	r1, [r2, #17]
 800e858:	4a0c      	ldr	r2, [pc, #48]	; (800e88c <LCD_SelectLCD+0x3c>)
 800e85a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800e85e:	461c      	mov	r4, r3
 800e860:	b140      	cbz	r0, 800e874 <LCD_SelectLCD+0x24>
 800e862:	68c3      	ldr	r3, [r0, #12]
 800e864:	b113      	cbz	r3, 800e86c <LCD_SelectLCD+0x1c>
 800e866:	681b      	ldr	r3, [r3, #0]
 800e868:	2b04      	cmp	r3, #4
 800e86a:	d001      	beq.n	800e870 <LCD_SelectLCD+0x20>
 800e86c:	6800      	ldr	r0, [r0, #0]
 800e86e:	e7f7      	b.n	800e860 <LCD_SelectLCD+0x10>
 800e870:	f7fc f87c 	bl	800a96c <GUI_DEVICE_Unlink>
 800e874:	6823      	ldr	r3, [r4, #0]
 800e876:	2200      	movs	r2, #0
 800e878:	661a      	str	r2, [r3, #96]	; 0x60
 800e87a:	f103 0208 	add.w	r2, r3, #8
 800e87e:	615a      	str	r2, [r3, #20]
 800e880:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e884:	f7fa bbb8 	b.w	8008ff8 <LCD_SetClipRectMax>
 800e888:	200000b8 	.word	0x200000b8
 800e88c:	20002d2c 	.word	0x20002d2c

0800e890 <LCD_ReadRectEx>:
 800e890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e894:	b087      	sub	sp, #28
 800e896:	4617      	mov	r7, r2
 800e898:	9304      	str	r3, [sp, #16]
 800e89a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e89c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800e89e:	68da      	ldr	r2, [r3, #12]
 800e8a0:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800e8a2:	f8d2 8014 	ldr.w	r8, [r2, #20]
 800e8a6:	4606      	mov	r6, r0
 800e8a8:	460d      	mov	r5, r1
 800e8aa:	b973      	cbnz	r3, 800e8ca <LCD_ReadRectEx+0x3a>
 800e8ac:	4b71      	ldr	r3, [pc, #452]	; (800ea74 <LCD_ReadRectEx+0x1e4>)
 800e8ae:	681b      	ldr	r3, [r3, #0]
 800e8b0:	7c58      	ldrb	r0, [r3, #17]
 800e8b2:	f7fa f853 	bl	800895c <GUI_GetBitsPerPixelEx>
 800e8b6:	2808      	cmp	r0, #8
 800e8b8:	4682      	mov	sl, r0
 800e8ba:	dd15      	ble.n	800e8e8 <LCD_ReadRectEx+0x58>
 800e8bc:	2810      	cmp	r0, #16
 800e8be:	bfcc      	ite	gt
 800e8c0:	f04f 0904 	movgt.w	r9, #4
 800e8c4:	f04f 0902 	movle.w	r9, #2
 800e8c8:	e010      	b.n	800e8ec <LCD_ReadRectEx+0x5c>
 800e8ca:	a811      	add	r0, sp, #68	; 0x44
 800e8cc:	2101      	movs	r1, #1
 800e8ce:	4798      	blx	r3
 800e8d0:	4684      	mov	ip, r0
 800e8d2:	2800      	cmp	r0, #0
 800e8d4:	d0ea      	beq.n	800e8ac <LCD_ReadRectEx+0x1c>
 800e8d6:	9b04      	ldr	r3, [sp, #16]
 800e8d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e8da:	e88d 0018 	stmia.w	sp, {r3, r4}
 800e8de:	4631      	mov	r1, r6
 800e8e0:	462a      	mov	r2, r5
 800e8e2:	463b      	mov	r3, r7
 800e8e4:	47e0      	blx	ip
 800e8e6:	e0c1      	b.n	800ea6c <LCD_ReadRectEx+0x1dc>
 800e8e8:	f04f 0901 	mov.w	r9, #1
 800e8ec:	f04f 0b00 	mov.w	fp, #0
 800e8f0:	9b04      	ldr	r3, [sp, #16]
 800e8f2:	429d      	cmp	r5, r3
 800e8f4:	f300 80ba 	bgt.w	800ea6c <LCD_ReadRectEx+0x1dc>
 800e8f8:	f1b9 0f02 	cmp.w	r9, #2
 800e8fc:	d009      	beq.n	800e912 <LCD_ReadRectEx+0x82>
 800e8fe:	f1b9 0f04 	cmp.w	r9, #4
 800e902:	d004      	beq.n	800e90e <LCD_ReadRectEx+0x7e>
 800e904:	f1b9 0f01 	cmp.w	r9, #1
 800e908:	f040 80ae 	bne.w	800ea68 <LCD_ReadRectEx+0x1d8>
 800e90c:	e003      	b.n	800e916 <LCD_ReadRectEx+0x86>
 800e90e:	46b4      	mov	ip, r6
 800e910:	e09b      	b.n	800ea4a <LCD_ReadRectEx+0x1ba>
 800e912:	46b4      	mov	ip, r6
 800e914:	e08a      	b.n	800ea2c <LCD_ReadRectEx+0x19c>
 800e916:	f10a 32ff 	add.w	r2, sl, #4294967295
 800e91a:	2a07      	cmp	r2, #7
 800e91c:	f200 80a4 	bhi.w	800ea68 <LCD_ReadRectEx+0x1d8>
 800e920:	e8df f002 	tbb	[pc, r2]
 800e924:	0606080a 	.word	0x0606080a
 800e928:	04040404 	.word	0x04040404
 800e92c:	46b4      	mov	ip, r6
 800e92e:	e066      	b.n	800e9fe <LCD_ReadRectEx+0x16e>
 800e930:	46b4      	mov	ip, r6
 800e932:	e047      	b.n	800e9c4 <LCD_ReadRectEx+0x134>
 800e934:	46b4      	mov	ip, r6
 800e936:	e022      	b.n	800e97e <LCD_ReadRectEx+0xee>
 800e938:	46b4      	mov	ip, r6
 800e93a:	45bc      	cmp	ip, r7
 800e93c:	f300 8094 	bgt.w	800ea68 <LCD_ReadRectEx+0x1d8>
 800e940:	4661      	mov	r1, ip
 800e942:	462a      	mov	r2, r5
 800e944:	f8cd c00c 	str.w	ip, [sp, #12]
 800e948:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e94a:	47c0      	blx	r8
 800e94c:	f1cb 0207 	rsb	r2, fp, #7
 800e950:	fa00 f202 	lsl.w	r2, r0, r2
 800e954:	f64f 717f 	movw	r1, #65407	; 0xff7f
 800e958:	7820      	ldrb	r0, [r4, #0]
 800e95a:	fa41 f10b 	asr.w	r1, r1, fp
 800e95e:	4001      	ands	r1, r0
 800e960:	430a      	orrs	r2, r1
 800e962:	7022      	strb	r2, [r4, #0]
 800e964:	f10b 0301 	add.w	r3, fp, #1
 800e968:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e96c:	f023 0207 	bic.w	r2, r3, #7
 800e970:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800e974:	fa43 fb02 	asr.w	fp, r3, r2
 800e978:	f10c 0c01 	add.w	ip, ip, #1
 800e97c:	e7dd      	b.n	800e93a <LCD_ReadRectEx+0xaa>
 800e97e:	45bc      	cmp	ip, r7
 800e980:	dc72      	bgt.n	800ea68 <LCD_ReadRectEx+0x1d8>
 800e982:	4661      	mov	r1, ip
 800e984:	462a      	mov	r2, r5
 800e986:	f8cd c00c 	str.w	ip, [sp, #12]
 800e98a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e98c:	47c0      	blx	r8
 800e98e:	ea4f 024b 	mov.w	r2, fp, lsl #1
 800e992:	f1c2 0106 	rsb	r1, r2, #6
 800e996:	fa00 f101 	lsl.w	r1, r0, r1
 800e99a:	f64f 703f 	movw	r0, #65343	; 0xff3f
 800e99e:	fa40 f202 	asr.w	r2, r0, r2
 800e9a2:	7820      	ldrb	r0, [r4, #0]
 800e9a4:	4002      	ands	r2, r0
 800e9a6:	4311      	orrs	r1, r2
 800e9a8:	7021      	strb	r1, [r4, #0]
 800e9aa:	f10b 0301 	add.w	r3, fp, #1
 800e9ae:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e9b2:	f023 0203 	bic.w	r2, r3, #3
 800e9b6:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800e9ba:	fa43 fb02 	asr.w	fp, r3, r2
 800e9be:	f10c 0c01 	add.w	ip, ip, #1
 800e9c2:	e7dc      	b.n	800e97e <LCD_ReadRectEx+0xee>
 800e9c4:	45bc      	cmp	ip, r7
 800e9c6:	dc4f      	bgt.n	800ea68 <LCD_ReadRectEx+0x1d8>
 800e9c8:	4661      	mov	r1, ip
 800e9ca:	462a      	mov	r2, r5
 800e9cc:	f8cd c00c 	str.w	ip, [sp, #12]
 800e9d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e9d2:	47c0      	blx	r8
 800e9d4:	ea4f 028b 	mov.w	r2, fp, lsl #2
 800e9d8:	f1c2 0104 	rsb	r1, r2, #4
 800e9dc:	fa00 f101 	lsl.w	r1, r0, r1
 800e9e0:	200f      	movs	r0, #15
 800e9e2:	fa00 f202 	lsl.w	r2, r0, r2
 800e9e6:	7820      	ldrb	r0, [r4, #0]
 800e9e8:	4002      	ands	r2, r0
 800e9ea:	4311      	orrs	r1, r2
 800e9ec:	7021      	strb	r1, [r4, #0]
 800e9ee:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e9f2:	445c      	add	r4, fp
 800e9f4:	f10c 0c01 	add.w	ip, ip, #1
 800e9f8:	f08b 0b01 	eor.w	fp, fp, #1
 800e9fc:	e7e2      	b.n	800e9c4 <LCD_ReadRectEx+0x134>
 800e9fe:	4273      	negs	r3, r6
 800ea00:	1ba2      	subs	r2, r4, r6
 800ea02:	45bc      	cmp	ip, r7
 800ea04:	9305      	str	r3, [sp, #20]
 800ea06:	4462      	add	r2, ip
 800ea08:	dc0e      	bgt.n	800ea28 <LCD_ReadRectEx+0x198>
 800ea0a:	4661      	mov	r1, ip
 800ea0c:	462a      	mov	r2, r5
 800ea0e:	f8cd c00c 	str.w	ip, [sp, #12]
 800ea12:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ea14:	47c0      	blx	r8
 800ea16:	9a05      	ldr	r2, [sp, #20]
 800ea18:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ea1c:	4422      	add	r2, r4
 800ea1e:	f802 000c 	strb.w	r0, [r2, ip]
 800ea22:	f10c 0c01 	add.w	ip, ip, #1
 800ea26:	e7ea      	b.n	800e9fe <LCD_ReadRectEx+0x16e>
 800ea28:	4614      	mov	r4, r2
 800ea2a:	e01d      	b.n	800ea68 <LCD_ReadRectEx+0x1d8>
 800ea2c:	45bc      	cmp	ip, r7
 800ea2e:	dc1b      	bgt.n	800ea68 <LCD_ReadRectEx+0x1d8>
 800ea30:	4661      	mov	r1, ip
 800ea32:	f8cd c00c 	str.w	ip, [sp, #12]
 800ea36:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ea38:	462a      	mov	r2, r5
 800ea3a:	47c0      	blx	r8
 800ea3c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ea40:	f824 0b02 	strh.w	r0, [r4], #2
 800ea44:	f10c 0c01 	add.w	ip, ip, #1
 800ea48:	e7f0      	b.n	800ea2c <LCD_ReadRectEx+0x19c>
 800ea4a:	45bc      	cmp	ip, r7
 800ea4c:	dc0c      	bgt.n	800ea68 <LCD_ReadRectEx+0x1d8>
 800ea4e:	4661      	mov	r1, ip
 800ea50:	f8cd c00c 	str.w	ip, [sp, #12]
 800ea54:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ea56:	462a      	mov	r2, r5
 800ea58:	47c0      	blx	r8
 800ea5a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ea5e:	f844 0b04 	str.w	r0, [r4], #4
 800ea62:	f10c 0c01 	add.w	ip, ip, #1
 800ea66:	e7f0      	b.n	800ea4a <LCD_ReadRectEx+0x1ba>
 800ea68:	3501      	adds	r5, #1
 800ea6a:	e741      	b.n	800e8f0 <LCD_ReadRectEx+0x60>
 800ea6c:	b007      	add	sp, #28
 800ea6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea72:	bf00      	nop
 800ea74:	200000b8 	.word	0x200000b8

0800ea78 <GUI_ReadRectEx>:
 800ea78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea7a:	4d16      	ldr	r5, [pc, #88]	; (800ead4 <GUI_ReadRectEx+0x5c>)
 800ea7c:	9e05      	ldr	r6, [sp, #20]
 800ea7e:	682d      	ldr	r5, [r5, #0]
 800ea80:	9c06      	ldr	r4, [sp, #24]
 800ea82:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800ea86:	42b8      	cmp	r0, r7
 800ea88:	bfb8      	it	lt
 800ea8a:	4638      	movlt	r0, r7
 800ea8c:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800ea90:	42ba      	cmp	r2, r7
 800ea92:	bfa8      	it	ge
 800ea94:	463a      	movge	r2, r7
 800ea96:	4282      	cmp	r2, r0
 800ea98:	db1b      	blt.n	800ead2 <GUI_ReadRectEx+0x5a>
 800ea9a:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800ea9e:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 800eaa2:	42b9      	cmp	r1, r7
 800eaa4:	bfb8      	it	lt
 800eaa6:	4639      	movlt	r1, r7
 800eaa8:	42ab      	cmp	r3, r5
 800eaaa:	bfa8      	it	ge
 800eaac:	462b      	movge	r3, r5
 800eaae:	428b      	cmp	r3, r1
 800eab0:	db0f      	blt.n	800ead2 <GUI_ReadRectEx+0x5a>
 800eab2:	68e5      	ldr	r5, [r4, #12]
 800eab4:	682d      	ldr	r5, [r5, #0]
 800eab6:	f035 0704 	bics.w	r7, r5, #4
 800eaba:	d105      	bne.n	800eac8 <GUI_ReadRectEx+0x50>
 800eabc:	9605      	str	r6, [sp, #20]
 800eabe:	9406      	str	r4, [sp, #24]
 800eac0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800eac4:	f7ff bee4 	b.w	800e890 <LCD_ReadRectEx>
 800eac8:	6825      	ldr	r5, [r4, #0]
 800eaca:	2d00      	cmp	r5, #0
 800eacc:	d0f6      	beq.n	800eabc <GUI_ReadRectEx+0x44>
 800eace:	462c      	mov	r4, r5
 800ead0:	e7ef      	b.n	800eab2 <GUI_ReadRectEx+0x3a>
 800ead2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ead4:	200000b8 	.word	0x200000b8

0800ead8 <LCD_GetBkColorIndex>:
 800ead8:	4b02      	ldr	r3, [pc, #8]	; (800eae4 <LCD_GetBkColorIndex+0xc>)
 800eada:	681b      	ldr	r3, [r3, #0]
 800eadc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eade:	6818      	ldr	r0, [r3, #0]
 800eae0:	4770      	bx	lr
 800eae2:	bf00      	nop
 800eae4:	200000b8 	.word	0x200000b8

0800eae8 <LCD_GetColorIndex>:
 800eae8:	4b02      	ldr	r3, [pc, #8]	; (800eaf4 <LCD_GetColorIndex+0xc>)
 800eaea:	681b      	ldr	r3, [r3, #0]
 800eaec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eaee:	6818      	ldr	r0, [r3, #0]
 800eaf0:	4770      	bx	lr
 800eaf2:	bf00      	nop
 800eaf4:	200000b8 	.word	0x200000b8

0800eaf8 <_OnExit>:
 800eaf8:	b510      	push	{r4, lr}
 800eafa:	4c04      	ldr	r4, [pc, #16]	; (800eb0c <_OnExit+0x14>)
 800eafc:	6820      	ldr	r0, [r4, #0]
 800eafe:	f7fc fea7 	bl	800b850 <GUI_ALLOC_FreeFixedBlock>
 800eb02:	4a03      	ldr	r2, [pc, #12]	; (800eb10 <_OnExit+0x18>)
 800eb04:	2300      	movs	r3, #0
 800eb06:	6023      	str	r3, [r4, #0]
 800eb08:	6013      	str	r3, [r2, #0]
 800eb0a:	bd10      	pop	{r4, pc}
 800eb0c:	20002e2c 	.word	0x20002e2c
 800eb10:	20002c48 	.word	0x20002c48

0800eb14 <LCD_InitColors>:
 800eb14:	b538      	push	{r3, r4, r5, lr}
 800eb16:	4d09      	ldr	r5, [pc, #36]	; (800eb3c <LCD_InitColors+0x28>)
 800eb18:	682c      	ldr	r4, [r5, #0]
 800eb1a:	b95c      	cbnz	r4, 800eb34 <LCD_InitColors+0x20>
 800eb1c:	4b08      	ldr	r3, [pc, #32]	; (800eb40 <LCD_InitColors+0x2c>)
 800eb1e:	6818      	ldr	r0, [r3, #0]
 800eb20:	0080      	lsls	r0, r0, #2
 800eb22:	f7fc ff79 	bl	800ba18 <GUI_ALLOC_GetFixedBlock>
 800eb26:	6028      	str	r0, [r5, #0]
 800eb28:	b130      	cbz	r0, 800eb38 <LCD_InitColors+0x24>
 800eb2a:	4806      	ldr	r0, [pc, #24]	; (800eb44 <LCD_InitColors+0x30>)
 800eb2c:	4b06      	ldr	r3, [pc, #24]	; (800eb48 <LCD_InitColors+0x34>)
 800eb2e:	6003      	str	r3, [r0, #0]
 800eb30:	f7fc f83e 	bl	800abb0 <GUI__RegisterExit>
 800eb34:	2000      	movs	r0, #0
 800eb36:	bd38      	pop	{r3, r4, r5, pc}
 800eb38:	2001      	movs	r0, #1
 800eb3a:	bd38      	pop	{r3, r4, r5, pc}
 800eb3c:	20002e2c 	.word	0x20002e2c
 800eb40:	20000184 	.word	0x20000184
 800eb44:	20002c4c 	.word	0x20002c4c
 800eb48:	0800eaf9 	.word	0x0800eaf9

0800eb4c <LCD_InitLUT>:
 800eb4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eb50:	f001 fa5b 	bl	801000a <LCD_GetNumLayers>
 800eb54:	2400      	movs	r4, #0
 800eb56:	4680      	mov	r8, r0
 800eb58:	4544      	cmp	r4, r8
 800eb5a:	da2c      	bge.n	800ebb6 <LCD_InitLUT+0x6a>
 800eb5c:	4620      	mov	r0, r4
 800eb5e:	f7fb fecd 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 800eb62:	b330      	cbz	r0, 800ebb2 <LCD_InitLUT+0x66>
 800eb64:	4e15      	ldr	r6, [pc, #84]	; (800ebbc <LCD_InitLUT+0x70>)
 800eb66:	6833      	ldr	r3, [r6, #0]
 800eb68:	4620      	mov	r0, r4
 800eb6a:	f893 9011 	ldrb.w	r9, [r3, #17]
 800eb6e:	745c      	strb	r4, [r3, #17]
 800eb70:	f7f9 fed6 	bl	8008920 <LCD_GetBitsPerPixelEx>
 800eb74:	2808      	cmp	r0, #8
 800eb76:	dd03      	ble.n	800eb80 <LCD_InitLUT+0x34>
 800eb78:	6833      	ldr	r3, [r6, #0]
 800eb7a:	f883 9011 	strb.w	r9, [r3, #17]
 800eb7e:	e018      	b.n	800ebb2 <LCD_InitLUT+0x66>
 800eb80:	4b0f      	ldr	r3, [pc, #60]	; (800ebc0 <LCD_InitLUT+0x74>)
 800eb82:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800eb86:	691a      	ldr	r2, [r3, #16]
 800eb88:	4b0e      	ldr	r3, [pc, #56]	; (800ebc4 <LCD_InitLUT+0x78>)
 800eb8a:	429a      	cmp	r2, r3
 800eb8c:	d0f4      	beq.n	800eb78 <LCD_InitLUT+0x2c>
 800eb8e:	4620      	mov	r0, r4
 800eb90:	f7f9 fec9 	bl	8008926 <LCD_GetNumColorsEx>
 800eb94:	2500      	movs	r5, #0
 800eb96:	4682      	mov	sl, r0
 800eb98:	4555      	cmp	r5, sl
 800eb9a:	daed      	bge.n	800eb78 <LCD_InitLUT+0x2c>
 800eb9c:	b2ef      	uxtb	r7, r5
 800eb9e:	4638      	mov	r0, r7
 800eba0:	f7fa fa9e 	bl	80090e0 <LCD_Index2Color>
 800eba4:	4639      	mov	r1, r7
 800eba6:	4602      	mov	r2, r0
 800eba8:	4620      	mov	r0, r4
 800ebaa:	f7f9 fe75 	bl	8008898 <LCD_SetLUTEntryEx>
 800ebae:	3501      	adds	r5, #1
 800ebb0:	e7f2      	b.n	800eb98 <LCD_InitLUT+0x4c>
 800ebb2:	3401      	adds	r4, #1
 800ebb4:	e7d0      	b.n	800eb58 <LCD_InitLUT+0xc>
 800ebb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ebba:	bf00      	nop
 800ebbc:	200000b8 	.word	0x200000b8
 800ebc0:	20002d2c 	.word	0x20002d2c
 800ebc4:	08012fb4 	.word	0x08012fb4

0800ebc8 <LCD_AA_SetAndMask>:
 800ebc8:	4b02      	ldr	r3, [pc, #8]	; (800ebd4 <LCD_AA_SetAndMask+0xc>)
 800ebca:	681a      	ldr	r2, [r3, #0]
 800ebcc:	6018      	str	r0, [r3, #0]
 800ebce:	4610      	mov	r0, r2
 800ebd0:	4770      	bx	lr
 800ebd2:	bf00      	nop
 800ebd4:	20000188 	.word	0x20000188

0800ebd8 <_GetWordWrap>:
 800ebd8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ebdc:	2500      	movs	r5, #0
 800ebde:	9001      	str	r0, [sp, #4]
 800ebe0:	4689      	mov	r9, r1
 800ebe2:	4690      	mov	r8, r2
 800ebe4:	46aa      	mov	sl, r5
 800ebe6:	462e      	mov	r6, r5
 800ebe8:	462c      	mov	r4, r5
 800ebea:	462f      	mov	r7, r5
 800ebec:	a801      	add	r0, sp, #4
 800ebee:	f7fa fe3d 	bl	800986c <GUI_UC__GetCharCodeInc>
 800ebf2:	2d00      	cmp	r5, #0
 800ebf4:	bf08      	it	eq
 800ebf6:	4605      	moveq	r5, r0
 800ebf8:	b108      	cbz	r0, 800ebfe <_GetWordWrap+0x26>
 800ebfa:	280a      	cmp	r0, #10
 800ebfc:	d10b      	bne.n	800ec16 <_GetWordWrap+0x3e>
 800ebfe:	4626      	mov	r6, r4
 800ec00:	2e00      	cmp	r6, #0
 800ec02:	bf18      	it	ne
 800ec04:	4634      	movne	r4, r6
 800ec06:	f1b8 0f00 	cmp.w	r8, #0
 800ec0a:	d025      	beq.n	800ec58 <_GetWordWrap+0x80>
 800ec0c:	ebca 0707 	rsb	r7, sl, r7
 800ec10:	f8c8 7000 	str.w	r7, [r8]
 800ec14:	e020      	b.n	800ec58 <_GetWordWrap+0x80>
 800ec16:	2820      	cmp	r0, #32
 800ec18:	d01c      	beq.n	800ec54 <_GetWordWrap+0x7c>
 800ec1a:	2d20      	cmp	r5, #32
 800ec1c:	d00e      	beq.n	800ec3c <_GetWordWrap+0x64>
 800ec1e:	4b10      	ldr	r3, [pc, #64]	; (800ec60 <_GetWordWrap+0x88>)
 800ec20:	6819      	ldr	r1, [r3, #0]
 800ec22:	4b10      	ldr	r3, [pc, #64]	; (800ec64 <_GetWordWrap+0x8c>)
 800ec24:	681a      	ldr	r2, [r3, #0]
 800ec26:	2300      	movs	r3, #0
 800ec28:	4293      	cmp	r3, r2
 800ec2a:	da09      	bge.n	800ec40 <_GetWordWrap+0x68>
 800ec2c:	f831 e013 	ldrh.w	lr, [r1, r3, lsl #1]
 800ec30:	4586      	cmp	lr, r0
 800ec32:	d101      	bne.n	800ec38 <_GetWordWrap+0x60>
 800ec34:	1c66      	adds	r6, r4, #1
 800ec36:	e003      	b.n	800ec40 <_GetWordWrap+0x68>
 800ec38:	3301      	adds	r3, #1
 800ec3a:	e7f5      	b.n	800ec28 <_GetWordWrap+0x50>
 800ec3c:	4626      	mov	r6, r4
 800ec3e:	2500      	movs	r5, #0
 800ec40:	f7fc fd22 	bl	800b688 <GUI_GetCharDistX>
 800ec44:	4407      	add	r7, r0
 800ec46:	454f      	cmp	r7, r9
 800ec48:	4682      	mov	sl, r0
 800ec4a:	dd01      	ble.n	800ec50 <_GetWordWrap+0x78>
 800ec4c:	2c00      	cmp	r4, #0
 800ec4e:	d1d7      	bne.n	800ec00 <_GetWordWrap+0x28>
 800ec50:	3401      	adds	r4, #1
 800ec52:	e7cb      	b.n	800ebec <_GetWordWrap+0x14>
 800ec54:	4626      	mov	r6, r4
 800ec56:	e7f3      	b.n	800ec40 <_GetWordWrap+0x68>
 800ec58:	4620      	mov	r0, r4
 800ec5a:	b002      	add	sp, #8
 800ec5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ec60:	20002c54 	.word	0x20002c54
 800ec64:	20002c58 	.word	0x20002c58

0800ec68 <_GetCharWrap>:
 800ec68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ec6a:	2400      	movs	r4, #0
 800ec6c:	9001      	str	r0, [sp, #4]
 800ec6e:	460e      	mov	r6, r1
 800ec70:	4625      	mov	r5, r4
 800ec72:	a801      	add	r0, sp, #4
 800ec74:	f7fa fdfa 	bl	800986c <GUI_UC__GetCharCodeInc>
 800ec78:	4607      	mov	r7, r0
 800ec7a:	b148      	cbz	r0, 800ec90 <_GetCharWrap+0x28>
 800ec7c:	f7fc fd04 	bl	800b688 <GUI_GetCharDistX>
 800ec80:	4405      	add	r5, r0
 800ec82:	b10c      	cbz	r4, 800ec88 <_GetCharWrap+0x20>
 800ec84:	42b5      	cmp	r5, r6
 800ec86:	dc03      	bgt.n	800ec90 <_GetCharWrap+0x28>
 800ec88:	2f0a      	cmp	r7, #10
 800ec8a:	d001      	beq.n	800ec90 <_GetCharWrap+0x28>
 800ec8c:	3401      	adds	r4, #1
 800ec8e:	e7f0      	b.n	800ec72 <_GetCharWrap+0xa>
 800ec90:	4620      	mov	r0, r4
 800ec92:	b003      	add	sp, #12
 800ec94:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800ec98 <_WrapGetNumCharsDisp>:
 800ec98:	2a01      	cmp	r2, #1
 800ec9a:	b510      	push	{r4, lr}
 800ec9c:	d005      	beq.n	800ecaa <_WrapGetNumCharsDisp+0x12>
 800ec9e:	2a02      	cmp	r2, #2
 800eca0:	d108      	bne.n	800ecb4 <_WrapGetNumCharsDisp+0x1c>
 800eca2:	4b07      	ldr	r3, [pc, #28]	; (800ecc0 <_WrapGetNumCharsDisp+0x28>)
 800eca4:	681b      	ldr	r3, [r3, #0]
 800eca6:	4798      	blx	r3
 800eca8:	bd10      	pop	{r4, pc}
 800ecaa:	4a06      	ldr	r2, [pc, #24]	; (800ecc4 <_WrapGetNumCharsDisp+0x2c>)
 800ecac:	6814      	ldr	r4, [r2, #0]
 800ecae:	461a      	mov	r2, r3
 800ecb0:	47a0      	blx	r4
 800ecb2:	bd10      	pop	{r4, pc}
 800ecb4:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800ecb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ecbc:	f7fc bc12 	b.w	800b4e4 <GUI__GetLineNumChars>
 800ecc0:	2000018c 	.word	0x2000018c
 800ecc4:	20000190 	.word	0x20000190

0800ecc8 <GUI__WrapGetNumCharsDisp>:
 800ecc8:	2300      	movs	r3, #0
 800ecca:	f7ff bfe5 	b.w	800ec98 <_WrapGetNumCharsDisp>

0800ecce <GUI__WrapGetNumCharsToNextLine>:
 800ecce:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ecd0:	b085      	sub	sp, #20
 800ecd2:	ab03      	add	r3, sp, #12
 800ecd4:	4617      	mov	r7, r2
 800ecd6:	460e      	mov	r6, r1
 800ecd8:	9001      	str	r0, [sp, #4]
 800ecda:	f7ff ffdd 	bl	800ec98 <_WrapGetNumCharsDisp>
 800ecde:	9d01      	ldr	r5, [sp, #4]
 800ece0:	4604      	mov	r4, r0
 800ece2:	4621      	mov	r1, r4
 800ece4:	4628      	mov	r0, r5
 800ece6:	f7fa fdd5 	bl	8009894 <GUI_UC__NumChars2NumBytes>
 800ecea:	4428      	add	r0, r5
 800ecec:	ad04      	add	r5, sp, #16
 800ecee:	f845 0d0c 	str.w	r0, [r5, #-12]!
 800ecf2:	4628      	mov	r0, r5
 800ecf4:	f7fa fdba 	bl	800986c <GUI_UC__GetCharCodeInc>
 800ecf8:	280a      	cmp	r0, #10
 800ecfa:	d101      	bne.n	800ed00 <GUI__WrapGetNumCharsToNextLine+0x32>
 800ecfc:	3401      	adds	r4, #1
 800ecfe:	e012      	b.n	800ed26 <GUI__WrapGetNumCharsToNextLine+0x58>
 800ed00:	2f01      	cmp	r7, #1
 800ed02:	d110      	bne.n	800ed26 <GUI__WrapGetNumCharsToNextLine+0x58>
 800ed04:	2820      	cmp	r0, #32
 800ed06:	d10e      	bne.n	800ed26 <GUI__WrapGetNumCharsToNextLine+0x58>
 800ed08:	f7fc fcbe 	bl	800b688 <GUI_GetCharDistX>
 800ed0c:	4607      	mov	r7, r0
 800ed0e:	9b03      	ldr	r3, [sp, #12]
 800ed10:	429e      	cmp	r6, r3
 800ed12:	db08      	blt.n	800ed26 <GUI__WrapGetNumCharsToNextLine+0x58>
 800ed14:	443b      	add	r3, r7
 800ed16:	4628      	mov	r0, r5
 800ed18:	9303      	str	r3, [sp, #12]
 800ed1a:	f7fa fda7 	bl	800986c <GUI_UC__GetCharCodeInc>
 800ed1e:	2820      	cmp	r0, #32
 800ed20:	f104 0401 	add.w	r4, r4, #1
 800ed24:	d0f3      	beq.n	800ed0e <GUI__WrapGetNumCharsToNextLine+0x40>
 800ed26:	4620      	mov	r0, r4
 800ed28:	b005      	add	sp, #20
 800ed2a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ed2c <GUI__WrapGetNumBytesToNextLine>:
 800ed2c:	b510      	push	{r4, lr}
 800ed2e:	4604      	mov	r4, r0
 800ed30:	f7ff ffcd 	bl	800ecce <GUI__WrapGetNumCharsToNextLine>
 800ed34:	4601      	mov	r1, r0
 800ed36:	4620      	mov	r0, r4
 800ed38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed3c:	f7fa bdaa 	b.w	8009894 <GUI_UC__NumChars2NumBytes>

0800ed40 <GUI__ExpandPixelIndicesEx>:
 800ed40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ed44:	1e0c      	subs	r4, r1, #0
 800ed46:	4605      	mov	r5, r0
 800ed48:	f340 80b3 	ble.w	800eeb2 <GUI__ExpandPixelIndicesEx+0x172>
 800ed4c:	2a08      	cmp	r2, #8
 800ed4e:	685f      	ldr	r7, [r3, #4]
 800ed50:	dd04      	ble.n	800ed5c <GUI__ExpandPixelIndicesEx+0x1c>
 800ed52:	2a10      	cmp	r2, #16
 800ed54:	f340 8098 	ble.w	800ee88 <GUI__ExpandPixelIndicesEx+0x148>
 800ed58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ed5c:	3a01      	subs	r2, #1
 800ed5e:	2a07      	cmp	r2, #7
 800ed60:	f200 80a7 	bhi.w	800eeb2 <GUI__ExpandPixelIndicesEx+0x172>
 800ed64:	e8df f002 	tbb	[pc, r2]
 800ed68:	58a52d04 	.word	0x58a52d04
 800ed6c:	83a5a5a5 	.word	0x83a5a5a5
 800ed70:	1e66      	subs	r6, r4, #1
 800ed72:	10f2      	asrs	r2, r6, #3
 800ed74:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800ed78:	3b01      	subs	r3, #1
 800ed7a:	eb05 0802 	add.w	r8, r5, r2
 800ed7e:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800ed82:	f006 0607 	and.w	r6, r6, #7
 800ed86:	f815 a002 	ldrb.w	sl, [r5, r2]
 800ed8a:	2580      	movs	r5, #128	; 0x80
 800ed8c:	4135      	asrs	r5, r6
 800ed8e:	f108 38ff 	add.w	r8, r8, #4294967295
 800ed92:	b2ed      	uxtb	r5, r5
 800ed94:	f1c6 0307 	rsb	r3, r6, #7
 800ed98:	ea0a 0005 	and.w	r0, sl, r5
 800ed9c:	4118      	asrs	r0, r3
 800ed9e:	47b8      	blx	r7
 800eda0:	f849 0904 	str.w	r0, [r9], #-4
 800eda4:	b936      	cbnz	r6, 800edb4 <GUI__ExpandPixelIndicesEx+0x74>
 800eda6:	f898 a000 	ldrb.w	sl, [r8]
 800edaa:	2501      	movs	r5, #1
 800edac:	f108 38ff 	add.w	r8, r8, #4294967295
 800edb0:	2607      	movs	r6, #7
 800edb2:	e002      	b.n	800edba <GUI__ExpandPixelIndicesEx+0x7a>
 800edb4:	006d      	lsls	r5, r5, #1
 800edb6:	3e01      	subs	r6, #1
 800edb8:	b2ed      	uxtb	r5, r5
 800edba:	3c01      	subs	r4, #1
 800edbc:	d1ea      	bne.n	800ed94 <GUI__ExpandPixelIndicesEx+0x54>
 800edbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800edc2:	1e66      	subs	r6, r4, #1
 800edc4:	10b2      	asrs	r2, r6, #2
 800edc6:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800edca:	3b01      	subs	r3, #1
 800edcc:	f006 0603 	and.w	r6, r6, #3
 800edd0:	eb05 0802 	add.w	r8, r5, r2
 800edd4:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800edd8:	f815 a002 	ldrb.w	sl, [r5, r2]
 800eddc:	0073      	lsls	r3, r6, #1
 800edde:	25c0      	movs	r5, #192	; 0xc0
 800ede0:	411d      	asrs	r5, r3
 800ede2:	f108 38ff 	add.w	r8, r8, #4294967295
 800ede6:	b2ed      	uxtb	r5, r5
 800ede8:	0073      	lsls	r3, r6, #1
 800edea:	f1c3 0306 	rsb	r3, r3, #6
 800edee:	ea0a 0005 	and.w	r0, sl, r5
 800edf2:	4118      	asrs	r0, r3
 800edf4:	47b8      	blx	r7
 800edf6:	f849 0904 	str.w	r0, [r9], #-4
 800edfa:	b936      	cbnz	r6, 800ee0a <GUI__ExpandPixelIndicesEx+0xca>
 800edfc:	2503      	movs	r5, #3
 800edfe:	f898 a000 	ldrb.w	sl, [r8]
 800ee02:	462e      	mov	r6, r5
 800ee04:	f108 38ff 	add.w	r8, r8, #4294967295
 800ee08:	e002      	b.n	800ee10 <GUI__ExpandPixelIndicesEx+0xd0>
 800ee0a:	00ad      	lsls	r5, r5, #2
 800ee0c:	3e01      	subs	r6, #1
 800ee0e:	b2ed      	uxtb	r5, r5
 800ee10:	3c01      	subs	r4, #1
 800ee12:	d1e9      	bne.n	800ede8 <GUI__ExpandPixelIndicesEx+0xa8>
 800ee14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee18:	1e66      	subs	r6, r4, #1
 800ee1a:	1072      	asrs	r2, r6, #1
 800ee1c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800ee20:	3b01      	subs	r3, #1
 800ee22:	f006 0601 	and.w	r6, r6, #1
 800ee26:	eb05 0802 	add.w	r8, r5, r2
 800ee2a:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800ee2e:	f815 a002 	ldrb.w	sl, [r5, r2]
 800ee32:	00b3      	lsls	r3, r6, #2
 800ee34:	25f0      	movs	r5, #240	; 0xf0
 800ee36:	411d      	asrs	r5, r3
 800ee38:	f108 38ff 	add.w	r8, r8, #4294967295
 800ee3c:	b2ed      	uxtb	r5, r5
 800ee3e:	00b3      	lsls	r3, r6, #2
 800ee40:	f1c3 0304 	rsb	r3, r3, #4
 800ee44:	ea0a 0005 	and.w	r0, sl, r5
 800ee48:	4118      	asrs	r0, r3
 800ee4a:	47b8      	blx	r7
 800ee4c:	f849 0904 	str.w	r0, [r9], #-4
 800ee50:	b936      	cbnz	r6, 800ee60 <GUI__ExpandPixelIndicesEx+0x120>
 800ee52:	f898 a000 	ldrb.w	sl, [r8]
 800ee56:	250f      	movs	r5, #15
 800ee58:	f108 38ff 	add.w	r8, r8, #4294967295
 800ee5c:	2601      	movs	r6, #1
 800ee5e:	e002      	b.n	800ee66 <GUI__ExpandPixelIndicesEx+0x126>
 800ee60:	012d      	lsls	r5, r5, #4
 800ee62:	b2ed      	uxtb	r5, r5
 800ee64:	2600      	movs	r6, #0
 800ee66:	3c01      	subs	r4, #1
 800ee68:	d1e9      	bne.n	800ee3e <GUI__ExpandPixelIndicesEx+0xfe>
 800ee6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee6e:	192e      	adds	r6, r5, r4
 800ee70:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800ee74:	1b34      	subs	r4, r6, r4
 800ee76:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 800ee7a:	47b8      	blx	r7
 800ee7c:	42a6      	cmp	r6, r4
 800ee7e:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ee82:	d1f8      	bne.n	800ee76 <GUI__ExpandPixelIndicesEx+0x136>
 800ee84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee88:	695e      	ldr	r6, [r3, #20]
 800ee8a:	b12e      	cbz	r6, 800ee98 <GUI__ExpandPixelIndicesEx+0x158>
 800ee8c:	4629      	mov	r1, r5
 800ee8e:	4622      	mov	r2, r4
 800ee90:	2302      	movs	r3, #2
 800ee92:	47b0      	blx	r6
 800ee94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee98:	0064      	lsls	r4, r4, #1
 800ee9a:	4425      	add	r5, r4
 800ee9c:	192e      	adds	r6, r5, r4
 800ee9e:	1b2c      	subs	r4, r5, r4
 800eea0:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 800eea4:	47b8      	blx	r7
 800eea6:	42a5      	cmp	r5, r4
 800eea8:	f846 0d04 	str.w	r0, [r6, #-4]!
 800eeac:	d1f8      	bne.n	800eea0 <GUI__ExpandPixelIndicesEx+0x160>
 800eeae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eeb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800eeb6 <_GetTwinArcPara>:
 800eeb6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eeba:	fb01 f901 	mul.w	r9, r1, r1
 800eebe:	1e47      	subs	r7, r0, #1
 800eec0:	4604      	mov	r4, r0
 800eec2:	4340      	muls	r0, r0
 800eec4:	ebc9 0000 	rsb	r0, r9, r0
 800eec8:	460d      	mov	r5, r1
 800eeca:	4692      	mov	sl, r2
 800eecc:	4698      	mov	r8, r3
 800eece:	9e08      	ldr	r6, [sp, #32]
 800eed0:	f7fa fa0b 	bl	80092ea <GUI__sqrt32>
 800eed4:	42bd      	cmp	r5, r7
 800eed6:	f8ca 0000 	str.w	r0, [sl]
 800eeda:	da10      	bge.n	800eefe <_GetTwinArcPara+0x48>
 800eedc:	fb07 f007 	mul.w	r0, r7, r7
 800eee0:	ebc9 0000 	rsb	r0, r9, r0
 800eee4:	f7fa fa01 	bl	80092ea <GUI__sqrt32>
 800eee8:	3c02      	subs	r4, #2
 800eeea:	42a5      	cmp	r5, r4
 800eeec:	f8c8 0000 	str.w	r0, [r8]
 800eef0:	da03      	bge.n	800eefa <_GetTwinArcPara+0x44>
 800eef2:	3801      	subs	r0, #1
 800eef4:	6030      	str	r0, [r6, #0]
 800eef6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eefa:	2300      	movs	r3, #0
 800eefc:	e002      	b.n	800ef04 <_GetTwinArcPara+0x4e>
 800eefe:	2300      	movs	r3, #0
 800ef00:	f8c8 3000 	str.w	r3, [r8]
 800ef04:	6033      	str	r3, [r6, #0]
 800ef06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800ef0c <GUI__DrawTwinArc2>:
 800ef0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef10:	461c      	mov	r4, r3
 800ef12:	4b57      	ldr	r3, [pc, #348]	; (800f070 <GUI__DrawTwinArc2+0x164>)
 800ef14:	681b      	ldr	r3, [r3, #0]
 800ef16:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800ef18:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800ef1a:	b08b      	sub	sp, #44	; 0x2c
 800ef1c:	4415      	add	r5, r2
 800ef1e:	1e63      	subs	r3, r4, #1
 800ef20:	19c6      	adds	r6, r0, r7
 800ef22:	442b      	add	r3, r5
 800ef24:	440f      	add	r7, r1
 800ef26:	a808      	add	r0, sp, #32
 800ef28:	f8ad 6020 	strh.w	r6, [sp, #32]
 800ef2c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800ef30:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800ef34:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ef38:	f7f7 f8ee 	bl	8006118 <WM__InitIVRSearch>
 800ef3c:	2800      	cmp	r0, #0
 800ef3e:	f000 8094 	beq.w	800f06a <GUI__DrawTwinArc2+0x15e>
 800ef42:	2c00      	cmp	r4, #0
 800ef44:	dc02      	bgt.n	800ef4c <GUI__DrawTwinArc2+0x40>
 800ef46:	f7f7 f825 	bl	8005f94 <WM__GetNextIVR>
 800ef4a:	e7f7      	b.n	800ef3c <GUI__DrawTwinArc2+0x30>
 800ef4c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ef4e:	f7fc f832 	bl	800afb6 <GUI_SetColor>
 800ef52:	f104 38ff 	add.w	r8, r4, #4294967295
 800ef56:	4641      	mov	r1, r8
 800ef58:	f118 38ff 	adds.w	r8, r8, #4294967295
 800ef5c:	d324      	bcc.n	800efa8 <GUI__DrawTwinArc2+0x9c>
 800ef5e:	ab07      	add	r3, sp, #28
 800ef60:	9300      	str	r3, [sp, #0]
 800ef62:	4620      	mov	r0, r4
 800ef64:	aa05      	add	r2, sp, #20
 800ef66:	ab06      	add	r3, sp, #24
 800ef68:	f7ff ffa5 	bl	800eeb6 <_GetTwinArcPara>
 800ef6c:	f104 39ff 	add.w	r9, r4, #4294967295
 800ef70:	f8dd a018 	ldr.w	sl, [sp, #24]
 800ef74:	9905      	ldr	r1, [sp, #20]
 800ef76:	1930      	adds	r0, r6, r4
 800ef78:	44a9      	add	r9, r5
 800ef7a:	ebc8 0909 	rsb	r9, r8, r9
 800ef7e:	ebc4 0b07 	rsb	fp, r4, r7
 800ef82:	ebca 0200 	rsb	r2, sl, r0
 800ef86:	eb0b 0301 	add.w	r3, fp, r1
 800ef8a:	1a40      	subs	r0, r0, r1
 800ef8c:	3a01      	subs	r2, #1
 800ef8e:	4649      	mov	r1, r9
 800ef90:	9302      	str	r3, [sp, #8]
 800ef92:	f7f9 fdd1 	bl	8008b38 <LCD_DrawHLine>
 800ef96:	9b02      	ldr	r3, [sp, #8]
 800ef98:	eb0b 000a 	add.w	r0, fp, sl
 800ef9c:	3001      	adds	r0, #1
 800ef9e:	4649      	mov	r1, r9
 800efa0:	461a      	mov	r2, r3
 800efa2:	f7f9 fdc9 	bl	8008b38 <LCD_DrawHLine>
 800efa6:	e7d6      	b.n	800ef56 <GUI__DrawTwinArc2+0x4a>
 800efa8:	2c01      	cmp	r4, #1
 800efaa:	d0cc      	beq.n	800ef46 <GUI__DrawTwinArc2+0x3a>
 800efac:	9815      	ldr	r0, [sp, #84]	; 0x54
 800efae:	f7fc f802 	bl	800afb6 <GUI_SetColor>
 800efb2:	f1a4 0902 	sub.w	r9, r4, #2
 800efb6:	eb05 0b04 	add.w	fp, r5, r4
 800efba:	f105 0802 	add.w	r8, r5, #2
 800efbe:	f1b9 0f00 	cmp.w	r9, #0
 800efc2:	d027      	beq.n	800f014 <GUI__DrawTwinArc2+0x108>
 800efc4:	ab07      	add	r3, sp, #28
 800efc6:	4649      	mov	r1, r9
 800efc8:	9300      	str	r3, [sp, #0]
 800efca:	4620      	mov	r0, r4
 800efcc:	aa05      	add	r2, sp, #20
 800efce:	ab06      	add	r3, sp, #24
 800efd0:	f7ff ff71 	bl	800eeb6 <_GetTwinArcPara>
 800efd4:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800efd8:	9906      	ldr	r1, [sp, #24]
 800efda:	1930      	adds	r0, r6, r4
 800efdc:	1b3b      	subs	r3, r7, r4
 800efde:	ebca 0200 	rsb	r2, sl, r0
 800efe2:	eb03 0c01 	add.w	ip, r3, r1
 800efe6:	1a40      	subs	r0, r0, r1
 800efe8:	3a01      	subs	r2, #1
 800efea:	4641      	mov	r1, r8
 800efec:	9302      	str	r3, [sp, #8]
 800efee:	f8cd c00c 	str.w	ip, [sp, #12]
 800eff2:	f7f9 fda1 	bl	8008b38 <LCD_DrawHLine>
 800eff6:	9b02      	ldr	r3, [sp, #8]
 800eff8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800effc:	eb03 000a 	add.w	r0, r3, sl
 800f000:	4641      	mov	r1, r8
 800f002:	3001      	adds	r0, #1
 800f004:	4662      	mov	r2, ip
 800f006:	f7f9 fd97 	bl	8008b38 <LCD_DrawHLine>
 800f00a:	f109 39ff 	add.w	r9, r9, #4294967295
 800f00e:	f108 0801 	add.w	r8, r8, #1
 800f012:	e7d4      	b.n	800efbe <GUI__DrawTwinArc2+0xb2>
 800f014:	2c02      	cmp	r4, #2
 800f016:	d096      	beq.n	800ef46 <GUI__DrawTwinArc2+0x3a>
 800f018:	9816      	ldr	r0, [sp, #88]	; 0x58
 800f01a:	f7fb ffcc 	bl	800afb6 <GUI_SetColor>
 800f01e:	f1c4 0303 	rsb	r3, r4, #3
 800f022:	f1a4 0803 	sub.w	r8, r4, #3
 800f026:	449b      	add	fp, r3
 800f028:	f1b8 0f00 	cmp.w	r8, #0
 800f02c:	d08b      	beq.n	800ef46 <GUI__DrawTwinArc2+0x3a>
 800f02e:	ab07      	add	r3, sp, #28
 800f030:	4641      	mov	r1, r8
 800f032:	9300      	str	r3, [sp, #0]
 800f034:	4620      	mov	r0, r4
 800f036:	ab06      	add	r3, sp, #24
 800f038:	aa05      	add	r2, sp, #20
 800f03a:	f7ff ff3c 	bl	800eeb6 <_GetTwinArcPara>
 800f03e:	9807      	ldr	r0, [sp, #28]
 800f040:	1932      	adds	r2, r6, r4
 800f042:	ebc4 0907 	rsb	r9, r4, r7
 800f046:	4659      	mov	r1, fp
 800f048:	eb09 0a00 	add.w	sl, r9, r0
 800f04c:	1a10      	subs	r0, r2, r0
 800f04e:	3a01      	subs	r2, #1
 800f050:	f7f9 fd72 	bl	8008b38 <LCD_DrawHLine>
 800f054:	4659      	mov	r1, fp
 800f056:	f109 0001 	add.w	r0, r9, #1
 800f05a:	4652      	mov	r2, sl
 800f05c:	f7f9 fd6c 	bl	8008b38 <LCD_DrawHLine>
 800f060:	f108 38ff 	add.w	r8, r8, #4294967295
 800f064:	f10b 0b01 	add.w	fp, fp, #1
 800f068:	e7de      	b.n	800f028 <GUI__DrawTwinArc2+0x11c>
 800f06a:	b00b      	add	sp, #44	; 0x2c
 800f06c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f070:	200000b8 	.word	0x200000b8

0800f074 <GUI__CompactPixelIndices>:
 800f074:	2a08      	cmp	r2, #8
 800f076:	b510      	push	{r4, lr}
 800f078:	dd0e      	ble.n	800f098 <GUI__CompactPixelIndices+0x24>
 800f07a:	2a10      	cmp	r2, #16
 800f07c:	dc0a      	bgt.n	800f094 <GUI__CompactPixelIndices+0x20>
 800f07e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f082:	4603      	mov	r3, r0
 800f084:	f850 2b04 	ldr.w	r2, [r0], #4
 800f088:	f823 2b02 	strh.w	r2, [r3], #2
 800f08c:	428b      	cmp	r3, r1
 800f08e:	d1f9      	bne.n	800f084 <GUI__CompactPixelIndices+0x10>
 800f090:	2001      	movs	r0, #1
 800f092:	bd10      	pop	{r4, pc}
 800f094:	2000      	movs	r0, #0
 800f096:	bd10      	pop	{r4, pc}
 800f098:	2a02      	cmp	r2, #2
 800f09a:	d06d      	beq.n	800f178 <GUI__CompactPixelIndices+0x104>
 800f09c:	2a04      	cmp	r2, #4
 800f09e:	d054      	beq.n	800f14a <GUI__CompactPixelIndices+0xd6>
 800f0a0:	2a01      	cmp	r2, #1
 800f0a2:	f040 8095 	bne.w	800f1d0 <GUI__CompactPixelIndices+0x15c>
 800f0a6:	4604      	mov	r4, r0
 800f0a8:	6803      	ldr	r3, [r0, #0]
 800f0aa:	2901      	cmp	r1, #1
 800f0ac:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 800f0b0:	b2db      	uxtb	r3, r3
 800f0b2:	d047      	beq.n	800f144 <GUI__CompactPixelIndices+0xd0>
 800f0b4:	6842      	ldr	r2, [r0, #4]
 800f0b6:	2902      	cmp	r1, #2
 800f0b8:	f002 0201 	and.w	r2, r2, #1
 800f0bc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800f0c0:	d102      	bne.n	800f0c8 <GUI__CompactPixelIndices+0x54>
 800f0c2:	f100 0208 	add.w	r2, r0, #8
 800f0c6:	e03e      	b.n	800f146 <GUI__CompactPixelIndices+0xd2>
 800f0c8:	6882      	ldr	r2, [r0, #8]
 800f0ca:	2903      	cmp	r1, #3
 800f0cc:	f002 0201 	and.w	r2, r2, #1
 800f0d0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f0d4:	d102      	bne.n	800f0dc <GUI__CompactPixelIndices+0x68>
 800f0d6:	f100 020c 	add.w	r2, r0, #12
 800f0da:	e034      	b.n	800f146 <GUI__CompactPixelIndices+0xd2>
 800f0dc:	68c2      	ldr	r2, [r0, #12]
 800f0de:	2904      	cmp	r1, #4
 800f0e0:	f002 0201 	and.w	r2, r2, #1
 800f0e4:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800f0e8:	d102      	bne.n	800f0f0 <GUI__CompactPixelIndices+0x7c>
 800f0ea:	f100 0210 	add.w	r2, r0, #16
 800f0ee:	e02a      	b.n	800f146 <GUI__CompactPixelIndices+0xd2>
 800f0f0:	6902      	ldr	r2, [r0, #16]
 800f0f2:	2905      	cmp	r1, #5
 800f0f4:	f002 0201 	and.w	r2, r2, #1
 800f0f8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f0fc:	d102      	bne.n	800f104 <GUI__CompactPixelIndices+0x90>
 800f0fe:	f100 0214 	add.w	r2, r0, #20
 800f102:	e020      	b.n	800f146 <GUI__CompactPixelIndices+0xd2>
 800f104:	6942      	ldr	r2, [r0, #20]
 800f106:	2906      	cmp	r1, #6
 800f108:	f002 0201 	and.w	r2, r2, #1
 800f10c:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800f110:	d102      	bne.n	800f118 <GUI__CompactPixelIndices+0xa4>
 800f112:	f100 0218 	add.w	r2, r0, #24
 800f116:	e016      	b.n	800f146 <GUI__CompactPixelIndices+0xd2>
 800f118:	6982      	ldr	r2, [r0, #24]
 800f11a:	3907      	subs	r1, #7
 800f11c:	f002 0201 	and.w	r2, r2, #1
 800f120:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800f124:	d102      	bne.n	800f12c <GUI__CompactPixelIndices+0xb8>
 800f126:	f100 021c 	add.w	r2, r0, #28
 800f12a:	e005      	b.n	800f138 <GUI__CompactPixelIndices+0xc4>
 800f12c:	f100 0220 	add.w	r2, r0, #32
 800f130:	69c0      	ldr	r0, [r0, #28]
 800f132:	f000 0001 	and.w	r0, r0, #1
 800f136:	4303      	orrs	r3, r0
 800f138:	f804 3b01 	strb.w	r3, [r4], #1
 800f13c:	2900      	cmp	r1, #0
 800f13e:	d0a7      	beq.n	800f090 <GUI__CompactPixelIndices+0x1c>
 800f140:	4610      	mov	r0, r2
 800f142:	e7b1      	b.n	800f0a8 <GUI__CompactPixelIndices+0x34>
 800f144:	1d02      	adds	r2, r0, #4
 800f146:	2100      	movs	r1, #0
 800f148:	e7f6      	b.n	800f138 <GUI__CompactPixelIndices+0xc4>
 800f14a:	4602      	mov	r2, r0
 800f14c:	6803      	ldr	r3, [r0, #0]
 800f14e:	2901      	cmp	r1, #1
 800f150:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800f154:	b2db      	uxtb	r3, r3
 800f156:	d102      	bne.n	800f15e <GUI__CompactPixelIndices+0xea>
 800f158:	1d04      	adds	r4, r0, #4
 800f15a:	2100      	movs	r1, #0
 800f15c:	e006      	b.n	800f16c <GUI__CompactPixelIndices+0xf8>
 800f15e:	f100 0408 	add.w	r4, r0, #8
 800f162:	6840      	ldr	r0, [r0, #4]
 800f164:	f000 000f 	and.w	r0, r0, #15
 800f168:	4303      	orrs	r3, r0
 800f16a:	3902      	subs	r1, #2
 800f16c:	f802 3b01 	strb.w	r3, [r2], #1
 800f170:	2900      	cmp	r1, #0
 800f172:	d08d      	beq.n	800f090 <GUI__CompactPixelIndices+0x1c>
 800f174:	4620      	mov	r0, r4
 800f176:	e7e9      	b.n	800f14c <GUI__CompactPixelIndices+0xd8>
 800f178:	4604      	mov	r4, r0
 800f17a:	6803      	ldr	r3, [r0, #0]
 800f17c:	2901      	cmp	r1, #1
 800f17e:	ea4f 1383 	mov.w	r3, r3, lsl #6
 800f182:	b2db      	uxtb	r3, r3
 800f184:	d021      	beq.n	800f1ca <GUI__CompactPixelIndices+0x156>
 800f186:	6842      	ldr	r2, [r0, #4]
 800f188:	2902      	cmp	r1, #2
 800f18a:	f002 0203 	and.w	r2, r2, #3
 800f18e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800f192:	d102      	bne.n	800f19a <GUI__CompactPixelIndices+0x126>
 800f194:	f100 0208 	add.w	r2, r0, #8
 800f198:	e018      	b.n	800f1cc <GUI__CompactPixelIndices+0x158>
 800f19a:	6882      	ldr	r2, [r0, #8]
 800f19c:	2903      	cmp	r1, #3
 800f19e:	f002 0203 	and.w	r2, r2, #3
 800f1a2:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800f1a6:	d102      	bne.n	800f1ae <GUI__CompactPixelIndices+0x13a>
 800f1a8:	f100 020c 	add.w	r2, r0, #12
 800f1ac:	e00e      	b.n	800f1cc <GUI__CompactPixelIndices+0x158>
 800f1ae:	f100 0210 	add.w	r2, r0, #16
 800f1b2:	68c0      	ldr	r0, [r0, #12]
 800f1b4:	f000 0003 	and.w	r0, r0, #3
 800f1b8:	4303      	orrs	r3, r0
 800f1ba:	3904      	subs	r1, #4
 800f1bc:	f804 3b01 	strb.w	r3, [r4], #1
 800f1c0:	2900      	cmp	r1, #0
 800f1c2:	f43f af65 	beq.w	800f090 <GUI__CompactPixelIndices+0x1c>
 800f1c6:	4610      	mov	r0, r2
 800f1c8:	e7d7      	b.n	800f17a <GUI__CompactPixelIndices+0x106>
 800f1ca:	1d02      	adds	r2, r0, #4
 800f1cc:	2100      	movs	r1, #0
 800f1ce:	e7f5      	b.n	800f1bc <GUI__CompactPixelIndices+0x148>
 800f1d0:	2300      	movs	r3, #0
 800f1d2:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800f1d6:	54c2      	strb	r2, [r0, r3]
 800f1d8:	3301      	adds	r3, #1
 800f1da:	428b      	cmp	r3, r1
 800f1dc:	d1f9      	bne.n	800f1d2 <GUI__CompactPixelIndices+0x15e>
 800f1de:	e757      	b.n	800f090 <GUI__CompactPixelIndices+0x1c>

0800f1e0 <GUI__ConvertColor2Index>:
 800f1e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f1e4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800f1e8:	681e      	ldr	r6, [r3, #0]
 800f1ea:	f1b8 0f00 	cmp.w	r8, #0
 800f1ee:	bf08      	it	eq
 800f1f0:	4680      	moveq	r8, r0
 800f1f2:	2a08      	cmp	r2, #8
 800f1f4:	4604      	mov	r4, r0
 800f1f6:	460d      	mov	r5, r1
 800f1f8:	dd05      	ble.n	800f206 <GUI__ConvertColor2Index+0x26>
 800f1fa:	2a10      	cmp	r2, #16
 800f1fc:	f340 80b6 	ble.w	800f36c <GUI__ConvertColor2Index+0x18c>
 800f200:	2000      	movs	r0, #0
 800f202:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f206:	3a01      	subs	r2, #1
 800f208:	2a07      	cmp	r2, #7
 800f20a:	f200 80a4 	bhi.w	800f356 <GUI__ConvertColor2Index+0x176>
 800f20e:	e8df f002 	tbb	[pc, r2]
 800f212:	6111      	.short	0x6111
 800f214:	a2a287a2 	.word	0xa2a287a2
 800f218:	92a2      	.short	0x92a2
 800f21a:	69e0      	ldr	r0, [r4, #28]
 800f21c:	47b0      	blx	r6
 800f21e:	4338      	orrs	r0, r7
 800f220:	f104 0920 	add.w	r9, r4, #32
 800f224:	b2c7      	uxtb	r7, r0
 800f226:	3d08      	subs	r5, #8
 800f228:	f808 7b01 	strb.w	r7, [r8], #1
 800f22c:	2d00      	cmp	r5, #0
 800f22e:	f000 8092 	beq.w	800f356 <GUI__ConvertColor2Index+0x176>
 800f232:	464c      	mov	r4, r9
 800f234:	6820      	ldr	r0, [r4, #0]
 800f236:	47b0      	blx	r6
 800f238:	2d01      	cmp	r5, #1
 800f23a:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 800f23e:	b2c7      	uxtb	r7, r0
 800f240:	f000 808c 	beq.w	800f35c <GUI__ConvertColor2Index+0x17c>
 800f244:	6860      	ldr	r0, [r4, #4]
 800f246:	47b0      	blx	r6
 800f248:	2d02      	cmp	r5, #2
 800f24a:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 800f24e:	b2c7      	uxtb	r7, r0
 800f250:	d102      	bne.n	800f258 <GUI__ConvertColor2Index+0x78>
 800f252:	f104 0908 	add.w	r9, r4, #8
 800f256:	e083      	b.n	800f360 <GUI__ConvertColor2Index+0x180>
 800f258:	68a0      	ldr	r0, [r4, #8]
 800f25a:	47b0      	blx	r6
 800f25c:	2d03      	cmp	r5, #3
 800f25e:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 800f262:	b2c7      	uxtb	r7, r0
 800f264:	d102      	bne.n	800f26c <GUI__ConvertColor2Index+0x8c>
 800f266:	f104 090c 	add.w	r9, r4, #12
 800f26a:	e079      	b.n	800f360 <GUI__ConvertColor2Index+0x180>
 800f26c:	68e0      	ldr	r0, [r4, #12]
 800f26e:	47b0      	blx	r6
 800f270:	2d04      	cmp	r5, #4
 800f272:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800f276:	b2c7      	uxtb	r7, r0
 800f278:	d102      	bne.n	800f280 <GUI__ConvertColor2Index+0xa0>
 800f27a:	f104 0910 	add.w	r9, r4, #16
 800f27e:	e06f      	b.n	800f360 <GUI__ConvertColor2Index+0x180>
 800f280:	6920      	ldr	r0, [r4, #16]
 800f282:	47b0      	blx	r6
 800f284:	2d05      	cmp	r5, #5
 800f286:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 800f28a:	b2c7      	uxtb	r7, r0
 800f28c:	d102      	bne.n	800f294 <GUI__ConvertColor2Index+0xb4>
 800f28e:	f104 0914 	add.w	r9, r4, #20
 800f292:	e065      	b.n	800f360 <GUI__ConvertColor2Index+0x180>
 800f294:	6960      	ldr	r0, [r4, #20]
 800f296:	47b0      	blx	r6
 800f298:	2d06      	cmp	r5, #6
 800f29a:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800f29e:	b2c7      	uxtb	r7, r0
 800f2a0:	d102      	bne.n	800f2a8 <GUI__ConvertColor2Index+0xc8>
 800f2a2:	f104 0918 	add.w	r9, r4, #24
 800f2a6:	e05b      	b.n	800f360 <GUI__ConvertColor2Index+0x180>
 800f2a8:	69a0      	ldr	r0, [r4, #24]
 800f2aa:	47b0      	blx	r6
 800f2ac:	2d07      	cmp	r5, #7
 800f2ae:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 800f2b2:	b2c7      	uxtb	r7, r0
 800f2b4:	d1b1      	bne.n	800f21a <GUI__ConvertColor2Index+0x3a>
 800f2b6:	f104 091c 	add.w	r9, r4, #28
 800f2ba:	e051      	b.n	800f360 <GUI__ConvertColor2Index+0x180>
 800f2bc:	68e0      	ldr	r0, [r4, #12]
 800f2be:	47b0      	blx	r6
 800f2c0:	4338      	orrs	r0, r7
 800f2c2:	f104 0910 	add.w	r9, r4, #16
 800f2c6:	b2c7      	uxtb	r7, r0
 800f2c8:	3d04      	subs	r5, #4
 800f2ca:	f808 7b01 	strb.w	r7, [r8], #1
 800f2ce:	2d00      	cmp	r5, #0
 800f2d0:	d041      	beq.n	800f356 <GUI__ConvertColor2Index+0x176>
 800f2d2:	464c      	mov	r4, r9
 800f2d4:	6820      	ldr	r0, [r4, #0]
 800f2d6:	47b0      	blx	r6
 800f2d8:	2d01      	cmp	r5, #1
 800f2da:	ea4f 1080 	mov.w	r0, r0, lsl #6
 800f2de:	b2c7      	uxtb	r7, r0
 800f2e0:	d040      	beq.n	800f364 <GUI__ConvertColor2Index+0x184>
 800f2e2:	6860      	ldr	r0, [r4, #4]
 800f2e4:	47b0      	blx	r6
 800f2e6:	2d02      	cmp	r5, #2
 800f2e8:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800f2ec:	b2c7      	uxtb	r7, r0
 800f2ee:	d102      	bne.n	800f2f6 <GUI__ConvertColor2Index+0x116>
 800f2f0:	f104 0908 	add.w	r9, r4, #8
 800f2f4:	e038      	b.n	800f368 <GUI__ConvertColor2Index+0x188>
 800f2f6:	68a0      	ldr	r0, [r4, #8]
 800f2f8:	47b0      	blx	r6
 800f2fa:	2d03      	cmp	r5, #3
 800f2fc:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800f300:	b2c7      	uxtb	r7, r0
 800f302:	d1db      	bne.n	800f2bc <GUI__ConvertColor2Index+0xdc>
 800f304:	f104 090c 	add.w	r9, r4, #12
 800f308:	e02e      	b.n	800f368 <GUI__ConvertColor2Index+0x188>
 800f30a:	6860      	ldr	r0, [r4, #4]
 800f30c:	47b0      	blx	r6
 800f30e:	4338      	orrs	r0, r7
 800f310:	f104 0908 	add.w	r9, r4, #8
 800f314:	b2c7      	uxtb	r7, r0
 800f316:	3d02      	subs	r5, #2
 800f318:	f808 7b01 	strb.w	r7, [r8], #1
 800f31c:	b1dd      	cbz	r5, 800f356 <GUI__ConvertColor2Index+0x176>
 800f31e:	464c      	mov	r4, r9
 800f320:	6820      	ldr	r0, [r4, #0]
 800f322:	47b0      	blx	r6
 800f324:	2d01      	cmp	r5, #1
 800f326:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800f32a:	b2c7      	uxtb	r7, r0
 800f32c:	d1ed      	bne.n	800f30a <GUI__ConvertColor2Index+0x12a>
 800f32e:	f104 0904 	add.w	r9, r4, #4
 800f332:	2500      	movs	r5, #0
 800f334:	e7f0      	b.n	800f318 <GUI__ConvertColor2Index+0x138>
 800f336:	691f      	ldr	r7, [r3, #16]
 800f338:	b12f      	cbz	r7, 800f346 <GUI__ConvertColor2Index+0x166>
 800f33a:	4620      	mov	r0, r4
 800f33c:	4641      	mov	r1, r8
 800f33e:	462a      	mov	r2, r5
 800f340:	2301      	movs	r3, #1
 800f342:	47b8      	blx	r7
 800f344:	e007      	b.n	800f356 <GUI__ConvertColor2Index+0x176>
 800f346:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 800f34a:	47b0      	blx	r6
 800f34c:	f808 0007 	strb.w	r0, [r8, r7]
 800f350:	3701      	adds	r7, #1
 800f352:	42bd      	cmp	r5, r7
 800f354:	d1f7      	bne.n	800f346 <GUI__ConvertColor2Index+0x166>
 800f356:	2001      	movs	r0, #1
 800f358:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f35c:	f104 0904 	add.w	r9, r4, #4
 800f360:	2500      	movs	r5, #0
 800f362:	e761      	b.n	800f228 <GUI__ConvertColor2Index+0x48>
 800f364:	f104 0904 	add.w	r9, r4, #4
 800f368:	2500      	movs	r5, #0
 800f36a:	e7ae      	b.n	800f2ca <GUI__ConvertColor2Index+0xea>
 800f36c:	691f      	ldr	r7, [r3, #16]
 800f36e:	b11f      	cbz	r7, 800f378 <GUI__ConvertColor2Index+0x198>
 800f370:	4641      	mov	r1, r8
 800f372:	462a      	mov	r2, r5
 800f374:	2302      	movs	r3, #2
 800f376:	e7e4      	b.n	800f342 <GUI__ConvertColor2Index+0x162>
 800f378:	f854 0b04 	ldr.w	r0, [r4], #4
 800f37c:	47b0      	blx	r6
 800f37e:	3d01      	subs	r5, #1
 800f380:	f828 0b02 	strh.w	r0, [r8], #2
 800f384:	d1f8      	bne.n	800f378 <GUI__ConvertColor2Index+0x198>
 800f386:	e7e6      	b.n	800f356 <GUI__ConvertColor2Index+0x176>

0800f388 <GUI__CompactPixelIndicesEx>:
 800f388:	b513      	push	{r0, r1, r4, lr}
 800f38a:	2400      	movs	r4, #0
 800f38c:	9400      	str	r4, [sp, #0]
 800f38e:	f7ff ff27 	bl	800f1e0 <GUI__ConvertColor2Index>
 800f392:	b002      	add	sp, #8
 800f394:	bd10      	pop	{r4, pc}

0800f396 <_GetCharCode>:
 800f396:	7800      	ldrb	r0, [r0, #0]
 800f398:	4770      	bx	lr

0800f39a <_GetCharSize>:
 800f39a:	2001      	movs	r0, #1
 800f39c:	4770      	bx	lr

0800f39e <_CalcSizeOfChar>:
 800f39e:	2001      	movs	r0, #1
 800f3a0:	4770      	bx	lr

0800f3a2 <_Encode>:
 800f3a2:	7001      	strb	r1, [r0, #0]
 800f3a4:	2001      	movs	r0, #1
 800f3a6:	4770      	bx	lr

0800f3a8 <_Add>:
 800f3a8:	4a0f      	ldr	r2, [pc, #60]	; (800f3e8 <_Add+0x40>)
 800f3aa:	6813      	ldr	r3, [r2, #0]
 800f3ac:	2b0b      	cmp	r3, #11
 800f3ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f3b0:	4617      	mov	r7, r2
 800f3b2:	dc18      	bgt.n	800f3e6 <_Add+0x3e>
 800f3b4:	2b00      	cmp	r3, #0
 800f3b6:	4c0d      	ldr	r4, [pc, #52]	; (800f3ec <_Add+0x44>)
 800f3b8:	dc01      	bgt.n	800f3be <_Add+0x16>
 800f3ba:	2200      	movs	r2, #0
 800f3bc:	e00f      	b.n	800f3de <_Add+0x36>
 800f3be:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800f3c2:	461a      	mov	r2, r3
 800f3c4:	f831 6d02 	ldrh.w	r6, [r1, #-2]!
 800f3c8:	fa0f fc86 	sxth.w	ip, r6
 800f3cc:	4584      	cmp	ip, r0
 800f3ce:	f102 35ff 	add.w	r5, r2, #4294967295
 800f3d2:	db04      	blt.n	800f3de <_Add+0x36>
 800f3d4:	804e      	strh	r6, [r1, #2]
 800f3d6:	2d00      	cmp	r5, #0
 800f3d8:	d0ef      	beq.n	800f3ba <_Add+0x12>
 800f3da:	462a      	mov	r2, r5
 800f3dc:	e7f2      	b.n	800f3c4 <_Add+0x1c>
 800f3de:	3301      	adds	r3, #1
 800f3e0:	f824 0012 	strh.w	r0, [r4, r2, lsl #1]
 800f3e4:	603b      	str	r3, [r7, #0]
 800f3e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3e8:	20002c5c 	.word	0x20002c5c
 800f3ec:	20002c60 	.word	0x20002c60

0800f3f0 <GL_FillPolygon>:
 800f3f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3f4:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800f5b0 <GL_FillPolygon+0x1c0>
 800f3f8:	9101      	str	r1, [sp, #4]
 800f3fa:	4692      	mov	sl, r2
 800f3fc:	4606      	mov	r6, r0
 800f3fe:	f643 74ff 	movw	r4, #16383	; 0x3fff
 800f402:	2200      	movs	r2, #0
 800f404:	9901      	ldr	r1, [sp, #4]
 800f406:	428a      	cmp	r2, r1
 800f408:	da0b      	bge.n	800f422 <GL_FillPolygon+0x32>
 800f40a:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800f40e:	3201      	adds	r2, #1
 800f410:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f414:	428c      	cmp	r4, r1
 800f416:	bfa8      	it	ge
 800f418:	460c      	movge	r4, r1
 800f41a:	4589      	cmp	r9, r1
 800f41c:	bfb8      	it	lt
 800f41e:	4689      	movlt	r9, r1
 800f420:	e7f0      	b.n	800f404 <GL_FillPolygon+0x14>
 800f422:	4960      	ldr	r1, [pc, #384]	; (800f5a4 <GL_FillPolygon+0x1b4>)
 800f424:	680a      	ldr	r2, [r1, #0]
 800f426:	6952      	ldr	r2, [r2, #20]
 800f428:	468b      	mov	fp, r1
 800f42a:	b15a      	cbz	r2, 800f444 <GL_FillPolygon+0x54>
 800f42c:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800f430:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800f434:	1ac9      	subs	r1, r1, r3
 800f436:	1ad2      	subs	r2, r2, r3
 800f438:	4589      	cmp	r9, r1
 800f43a:	bfa8      	it	ge
 800f43c:	4689      	movge	r9, r1
 800f43e:	4294      	cmp	r4, r2
 800f440:	bfb8      	it	lt
 800f442:	4614      	movlt	r4, r2
 800f444:	eb04 0803 	add.w	r8, r4, r3
 800f448:	454c      	cmp	r4, r9
 800f44a:	f300 80a7 	bgt.w	800f59c <GL_FillPolygon+0x1ac>
 800f44e:	4b56      	ldr	r3, [pc, #344]	; (800f5a8 <GL_FillPolygon+0x1b8>)
 800f450:	2700      	movs	r7, #0
 800f452:	601f      	str	r7, [r3, #0]
 800f454:	4635      	mov	r5, r6
 800f456:	9901      	ldr	r1, [sp, #4]
 800f458:	428f      	cmp	r7, r1
 800f45a:	da55      	bge.n	800f508 <GL_FillPolygon+0x118>
 800f45c:	9b01      	ldr	r3, [sp, #4]
 800f45e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f462:	1e59      	subs	r1, r3, #1
 800f464:	428f      	cmp	r7, r1
 800f466:	bfb4      	ite	lt
 800f468:	f107 0c01 	addlt.w	ip, r7, #1
 800f46c:	f04f 0c00 	movge.w	ip, #0
 800f470:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800f474:	eb06 030c 	add.w	r3, r6, ip
 800f478:	42a2      	cmp	r2, r4
 800f47a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f47e:	d136      	bne.n	800f4ee <GL_FillPolygon+0xfe>
 800f480:	42a3      	cmp	r3, r4
 800f482:	d002      	beq.n	800f48a <GL_FillPolygon+0x9a>
 800f484:	463a      	mov	r2, r7
 800f486:	2000      	movs	r0, #0
 800f488:	e01b      	b.n	800f4c2 <GL_FillPolygon+0xd2>
 800f48a:	f9b5 e000 	ldrsh.w	lr, [r5]
 800f48e:	f936 200c 	ldrsh.w	r2, [r6, ip]
 800f492:	f8db 3000 	ldr.w	r3, [fp]
 800f496:	44d6      	add	lr, sl
 800f498:	4452      	add	r2, sl
 800f49a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f49c:	4596      	cmp	lr, r2
 800f49e:	681b      	ldr	r3, [r3, #0]
 800f4a0:	da02      	bge.n	800f4a8 <GL_FillPolygon+0xb8>
 800f4a2:	4670      	mov	r0, lr
 800f4a4:	4641      	mov	r1, r8
 800f4a6:	e020      	b.n	800f4ea <GL_FillPolygon+0xfa>
 800f4a8:	4610      	mov	r0, r2
 800f4aa:	4641      	mov	r1, r8
 800f4ac:	4672      	mov	r2, lr
 800f4ae:	e01c      	b.n	800f4ea <GL_FillPolygon+0xfa>
 800f4b0:	b152      	cbz	r2, 800f4c8 <GL_FillPolygon+0xd8>
 800f4b2:	3a01      	subs	r2, #1
 800f4b4:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 800f4b8:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 800f4bc:	45a4      	cmp	ip, r4
 800f4be:	d105      	bne.n	800f4cc <GL_FillPolygon+0xdc>
 800f4c0:	3001      	adds	r0, #1
 800f4c2:	4288      	cmp	r0, r1
 800f4c4:	dbf4      	blt.n	800f4b0 <GL_FillPolygon+0xc0>
 800f4c6:	e01c      	b.n	800f502 <GL_FillPolygon+0x112>
 800f4c8:	460a      	mov	r2, r1
 800f4ca:	e7f3      	b.n	800f4b4 <GL_FillPolygon+0xc4>
 800f4cc:	ebc4 0c0c 	rsb	ip, r4, ip
 800f4d0:	1b1b      	subs	r3, r3, r4
 800f4d2:	ea9c 0f03 	teq	ip, r3
 800f4d6:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f4da:	d44d      	bmi.n	800f578 <GL_FillPolygon+0x188>
 800f4dc:	f8db 3000 	ldr.w	r3, [fp]
 800f4e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f4e2:	4450      	add	r0, sl
 800f4e4:	681b      	ldr	r3, [r3, #0]
 800f4e6:	4641      	mov	r1, r8
 800f4e8:	4602      	mov	r2, r0
 800f4ea:	4798      	blx	r3
 800f4ec:	e009      	b.n	800f502 <GL_FillPolygon+0x112>
 800f4ee:	42a3      	cmp	r3, r4
 800f4f0:	d007      	beq.n	800f502 <GL_FillPolygon+0x112>
 800f4f2:	db44      	blt.n	800f57e <GL_FillPolygon+0x18e>
 800f4f4:	42a2      	cmp	r2, r4
 800f4f6:	dd27      	ble.n	800f548 <GL_FillPolygon+0x158>
 800f4f8:	42a3      	cmp	r3, r4
 800f4fa:	dd42      	ble.n	800f582 <GL_FillPolygon+0x192>
 800f4fc:	e001      	b.n	800f502 <GL_FillPolygon+0x112>
 800f4fe:	42a3      	cmp	r3, r4
 800f500:	dd49      	ble.n	800f596 <GL_FillPolygon+0x1a6>
 800f502:	3701      	adds	r7, #1
 800f504:	3504      	adds	r5, #4
 800f506:	e7a6      	b.n	800f456 <GL_FillPolygon+0x66>
 800f508:	2500      	movs	r5, #0
 800f50a:	4628      	mov	r0, r5
 800f50c:	462f      	mov	r7, r5
 800f50e:	4b26      	ldr	r3, [pc, #152]	; (800f5a8 <GL_FillPolygon+0x1b8>)
 800f510:	681b      	ldr	r3, [r3, #0]
 800f512:	429f      	cmp	r7, r3
 800f514:	da14      	bge.n	800f540 <GL_FillPolygon+0x150>
 800f516:	4b25      	ldr	r3, [pc, #148]	; (800f5ac <GL_FillPolygon+0x1bc>)
 800f518:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 800f51c:	b15d      	cbz	r5, 800f536 <GL_FillPolygon+0x146>
 800f51e:	f8db 2000 	ldr.w	r2, [fp]
 800f522:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800f524:	4450      	add	r0, sl
 800f526:	f8d2 c000 	ldr.w	ip, [r2]
 800f52a:	9300      	str	r3, [sp, #0]
 800f52c:	eb0a 0203 	add.w	r2, sl, r3
 800f530:	4641      	mov	r1, r8
 800f532:	47e0      	blx	ip
 800f534:	9b00      	ldr	r3, [sp, #0]
 800f536:	f085 0501 	eor.w	r5, r5, #1
 800f53a:	3701      	adds	r7, #1
 800f53c:	4618      	mov	r0, r3
 800f53e:	e7e6      	b.n	800f50e <GL_FillPolygon+0x11e>
 800f540:	3401      	adds	r4, #1
 800f542:	f108 0801 	add.w	r8, r8, #1
 800f546:	e77f      	b.n	800f448 <GL_FillPolygon+0x58>
 800f548:	429a      	cmp	r2, r3
 800f54a:	dcd8      	bgt.n	800f4fe <GL_FillPolygon+0x10e>
 800f54c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f550:	f936 000c 	ldrsh.w	r0, [r6, ip]
 800f554:	ebc2 0e04 	rsb	lr, r2, r4
 800f558:	1a40      	subs	r0, r0, r1
 800f55a:	fb0e f000 	mul.w	r0, lr, r0
 800f55e:	2800      	cmp	r0, #0
 800f560:	ebc2 0303 	rsb	r3, r2, r3
 800f564:	bfdb      	ittet	le
 800f566:	105a      	asrle	r2, r3, #1
 800f568:	f1c2 0201 	rsble	r2, r2, #1
 800f56c:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 800f570:	1880      	addle	r0, r0, r2
 800f572:	fb90 f0f3 	sdiv	r0, r0, r3
 800f576:	4408      	add	r0, r1
 800f578:	f7ff ff16 	bl	800f3a8 <_Add>
 800f57c:	e7c1      	b.n	800f502 <GL_FillPolygon+0x112>
 800f57e:	42a2      	cmp	r2, r4
 800f580:	dbbf      	blt.n	800f502 <GL_FillPolygon+0x112>
 800f582:	429a      	cmp	r2, r3
 800f584:	ddbd      	ble.n	800f502 <GL_FillPolygon+0x112>
 800f586:	4696      	mov	lr, r2
 800f588:	f936 100c 	ldrsh.w	r1, [r6, ip]
 800f58c:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f590:	461a      	mov	r2, r3
 800f592:	4673      	mov	r3, lr
 800f594:	e7de      	b.n	800f554 <GL_FillPolygon+0x164>
 800f596:	42a2      	cmp	r2, r4
 800f598:	daf5      	bge.n	800f586 <GL_FillPolygon+0x196>
 800f59a:	e7b2      	b.n	800f502 <GL_FillPolygon+0x112>
 800f59c:	b003      	add	sp, #12
 800f59e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5a2:	bf00      	nop
 800f5a4:	200000b8 	.word	0x200000b8
 800f5a8:	20002c5c 	.word	0x20002c5c
 800f5ac:	20002c60 	.word	0x20002c60
 800f5b0:	ffffc001 	.word	0xffffc001

0800f5b4 <_DrawGradient>:
 800f5b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5b8:	b08f      	sub	sp, #60	; 0x3c
 800f5ba:	4688      	mov	r8, r1
 800f5bc:	4614      	mov	r4, r2
 800f5be:	991a      	ldr	r1, [sp, #104]	; 0x68
 800f5c0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800f5c2:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800f5c6:	f8dd b064 	ldr.w	fp, [sp, #100]	; 0x64
 800f5ca:	9104      	str	r1, [sp, #16]
 800f5cc:	4605      	mov	r5, r0
 800f5ce:	461e      	mov	r6, r3
 800f5d0:	9203      	str	r2, [sp, #12]
 800f5d2:	f7fb fc1c 	bl	800ae0e <GUI_GetColor>
 800f5d6:	45da      	cmp	sl, fp
 800f5d8:	9009      	str	r0, [sp, #36]	; 0x24
 800f5da:	d109      	bne.n	800f5f0 <_DrawGradient+0x3c>
 800f5dc:	4650      	mov	r0, sl
 800f5de:	f7f9 fdcf 	bl	8009180 <LCD_SetColor>
 800f5e2:	9b03      	ldr	r3, [sp, #12]
 800f5e4:	b113      	cbz	r3, 800f5ec <_DrawGradient+0x38>
 800f5e6:	4628      	mov	r0, r5
 800f5e8:	4641      	mov	r1, r8
 800f5ea:	e09d      	b.n	800f728 <_DrawGradient+0x174>
 800f5ec:	4640      	mov	r0, r8
 800f5ee:	e0a1      	b.n	800f734 <_DrawGradient+0x180>
 800f5f0:	ebb6 0708 	subs.w	r7, r6, r8
 800f5f4:	f000 80b2 	beq.w	800f75c <_DrawGradient+0x1a8>
 800f5f8:	fa5f f28a 	uxtb.w	r2, sl
 800f5fc:	fa5f f38b 	uxtb.w	r3, fp
 800f600:	1a9b      	subs	r3, r3, r2
 800f602:	930a      	str	r3, [sp, #40]	; 0x28
 800f604:	2302      	movs	r3, #2
 800f606:	fb97 f3f3 	sdiv	r3, r7, r3
 800f60a:	fb02 3207 	mla	r2, r2, r7, r3
 800f60e:	f3cb 2107 	ubfx	r1, fp, #8, #8
 800f612:	9205      	str	r2, [sp, #20]
 800f614:	f3ca 2207 	ubfx	r2, sl, #8, #8
 800f618:	1a89      	subs	r1, r1, r2
 800f61a:	fb02 3207 	mla	r2, r2, r7, r3
 800f61e:	910b      	str	r1, [sp, #44]	; 0x2c
 800f620:	9206      	str	r2, [sp, #24]
 800f622:	f3cb 4107 	ubfx	r1, fp, #16, #8
 800f626:	f3ca 4207 	ubfx	r2, sl, #16, #8
 800f62a:	ea4f 6a1a 	mov.w	sl, sl, lsr #24
 800f62e:	1a89      	subs	r1, r1, r2
 800f630:	ebca 6b1b 	rsb	fp, sl, fp, lsr #24
 800f634:	fb02 3207 	mla	r2, r2, r7, r3
 800f638:	fb0a 3a07 	mla	sl, sl, r7, r3
 800f63c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f63e:	910c      	str	r1, [sp, #48]	; 0x30
 800f640:	9207      	str	r2, [sp, #28]
 800f642:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 800f646:	f8cd a020 	str.w	sl, [sp, #32]
 800f64a:	f108 33ff 	add.w	r3, r8, #4294967295
 800f64e:	f04f 0901 	mov.w	r9, #1
 800f652:	f103 0a01 	add.w	sl, r3, #1
 800f656:	45b2      	cmp	sl, r6
 800f658:	dc5b      	bgt.n	800f712 <_DrawGradient+0x15e>
 800f65a:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f65e:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 800f662:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f664:	fb9c fcf7 	sdiv	ip, ip, r7
 800f668:	f8cd c004 	str.w	ip, [sp, #4]
 800f66c:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f670:	44f4      	add	ip, lr
 800f672:	f8cd c014 	str.w	ip, [sp, #20]
 800f676:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 800f67a:	f8dd c018 	ldr.w	ip, [sp, #24]
 800f67e:	fb9c f1f7 	sdiv	r1, ip, r7
 800f682:	44f4      	add	ip, lr
 800f684:	f8cd c018 	str.w	ip, [sp, #24]
 800f688:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800f68c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800f690:	fb9c fbf7 	sdiv	fp, ip, r7
 800f694:	44f4      	add	ip, lr
 800f696:	f8cd c01c 	str.w	ip, [sp, #28]
 800f69a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800f69e:	fb9c fef7 	sdiv	lr, ip, r7
 800f6a2:	4494      	add	ip, r2
 800f6a4:	f8cd c020 	str.w	ip, [sp, #32]
 800f6a8:	f8dd c004 	ldr.w	ip, [sp, #4]
 800f6ac:	ea4f 4b0b 	mov.w	fp, fp, lsl #16
 800f6b0:	ea4b 6b0e 	orr.w	fp, fp, lr, lsl #24
 800f6b4:	ea4c 2201 	orr.w	r2, ip, r1, lsl #8
 800f6b8:	45c2      	cmp	sl, r8
 800f6ba:	ea4b 0b02 	orr.w	fp, fp, r2
 800f6be:	dd25      	ble.n	800f70c <_DrawGradient+0x158>
 800f6c0:	4583      	cmp	fp, r0
 800f6c2:	d102      	bne.n	800f6ca <_DrawGradient+0x116>
 800f6c4:	f109 0901 	add.w	r9, r9, #1
 800f6c8:	e020      	b.n	800f70c <_DrawGradient+0x158>
 800f6ca:	9302      	str	r3, [sp, #8]
 800f6cc:	f7f9 fd58 	bl	8009180 <LCD_SetColor>
 800f6d0:	f1b9 0f01 	cmp.w	r9, #1
 800f6d4:	9b02      	ldr	r3, [sp, #8]
 800f6d6:	d00f      	beq.n	800f6f8 <_DrawGradient+0x144>
 800f6d8:	9a03      	ldr	r2, [sp, #12]
 800f6da:	ebc9 010a 	rsb	r1, r9, sl
 800f6de:	b112      	cbz	r2, 800f6e6 <_DrawGradient+0x132>
 800f6e0:	4628      	mov	r0, r5
 800f6e2:	4622      	mov	r2, r4
 800f6e4:	e003      	b.n	800f6ee <_DrawGradient+0x13a>
 800f6e6:	4608      	mov	r0, r1
 800f6e8:	461a      	mov	r2, r3
 800f6ea:	4629      	mov	r1, r5
 800f6ec:	4623      	mov	r3, r4
 800f6ee:	f7f9 fa6f 	bl	8008bd0 <LCD_FillRect>
 800f6f2:	f04f 0901 	mov.w	r9, #1
 800f6f6:	e009      	b.n	800f70c <_DrawGradient+0x158>
 800f6f8:	9903      	ldr	r1, [sp, #12]
 800f6fa:	b111      	cbz	r1, 800f702 <_DrawGradient+0x14e>
 800f6fc:	4628      	mov	r0, r5
 800f6fe:	4619      	mov	r1, r3
 800f700:	e001      	b.n	800f706 <_DrawGradient+0x152>
 800f702:	4618      	mov	r0, r3
 800f704:	4629      	mov	r1, r5
 800f706:	4622      	mov	r2, r4
 800f708:	9b04      	ldr	r3, [sp, #16]
 800f70a:	4798      	blx	r3
 800f70c:	4653      	mov	r3, sl
 800f70e:	4658      	mov	r0, fp
 800f710:	e79f      	b.n	800f652 <_DrawGradient+0x9e>
 800f712:	f7f9 fd35 	bl	8009180 <LCD_SetColor>
 800f716:	f1b9 0f01 	cmp.w	r9, #1
 800f71a:	d00f      	beq.n	800f73c <_DrawGradient+0x188>
 800f71c:	9a03      	ldr	r2, [sp, #12]
 800f71e:	ebc9 0106 	rsb	r1, r9, r6
 800f722:	b132      	cbz	r2, 800f732 <_DrawGradient+0x17e>
 800f724:	4628      	mov	r0, r5
 800f726:	3101      	adds	r1, #1
 800f728:	4622      	mov	r2, r4
 800f72a:	4633      	mov	r3, r6
 800f72c:	f7f9 fa50 	bl	8008bd0 <LCD_FillRect>
 800f730:	e00e      	b.n	800f750 <_DrawGradient+0x19c>
 800f732:	1c48      	adds	r0, r1, #1
 800f734:	4629      	mov	r1, r5
 800f736:	4632      	mov	r2, r6
 800f738:	4623      	mov	r3, r4
 800f73a:	e7f7      	b.n	800f72c <_DrawGradient+0x178>
 800f73c:	9b03      	ldr	r3, [sp, #12]
 800f73e:	b113      	cbz	r3, 800f746 <_DrawGradient+0x192>
 800f740:	4628      	mov	r0, r5
 800f742:	4631      	mov	r1, r6
 800f744:	e001      	b.n	800f74a <_DrawGradient+0x196>
 800f746:	4630      	mov	r0, r6
 800f748:	4629      	mov	r1, r5
 800f74a:	4622      	mov	r2, r4
 800f74c:	9b04      	ldr	r3, [sp, #16]
 800f74e:	4798      	blx	r3
 800f750:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f752:	b00f      	add	sp, #60	; 0x3c
 800f754:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f758:	f7f9 bd12 	b.w	8009180 <LCD_SetColor>
 800f75c:	b00f      	add	sp, #60	; 0x3c
 800f75e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f764 <GUI_DrawGradientV>:
 800f764:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f768:	4c15      	ldr	r4, [pc, #84]	; (800f7c0 <GUI_DrawGradientV+0x5c>)
 800f76a:	6824      	ldr	r4, [r4, #0]
 800f76c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800f76e:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800f770:	b087      	sub	sp, #28
 800f772:	eb00 0905 	add.w	r9, r0, r5
 800f776:	eb01 0804 	add.w	r8, r1, r4
 800f77a:	4415      	add	r5, r2
 800f77c:	441c      	add	r4, r3
 800f77e:	a804      	add	r0, sp, #16
 800f780:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f782:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f784:	f8ad 9010 	strh.w	r9, [sp, #16]
 800f788:	f8ad 5014 	strh.w	r5, [sp, #20]
 800f78c:	f8ad 8012 	strh.w	r8, [sp, #18]
 800f790:	f8ad 4016 	strh.w	r4, [sp, #22]
 800f794:	f7f6 fcc0 	bl	8006118 <WM__InitIVRSearch>
 800f798:	b170      	cbz	r0, 800f7b8 <GUI_DrawGradientV+0x54>
 800f79a:	4b0a      	ldr	r3, [pc, #40]	; (800f7c4 <GUI_DrawGradientV+0x60>)
 800f79c:	9302      	str	r3, [sp, #8]
 800f79e:	2301      	movs	r3, #1
 800f7a0:	9303      	str	r3, [sp, #12]
 800f7a2:	4648      	mov	r0, r9
 800f7a4:	4641      	mov	r1, r8
 800f7a6:	462a      	mov	r2, r5
 800f7a8:	4623      	mov	r3, r4
 800f7aa:	9700      	str	r7, [sp, #0]
 800f7ac:	9601      	str	r6, [sp, #4]
 800f7ae:	f7ff ff01 	bl	800f5b4 <_DrawGradient>
 800f7b2:	f7f6 fbef 	bl	8005f94 <WM__GetNextIVR>
 800f7b6:	e7ef      	b.n	800f798 <GUI_DrawGradientV+0x34>
 800f7b8:	b007      	add	sp, #28
 800f7ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f7be:	bf00      	nop
 800f7c0:	200000b8 	.word	0x200000b8
 800f7c4:	08008b39 	.word	0x08008b39

0800f7c8 <GUI_DrawGradientH>:
 800f7c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f7cc:	4c15      	ldr	r4, [pc, #84]	; (800f824 <GUI_DrawGradientH+0x5c>)
 800f7ce:	6825      	ldr	r5, [r4, #0]
 800f7d0:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800f7d2:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 800f7d4:	b087      	sub	sp, #28
 800f7d6:	eb00 0804 	add.w	r8, r0, r4
 800f7da:	eb01 0905 	add.w	r9, r1, r5
 800f7de:	4414      	add	r4, r2
 800f7e0:	441d      	add	r5, r3
 800f7e2:	a804      	add	r0, sp, #16
 800f7e4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f7e6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f7e8:	f8ad 8010 	strh.w	r8, [sp, #16]
 800f7ec:	f8ad 4014 	strh.w	r4, [sp, #20]
 800f7f0:	f8ad 9012 	strh.w	r9, [sp, #18]
 800f7f4:	f8ad 5016 	strh.w	r5, [sp, #22]
 800f7f8:	f7f6 fc8e 	bl	8006118 <WM__InitIVRSearch>
 800f7fc:	b170      	cbz	r0, 800f81c <GUI_DrawGradientH+0x54>
 800f7fe:	4b0a      	ldr	r3, [pc, #40]	; (800f828 <GUI_DrawGradientH+0x60>)
 800f800:	9302      	str	r3, [sp, #8]
 800f802:	2300      	movs	r3, #0
 800f804:	9303      	str	r3, [sp, #12]
 800f806:	4648      	mov	r0, r9
 800f808:	4641      	mov	r1, r8
 800f80a:	462a      	mov	r2, r5
 800f80c:	4623      	mov	r3, r4
 800f80e:	9700      	str	r7, [sp, #0]
 800f810:	9601      	str	r6, [sp, #4]
 800f812:	f7ff fecf 	bl	800f5b4 <_DrawGradient>
 800f816:	f7f6 fbbd 	bl	8005f94 <WM__GetNextIVR>
 800f81a:	e7ef      	b.n	800f7fc <GUI_DrawGradientH+0x34>
 800f81c:	b007      	add	sp, #28
 800f81e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f822:	bf00      	nop
 800f824:	200000b8 	.word	0x200000b8
 800f828:	08008b85 	.word	0x08008b85

0800f82c <_GetIndexMask_0>:
 800f82c:	b508      	push	{r3, lr}
 800f82e:	f7f9 f88d 	bl	800894c <LCD_GetNumColors>
 800f832:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 800f836:	d010      	beq.n	800f85a <_GetIndexMask_0+0x2e>
 800f838:	287f      	cmp	r0, #127	; 0x7f
 800f83a:	d810      	bhi.n	800f85e <_GetIndexMask_0+0x32>
 800f83c:	283f      	cmp	r0, #63	; 0x3f
 800f83e:	d810      	bhi.n	800f862 <_GetIndexMask_0+0x36>
 800f840:	281f      	cmp	r0, #31
 800f842:	d810      	bhi.n	800f866 <_GetIndexMask_0+0x3a>
 800f844:	280f      	cmp	r0, #15
 800f846:	d810      	bhi.n	800f86a <_GetIndexMask_0+0x3e>
 800f848:	2807      	cmp	r0, #7
 800f84a:	d810      	bhi.n	800f86e <_GetIndexMask_0+0x42>
 800f84c:	2803      	cmp	r0, #3
 800f84e:	d810      	bhi.n	800f872 <_GetIndexMask_0+0x46>
 800f850:	2801      	cmp	r0, #1
 800f852:	bf94      	ite	ls
 800f854:	2000      	movls	r0, #0
 800f856:	2001      	movhi	r0, #1
 800f858:	e00c      	b.n	800f874 <_GetIndexMask_0+0x48>
 800f85a:	2008      	movs	r0, #8
 800f85c:	e00a      	b.n	800f874 <_GetIndexMask_0+0x48>
 800f85e:	2007      	movs	r0, #7
 800f860:	e008      	b.n	800f874 <_GetIndexMask_0+0x48>
 800f862:	2006      	movs	r0, #6
 800f864:	e006      	b.n	800f874 <_GetIndexMask_0+0x48>
 800f866:	2005      	movs	r0, #5
 800f868:	e004      	b.n	800f874 <_GetIndexMask_0+0x48>
 800f86a:	2004      	movs	r0, #4
 800f86c:	e002      	b.n	800f874 <_GetIndexMask_0+0x48>
 800f86e:	2003      	movs	r0, #3
 800f870:	e000      	b.n	800f874 <_GetIndexMask_0+0x48>
 800f872:	2002      	movs	r0, #2
 800f874:	2301      	movs	r3, #1
 800f876:	fa03 f000 	lsl.w	r0, r3, r0
 800f87a:	3801      	subs	r0, #1
 800f87c:	bd08      	pop	{r3, pc}

0800f87e <_Index2Color_0>:
 800f87e:	b538      	push	{r3, r4, r5, lr}
 800f880:	4604      	mov	r4, r0
 800f882:	f7f9 f863 	bl	800894c <LCD_GetNumColors>
 800f886:	4605      	mov	r5, r0
 800f888:	f7f9 f87e 	bl	8008988 <LCD_GetPalette>
 800f88c:	42ac      	cmp	r4, r5
 800f88e:	d203      	bcs.n	800f898 <_Index2Color_0+0x1a>
 800f890:	b118      	cbz	r0, 800f89a <_Index2Color_0+0x1c>
 800f892:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800f896:	bd38      	pop	{r3, r4, r5, pc}
 800f898:	2000      	movs	r0, #0
 800f89a:	bd38      	pop	{r3, r4, r5, pc}

0800f89c <_Color2Index_0>:
 800f89c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f8a0:	4682      	mov	sl, r0
 800f8a2:	f7f9 f853 	bl	800894c <LCD_GetNumColors>
 800f8a6:	4681      	mov	r9, r0
 800f8a8:	f7f9 f86e 	bl	8008988 <LCD_GetPalette>
 800f8ac:	4605      	mov	r5, r0
 800f8ae:	b1e0      	cbz	r0, 800f8ea <_Color2Index_0+0x4e>
 800f8b0:	2300      	movs	r3, #0
 800f8b2:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 800f8b6:	4592      	cmp	sl, r2
 800f8b8:	d019      	beq.n	800f8ee <_Color2Index_0+0x52>
 800f8ba:	3301      	adds	r3, #1
 800f8bc:	454b      	cmp	r3, r9
 800f8be:	dbf8      	blt.n	800f8b2 <_Color2Index_0+0x16>
 800f8c0:	2700      	movs	r7, #0
 800f8c2:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
 800f8c6:	463c      	mov	r4, r7
 800f8c8:	f855 1024 	ldr.w	r1, [r5, r4, lsl #2]
 800f8cc:	4650      	mov	r0, sl
 800f8ce:	f7fb fa6b 	bl	800ada8 <GUI_CalcColorDist>
 800f8d2:	4626      	mov	r6, r4
 800f8d4:	4540      	cmp	r0, r8
 800f8d6:	f104 0401 	add.w	r4, r4, #1
 800f8da:	bf24      	itt	cs
 800f8dc:	4640      	movcs	r0, r8
 800f8de:	463e      	movcs	r6, r7
 800f8e0:	454c      	cmp	r4, r9
 800f8e2:	da07      	bge.n	800f8f4 <_Color2Index_0+0x58>
 800f8e4:	4680      	mov	r8, r0
 800f8e6:	4637      	mov	r7, r6
 800f8e8:	e7ee      	b.n	800f8c8 <_Color2Index_0+0x2c>
 800f8ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8ee:	4618      	mov	r0, r3
 800f8f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8f4:	4630      	mov	r0, r6
 800f8f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800f8fc <_DrawDownRect>:
 800f8fc:	b510      	push	{r4, lr}
 800f8fe:	b09c      	sub	sp, #112	; 0x70
 800f900:	4604      	mov	r4, r0
 800f902:	4668      	mov	r0, sp
 800f904:	f7fb fb38 	bl	800af78 <GUI_SaveContext_W>
 800f908:	4b09      	ldr	r3, [pc, #36]	; (800f930 <_DrawDownRect+0x34>)
 800f90a:	6818      	ldr	r0, [r3, #0]
 800f90c:	f7f9 fc38 	bl	8009180 <LCD_SetColor>
 800f910:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f914:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f918:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f91c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f920:	f7fc f9ea 	bl	800bcf8 <GUI_DrawRect>
 800f924:	4668      	mov	r0, sp
 800f926:	f7fb fb31 	bl	800af8c <GUI_RestoreContext>
 800f92a:	b01c      	add	sp, #112	; 0x70
 800f92c:	bd10      	pop	{r4, pc}
 800f92e:	bf00      	nop
 800f930:	20002c78 	.word	0x20002c78

0800f934 <_DrawUpRect>:
 800f934:	b510      	push	{r4, lr}
 800f936:	b09c      	sub	sp, #112	; 0x70
 800f938:	4604      	mov	r4, r0
 800f93a:	4668      	mov	r0, sp
 800f93c:	f7fb fb1c 	bl	800af78 <GUI_SaveContext_W>
 800f940:	4b09      	ldr	r3, [pc, #36]	; (800f968 <_DrawUpRect+0x34>)
 800f942:	6818      	ldr	r0, [r3, #0]
 800f944:	f7f9 fc1c 	bl	8009180 <LCD_SetColor>
 800f948:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f94c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f950:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f954:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f958:	f7fc f9ce 	bl	800bcf8 <GUI_DrawRect>
 800f95c:	4668      	mov	r0, sp
 800f95e:	f7fb fb15 	bl	800af8c <GUI_RestoreContext>
 800f962:	b01c      	add	sp, #112	; 0x70
 800f964:	bd10      	pop	{r4, pc}
 800f966:	bf00      	nop
 800f968:	20002c78 	.word	0x20002c78

0800f96c <_DrawDown>:
 800f96c:	b507      	push	{r0, r1, r2, lr}
 800f96e:	4668      	mov	r0, sp
 800f970:	f7f5 f8a0 	bl	8004ab4 <WM_GetClientRect>
 800f974:	4668      	mov	r0, sp
 800f976:	f7ff ffc1 	bl	800f8fc <_DrawDownRect>
 800f97a:	b003      	add	sp, #12
 800f97c:	f85d fb04 	ldr.w	pc, [sp], #4

0800f980 <_DrawUp>:
 800f980:	b507      	push	{r0, r1, r2, lr}
 800f982:	4668      	mov	r0, sp
 800f984:	f7f5 f896 	bl	8004ab4 <WM_GetClientRect>
 800f988:	4668      	mov	r0, sp
 800f98a:	f7ff ffd3 	bl	800f934 <_DrawUpRect>
 800f98e:	b003      	add	sp, #12
 800f990:	f85d fb04 	ldr.w	pc, [sp], #4

0800f994 <_GetArrowPara>:
 800f994:	b510      	push	{r4, lr}
 800f996:	b121      	cbz	r1, 800f9a2 <_GetArrowPara+0xe>
 800f998:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f99c:	f9b0 1000 	ldrsh.w	r1, [r0]
 800f9a0:	e003      	b.n	800f9aa <_GetArrowPara+0x16>
 800f9a2:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800f9a6:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f9aa:	1a61      	subs	r1, r4, r1
 800f9ac:	3101      	adds	r1, #1
 800f9ae:	1f0c      	subs	r4, r1, #4
 800f9b0:	2003      	movs	r0, #3
 800f9b2:	fb94 f0f0 	sdiv	r0, r4, r0
 800f9b6:	6010      	str	r0, [r2, #0]
 800f9b8:	1a08      	subs	r0, r1, r0
 800f9ba:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 800f9be:	3901      	subs	r1, #1
 800f9c0:	6019      	str	r1, [r3, #0]
 800f9c2:	bd10      	pop	{r4, pc}

0800f9c4 <_DrawGraspH>:
 800f9c4:	b570      	push	{r4, r5, r6, lr}
 800f9c6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f9ca:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800f9ce:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800f9d2:	441e      	add	r6, r3
 800f9d4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f9d8:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800f9da:	1b5c      	subs	r4, r3, r5
 800f9dc:	3403      	adds	r4, #3
 800f9de:	10a4      	asrs	r4, r4, #2
 800f9e0:	4425      	add	r5, r4
 800f9e2:	1076      	asrs	r6, r6, #1
 800f9e4:	1b1c      	subs	r4, r3, r4
 800f9e6:	f7fb fae6 	bl	800afb6 <GUI_SetColor>
 800f9ea:	4630      	mov	r0, r6
 800f9ec:	4629      	mov	r1, r5
 800f9ee:	4622      	mov	r2, r4
 800f9f0:	f7fa fc1a 	bl	800a228 <GUI_DrawVLine>
 800f9f4:	1cb0      	adds	r0, r6, #2
 800f9f6:	4629      	mov	r1, r5
 800f9f8:	4622      	mov	r2, r4
 800f9fa:	f7fa fc15 	bl	800a228 <GUI_DrawVLine>
 800f9fe:	1d30      	adds	r0, r6, #4
 800fa00:	4629      	mov	r1, r5
 800fa02:	4622      	mov	r2, r4
 800fa04:	f7fa fc10 	bl	800a228 <GUI_DrawVLine>
 800fa08:	1eb0      	subs	r0, r6, #2
 800fa0a:	4629      	mov	r1, r5
 800fa0c:	4622      	mov	r2, r4
 800fa0e:	f7fa fc0b 	bl	800a228 <GUI_DrawVLine>
 800fa12:	1f30      	subs	r0, r6, #4
 800fa14:	4629      	mov	r1, r5
 800fa16:	4622      	mov	r2, r4
 800fa18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa1c:	f7fa bc04 	b.w	800a228 <GUI_DrawVLine>

0800fa20 <_DrawGraspV>:
 800fa20:	b570      	push	{r4, r5, r6, lr}
 800fa22:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fa26:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 800fa2a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fa2e:	441e      	add	r6, r3
 800fa30:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fa34:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800fa36:	1b5c      	subs	r4, r3, r5
 800fa38:	3403      	adds	r4, #3
 800fa3a:	10a4      	asrs	r4, r4, #2
 800fa3c:	4425      	add	r5, r4
 800fa3e:	1076      	asrs	r6, r6, #1
 800fa40:	1b1c      	subs	r4, r3, r4
 800fa42:	f7fb fab8 	bl	800afb6 <GUI_SetColor>
 800fa46:	4630      	mov	r0, r6
 800fa48:	4629      	mov	r1, r5
 800fa4a:	4622      	mov	r2, r4
 800fa4c:	f7fa fb92 	bl	800a174 <GUI_DrawHLine>
 800fa50:	1cb0      	adds	r0, r6, #2
 800fa52:	4629      	mov	r1, r5
 800fa54:	4622      	mov	r2, r4
 800fa56:	f7fa fb8d 	bl	800a174 <GUI_DrawHLine>
 800fa5a:	1d30      	adds	r0, r6, #4
 800fa5c:	4629      	mov	r1, r5
 800fa5e:	4622      	mov	r2, r4
 800fa60:	f7fa fb88 	bl	800a174 <GUI_DrawHLine>
 800fa64:	1eb0      	subs	r0, r6, #2
 800fa66:	4629      	mov	r1, r5
 800fa68:	4622      	mov	r2, r4
 800fa6a:	f7fa fb83 	bl	800a174 <GUI_DrawHLine>
 800fa6e:	1f30      	subs	r0, r6, #4
 800fa70:	4629      	mov	r1, r5
 800fa72:	4622      	mov	r2, r4
 800fa74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa78:	f7fa bb7c 	b.w	800a174 <GUI_DrawHLine>

0800fa7c <_DrawFrame>:
 800fa7c:	b538      	push	{r3, r4, r5, lr}
 800fa7e:	4604      	mov	r4, r0
 800fa80:	6808      	ldr	r0, [r1, #0]
 800fa82:	460d      	mov	r5, r1
 800fa84:	f7fb fa97 	bl	800afb6 <GUI_SetColor>
 800fa88:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fa8c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fa90:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800fa94:	3101      	adds	r1, #1
 800fa96:	3a01      	subs	r2, #1
 800fa98:	f7fa fb6c 	bl	800a174 <GUI_DrawHLine>
 800fa9c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800faa0:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800faa4:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800faa8:	3101      	adds	r1, #1
 800faaa:	3a01      	subs	r2, #1
 800faac:	f7fa fb62 	bl	800a174 <GUI_DrawHLine>
 800fab0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fab4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fab8:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fabc:	3101      	adds	r1, #1
 800fabe:	3a01      	subs	r2, #1
 800fac0:	f7fa fbb2 	bl	800a228 <GUI_DrawVLine>
 800fac4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fac8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800facc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fad0:	3101      	adds	r1, #1
 800fad2:	3a01      	subs	r2, #1
 800fad4:	f7fa fba8 	bl	800a228 <GUI_DrawVLine>
 800fad8:	6868      	ldr	r0, [r5, #4]
 800fada:	f7fb fa6c 	bl	800afb6 <GUI_SetColor>
 800fade:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800fae2:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fae6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800faea:	3001      	adds	r0, #1
 800faec:	3101      	adds	r1, #1
 800faee:	3a01      	subs	r2, #1
 800faf0:	f7fa fb40 	bl	800a174 <GUI_DrawHLine>
 800faf4:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800faf8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fafc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fb00:	3801      	subs	r0, #1
 800fb02:	3101      	adds	r1, #1
 800fb04:	3a01      	subs	r2, #1
 800fb06:	f7fa fb35 	bl	800a174 <GUI_DrawHLine>
 800fb0a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb0e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb12:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fb16:	3001      	adds	r0, #1
 800fb18:	3102      	adds	r1, #2
 800fb1a:	3a02      	subs	r2, #2
 800fb1c:	f7fa fb84 	bl	800a228 <GUI_DrawVLine>
 800fb20:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fb24:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb28:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fb2c:	3102      	adds	r1, #2
 800fb2e:	3a02      	subs	r2, #2
 800fb30:	3801      	subs	r0, #1
 800fb32:	f7fa fb79 	bl	800a228 <GUI_DrawVLine>
 800fb36:	68a8      	ldr	r0, [r5, #8]
 800fb38:	f7fb fa3d 	bl	800afb6 <GUI_SetColor>
 800fb3c:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb40:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb44:	f7fa fb3a 	bl	800a1bc <GUI_DrawPixel>
 800fb48:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb4c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fb50:	f7fa fb34 	bl	800a1bc <GUI_DrawPixel>
 800fb54:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fb58:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb5c:	f7fa fb2e 	bl	800a1bc <GUI_DrawPixel>
 800fb60:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fb64:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fb68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fb6c:	f7fa bb26 	b.w	800a1bc <GUI_DrawPixel>

0800fb70 <_DrawBackgroundH>:
 800fb70:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fb72:	4604      	mov	r4, r0
 800fb74:	460d      	mov	r5, r1
 800fb76:	f7ff ff81 	bl	800fa7c <_DrawFrame>
 800fb7a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb7e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fb82:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb86:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fb8a:	68ee      	ldr	r6, [r5, #12]
 800fb8c:	9600      	str	r6, [sp, #0]
 800fb8e:	440b      	add	r3, r1
 800fb90:	692e      	ldr	r6, [r5, #16]
 800fb92:	9601      	str	r6, [sp, #4]
 800fb94:	3002      	adds	r0, #2
 800fb96:	3102      	adds	r1, #2
 800fb98:	3a02      	subs	r2, #2
 800fb9a:	105b      	asrs	r3, r3, #1
 800fb9c:	f7ff fde2 	bl	800f764 <GUI_DrawGradientV>
 800fba0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fba4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fba8:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fbac:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fbb0:	696c      	ldr	r4, [r5, #20]
 800fbb2:	9400      	str	r4, [sp, #0]
 800fbb4:	4419      	add	r1, r3
 800fbb6:	69ac      	ldr	r4, [r5, #24]
 800fbb8:	9401      	str	r4, [sp, #4]
 800fbba:	1049      	asrs	r1, r1, #1
 800fbbc:	3002      	adds	r0, #2
 800fbbe:	3101      	adds	r1, #1
 800fbc0:	3a02      	subs	r2, #2
 800fbc2:	3b02      	subs	r3, #2
 800fbc4:	f7ff fdce 	bl	800f764 <GUI_DrawGradientV>
 800fbc8:	b002      	add	sp, #8
 800fbca:	bd70      	pop	{r4, r5, r6, pc}

0800fbcc <_DrawBackgroundV>:
 800fbcc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fbce:	4604      	mov	r4, r0
 800fbd0:	460d      	mov	r5, r1
 800fbd2:	f7ff ff53 	bl	800fa7c <_DrawFrame>
 800fbd6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fbda:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fbde:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fbe2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fbe6:	68ee      	ldr	r6, [r5, #12]
 800fbe8:	9600      	str	r6, [sp, #0]
 800fbea:	4402      	add	r2, r0
 800fbec:	692e      	ldr	r6, [r5, #16]
 800fbee:	9601      	str	r6, [sp, #4]
 800fbf0:	3002      	adds	r0, #2
 800fbf2:	3102      	adds	r1, #2
 800fbf4:	1052      	asrs	r2, r2, #1
 800fbf6:	3b02      	subs	r3, #2
 800fbf8:	f7ff fde6 	bl	800f7c8 <GUI_DrawGradientH>
 800fbfc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fc00:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fc04:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fc08:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fc0c:	696c      	ldr	r4, [r5, #20]
 800fc0e:	9400      	str	r4, [sp, #0]
 800fc10:	4410      	add	r0, r2
 800fc12:	69ac      	ldr	r4, [r5, #24]
 800fc14:	9401      	str	r4, [sp, #4]
 800fc16:	1040      	asrs	r0, r0, #1
 800fc18:	3001      	adds	r0, #1
 800fc1a:	3102      	adds	r1, #2
 800fc1c:	3a02      	subs	r2, #2
 800fc1e:	3b02      	subs	r3, #2
 800fc20:	f7ff fdd2 	bl	800f7c8 <GUI_DrawGradientH>
 800fc24:	b002      	add	sp, #8
 800fc26:	bd70      	pop	{r4, r5, r6, pc}

0800fc28 <SCROLLBAR_DrawSkinFlex>:
 800fc28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc2c:	4604      	mov	r4, r0
 800fc2e:	b08b      	sub	sp, #44	; 0x2c
 800fc30:	6800      	ldr	r0, [r0, #0]
 800fc32:	f7fb fe21 	bl	800b878 <GUI_ALLOC_LockH>
 800fc36:	4607      	mov	r7, r0
 800fc38:	a80a      	add	r0, sp, #40	; 0x28
 800fc3a:	ae06      	add	r6, sp, #24
 800fc3c:	f840 7d1c 	str.w	r7, [r0, #-28]!
 800fc40:	f7fb fe28 	bl	800b894 <GUI_ALLOC_UnlockH>
 800fc44:	6923      	ldr	r3, [r4, #16]
 800fc46:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fc4a:	6963      	ldr	r3, [r4, #20]
 800fc4c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fc50:	69a3      	ldr	r3, [r4, #24]
 800fc52:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fc56:	69e3      	ldr	r3, [r4, #28]
 800fc58:	f8ad 301e 	strh.w	r3, [sp, #30]
 800fc5c:	6a25      	ldr	r5, [r4, #32]
 800fc5e:	e896 0003 	ldmia.w	r6, {r0, r1}
 800fc62:	682b      	ldr	r3, [r5, #0]
 800fc64:	f10d 0820 	add.w	r8, sp, #32
 800fc68:	e888 0003 	stmia.w	r8, {r0, r1}
 800fc6c:	b153      	cbz	r3, 800fc84 <SCROLLBAR_DrawSkinFlex+0x5c>
 800fc6e:	4638      	mov	r0, r7
 800fc70:	4631      	mov	r1, r6
 800fc72:	4632      	mov	r2, r6
 800fc74:	f7fc f94d 	bl	800bf12 <WIDGET__RotateRect90>
 800fc78:	f8df 913c 	ldr.w	r9, [pc, #316]	; 800fdb8 <SCROLLBAR_DrawSkinFlex+0x190>
 800fc7c:	f8df c13c 	ldr.w	ip, [pc, #316]	; 800fdbc <SCROLLBAR_DrawSkinFlex+0x194>
 800fc80:	4b49      	ldr	r3, [pc, #292]	; (800fda8 <SCROLLBAR_DrawSkinFlex+0x180>)
 800fc82:	e004      	b.n	800fc8e <SCROLLBAR_DrawSkinFlex+0x66>
 800fc84:	f8df 9138 	ldr.w	r9, [pc, #312]	; 800fdc0 <SCROLLBAR_DrawSkinFlex+0x198>
 800fc88:	f8df c138 	ldr.w	ip, [pc, #312]	; 800fdc4 <SCROLLBAR_DrawSkinFlex+0x19c>
 800fc8c:	4b47      	ldr	r3, [pc, #284]	; (800fdac <SCROLLBAR_DrawSkinFlex+0x184>)
 800fc8e:	6862      	ldr	r2, [r4, #4]
 800fc90:	3a08      	subs	r2, #8
 800fc92:	2a11      	cmp	r2, #17
 800fc94:	f200 8083 	bhi.w	800fd9e <SCROLLBAR_DrawSkinFlex+0x176>
 800fc98:	e8df f002 	tbb	[pc, r2]
 800fc9c:	81815f13 	.word	0x81815f13
 800fca0:	81818134 	.word	0x81818134
 800fca4:	43813434 	.word	0x43813434
 800fca8:	81818181 	.word	0x81818181
 800fcac:	0981      	.short	0x0981
 800fcae:	682b      	ldr	r3, [r5, #0]
 800fcb0:	b113      	cbz	r3, 800fcb8 <SCROLLBAR_DrawSkinFlex+0x90>
 800fcb2:	69a0      	ldr	r0, [r4, #24]
 800fcb4:	6923      	ldr	r3, [r4, #16]
 800fcb6:	e001      	b.n	800fcbc <SCROLLBAR_DrawSkinFlex+0x94>
 800fcb8:	69e0      	ldr	r0, [r4, #28]
 800fcba:	6963      	ldr	r3, [r4, #20]
 800fcbc:	1ac0      	subs	r0, r0, r3
 800fcbe:	3001      	adds	r0, #1
 800fcc0:	e06e      	b.n	800fda0 <SCROLLBAR_DrawSkinFlex+0x178>
 800fcc2:	686a      	ldr	r2, [r5, #4]
 800fcc4:	493a      	ldr	r1, [pc, #232]	; (800fdb0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800fcc6:	4c3b      	ldr	r4, [pc, #236]	; (800fdb4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fcc8:	2a02      	cmp	r2, #2
 800fcca:	bf08      	it	eq
 800fccc:	460c      	moveq	r4, r1
 800fcce:	4630      	mov	r0, r6
 800fcd0:	4621      	mov	r1, r4
 800fcd2:	4798      	blx	r3
 800fcd4:	6829      	ldr	r1, [r5, #0]
 800fcd6:	aa04      	add	r2, sp, #16
 800fcd8:	ab05      	add	r3, sp, #20
 800fcda:	4640      	mov	r0, r8
 800fcdc:	f7ff fe5a 	bl	800f994 <_GetArrowPara>
 800fce0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800fce2:	f7fb f968 	bl	800afb6 <GUI_SetColor>
 800fce6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800fcea:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800fcee:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 800fcf2:	1ad2      	subs	r2, r2, r3
 800fcf4:	f04f 33ff 	mov.w	r3, #4294967295
 800fcf8:	9300      	str	r3, [sp, #0]
 800fcfa:	9b05      	ldr	r3, [sp, #20]
 800fcfc:	3201      	adds	r2, #1
 800fcfe:	4638      	mov	r0, r7
 800fd00:	4419      	add	r1, r3
 800fd02:	e048      	b.n	800fd96 <SCROLLBAR_DrawSkinFlex+0x16e>
 800fd04:	4c2b      	ldr	r4, [pc, #172]	; (800fdb4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fd06:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800fd0a:	69e5      	ldr	r5, [r4, #28]
 800fd0c:	9500      	str	r5, [sp, #0]
 800fd0e:	6a24      	ldr	r4, [r4, #32]
 800fd10:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800fd14:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800fd18:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fd1c:	9401      	str	r4, [sp, #4]
 800fd1e:	47e0      	blx	ip
 800fd20:	e03d      	b.n	800fd9e <SCROLLBAR_DrawSkinFlex+0x176>
 800fd22:	686a      	ldr	r2, [r5, #4]
 800fd24:	4922      	ldr	r1, [pc, #136]	; (800fdb0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800fd26:	4c23      	ldr	r4, [pc, #140]	; (800fdb4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fd28:	2a03      	cmp	r2, #3
 800fd2a:	bf08      	it	eq
 800fd2c:	460c      	moveq	r4, r1
 800fd2e:	4630      	mov	r0, r6
 800fd30:	4621      	mov	r1, r4
 800fd32:	4798      	blx	r3
 800fd34:	682b      	ldr	r3, [r5, #0]
 800fd36:	b123      	cbz	r3, 800fd42 <SCROLLBAR_DrawSkinFlex+0x11a>
 800fd38:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 800fd3c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fd40:	e003      	b.n	800fd4a <SCROLLBAR_DrawSkinFlex+0x122>
 800fd42:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800fd46:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fd4a:	1ad3      	subs	r3, r2, r3
 800fd4c:	3301      	adds	r3, #1
 800fd4e:	2b0e      	cmp	r3, #14
 800fd50:	dd25      	ble.n	800fd9e <SCROLLBAR_DrawSkinFlex+0x176>
 800fd52:	4630      	mov	r0, r6
 800fd54:	4621      	mov	r1, r4
 800fd56:	47c8      	blx	r9
 800fd58:	e021      	b.n	800fd9e <SCROLLBAR_DrawSkinFlex+0x176>
 800fd5a:	686a      	ldr	r2, [r5, #4]
 800fd5c:	4914      	ldr	r1, [pc, #80]	; (800fdb0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800fd5e:	4c15      	ldr	r4, [pc, #84]	; (800fdb4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fd60:	2a01      	cmp	r2, #1
 800fd62:	bf08      	it	eq
 800fd64:	460c      	moveq	r4, r1
 800fd66:	4630      	mov	r0, r6
 800fd68:	4621      	mov	r1, r4
 800fd6a:	4798      	blx	r3
 800fd6c:	6829      	ldr	r1, [r5, #0]
 800fd6e:	aa04      	add	r2, sp, #16
 800fd70:	ab05      	add	r3, sp, #20
 800fd72:	4640      	mov	r0, r8
 800fd74:	f7ff fe0e 	bl	800f994 <_GetArrowPara>
 800fd78:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800fd7a:	f7fb f91c 	bl	800afb6 <GUI_SetColor>
 800fd7e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800fd82:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800fd86:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 800fd8a:	1ad2      	subs	r2, r2, r3
 800fd8c:	2301      	movs	r3, #1
 800fd8e:	9300      	str	r3, [sp, #0]
 800fd90:	9b05      	ldr	r3, [sp, #20]
 800fd92:	4638      	mov	r0, r7
 800fd94:	1ac9      	subs	r1, r1, r3
 800fd96:	1052      	asrs	r2, r2, #1
 800fd98:	9b04      	ldr	r3, [sp, #16]
 800fd9a:	f7fc f9eb 	bl	800c174 <WIDGET__DrawTriangle>
 800fd9e:	2000      	movs	r0, #0
 800fda0:	b00b      	add	sp, #44	; 0x2c
 800fda2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fda6:	bf00      	nop
 800fda8:	0800fbcd 	.word	0x0800fbcd
 800fdac:	0800fb71 	.word	0x0800fb71
 800fdb0:	20000194 	.word	0x20000194
 800fdb4:	200001c0 	.word	0x200001c0
 800fdb8:	0800fa21 	.word	0x0800fa21
 800fdbc:	0800f7c9 	.word	0x0800f7c9
 800fdc0:	0800f9c5 	.word	0x0800f9c5
 800fdc4:	0800f765 	.word	0x0800f765

0800fdc8 <_Create>:
 800fdc8:	b530      	push	{r4, r5, lr}
 800fdca:	b08d      	sub	sp, #52	; 0x34
 800fdcc:	4605      	mov	r5, r0
 800fdce:	f7fb fd53 	bl	800b878 <GUI_ALLOC_LockH>
 800fdd2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800fdd4:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800fdd6:	9000      	str	r0, [sp, #0]
 800fdd8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800fddc:	9301      	str	r3, [sp, #4]
 800fdde:	4b07      	ldr	r3, [pc, #28]	; (800fdfc <_Create+0x34>)
 800fde0:	6483      	str	r3, [r0, #72]	; 0x48
 800fde2:	4668      	mov	r0, sp
 800fde4:	f7fb fd56 	bl	800b894 <GUI_ALLOC_UnlockH>
 800fde8:	2300      	movs	r3, #0
 800fdea:	9304      	str	r3, [sp, #16]
 800fdec:	ab01      	add	r3, sp, #4
 800fdee:	9503      	str	r5, [sp, #12]
 800fdf0:	930b      	str	r3, [sp, #44]	; 0x2c
 800fdf2:	a803      	add	r0, sp, #12
 800fdf4:	47a0      	blx	r4
 800fdf6:	b00d      	add	sp, #52	; 0x34
 800fdf8:	bd30      	pop	{r4, r5, pc}
 800fdfa:	bf00      	nop
 800fdfc:	0800fe01 	.word	0x0800fe01

0800fe00 <_CalcPositions>:
 800fe00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fe04:	b090      	sub	sp, #64	; 0x40
 800fe06:	4605      	mov	r5, r0
 800fe08:	460c      	mov	r4, r1
 800fe0a:	f7fb fd35 	bl	800b878 <GUI_ALLOC_LockH>
 800fe0e:	4603      	mov	r3, r0
 800fe10:	9000      	str	r0, [sp, #0]
 800fe12:	c803      	ldmia	r0, {r0, r1}
 800fe14:	ae03      	add	r6, sp, #12
 800fe16:	e886 0003 	stmia.w	r6, {r0, r1}
 800fe1a:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 800fe1c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fe20:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800fe24:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800fe28:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800fe2c:	920e      	str	r2, [sp, #56]	; 0x38
 800fe2e:	f000 0008 	and.w	r0, r0, #8
 800fe32:	2800      	cmp	r0, #0
 800fe34:	bf0c      	ite	eq
 800fe36:	4608      	moveq	r0, r1
 800fe38:	4610      	movne	r0, r2
 800fe3a:	61a0      	str	r0, [r4, #24]
 800fe3c:	bf0c      	ite	eq
 800fe3e:	2000      	moveq	r0, #0
 800fe40:	2001      	movne	r0, #1
 800fe42:	aa01      	add	r2, sp, #4
 800fe44:	9001      	str	r0, [sp, #4]
 800fe46:	2019      	movs	r0, #25
 800fe48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fe4a:	9008      	str	r0, [sp, #32]
 800fe4c:	9507      	str	r5, [sp, #28]
 800fe4e:	920f      	str	r2, [sp, #60]	; 0x3c
 800fe50:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800fe54:	970c      	str	r7, [sp, #48]	; 0x30
 800fe56:	910d      	str	r1, [sp, #52]	; 0x34
 800fe58:	a807      	add	r0, sp, #28
 800fe5a:	4798      	blx	r3
 800fe5c:	9b00      	ldr	r3, [sp, #0]
 800fe5e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800fe62:	2aff      	cmp	r2, #255	; 0xff
 800fe64:	4605      	mov	r5, r0
 800fe66:	d111      	bne.n	800fe8c <_CalcPositions+0x8c>
 800fe68:	6998      	ldr	r0, [r3, #24]
 800fe6a:	f7f4 ff4b 	bl	8004d04 <WM_GetScrollbarV>
 800fe6e:	b168      	cbz	r0, 800fe8c <_CalcPositions+0x8c>
 800fe70:	a905      	add	r1, sp, #20
 800fe72:	f7f4 ff60 	bl	8004d36 <WM_GetWindowRectEx>
 800fe76:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fe7a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fe7e:	429a      	cmp	r2, r3
 800fe80:	d104      	bne.n	800fe8c <_CalcPositions+0x8c>
 800fe82:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fe86:	3b01      	subs	r3, #1
 800fe88:	f8ad 3010 	strh.w	r3, [sp, #16]
 800fe8c:	9b00      	ldr	r3, [sp, #0]
 800fe8e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800fe92:	2afe      	cmp	r2, #254	; 0xfe
 800fe94:	d111      	bne.n	800feba <_CalcPositions+0xba>
 800fe96:	6998      	ldr	r0, [r3, #24]
 800fe98:	f7f4 ff2f 	bl	8004cfa <WM_GetScrollbarH>
 800fe9c:	b168      	cbz	r0, 800feba <_CalcPositions+0xba>
 800fe9e:	a905      	add	r1, sp, #20
 800fea0:	f7f4 ff49 	bl	8004d36 <WM_GetWindowRectEx>
 800fea4:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fea8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800feac:	429a      	cmp	r2, r3
 800feae:	d104      	bne.n	800feba <_CalcPositions+0xba>
 800feb0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800feb4:	3b01      	subs	r3, #1
 800feb6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800feba:	427a      	negs	r2, r7
 800febc:	4630      	mov	r0, r6
 800febe:	f1c8 0100 	rsb	r1, r8, #0
 800fec2:	f7fa fff0 	bl	800aea6 <GUI_MoveRect>
 800fec6:	9800      	ldr	r0, [sp, #0]
 800fec8:	4631      	mov	r1, r6
 800feca:	f7fc f9ac 	bl	800c226 <SCROLLBAR__Rect2VRect>
 800fece:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800fed2:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 800fed6:	9b00      	ldr	r3, [sp, #0]
 800fed8:	ebc2 0a0a 	rsb	sl, r2, sl
 800fedc:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 800fee0:	6d58      	ldr	r0, [r3, #84]	; 0x54
 800fee2:	f10a 0601 	add.w	r6, sl, #1
 800fee6:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 800feea:	4649      	mov	r1, r9
 800feec:	4370      	muls	r0, r6
 800feee:	f7f9 f94f 	bl	8009190 <GUI__DivideRound32>
 800fef2:	4b17      	ldr	r3, [pc, #92]	; (800ff50 <_CalcPositions+0x150>)
 800fef4:	f8c4 a014 	str.w	sl, [r4, #20]
 800fef8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fefc:	1c5a      	adds	r2, r3, #1
 800fefe:	4282      	cmp	r2, r0
 800ff00:	bfa8      	it	ge
 800ff02:	1c98      	addge	r0, r3, #2
 800ff04:	42b0      	cmp	r0, r6
 800ff06:	bfb4      	ite	lt
 800ff08:	4607      	movlt	r7, r0
 800ff0a:	4637      	movge	r7, r6
 800ff0c:	ebc7 0806 	rsb	r8, r7, r6
 800ff10:	442e      	add	r6, r5
 800ff12:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ff16:	6126      	str	r6, [r4, #16]
 800ff18:	ae10      	add	r6, sp, #64	; 0x40
 800ff1a:	6023      	str	r3, [r4, #0]
 800ff1c:	1e6b      	subs	r3, r5, #1
 800ff1e:	6063      	str	r3, [r4, #4]
 800ff20:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 800ff24:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ff26:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800ff28:	fb00 f008 	mul.w	r0, r0, r8
 800ff2c:	ebc1 0109 	rsb	r1, r1, r9
 800ff30:	f7f9 f92e 	bl	8009190 <GUI__DivideRound32>
 800ff34:	4428      	add	r0, r5
 800ff36:	19c5      	adds	r5, r0, r7
 800ff38:	3d01      	subs	r5, #1
 800ff3a:	60a0      	str	r0, [r4, #8]
 800ff3c:	60e5      	str	r5, [r4, #12]
 800ff3e:	f8c4 801c 	str.w	r8, [r4, #28]
 800ff42:	6227      	str	r7, [r4, #32]
 800ff44:	4668      	mov	r0, sp
 800ff46:	f7fb fca5 	bl	800b894 <GUI_ALLOC_UnlockH>
 800ff4a:	b010      	add	sp, #64	; 0x40
 800ff4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ff50:	200000e2 	.word	0x200000e2

0800ff54 <_Paint>:
 800ff54:	b570      	push	{r4, r5, r6, lr}
 800ff56:	b098      	sub	sp, #96	; 0x60
 800ff58:	4606      	mov	r6, r0
 800ff5a:	f7fb fc8d 	bl	800b878 <GUI_ALLOC_LockH>
 800ff5e:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800ff60:	9305      	str	r3, [sp, #20]
 800ff62:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800ff64:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800ff66:	9001      	str	r0, [sp, #4]
 800ff68:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800ff6c:	a906      	add	r1, sp, #24
 800ff6e:	4605      	mov	r5, r0
 800ff70:	4630      	mov	r0, r6
 800ff72:	9304      	str	r3, [sp, #16]
 800ff74:	f7ff ff44 	bl	800fe00 <_CalcPositions>
 800ff78:	a801      	add	r0, sp, #4
 800ff7a:	f7fb fc8b 	bl	800b894 <GUI_ALLOC_UnlockH>
 800ff7e:	a902      	add	r1, sp, #8
 800ff80:	4628      	mov	r0, r5
 800ff82:	f7fb ffd8 	bl	800bf36 <WIDGET__GetClientRect>
 800ff86:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800ff8a:	9314      	str	r3, [sp, #80]	; 0x50
 800ff8c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ff90:	9316      	str	r3, [sp, #88]	; 0x58
 800ff92:	ab04      	add	r3, sp, #16
 800ff94:	9317      	str	r3, [sp, #92]	; 0x5c
 800ff96:	2308      	movs	r3, #8
 800ff98:	9310      	str	r3, [sp, #64]	; 0x40
 800ff9a:	9b06      	ldr	r3, [sp, #24]
 800ff9c:	9313      	str	r3, [sp, #76]	; 0x4c
 800ff9e:	9b07      	ldr	r3, [sp, #28]
 800ffa0:	9315      	str	r3, [sp, #84]	; 0x54
 800ffa2:	960f      	str	r6, [sp, #60]	; 0x3c
 800ffa4:	a80f      	add	r0, sp, #60	; 0x3c
 800ffa6:	47a0      	blx	r4
 800ffa8:	2310      	movs	r3, #16
 800ffaa:	9310      	str	r3, [sp, #64]	; 0x40
 800ffac:	9b07      	ldr	r3, [sp, #28]
 800ffae:	3301      	adds	r3, #1
 800ffb0:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffb2:	9b08      	ldr	r3, [sp, #32]
 800ffb4:	3b01      	subs	r3, #1
 800ffb6:	9315      	str	r3, [sp, #84]	; 0x54
 800ffb8:	a80f      	add	r0, sp, #60	; 0x3c
 800ffba:	47a0      	blx	r4
 800ffbc:	2311      	movs	r3, #17
 800ffbe:	9310      	str	r3, [sp, #64]	; 0x40
 800ffc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffc2:	3301      	adds	r3, #1
 800ffc4:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ffc8:	3b01      	subs	r3, #1
 800ffca:	9315      	str	r3, [sp, #84]	; 0x54
 800ffcc:	a80f      	add	r0, sp, #60	; 0x3c
 800ffce:	47a0      	blx	r4
 800ffd0:	2313      	movs	r3, #19
 800ffd2:	9310      	str	r3, [sp, #64]	; 0x40
 800ffd4:	9b08      	ldr	r3, [sp, #32]
 800ffd6:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffda:	9315      	str	r3, [sp, #84]	; 0x54
 800ffdc:	a80f      	add	r0, sp, #60	; 0x3c
 800ffde:	47a0      	blx	r4
 800ffe0:	2309      	movs	r3, #9
 800ffe2:	9310      	str	r3, [sp, #64]	; 0x40
 800ffe4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ffe6:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffe8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ffea:	9315      	str	r3, [sp, #84]	; 0x54
 800ffec:	a80f      	add	r0, sp, #60	; 0x3c
 800ffee:	47a0      	blx	r4
 800fff0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fff2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fff4:	429a      	cmp	r2, r3
 800fff6:	d006      	beq.n	8010006 <_Paint+0xb2>
 800fff8:	210c      	movs	r1, #12
 800fffa:	3201      	adds	r2, #1
 800fffc:	9110      	str	r1, [sp, #64]	; 0x40
 800fffe:	9213      	str	r2, [sp, #76]	; 0x4c
 8010000:	9315      	str	r3, [sp, #84]	; 0x54
 8010002:	a80f      	add	r0, sp, #60	; 0x3c
 8010004:	47a0      	blx	r4
 8010006:	b018      	add	sp, #96	; 0x60
 8010008:	bd70      	pop	{r4, r5, r6, pc}

0801000a <LCD_GetNumLayers>:
 801000a:	b510      	push	{r4, lr}
 801000c:	2000      	movs	r0, #0
 801000e:	f7fa fc75 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8010012:	1c04      	adds	r4, r0, #0
 8010014:	f04f 0001 	mov.w	r0, #1
 8010018:	bf18      	it	ne
 801001a:	2401      	movne	r4, #1
 801001c:	f7fa fc6e 	bl	800a8fc <GUI_DEVICE__GetpDriver>
 8010020:	b100      	cbz	r0, 8010024 <LCD_GetNumLayers+0x1a>
 8010022:	3401      	adds	r4, #1
 8010024:	4620      	mov	r0, r4
 8010026:	bd10      	pop	{r4, pc}

08010028 <__libc_init_array>:
 8010028:	b570      	push	{r4, r5, r6, lr}
 801002a:	4d0d      	ldr	r5, [pc, #52]	; (8010060 <__libc_init_array+0x38>)
 801002c:	4c0d      	ldr	r4, [pc, #52]	; (8010064 <__libc_init_array+0x3c>)
 801002e:	1b64      	subs	r4, r4, r5
 8010030:	10a4      	asrs	r4, r4, #2
 8010032:	2600      	movs	r6, #0
 8010034:	42a6      	cmp	r6, r4
 8010036:	d109      	bne.n	801004c <__libc_init_array+0x24>
 8010038:	4d0b      	ldr	r5, [pc, #44]	; (8010068 <__libc_init_array+0x40>)
 801003a:	4c0c      	ldr	r4, [pc, #48]	; (801006c <__libc_init_array+0x44>)
 801003c:	f000 f8ac 	bl	8010198 <_init>
 8010040:	1b64      	subs	r4, r4, r5
 8010042:	10a4      	asrs	r4, r4, #2
 8010044:	2600      	movs	r6, #0
 8010046:	42a6      	cmp	r6, r4
 8010048:	d105      	bne.n	8010056 <__libc_init_array+0x2e>
 801004a:	bd70      	pop	{r4, r5, r6, pc}
 801004c:	f855 3b04 	ldr.w	r3, [r5], #4
 8010050:	4798      	blx	r3
 8010052:	3601      	adds	r6, #1
 8010054:	e7ee      	b.n	8010034 <__libc_init_array+0xc>
 8010056:	f855 3b04 	ldr.w	r3, [r5], #4
 801005a:	4798      	blx	r3
 801005c:	3601      	adds	r6, #1
 801005e:	e7f2      	b.n	8010046 <__libc_init_array+0x1e>
 8010060:	08013018 	.word	0x08013018
 8010064:	08013018 	.word	0x08013018
 8010068:	08013018 	.word	0x08013018
 801006c:	0801301c 	.word	0x0801301c

08010070 <__itoa>:
 8010070:	1e93      	subs	r3, r2, #2
 8010072:	2b22      	cmp	r3, #34	; 0x22
 8010074:	b510      	push	{r4, lr}
 8010076:	460c      	mov	r4, r1
 8010078:	d904      	bls.n	8010084 <__itoa+0x14>
 801007a:	2300      	movs	r3, #0
 801007c:	700b      	strb	r3, [r1, #0]
 801007e:	461c      	mov	r4, r3
 8010080:	4620      	mov	r0, r4
 8010082:	bd10      	pop	{r4, pc}
 8010084:	2a0a      	cmp	r2, #10
 8010086:	d109      	bne.n	801009c <__itoa+0x2c>
 8010088:	2800      	cmp	r0, #0
 801008a:	da07      	bge.n	801009c <__itoa+0x2c>
 801008c:	232d      	movs	r3, #45	; 0x2d
 801008e:	700b      	strb	r3, [r1, #0]
 8010090:	4240      	negs	r0, r0
 8010092:	2101      	movs	r1, #1
 8010094:	4421      	add	r1, r4
 8010096:	f000 f83d 	bl	8010114 <__utoa>
 801009a:	e7f1      	b.n	8010080 <__itoa+0x10>
 801009c:	2100      	movs	r1, #0
 801009e:	e7f9      	b.n	8010094 <__itoa+0x24>

080100a0 <itoa>:
 80100a0:	f7ff bfe6 	b.w	8010070 <__itoa>

080100a4 <memcpy>:
 80100a4:	440a      	add	r2, r1
 80100a6:	4291      	cmp	r1, r2
 80100a8:	f100 33ff 	add.w	r3, r0, #4294967295
 80100ac:	d100      	bne.n	80100b0 <memcpy+0xc>
 80100ae:	4770      	bx	lr
 80100b0:	b510      	push	{r4, lr}
 80100b2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80100b6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80100ba:	4291      	cmp	r1, r2
 80100bc:	d1f9      	bne.n	80100b2 <memcpy+0xe>
 80100be:	bd10      	pop	{r4, pc}

080100c0 <memmove>:
 80100c0:	4288      	cmp	r0, r1
 80100c2:	b510      	push	{r4, lr}
 80100c4:	eb01 0402 	add.w	r4, r1, r2
 80100c8:	d902      	bls.n	80100d0 <memmove+0x10>
 80100ca:	4284      	cmp	r4, r0
 80100cc:	4623      	mov	r3, r4
 80100ce:	d807      	bhi.n	80100e0 <memmove+0x20>
 80100d0:	1e43      	subs	r3, r0, #1
 80100d2:	42a1      	cmp	r1, r4
 80100d4:	d008      	beq.n	80100e8 <memmove+0x28>
 80100d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80100da:	f803 2f01 	strb.w	r2, [r3, #1]!
 80100de:	e7f8      	b.n	80100d2 <memmove+0x12>
 80100e0:	4402      	add	r2, r0
 80100e2:	4601      	mov	r1, r0
 80100e4:	428a      	cmp	r2, r1
 80100e6:	d100      	bne.n	80100ea <memmove+0x2a>
 80100e8:	bd10      	pop	{r4, pc}
 80100ea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80100ee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80100f2:	e7f7      	b.n	80100e4 <memmove+0x24>

080100f4 <memset>:
 80100f4:	4402      	add	r2, r0
 80100f6:	4603      	mov	r3, r0
 80100f8:	4293      	cmp	r3, r2
 80100fa:	d100      	bne.n	80100fe <memset+0xa>
 80100fc:	4770      	bx	lr
 80100fe:	f803 1b01 	strb.w	r1, [r3], #1
 8010102:	e7f9      	b.n	80100f8 <memset+0x4>

08010104 <strcpy>:
 8010104:	4603      	mov	r3, r0
 8010106:	f811 2b01 	ldrb.w	r2, [r1], #1
 801010a:	f803 2b01 	strb.w	r2, [r3], #1
 801010e:	2a00      	cmp	r2, #0
 8010110:	d1f9      	bne.n	8010106 <strcpy+0x2>
 8010112:	4770      	bx	lr

08010114 <__utoa>:
 8010114:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010116:	4c1f      	ldr	r4, [pc, #124]	; (8010194 <__utoa+0x80>)
 8010118:	b08b      	sub	sp, #44	; 0x2c
 801011a:	4605      	mov	r5, r0
 801011c:	460b      	mov	r3, r1
 801011e:	466e      	mov	r6, sp
 8010120:	f104 0c20 	add.w	ip, r4, #32
 8010124:	6820      	ldr	r0, [r4, #0]
 8010126:	6861      	ldr	r1, [r4, #4]
 8010128:	4637      	mov	r7, r6
 801012a:	c703      	stmia	r7!, {r0, r1}
 801012c:	3408      	adds	r4, #8
 801012e:	4564      	cmp	r4, ip
 8010130:	463e      	mov	r6, r7
 8010132:	d1f7      	bne.n	8010124 <__utoa+0x10>
 8010134:	7921      	ldrb	r1, [r4, #4]
 8010136:	7139      	strb	r1, [r7, #4]
 8010138:	1e91      	subs	r1, r2, #2
 801013a:	6820      	ldr	r0, [r4, #0]
 801013c:	6038      	str	r0, [r7, #0]
 801013e:	2922      	cmp	r1, #34	; 0x22
 8010140:	f04f 0100 	mov.w	r1, #0
 8010144:	d904      	bls.n	8010150 <__utoa+0x3c>
 8010146:	7019      	strb	r1, [r3, #0]
 8010148:	460b      	mov	r3, r1
 801014a:	4618      	mov	r0, r3
 801014c:	b00b      	add	sp, #44	; 0x2c
 801014e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010150:	1e58      	subs	r0, r3, #1
 8010152:	4684      	mov	ip, r0
 8010154:	fbb5 f7f2 	udiv	r7, r5, r2
 8010158:	fb02 5617 	mls	r6, r2, r7, r5
 801015c:	3628      	adds	r6, #40	; 0x28
 801015e:	446e      	add	r6, sp
 8010160:	460c      	mov	r4, r1
 8010162:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8010166:	f80c 6f01 	strb.w	r6, [ip, #1]!
 801016a:	462e      	mov	r6, r5
 801016c:	42b2      	cmp	r2, r6
 801016e:	f101 0101 	add.w	r1, r1, #1
 8010172:	463d      	mov	r5, r7
 8010174:	d9ee      	bls.n	8010154 <__utoa+0x40>
 8010176:	2200      	movs	r2, #0
 8010178:	545a      	strb	r2, [r3, r1]
 801017a:	1919      	adds	r1, r3, r4
 801017c:	1aa5      	subs	r5, r4, r2
 801017e:	42aa      	cmp	r2, r5
 8010180:	dae3      	bge.n	801014a <__utoa+0x36>
 8010182:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8010186:	780e      	ldrb	r6, [r1, #0]
 8010188:	7006      	strb	r6, [r0, #0]
 801018a:	3201      	adds	r2, #1
 801018c:	f801 5901 	strb.w	r5, [r1], #-1
 8010190:	e7f4      	b.n	801017c <__utoa+0x68>
 8010192:	bf00      	nop
 8010194:	08012fe8 	.word	0x08012fe8

08010198 <_init>:
 8010198:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801019a:	bf00      	nop
 801019c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801019e:	bc08      	pop	{r3}
 80101a0:	469e      	mov	lr, r3
 80101a2:	4770      	bx	lr

080101a4 <_fini>:
 80101a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80101a6:	bf00      	nop
 80101a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80101aa:	bc08      	pop	{r3}
 80101ac:	469e      	mov	lr, r3
 80101ae:	4770      	bx	lr
